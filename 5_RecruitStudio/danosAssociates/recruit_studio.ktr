<?xml version="1.0" encoding="UTF-8"?>
<transformation>
  <info>
    <name>pentaho_export</name>
    <description />
    <extended_description />
    <trans_version />
    <trans_type>Normal</trans_type>
    <trans_status>0</trans_status>
    <directory>/</directory>
    <parameters>
    </parameters>
    <log>
      <trans-log-table>
        <connection />
        <schema />
        <table />
        <size_limit_lines />
        <interval />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STATUS</id>
          <enabled>Y</enabled>
          <name>STATUS</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
          <subject />
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
          <subject />
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
          <subject />
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
          <subject />
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
          <subject />
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
          <subject />
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>STARTDATE</id>
          <enabled>Y</enabled>
          <name>STARTDATE</name>
        </field>
        <field>
          <id>ENDDATE</id>
          <enabled>Y</enabled>
          <name>ENDDATE</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>DEPDATE</id>
          <enabled>Y</enabled>
          <name>DEPDATE</name>
        </field>
        <field>
          <id>REPLAYDATE</id>
          <enabled>Y</enabled>
          <name>REPLAYDATE</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>Y</enabled>
          <name>LOG_FIELD</name>
        </field>
        <field>
          <id>EXECUTING_SERVER</id>
          <enabled>N</enabled>
          <name>EXECUTING_SERVER</name>
        </field>
        <field>
          <id>EXECUTING_USER</id>
          <enabled>N</enabled>
          <name>EXECUTING_USER</name>
        </field>
        <field>
          <id>CLIENT</id>
          <enabled>N</enabled>
          <name>CLIENT</name>
        </field>
      </trans-log-table>
      <perf-log-table>
        <connection />
        <schema />
        <table />
        <interval />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>SEQ_NR</id>
          <enabled>Y</enabled>
          <name>SEQ_NR</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>INPUT_BUFFER_ROWS</id>
          <enabled>Y</enabled>
          <name>INPUT_BUFFER_ROWS</name>
        </field>
        <field>
          <id>OUTPUT_BUFFER_ROWS</id>
          <enabled>Y</enabled>
          <name>OUTPUT_BUFFER_ROWS</name>
        </field>
      </perf-log-table>
      <channel-log-table>
        <connection />
        <schema />
        <table />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>LOGGING_OBJECT_TYPE</id>
          <enabled>Y</enabled>
          <name>LOGGING_OBJECT_TYPE</name>
        </field>
        <field>
          <id>OBJECT_NAME</id>
          <enabled>Y</enabled>
          <name>OBJECT_NAME</name>
        </field>
        <field>
          <id>OBJECT_COPY</id>
          <enabled>Y</enabled>
          <name>OBJECT_COPY</name>
        </field>
        <field>
          <id>REPOSITORY_DIRECTORY</id>
          <enabled>Y</enabled>
          <name>REPOSITORY_DIRECTORY</name>
        </field>
        <field>
          <id>FILENAME</id>
          <enabled>Y</enabled>
          <name>FILENAME</name>
        </field>
        <field>
          <id>OBJECT_ID</id>
          <enabled>Y</enabled>
          <name>OBJECT_ID</name>
        </field>
        <field>
          <id>OBJECT_REVISION</id>
          <enabled>Y</enabled>
          <name>OBJECT_REVISION</name>
        </field>
        <field>
          <id>PARENT_CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>PARENT_CHANNEL_ID</name>
        </field>
        <field>
          <id>ROOT_CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>ROOT_CHANNEL_ID</name>
        </field>
      </channel-log-table>
      <step-log-table>
        <connection />
        <schema />
        <table />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>N</enabled>
          <name>LOG_FIELD</name>
        </field>
      </step-log-table>
      <metrics-log-table>
        <connection />
        <schema />
        <table />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>METRICS_DATE</id>
          <enabled>Y</enabled>
          <name>METRICS_DATE</name>
        </field>
        <field>
          <id>METRICS_CODE</id>
          <enabled>Y</enabled>
          <name>METRICS_CODE</name>
        </field>
        <field>
          <id>METRICS_DESCRIPTION</id>
          <enabled>Y</enabled>
          <name>METRICS_DESCRIPTION</name>
        </field>
        <field>
          <id>METRICS_SUBJECT</id>
          <enabled>Y</enabled>
          <name>METRICS_SUBJECT</name>
        </field>
        <field>
          <id>METRICS_TYPE</id>
          <enabled>Y</enabled>
          <name>METRICS_TYPE</name>
        </field>
        <field>
          <id>METRICS_VALUE</id>
          <enabled>Y</enabled>
          <name>METRICS_VALUE</name>
        </field>
      </metrics-log-table>
    </log>
    <maxdate>
      <connection />
      <table />
      <field />
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
    </maxdate>
    <size_rowset>10000</size_rowset>
    <sleep_time_empty>50</sleep_time_empty>
    <sleep_time_full>50</sleep_time_full>
    <unique_connections>N</unique_connections>
    <feedback_shown>Y</feedback_shown>
    <feedback_size>50000</feedback_size>
    <using_thread_priorities>Y</using_thread_priorities>
    <shared_objects_file />
    <capture_step_performance>N</capture_step_performance>
    <step_performance_capturing_delay>1000</step_performance_capturing_delay>
    <step_performance_capturing_size_limit />
    <dependencies>
    </dependencies>
    <partitionschemas>
    </partitionschemas>
    <slaveservers>
    </slaveservers>
    <clusterschemas>
    </clusterschemas>
    <created_user />
    <created_date>2017/01/20 16:14:34.085</created_date>
    <modified_user />
    <modified_date>2017/01/20 16:14:34.085</modified_date>
    <key_for_session_key>H4sIAAAAAAAAAAMAAAAAAAAAAAA=</key_for_session_key>
    <is_key_private>N</is_key_private>
  </info>
  <notepads>
    <notepad>
      <note>COMPANY</note>
      <xloc>192</xloc>
      <yloc>16</yloc>
      <width>68</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>CONTACT</note>
      <xloc>768</xloc>
      <yloc>16</yloc>
      <width>65</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>JOB</note>
      <xloc>1328</xloc>
      <yloc>16</yloc>
      <width>31</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>CANDIDATE	</note>
      <xloc>1840</xloc>
      <yloc>16</yloc>
      <width>106</width>
      <heigth>25</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>PLACEMENT</note>
      <xloc>2591</xloc>
      <yloc>29</yloc>
      <width>83</width>
      <heigth>27</heigth>
      <fontname>Noto Sans</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>move OFFERED to PLACEMENT_PERMANENT</note>
      <xloc>3213</xloc>
      <yloc>39</yloc>
      <width>251</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
  </notepads>
  <connection>
    <name>from</name>
    <server>dmp.vinceredev.com</server>
    <type>MSSQL</type>
    <access>Native</access>
    <database>energize2</database>
    <port>1433</port>
    <username>sa</username>
    <password>Encrypted 2be98afc86aa7f2d5f94aea35e083b8df</password>
    <servername />
    <data_tablespace />
    <index_tablespace />
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>MSSQL_DOUBLE_DECIMAL_SEPARATOR</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>1433</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <connection>
    <name>to</name>
    <server>rdbm</server>
    <type>POSTGRESQL</type>
    <access>Native</access>
    <database>energizerec.vincere.io</database>
    <port>5432</port>
    <username>dbapplication_user</username>
    <password>Encrypted 2be98afc819e8b9aebe11bd63cb8b9ae3</password>
    <servername />
    <data_tablespace />
    <index_tablespace />
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>5432</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <order>
    <hop>
      <from>Contact Comment</from>
      <to>Database lookup - Contact</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup - Contact</from>
      <to>Insert / Update - Contact Comment</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job Comment</from>
      <to>Database lookup Job</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup Job</from>
      <to>Insert / Update Job Comment</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Company Comment</from>
      <to>Database lookup - Company</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup - Company</from>
      <to>Insert / Update Company Comment</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate Comment</from>
      <to>Database lookup 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 3</from>
      <to>Insert / Update Activity</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job Application - Rejected</from>
      <to>position_description</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate</from>
      <to>Update 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>position_description</from>
      <to>candidate</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate Note</from>
      <to>Update Candidate Note</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact Info</from>
      <to>Database lookup 2 2 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 2 3</from>
      <to>Update - Contact Info</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate Source 2</from>
      <to>lookup Candidate</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate Source</from>
      <to>Insert candidate_source</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Insert candidate_source</from>
      <to>Candidate Source 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>lookup Candidate</from>
      <to>lookup candidate_source</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>lookup candidate_source</from>
      <to>candidate_source_id</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate id</from>
      <to>industry</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate industry 2</from>
      <to>candidate id</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>industry</from>
      <to>candidate_industry</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate industry</from>
      <to>Insert industry</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Insert industry</from>
      <to>candidate industry 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>lookup company</from>
      <to>lookup industry</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company industry 2</from>
      <to>lookup company</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company industry</from>
      <to>Insert new industry</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Insert new industry</from>
      <to>company industry 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact id 2</from>
      <to>industry 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact industry 2 2</from>
      <to>contact id 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>industry 4</from>
      <to>contact_industry 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact industry</from>
      <to>Insert new industry 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Insert new industry 2</from>
      <to>contact industry 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company</from>
      <to>InsertUpdate Custom Field</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Custom Field</from>
      <to>company</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact</from>
      <to>additional_form_values InsertUpdate 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact Custom Field</from>
      <to>contact</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact FE-SFE</from>
      <to>contact id</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact id</from>
      <to>fe</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>fe</from>
      <to>contact_functional_expertise 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact Location</from>
      <to>Insert / Update - Contact Location</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 4</from>
      <to>Insert / Update Compensation</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Compensation</from>
      <to>Database lookup 2 2 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2</from>
      <to>Insert / Update 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 3 2</from>
      <to>Insert / Update XingURL</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 3</from>
      <to>Insert / Update FacebookURL</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 4</from>
      <to>Insert / Update TwitterURL</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>maritalStatus</from>
      <to>Database lookup 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>XingURL</from>
      <to>Database lookup 2 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>FacebookURL</from>
      <to>Database lookup 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>TwitterURL</from>
      <to>Database lookup 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate - desired_contract_rate - contract_rate</from>
      <to>Update 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>BULLHORN Contact Info</from>
      <to>Database lookup 2 2 2 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 2 3 2</from>
      <to>Update 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>BULLHORN Contact Location</from>
      <to>Database lookup 2 2 2 3 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 2 3 2 2</from>
      <to>Insert / Update 2 2 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 3</from>
      <to>fe 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 3 3 2</from>
      <to>Insert / Update 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 3 3 2</from>
      <to>candidate_functional_expertise 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 3 3 2 2</from>
      <to>Insert / Update 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 3 3 2 2 2</from>
      <to>sfe 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate FE-SFE</from>
      <to>candidate 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate FE-SFE 2 2</from>
      <to>candidate 3 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate FE-SFE 2 2 2</from>
      <to>candidate 3 3 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate FE-SFE 2 2 2 2</from>
      <to>candidate 3 3 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>fe 2</from>
      <to>sfe</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>sfe</from>
      <to>candidate_functional_expertise</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>sfe 2</from>
      <to>Insert / Update 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2</from>
      <to>Insert / Update 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2</from>
      <to>WRONG WRONG</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job - FromSalary - ToSalary</from>
      <to>Database lookup 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate Note 2</from>
      <to>Database lookup 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 2</from>
      <to>Insert / Update 2 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 2</from>
      <to>Update 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Add Offer</from>
      <to>Position lookup</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Add Offer 2</from>
      <to>Position lookup</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Add Offer 2 2</from>
      <to>Position lookup 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate lookup</from>
      <to>Position Candidate</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate lookup 2</from>
      <to>Position Candidate 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate lookup 3</from>
      <to>Position Candidate 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate lookup 3</from>
      <to>Position Candidate 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Company lookup</from>
      <to>Contact lookup</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Compensation lookup</from>
      <to>Insert Offer details</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Compensation lookup</from>
      <to>Microsoft Excel Output</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Concat Fields</from>
      <to>Insert offer personal info</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact lookup</from>
      <to>Concat Fields</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Gross annual salary</from>
      <to>Position lookup 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Offer lookup</from>
      <to>Company lookup</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Placements</from>
      <to>Position lookup 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Placements 2</from>
      <to>Position lookup 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Position Candidate</from>
      <to>Compensation lookup</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Position Candidate 2</from>
      <to>Offer lookup</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Position lookup</from>
      <to>Candidate lookup</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Position lookup 2</from>
      <to>Candidate lookup 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Position lookup 3</from>
      <to>Candidate lookup 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Position lookup 3 2</from>
      <to>Update</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate lookup 4</from>
      <to>Position Candidate 5</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Compensation lookup 2</from>
      <to>Update 2 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Gross annual salary 2</from>
      <to>Position lookup 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Position Candidate 5</from>
      <to>Compensation lookup 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Position lookup 4</from>
      <to>Candidate lookup 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup</from>
      <to>Insert / Update</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Company Location</from>
      <to>Database lookup</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 4 2</from>
      <to>Insert / Update 2 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job - contract_rate  FROM/TO</from>
      <to>Database lookup 2 2 4 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>CANDIDATE table</from>
      <to>Database lookup 2 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>CANDIDATE WORK HISTORY</from>
      <to>Database lookup 2 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 4</from>
      <to>Update 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 3</from>
      <to>Update 2 5</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>lookup industry</from>
      <to>company_industry 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 5</from>
      <to>Insert / Update 2 5</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job FE</from>
      <to>Database lookup 2 2 5</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 5</from>
      <to>vertical</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Insert FE</from>
      <to>functional_expertise</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Insert SFE</from>
      <to>sub_functional_expertise</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Insert vertical </from>
      <to>Database lookup 2 5</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate New resumes</from>
      <to>Candidate lookup 5</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate lookup 5</from>
      <to>Insert candidate new resumes</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate lookup 5</from>
      <to>Update Candidate New Resumes</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact New documents</from>
      <to>Contact lookup 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact lookup 2</from>
      <to>Insert contact new documents</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact lookup 2</from>
      <to>Update Contact Documents</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company 2 3</from>
      <to>additional_form_values InsertUpdate 3 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Custom Field 2</from>
      <to>company 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact FE-SFE 2</from>
      <to>contact id 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact id 3</from>
      <to>fe 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>fe 3</from>
      <to>sfe 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>sfe 3</from>
      <to>contact_functional_expertise 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>position_description 2</from>
      <to>additional_form_values InsertUpdate</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>position_description Custom Field</from>
      <to>position_description 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>active - availability_start</from>
      <to>Database lookup 2 2 6</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate contract_rate</from>
      <to>Database lookup 2 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 6</from>
      <to>Update 2 6</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 2 2</from>
      <to>Update 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>BULLHORN Candidate Email Body</from>
      <to>Database lookup 2 2 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 2 2 2</from>
      <to>Insert / Update 2 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Company - employees_number</from>
      <to>company 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company 2</from>
      <to>employees_number</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate lookup 2 2</from>
      <to>Position Candidate 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Company lookup 2</from>
      <to>Contact lookup 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Concat Fields 2</from>
      <to>Insert offer personal info 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Concat Fields 2</from>
      <to>Insert invoice</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact lookup 3</from>
      <to>Concat Fields 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Offer lookup 2</from>
      <to>Company lookup 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Offer lookup 2</from>
      <to>position_candidate - STATUS</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Placements 2 2</from>
      <to>Position lookup 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Position Candidate 2 2</from>
      <to>Offer lookup 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Position lookup 2 2</from>
      <to>Candidate lookup 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Insert new industry 2 2</from>
      <to>position_description industry 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>industry 4 2</from>
      <to>Update 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>position_description id 2 3</from>
      <to>industry 4 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>position_description industry 2</from>
      <to>Insert new industry 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>position_description industry 2 2 2</from>
      <to>position_description id 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 4 2 2</from>
      <to>Insert / Update 2 2 2 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job - contract_rate  FROM/TO 2</from>
      <to>Database lookup 2 2 4 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 7</from>
      <to>Insert / Update 2 3 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 7</from>
      <to>WRONG WRONG 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job - FromSalary - ToSalary 2</from>
      <to>Database lookup 2 2 7</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>BULLHORN candidateLocation 2</from>
      <to>Database lookup 2 2 2 3 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 2 3 2 2 2</from>
      <to>Insert / Update 2 2 2 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 2 3 2 2 2</from>
      <to>Update 2 6 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Add Offer 3</from>
      <to>Position lookup 5</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Add Offer 2 3</from>
      <to>Position lookup 5</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate lookup 6</from>
      <to>Position Candidate 6</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate lookup 2 2 2</from>
      <to>Job lookup 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Compensation lookup 3</from>
      <to>Insert Offer details 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job lookup 2</from>
      <to>Update 2 7</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job lookup 2</from>
      <to>Update [Invoice]</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job lookup 2</from>
      <to>Update [Offer]</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job lookup 2</from>
      <to>Update job App status</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>JobApp PLACED status</from>
      <to>Candidate lookup 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Position Candidate 6</from>
      <to>Compensation lookup 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Position lookup 5</from>
      <to>Candidate lookup 6</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate lookup 2 2 3</from>
      <to>Position Candidate 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Company lookup 3</from>
      <to>Contact lookup 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Concat Fields 3</from>
      <to>Insert offer personal info 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Concat Fields 3</from>
      <to>Insert invoice 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact lookup 4</from>
      <to>Concat Fields 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Offer lookup 3</from>
      <to>Company lookup 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Placements 3</from>
      <to>Position lookup 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Placements 2 3</from>
      <to>Position lookup 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Position Candidate 2 3</from>
      <to>Offer lookup 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Position lookup 2 3</from>
      <to>Candidate lookup 2 2 3</to>
      <enabled>N</enabled>
    </hop>
  </order>
  <step>
    <name>Add Offer</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>with 
maxInterviewLevel as (
       select intInterviewProcessId, max(intInterviewId) as maxInterviewLevelId--max(tintInterviewLevelId) as maxInterviewLebel
       from dInterview
       group by intInterviewProcessId)

, tempInterview as (
       select i.*
       from maxInterviewLevel mil 
       left join dInterview i on mil.maxInterviewLevelId = i.intInterviewId)

, latestPlacement as (
       select js.intJobId, js.intCandidateId, max(dtupdated) as latestUpdate--max(js.intPlacementId)--, vchSystemEventAction
       from dPlacement js 
       group by js.intJobId, js.intCandidateId)

, tempPlacement as (
       select p.*
       from dPlacement p left join latestPlacement lp on p.intJobId = lp.intJobId and p.intCandidateId = lp.intCandidateId and p.dtupdated = lp.latestUpdate
       where latestUpdate is not null)

, jobApp as (
       select js.intJobId, j.datStartDate, j.intCompanyId as CompID, js.intCandidateId, tintShortlisted, tintCommunicated, tintInterested, tintSummarySubmit, tintCVSubmit, tintInterview, i.intInterviewProcessId, iif(intInterviewId is null, 999999,intInterviewId) as intInterviewId, i.tintInterviewLevelId, vchInterviewLevelName, i.tintInterviewStatusId, vchInterviewStatusName, tintOffered, tintPlaced, intPlacementId, p.tintPlacementStatusId, vchPlacementStatusName, vchSystemEventAction
       from dJobShortlist js
       left join tempPlacement p on js.intJobId = p.intJobId and js.intCandidateId = p.intCandidateId
       left join refPlacementStatus ps on p.tintPlacementStatusId = ps.tintPlacementStatusId
       left join sEventAction ea on js.tintSystemEventActionId = ea.tintSystemEventActionId
       left join dInterviewProcess ip on js.intJobId = ip.intJobId and js.intCandidateId = ip.intCandidateId
       left join tempInterview i on ip.intInterviewProcessId = i.intInterviewProcessId
       left join refInterviewLevel il on i.tintInterviewLevelId = il.tintInterviewLevelId
       left join refInterviewStatus ris on i.tintInterviewStatusId = ris.tintInterviewStatusId
       left join dJob j on js.intJobId = j.intJobId)
       --where tintPlaced = 1 and intPlacementId is not null
       
--select distinct tintInterviewLevelId, vchInterviewLevelName from jobApp
--select * from  jobApp --where tintInterview>1 --where tintPlacementStatusId = 4 or tintPlacementStatusId =9
--select distinct from 
--select * from jobApp where intJobId = 5118
--CREATE TABLE temp_Can (
--    intCandidateId int
--);
--select distinct intCandidateId
--from  jobApp where intInterviewId &lt;&gt; 14264 and intInterviewId &lt;&gt; 13470 and CompID in (2,455)
--insert into importJobApp
, ja0 as (
select concat('NJFS',intJobId) as intJobId, --'application-positionExternalId',
		concat('NJFS',intCandidateId) as intCandidateId, --'application-candidateExternalId',
		datStartDate,
		--*,
		iif(tintPlaced = 1, iif(tintPlacementStatusId in (4,9),'SENT','PLACEMENT_PERMANENT'), --PLACED
		iif(tintOffered >1, 'SENT',
		iif(tintOffered =1, 'OFFERED',
		iif(tintInterviewStatusId in (6,7,8,9), 'SENT',
		iif(tintInterviewLevelId in (0,1,101,104), 'FIRST_INTERVIEW',
		iif(tintInterviewLevelId in (2,3,102,103,105,106), 'SECOND_INTERVIEW',
		iif(tintCVSubmit = 1 or tintSummarySubmit = 1, 'SENT','SHORTLISTED'))))))) as stage --'application-Stage'
from  jobApp
--where intInterviewId &lt;&gt; 14264 and intInterviewId &lt;&gt; 13470 --and CompID in (2,455)--and intInterviewId = 7583
--and intCandidateId in (48445,31880)
--and intJobid in (4177,4236,4361,4683,4822,4992,5124,5227,5228,5229,5230,5231,5232,5233,5262,5270,5371,5402,5417,5418,5419,5420,5421,5422,5423,5424,5425,5426,5427,5428,5429,5430,5431,5432) 
--or intCandidateId in (48445,31880)--,44007,15490,44296,16796,38402,44798,44982,38455,15944,45834,45826,10987,22607,11200,52754,53354,19816,40589,44976,45050,44823,3334,44314,45794,22999,51044,2732,52304,44988)
)
--select * from refPlacementStatus

--select * from dJobShortlist where intJobId = 4221

, ja1 ("application-positionExternalId","application-candidateExternalId", datStartDate, "application-Stage", rn) as (
       SELECT 
                intJobId
              , intCandidateId
              , convert(datetime, datStartDate) as datStartDate
              , stage
              , rn = ROW_NUMBER() OVER (PARTITION BY intJobId,intCandidateId,stage ORDER BY intJobId desc) FROM ja0 )

 -- select * from ja1 where ja1.rn = 1     -->> JOB APPLICATION

-- GROSS ANNUAL SALARY
select
       ja1.*
       , j.datStartDate as 'position-startDate'
       , 1 as 'use_quick_fee_forecast'
       , convert(float, iif(j.decMaxSalaryFeePercentage is NULL,'',j.decMaxSalaryFeePercentage) ) as 'percentage_of_annual_salary' --'Use Quick Fee Forecast'
       , convert(float, iif(j.decMaxSalaryFee is NULL,'',j.decMaxSalaryFee) ) as 'gross_annual_salary - pay_rate' -- 'Compensation SALARY TO'
	, getdate() as Forward_latest_update_date
	, -10 as Forward_latest_user_id
from ja1 
left join dJob j on concat('NJFS',j.intJobId) = ja1.[application-positionExternalId]
where ja1.rn = 1 and ja1.[application-Stage] = 'PLACEMENT_PERMANENT'


</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2304</xloc>
      <yloc>464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Add Offer 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <sql>
select pc.job_external_id as Forward_JobExtID,
        pc.candidate_external_id as Forward_CandidateExtID, --pc.candidate_vc_id,
        o.latest_update_date  as Forward_latest_update_date,
        o.latest_user_id as Forward_latest_user_id,
		pc.job_title
from offer o 
left join offer_personal_info opi on opi.offer_id = o.id
left join ( 
       select 
              pc.id,
              pd.id as "job_vc_id", pd.external_id as "job_external_id", pd.name as "job_title",
              c.id as "candidate_vc_id" ,c.external_id as "candidate_external_id", c.first_name, c.last_name, c.email,
              pc.status              
       from position_candidate pc
       left join position_description pd on pd.id = pc.position_description_id
       left join candidate c on c.id = pc.candidate_id
       where c.deleted_timestamp is null and
 (pd.external_id = '7162' and c.external_id = 'griffiths_raymond@hotmail.com')
or (pd.external_id = '7125' and c.external_id = 'jeanphils.louis@gmail.com')
or (pd.external_id = '7092' and c.external_id = '1725')
or (pd.external_id = '7104' and c.external_id = 'scottjgardiner@gmail.com')
or (pd.external_id = '7182' and c.external_id = '68543')
or (pd.external_id = '7016' and c.external_id = '57308')
or (pd.external_id = '7063' and c.external_id = '33586')
or (pd.external_id = '6844' and c.external_id = 'zilli.zeng@gmail.com')
or (pd.external_id = '6777' and c.external_id = '33842')
or (pd.external_id = '7048' and c.external_id = 'mkrsnadas@gmail.com')
or (pd.external_id = '7035' and c.external_id = 'lukeboicos@gmail.com')
or (pd.external_id = '7037' and c.external_id = 'gmsskau@gmail.com')
or (pd.external_id = '6910' and c.external_id = 'dorothy.baduria@live.com.au')
or (pd.external_id = '7204' and c.external_id = '66431')
or (pd.external_id = '6644' and c.external_id = '49340')
or (pd.external_id = '7000' and c.external_id = '67527')
or (pd.external_id = '7076' and c.external_id = 'helac@outlook.com')
or (pd.external_id = '2620' and c.external_id = '164529')
or (pd.external_id = '6891' and c.external_id = '11022')
--and pc.id in (39343,39325,39302,39262)
       ) pc on pc.id = o.position_candidate_id
where pc.status >=300
and o.id in (3277,3275,3274,3271,3266,3264,3262,3261,3256,3255,3254,3253,3251,3250,3249,3247,3246,3245,3243,3241,3239,3238,3237,3236,3232,3231,3230,3227,3226,3225,3224,3222,3220,3218,2781,2159,2068,2037,2027,1974,1900,1882,1846,1760,1732,1731,1706,1700,1683,1679,1653,1636,1598,1433,1401,1346,1261,1249,1107,1100,1079)
and pc.job_external_id &lt;&gt; ''
--and pc.job_external_id = '7125'
</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2304</xloc>
      <yloc>528</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Add Offer 2 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>with 
maxInterviewLevel as (
       select intInterviewProcessId, max(intInterviewId) as maxInterviewLevelId--max(tintInterviewLevelId) as maxInterviewLebel
       from dInterview
       group by intInterviewProcessId)

, tempInterview as (
       select i.*
       from maxInterviewLevel mil 
       left join dInterview i on mil.maxInterviewLevelId = i.intInterviewId)

, latestPlacement as (
       select js.intJobId, js.intCandidateId, max(dtupdated) as latestUpdate--max(js.intPlacementId)--, vchSystemEventAction
       from dPlacement js 
       group by js.intJobId, js.intCandidateId)

, tempPlacement as (
       select p.*
       from dPlacement p left join latestPlacement lp on p.intJobId = lp.intJobId and p.intCandidateId = lp.intCandidateId and p.dtupdated = lp.latestUpdate
       where latestUpdate is not null)

, jobApp as (
       select js.intJobId, j.intCompanyId as CompID, js.intCandidateId, tintShortlisted, tintCommunicated, tintInterested, tintSummarySubmit, tintCVSubmit, tintInterview, i.intInterviewProcessId, iif(intInterviewId is null, 999999,intInterviewId) as intInterviewId, i.tintInterviewLevelId, vchInterviewLevelName, i.tintInterviewStatusId, vchInterviewStatusName, tintOffered, tintPlaced, intPlacementId, p.tintPlacementStatusId, vchPlacementStatusName, vchSystemEventAction
       from dJobShortlist js
       left join tempPlacement p on js.intJobId = p.intJobId and js.intCandidateId = p.intCandidateId
       left join refPlacementStatus ps on p.tintPlacementStatusId = ps.tintPlacementStatusId
       left join sEventAction ea on js.tintSystemEventActionId = ea.tintSystemEventActionId
       left join dInterviewProcess ip on js.intJobId = ip.intJobId and js.intCandidateId = ip.intCandidateId
       left join tempInterview i on ip.intInterviewProcessId = i.intInterviewProcessId
       left join refInterviewLevel il on i.tintInterviewLevelId = il.tintInterviewLevelId
       left join refInterviewStatus ris on i.tintInterviewStatusId = ris.tintInterviewStatusId
       left join dJob j on js.intJobId = j.intJobId)
       --where tintPlaced = 1 and intPlacementId is not null
       
--select distinct tintInterviewLevelId, vchInterviewLevelName from jobApp
--select * from  jobApp --where tintInterview>1 --where tintPlacementStatusId = 4 or tintPlacementStatusId =9
--select distinct from 
--select * from jobApp where intJobId = 5118
--CREATE TABLE temp_Can (
--    intCandidateId int
--);
--select distinct intCandidateId
--from  jobApp where intInterviewId &lt;&gt; 14264 and intInterviewId &lt;&gt; 13470 and CompID in (2,455)
--insert into importJobApp
, ja0 as (
select concat('NJFS',intJobId) as intJobId, --'application-positionExternalId',
		concat('NJFS',intCandidateId) as intCandidateId, --'application-candidateExternalId',
		--*,
		iif(tintPlaced = 1, iif(tintPlacementStatusId in (4,9),'SENT','PLACEMENT_PERMANENT'), --PLACED
		iif(tintOffered >1, 'SENT',
		iif(tintOffered =1, 'OFFERED',
		iif(tintInterviewStatusId in (6,7,8,9), 'SENT',
		iif(tintInterviewLevelId in (0,1,101,104), 'FIRST_INTERVIEW',
		iif(tintInterviewLevelId in (2,3,102,103,105,106), 'SECOND_INTERVIEW',
		iif(tintCVSubmit = 1 or tintSummarySubmit = 1, 'SENT','SHORTLISTED'))))))) as stage --'application-Stage'
from  jobApp
--where intInterviewId &lt;&gt; 14264 and intInterviewId &lt;&gt; 13470 --and CompID in (2,455)--and intInterviewId = 7583
--and intCandidateId in (48445,31880)
--and intJobid in (4177,4236,4361,4683,4822,4992,5124,5227,5228,5229,5230,5231,5232,5233,5262,5270,5371,5402,5417,5418,5419,5420,5421,5422,5423,5424,5425,5426,5427,5428,5429,5430,5431,5432) 
--or intCandidateId in (48445,31880)--,44007,15490,44296,16796,38402,44798,44982,38455,15944,45834,45826,10987,22607,11200,52754,53354,19816,40589,44976,45050,44823,3334,44314,45794,22999,51044,2732,52304,44988)
)
--select * from refPlacementStatus

--select * from dJobShortlist where intJobId = 4221

, ja1 as (
       SELECT 
                intJobId as 'Forward_JobExtID'
              , intCandidateId as 'Forward_CandidateExtID'
	, getdate() as Forward_latest_update_date
	, -10 as Forward_latest_user_id
              , stage
              , rn = ROW_NUMBER() OVER (PARTITION BY intJobId,intCandidateId,stage ORDER BY intJobId desc) FROM ja0 )
              
select * from ja1 where rn = 1
and Forward_JobExtID = 'NJFS140'


</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2304</xloc>
      <yloc>368</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Add Offer 2 3</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <sql>
select pc.job_external_id as Forward_JobExtID,
        pc.candidate_external_id as Forward_CandidateExtID, --pc.candidate_vc_id,
        o.latest_update_date  as Forward_latest_update_date,
        o.latest_user_id as Forward_latest_user_id,
		pc.job_title
from offer o 
left join offer_personal_info opi on opi.offer_id = o.id
left join ( 
       select 
              pc.id,
              pd.id as "job_vc_id", pd.external_id as "job_external_id", pd.name as "job_title",
              c.id as "candidate_vc_id" ,c.external_id as "candidate_external_id", c.first_name, c.last_name, c.email,
              pc.status              
       from position_candidate pc
       left join position_description pd on pd.id = pc.position_description_id
       left join candidate c on c.id = pc.candidate_id
       where c.deleted_timestamp is null and
 (pd.external_id = '7162' and c.external_id = 'griffiths_raymond@hotmail.com')
or (pd.external_id = '7125' and c.external_id = 'jeanphils.louis@gmail.com')
or (pd.external_id = '7092' and c.external_id = '1725')
or (pd.external_id = '7104' and c.external_id = 'scottjgardiner@gmail.com')
or (pd.external_id = '7182' and c.external_id = '68543')
or (pd.external_id = '7016' and c.external_id = '57308')
or (pd.external_id = '7063' and c.external_id = '33586')
or (pd.external_id = '6844' and c.external_id = 'zilli.zeng@gmail.com')
or (pd.external_id = '6777' and c.external_id = '33842')
or (pd.external_id = '7048' and c.external_id = 'mkrsnadas@gmail.com')
or (pd.external_id = '7035' and c.external_id = 'lukeboicos@gmail.com')
or (pd.external_id = '7037' and c.external_id = 'gmsskau@gmail.com')
or (pd.external_id = '6910' and c.external_id = 'dorothy.baduria@live.com.au')
or (pd.external_id = '7204' and c.external_id = '66431')
or (pd.external_id = '6644' and c.external_id = '49340')
or (pd.external_id = '7000' and c.external_id = '67527')
or (pd.external_id = '7076' and c.external_id = 'helac@outlook.com')
or (pd.external_id = '2620' and c.external_id = '164529')
or (pd.external_id = '6891' and c.external_id = '11022')
--and pc.id in (39343,39325,39302,39262)
       ) pc on pc.id = o.position_candidate_id
where pc.status >=300
and o.id in (3277,3275,3274,3271,3266,3264,3262,3261,3256,3255,3254,3253,3251,3250,3249,3247,3246,3245,3243,3241,3239,3238,3237,3236,3232,3231,3230,3227,3226,3225,3224,3222,3220,3218,2781,2159,2068,2037,2027,1974,1900,1882,1846,1760,1732,1731,1706,1700,1683,1679,1653,1636,1598,1433,1401,1346,1261,1249,1107,1100,1079)
and pc.job_external_id &lt;&gt; ''
--and pc.job_external_id = '7125'
</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3950</xloc>
      <yloc>134</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Add Offer 3</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>  
  -------05_JOB APPLICATION---------145,704----------
with 
ja0 as
(
         SELECT 
         --, a.[1 Auto Ref Numeric] as 'Id'
           b.[4 Ref No Numeric] as 'application-candidateExternalId'
         , c.[1 Job Ref Numeric] as 'application-positionExternalId'
         , case act.Description
              when 'Contr Pl' then 'PLACED'
              when 'CV Sent' then 'SENT'
              when 'Int Feedbk' then 'FIRST_INTERVIEW'
              when 'Interview' then 'FIRST_INTERVIEW'
              when 'Perm Place' then 'PLACED'
              when 'Shortlist' then 'SHORTLISTED'
              when 'Temp Book' then 'SHORTLISTED'
              else '' end as 'application-Stage'
       --, convert(date,left([16 Lastactnda Date], 10), 103) as 'actioned-date' --associated_date
       -- select count(*) --91493 -- select distinct act.Description
       FROM F13 as a
       left JOIN F01 as b on (b.UniqueID = a.[4 Candidate Xref] /*or b.[4 RefNumber Numeric] = a.[5 Cand id Numeric]*/)
       left JOIN F03 as c on c.UniqueID = a.[6 Job Id Xref]
       JOIN ( select * from codes where Codegroup = 94 ) as act on act.Code = a.[15 Last Actio Codegroup  94] --left([15 Last Actio Codegroup  94], 2)
       where b.[4 Ref No Numeric] is NOT NULL and c.[1 Job Ref Numeric] is not null
)

, ja1 ("application-positionExternalId","application-candidateExternalId","application-Stage", rn) as (
       SELECT 
              "application-positionExternalId"
              ,"application-candidateExternalId"
              ,"application-Stage"
              , rn = ROW_NUMBER() OVER (PARTITION BY "application-positionExternalId","application-candidateExternalId","application-Stage" ORDER BY "application-positionExternalId" desc) 
       FROM ja0 where [application-stage] &lt;&gt; '')
--select * from ja0

select "application-positionExternalId" as Forward_JobExtID,"application-candidateExternalId" as Forward_CandidateExtID, getdate() as Forward_latest_update_date
, -10 as Forward_latest_user_id
from ja1
where rn = 1 and [application-stage] &lt;&gt; '' --and [application-stage] not like 'CANDIDATE%' --and [#Candidate Name] like '%Freeman%'
and [application-stage] = 'PLACED'
order by [application-positionExternalId]  asc,
    CASE [application-stage]
        WHEN 'PLACED' THEN 1
        WHEN 'OFFERED' THEN 2
        WHEN 'SECOND_INTERVIEW' THEN 3
        WHEN 'FIRST_INTERVIEW' THEN 4
        WHEN 'SENT' THEN 5
        WHEN 'SHORTLISTED' THEN 6
    END asc
</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4048</xloc>
      <yloc>99</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>BULLHORN Candidate Email Body</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>
-- EMAIL BODY

with EmailBody as (
        -- RECEIVER
        select ca.candidateid, ca.userid,ca.recruiteruserid,ca.firstname,ca.lastname,ca.companyname
                --um.userMessageID,um.sendingUserID,um.subject, um.externalFrom, convert(nvarchar(max),um.comments) as comments , convert(nvarchar(max),um.externalTo) as externalTo, convert(nvarchar(max),um.externalCC) as externalCC, convert(nvarchar(max),um.externalBCC) as externalBCC, um.SMTPSendDate
                , um.userMessageID,um.sendingUserID,um.subject, um.externalFrom
                , convert(varchar(max),um.comments) as comments
                ,[dbo].[fn_ConvertHTMLToText](
                      replace(replace(replace(replace(replace(replace( convert(varchar(max),um.email_content_)
                      ,'Â','')
                      ,'Â·','')
                      ,'v\:* {behavior:url(#default#VML);}','')
                      ,'o\:* {behavior:url(#default#VML);}','')
                      ,'w\:* {behavior:url(#default#VML);}','')
                      ,'.shape {behavior:url(#default#VML);}','')
                ) as email_content             
                , convert(nvarchar(max),um.externalTo) as externalTo, convert(nvarchar(max),um.externalCC) as externalCC, convert(nvarchar(max),um.externalBCC) as externalBCC, um.SMTPSendDate
                --mr.userID,mr.folder,mr.recipientType, mr.email, mr.sendingUserID, mr.subjectSort
                --,mr.userID,mr.folder,mr.recipientType, mr.email, mr.externalFrom
                , umf.att --,umf.name, umf.directory
        -- select count(*) -- select top 2000 *
        from bullhorn1.BH_UserMessage um
        --left join INT_UncompressedMessages cont on cont.userMessageID = um.userMessageID
        left join bullhorn1.BH_MessageRecipient mr on mr.userMessageID = um.userMessageID
        --left join bullhorn1.BH_UserMessageFile umf on umf.userMessageID = um.userMessageID
        --left join (SELECT userMessageID, STUFF((SELECT ', ' + [dbo].[fn_ConvertHTMLToText](name) from bullhorn1.BH_UserMessageFile WHERE userMessageID = a.userMessageID order by name asc FOR XML PATH (''), TYPE).value('.', 'nvarchar(64)'), 1, 1, '') AS att FROM bullhorn1.BH_UserMessageFile AS a GROUP BY a.userMessageID ) umf on umf.userMessageID = um.userMessageID
        left join
        (
                SELECT --top 1000
                     userMessageID,
                     STUFF(
                         (SELECT REPLACE( REPLACE( REPLACE( REPLACE( REPLACE( 
                                        REPLACE( REPLACE( REPLACE( REPLACE( REPLACE( 
                                        REPLACE( REPLACE( REPLACE( REPLACE( REPLACE( 
                                        REPLACE( REPLACE( REPLACE( REPLACE( REPLACE( 
                                        REPLACE( REPLACE( REPLACE( REPLACE( REPLACE( 
                                        REPLACE( REPLACE( REPLACE( REPLACE( cast(name as nvarchar(64))
                                        ,char(0x0000),'') ,char(0x0001),'') ,char(0x0002),'') ,char(0x0003),'') ,char(0x0004),'') 
                                        ,char(0x0005),'') ,char(0x0006),'') ,char(0x0007),'') ,char(0x0008),'') ,char(0x000B),'') 
                                        ,char(0x000C),'') ,char(0x000E),'') ,char(0x000F),'') ,char(0x0010),'') ,char(0x0011),'') 
                                        ,char(0x0012),'') ,char(0x0013),'') ,char(0x0014),'') ,char(0x0015),'') ,char(0x0016),'') 
                                        ,char(0x0017),'') ,char(0x0018),'') ,char(0x0019),'') ,char(0x001A),'') ,char(0x001B),'') 
                                        ,char(0x001C),'') ,char(0x001D),'') ,char(0x001E),'') ,char(0x001F),'')
                        --(SELECT [dbo].[fn_ConvertHTMLToText](name)
                          from  bullhorn1.BH_UserMessageFile
                          WHERE userMessageID = a.userMessageID
                                  --order by userMessageID desc
                          FOR XML PATH (''), TYPE).value('.', 'nvarchar(64)')
                          , 1, 4, '')  AS att
                FROM bullhorn1.BH_UserMessageFile as a
                GROUP BY a.userMessageID        
        ) umf on umf.userMessageID = um.userMessageID        
        left join bullhorn1.Candidate ca on ca.userid = mr.userid
        where mr.isDeleted = 0 and mr.isSpam = 0 and ca.userid is not null
        --and um.comments is not null and convert(varchar(max),um.comments) &lt;&gt; '' 
        --and ca.candidateid = 565        
        --and convert(nvarchar(max),um.externalCC) != '' and um.externalCC is not null and convert(nvarchar(max),um.externalBCC) != '' and um.externalBCC is not null
UNION ALL
        -- SENDER
        select ca.candidateid, ca.userid,ca.recruiteruserid,ca.firstname,ca.lastname,ca.companyname
--                um.userMessageID,um.sendingUserID,um.subject,um.externalFrom, convert(nvarchar(max),um.comments) as comments ,convert(nvarchar(max),um.externalTo) as externalTo, convert(nvarchar(max),um.externalCC) as externalCC, convert(nvarchar(max),um.externalBCC) as externalBCC, um.SMTPSendDate
                , um.userMessageID,um.sendingUserID,um.subject,um.externalFrom
                , convert(varchar(max),um.comments) as comments
                ,[dbo].[fn_ConvertHTMLToText](
                      replace(replace(replace(replace(replace(replace( convert(varchar(max),um.email_content_)
                      ,'Â','')
                      ,'Â·','')
                      ,'v\:* {behavior:url(#default#VML);}','')
                      ,'o\:* {behavior:url(#default#VML);}','')
                      ,'w\:* {behavior:url(#default#VML);}','')
                      ,'.shape {behavior:url(#default#VML);}','')
                ) as email_content
                , convert(nvarchar(max),um.externalTo) as externalTo, convert(nvarchar(max),um.externalCC) as externalCC, convert(nvarchar(max),um.externalBCC) as externalBCC, um.SMTPSendDate
                --mr.userID,mr.folder,mr.recipientType, mr.email, mr.sendingUserID, mr.subjectSort
                --,mr.userID,mr.folder,mr.recipientType, mr.email, mr.externalFrom
                , umf.att --,umf.name, umf.directory
        -- select count(*)
        from bullhorn1.BH_UserMessage um
        --left join INT_UncompressedMessages cont on cont.userMessageID = um.userMessageID
        left join bullhorn1.BH_MessageRecipient mr on mr.userMessageID = um.userMessageID
        --left join bullhorn1.BH_UserMessageFile umf on umf.userMessageID = um.userMessageID
        --left join (SELECT userMessageID, STUFF((SELECT ', ' + name from bullhorn1.BH_UserMessageFile WHERE userMessageID = a.userMessageID order by name asc FOR XML PATH (''), TYPE).value('.', 'nvarchar(MAX)'), 1, 1, '') AS att FROM bullhorn1.BH_UserMessageFile AS a GROUP BY a.userMessageID ) umf on umf.userMessageID = um.userMessageID
        left join
        (
                SELECT --top 1000
                     userMessageID,
                     STUFF(
                         (SELECT REPLACE( REPLACE( REPLACE( REPLACE( REPLACE( 
                                        REPLACE( REPLACE( REPLACE( REPLACE( REPLACE( 
                                        REPLACE( REPLACE( REPLACE( REPLACE( REPLACE( 
                                        REPLACE( REPLACE( REPLACE( REPLACE( REPLACE( 
                                        REPLACE( REPLACE( REPLACE( REPLACE( REPLACE( 
                                        REPLACE( REPLACE( REPLACE( REPLACE( cast(name as nvarchar(64))
                                        ,char(0x0000),'') ,char(0x0001),'') ,char(0x0002),'') ,char(0x0003),'') ,char(0x0004),'') 
                                        ,char(0x0005),'') ,char(0x0006),'') ,char(0x0007),'') ,char(0x0008),'') ,char(0x000B),'') 
                                        ,char(0x000C),'') ,char(0x000E),'') ,char(0x000F),'') ,char(0x0010),'') ,char(0x0011),'') 
                                        ,char(0x0012),'') ,char(0x0013),'') ,char(0x0014),'') ,char(0x0015),'') ,char(0x0016),'') 
                                        ,char(0x0017),'') ,char(0x0018),'') ,char(0x0019),'') ,char(0x001A),'') ,char(0x001B),'') 
                                        ,char(0x001C),'') ,char(0x001D),'') ,char(0x001E),'') ,char(0x001F),'')
                        --(SELECT [dbo].[fn_ConvertHTMLToText](name)
                          from  bullhorn1.BH_UserMessageFile
                          WHERE userMessageID = a.userMessageID
                                  --order by userMessageID desc
                          FOR XML PATH (''), TYPE).value('.', 'nvarchar(64)')
                          , 1, 4, '')  AS att
                FROM bullhorn1.BH_UserMessageFile as a
                GROUP BY a.userMessageID        
        ) umf on umf.userMessageID = um.userMessageID        
        left join bullhorn1.Candidate ca on ca.userid = um.sendingUserID
        where um.isSenderDeleted = 0 and ca.userid is not null )
        --and convert(nvarchar(max),um.comments) &lt;&gt; '' ) 
        --and ca.candidateid = 565


--select count(*) from EmailBody --46306
-- select top 100 * from EmailBody where candidateid between 124602 and 128601
/* select candidateid, concat('insert into position_candidate_feedback (candidate_id, user_account_id, feedback_timestamp, comment_body, feedback_score, insert_timestamp, contact_method, json_relate_info, related_status) values ( 
        (select id from candidate where external_id = ''',candidateid,'''), ',-10,', now(), ''',replace(concat('Date Created: ',convert(varchar,SMTPSendDate,120),char(10),'From: ',externalFrom,char(10),'To: ',externalTo,char(10),'CC: ',externalCC,char(10),'Subject: ',subject,char(10),char(10),'Content: ',comments),'''',''''''),''', 0, now(), 4, ''[]'', 1);') as EmailSQL
from EmailBody --where candidateid = 33
order by SMTPSendDate desc */


select --top 200
          userid
        , concat(firstname, ' ',lastname) as fullname
        , recruiteruserid
        , companyname
        , userMessageID
        , sendingUserID
        , candidateid as 'candidate_id'
        , cast('-10' as int) as 'user_account_id'
        , 'comment' as category
        , 'candidate' as type
        , coalesce(NULLIF(convert(varchar(19), SMTPSendDate, 120),''), CURRENT_TIMESTAMP) as 'insert_timestamp'
         , Stuff('EMAIL: ' + char(10)
                + Coalesce('From: ' + NULLIF(convert(varchar(max),externalFrom), '') + char(10), '')
                + Coalesce('To: ' + NULLIF(convert(varchar(max),externalTo), '') + char(10), '')
                + Coalesce('CC: ' + NULLIF(convert(varchar(max),externalCC), '') + char(10), '')
                + Coalesce('BCC: ' + NULLIF(convert(varchar(max),externalBCC), '') + char(10), '')
                + Coalesce('Subject: ' + NULLIF(convert(varchar(max),subject), '') + char(10), '')
                + Coalesce('Body: ' + NULLIF(convert(varchar(max),email_content), '') + char(10), 'Body: ' + char(10))
                + Coalesce('Comments: ' + NULLIF(convert(varchar(max),comments), '') + char(10), '')
                + Coalesce('Attachments: ' + NULLIF(convert(varchar(max),att), '') + char(10), '')
        , 1, 0, '') as 'content' 
        --, umf.name             --ATTACHMENTS
        --, umf.directory        -- PATHS STORE ATTACHMENTS
from EmailBody
--where comments &lt;&gt; ''
--where candidateID = 10001

</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1696</xloc>
      <yloc>272</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>BULLHORN Contact Info</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>-- ALTER DATABASE [temptingventures] SET COMPATIBILITY_LEVEL = 130
with
  mail1 (ID,email) as (select UC.userID, replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(concat(ltrim(rtrim(UC.email)),',',ltrim(rtrim(UC.email2)),',',ltrim(rtrim(UC.email3))),'/',' '),'&lt;',' '),'>',' '),'(',' '),')',' '),':',' '),'.@','@'),'@.','@'),'+',' '),'&amp;',' '),'[',' '),']',' '),'?',' '),'''',' '),';',' ') as email from bullhorn1.BH_UserContact UC left join bullhorn1.BH_Client Cl on Cl.userID = UC.userID where Cl.isPrimaryOwner = 1)
, mail2 (ID,email) as (SELECT ID, email.value as email FROM mail1 m CROSS APPLY STRING_SPLIT(m.email,',') AS email)
, mail3 (ID,email) as (SELECT ID, case when RIGHT(email, 1) = '.' then LEFT(email, LEN(email) - 1) when LEFT(email, 1) = '.' then RIGHT(email, LEN(email) - 1) else email end as email from mail2 WHERE email like '%_@_%.__%')
, mail4 (ID,email,rn) as ( SELECT ID, email = ltrim(rtrim(CONVERT(NVARCHAR(MAX), email))), r1 = ROW_NUMBER() OVER (PARTITION BY ID ORDER BY ID desc) FROM mail3 )
, e1 (ID,email) as (select ID, email from mail4 where rn = 1)
, ed  (ID,email,rn) as (SELECT ID,email,ROW_NUMBER() OVER(PARTITION BY email ORDER BY ID DESC) AS rn FROM e1 )
, e2 (ID,email) as (select ID, email from mail4 where rn = 2)
, e3 (ID,email) as (select ID, email from mail4 where rn = 3)
--select * from ed

select 
	 Cl.clientID as 'contact-externalId'
	, UC.Phone2 as 'home_phone'
	, UC.Mobile as 'mobile_phone'
	, Cl.division as 'department'
	, e2.email as 'personal_email'
	, UC.namePrefix as 'gender_tile'
	, UC.NickName as 'nickname'
    , UC.customText1 as 'LinkedIn'
-- select count(*) --7487 -- select top 10 *
from bullhorn1.BH_Client Cl --where isPrimaryOwner = 1
left join bullhorn1.BH_UserContact UC ON Cl.userID = UC.userID
left join e2 ON Cl.userID = e2.ID -- candidate-email
left join tmp_country tc ON UC.countryID = tc.code
where isPrimaryOwner = 1 </sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>624</xloc>
      <yloc>464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>BULLHORN Contact Location</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>-- ALTER DATABASE [temptingventures] SET COMPATIBILITY_LEVEL = 130
with
  mail1 (ID,email) as (select UC.userID, replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(concat(ltrim(rtrim(UC.email)),',',ltrim(rtrim(UC.email2)),',',ltrim(rtrim(UC.email3))),'/',' '),'&lt;',' '),'>',' '),'(',' '),')',' '),':',' '),'.@','@'),'@.','@'),'+',' '),'&amp;',' '),'[',' '),']',' '),'?',' '),'''',' '),';',' ') as email from bullhorn1.BH_UserContact UC left join bullhorn1.BH_Client Cl on Cl.userID = UC.userID where Cl.isPrimaryOwner = 1)
, mail2 (ID,email) as (SELECT ID, email.value as email FROM mail1 m CROSS APPLY STRING_SPLIT(m.email,',') AS email)
, mail3 (ID,email) as (SELECT ID, case when RIGHT(email, 1) = '.' then LEFT(email, LEN(email) - 1) when LEFT(email, 1) = '.' then RIGHT(email, LEN(email) - 1) else email end as email from mail2 WHERE email like '%_@_%.__%')
, mail4 (ID,email,rn) as ( SELECT ID, email = ltrim(rtrim(CONVERT(NVARCHAR(MAX), email))), r1 = ROW_NUMBER() OVER (PARTITION BY ID ORDER BY ID desc) FROM mail3 )
, e1 (ID,email) as (select ID, email from mail4 where rn = 1)
, ed  (ID,email,rn) as (SELECT ID,email,ROW_NUMBER() OVER(PARTITION BY email ORDER BY ID DESC) AS rn FROM e1 )
, e2 (ID,email) as (select ID, email from mail4 where rn = 2)
, e3 (ID,email) as (select ID, email from mail4 where rn = 3)
--select * from ed

select 
	 Cl.clientID as 'contact-externalId'
       , Stuff(
                                   Coalesce(' ' + NULLIF(UC.address1, ''), '')
                               + Coalesce(', ' + NULLIF(UC.address2, ''), '')
                               + Coalesce(', ' + NULLIF(UC.city, ''), '')
                               + Coalesce(', ' + NULLIF(UC.state, ''), '')
                               + Coalesce(', ' + NULLIF(tc.country, ''), '')
                       , 1, 1, '') as 'address'
       , UC.city
       , UC.state
       , UC.zip as 'post_code'
       , tc.ABBREVIATION as 'country_code' --UC.countryID
       , ltrim(Stuff(
                         Coalesce(', ' + NULLIF(UC.city, ''), '')
                        + Coalesce(', ' + NULLIF(UC.state, ''), '')
                        + Coalesce(', ' + NULLIF(tc.country, ''), '')
                , 1, 1, '') ) as 'locationName'
-- select count(*) --7487 -- select top 10 *
from bullhorn1.BH_Client Cl --where isPrimaryOwner = 1
left join bullhorn1.BH_UserContact UC ON Cl.userID = UC.userID
left join e2 ON Cl.userID = e2.ID -- candidate-email
left join tmp_country tc ON UC.countryID = tc.code
where isPrimaryOwner = 1 </sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>624</xloc>
      <yloc>528</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>BULLHORN candidateLocation 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>select 
         can.contactid as 'candidate-externalId'
       , case when c.ishomeaddress = 1 then 'PERSONAL_ADDRESS' when c.ishomeaddress = 0 then 'WORKPLACE' else '' end as 'Location > Type'
       , c.longitude as 'Longitude'
       , c.latitude as 'Latitude'

from dbo.candidates can
left join dbo.contacts c on c.contactid = can.contactid

</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1677</xloc>
      <yloc>2236</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CANDIDATE WORK HISTORY</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>select 
		 C.candidateID as 'candidate-externalId'
		, Coalesce(NULLIF(replace(C.FirstName,'?',''), ''), 'No Firstname') as 'contact-firstName'
        , Coalesce(NULLIF(replace(C.LastName,'?',''), ''), concat('Lastname-',C.candidateID)) as 'contact-lastName'
		, C.companyName as 'candidate-company1'
		, C.occupation as 'candidate-jobTitle1'
		, C.companyName as 'candidate-employer1'
	from bullhorn1.Candidate C
	where C.isPrimaryOwner = 1
        AND ( (C.companyName is not null and C.companyName &lt;&gt; '') or (C.occupation is not null and C.occupation &lt;&gt; '') or (C.companyName is not null and C.companyName &lt;&gt; '') )
and c.candidateID = 63254</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1680</xloc>
      <yloc>1152</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CANDIDATE table</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>
	select
         can.contactid as 'candidate-externalId' --,c.candidateref
       , c.alsoknownas as 'PreferredName'
       , c.department as 'Department'       
from dbo.candidates can
left join dbo.contacts c on c.contactid = can.contactid
where c.alsoknownas is not null and c.alsoknownas &lt;&gt; ''</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1680</xloc>
      <yloc>1088</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate - desired_contract_rate - contract_rate</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>select 
       convert(varchar(500),C.candidateID) as 'candidate-externalId'
       , Coalesce(NULLIF(replace(C.FirstName,'?',''), ''), 'No Firstname') as 'contact-firstName'
       , Coalesce(NULLIF(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID)) as 'contact-lastName'
       , c.dayRate as 'desired_contract_rate'
       , c.dayRateLow as 'contract_rate'
-- select count (*) -- select distinct gender --employmentPreference -- select skillset, skillIDlist, customTextBlock1, companyURL --select top 10 * -- select dayRate, dayRateLow
from bullhorn1.Candidate C
--where C.isPrimaryOwner = 1	</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1680</xloc>
      <yloc>736</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate Comment</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>
-- LOG
select 
         can.contactid as 'candidateID'
       , case when (ltrim(replace(c.firstname,'?','')) = '' or  c.firstname is null) then 'Firstname' else ltrim(replace(c.firstname,'?','')) end as 'candidate-firstName'
       , case when (ltrim(replace(c.lastname,'?','')) = '' or c.lastname is null) then concat('Lastname-',c.contactid) else ltrim(replace(c.lastname,'?','')) end as 'candidate-Lastname'
       , cast('-10' as int) as 'user_account_id'
       , 'comment' as 'category'
       , 'candidate' as 'type'       
       , l.logdate as 'insert_timestamp'
	, Stuff( 
	          Coalesce('Name: ' + NULLIF(cast(u.username as varchar(max)), '') + char(10), '')
	      + Coalesce(char(10) + 'Subject: ' + NULLIF(cast(l.subject as varchar(max)), '') + char(10), '')
	      + Coalesce(char(10) + 'Log Item Text: ' + char(10) + NULLIF(cast(ld.text as varchar(max)), '') + char(10), '')
              , 1, 0, '')  as 'content'
       --, ld.*
-- select count(*)       
from dbo.candidates can
left join dbo.contacts c on c.contactid = can.contactid 
left join dbo.logitems l on l.itemid =  c.contactid
left join dbo.logdata ld on ld.logdataid = l.logdataid
left join dbo.users u on u.shortuser = l.shortuser
where c.type in ('Candidate')
--and l.logdate = ''</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1696</xloc>
      <yloc>208</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate New resumes</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <sql>SELECT 'CANDIDATE' as Sirius_entity_type
, PEOPLECLOUD1__DOCUMENT_RELATED_TO__C as Sirius_CandExtID
, PEOPLECLOUD1__OBJECTKEY__C as Sirius_file_name
--, case when PEOPLECLOUD1__DOCUMENT_TYPE__C = 'Resume' then 'resume'
--	else 'other_docs' end as Sirius_document_type
, 'resume' as Sirius_document_type
, 0 as Sirius_default_file
from NewResumes
where PEOPLECLOUD1__DOCUMENT_RELATED_TO__C is not NULL
and (NAME like '%doc%' or NAME like '%xls%' or NAME like '%pdf' or NAME like '%txt' or NAME like '%rtf' or NAME like '%htm%' or NAME like '%msg')</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1680</xloc>
      <yloc>1872</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate Note</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>

with
 note as (
	select can.contactid
	, Stuff( 
	          Coalesce('CandNo: ' + NULLIF(cast(c.candidateref as varchar(max)), '') + char(10), '')
	      + Coalesce('Owner: ' + NULLIF(cast( iif(u.email is null, c.username, '') as varchar(max)), '') + char(10), '')
             + Coalesce('Contact Type: ' + NULLIF(cast(c.type as varchar(max)), '') + char(10), '')
             + Coalesce('Department: ' + NULLIF(cast(c.department as varchar(max)), '') + char(10), '')
             --+ Coalesce('Relocation: ' + NULLIF(cast(c.relocationstatus as varchar(max)), '') + char(10), '')
             --+ Coalesce('Relocation: ' + NULLIF(cast(can.canrelocate as varchar(max)), '') + char(10), '')
             + Coalesce('Relocation: ' + NULLIF(case when can.canrelocate = 1 then 'Yes' when can.canrelocate = 0 then '' else '' end, '') + char(10), '')
             + Coalesce('CV Date: ' + NULLIF(cast(c.DateCVAdded as varchar(max)), '') + char(10), '') 
             + Coalesce('Availability: ' + NULLIF(cast(can.availability as varchar(max)), '') + char(10), '') 
             + Coalesce('Status: ' + NULLIF(cast(c.ContactStatus as varchar(max)), '') + char(10), '')
             + Coalesce('Location: ' + NULLIF(cast(c.location as varchar(max)), '') + char(10), '')
	      + Coalesce('Sub Location: ' + NULLIF(cast(c.sublocation as varchar(max)), '') + char(10), '')
	      + Coalesce('Source: ' + NULLIF(cast(c.ContactSource as varchar(max)), '') + char(10), '')
	      + Coalesce('RS Ref: ' + NULLIF(cast(can.contactid as varchar(max)), '') + char(10), '')
	      + Coalesce('Sector: ' + NULLIF(cast(c.sector as varchar(max)), '') + char(10), '')
	      + Coalesce('Job Wanted > Salary Req''d (Range): ' + NULLIF(cast( concat(can.currency2,' ',can.SalaryWanted,' ',can.SalaryWanted2) as varchar(max)), '') + char(10), '')
	      + Coalesce(char(10) + 'Registration Notes: ' + NULLIF(cast(c.comments as varchar(max)), '') + char(10), '')
	      --+ Coalesce('About: ' + NULLIF(cast(c.comments as varchar(max)), '') + char(10), '')
              , 1, 0, '') as note
from dbo.candidates can
left join dbo.contacts c on c.contactid = can.contactid
left join dbo.users u on u.userid = c.userid
where c.type in ('Candidate') )
--select * from note where c.contactid = '828087-8837-17213'
--select * from dbo.contacts where contactid = '828087-8837-17213'



select 
         can.contactid as 'candidate-externalId' --,c.candidateref
	
       , n.note as 'candidate-note'

-- select count(*) --3015
from dbo.candidates can
left join dbo.contacts c on c.contactid = can.contactid

left join note n on n.contactid = can.contactid
where c.type in ('Candidate')
--and c.candidateref in ('00125121','00121824')
--and c.contactid in ('851778-5710-188')
--and c.firstname in ('Krishnan(shankar)')




/*
-- LOG
select 
         c.candidateref as 'candidate-externalId'
       , case when (ltrim(replace(c.firstname,'?','')) = '' or  c.firstname is null) then 'Firstname' else ltrim(replace(c.firstname,'?','')) end as 'candidate-firstName'
       , case when (ltrim(replace(c.lastname,'?','')) = '' or c.lastname is null) then concat('Lastname-',c.contactid) else ltrim(replace(c.lastname,'?','')) end as 'candidate-Lastname'
       , cast('-10' as int) as 'user_account_id'
       , 'comment' as 'category'
       , 'candidate' as 'type'       
       , l.logdate as 'insert_timestamp'
	, Stuff( 
	          Coalesce('Name: ' + NULLIF(cast(u.username as varchar(max)), '') + char(10), '')
	      + Coalesce(char(10) + 'Subject: ' + NULLIF(cast(l.subject as varchar(max)), '') + char(10), '')
	      + Coalesce(char(10) + 'Log Item Text: ' + char(10) + NULLIF(cast(ld.text as varchar(max)), '') + char(10), '')
              , 1, 0, '')  as 'content'
       --, ld.*
-- select count(*)       
from dbo.candidates can
left join dbo.contacts c on c.contactid = can.contactid 
left join dbo.logitems l on l.itemid =  c.contactid
left join dbo.logdata ld on ld.logdataid = l.logdataid
left join dbo.users u on u.shortuser = l.shortuser
where c.type in ('Candidate')
and c.candidateref in ('00121824')
--and c.contactid = '828087-8837-17213'
--where l.subject like '%DM Note - Spoke to Ian%'
*/</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1696</xloc>
      <yloc>64</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate Note 2</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <sql>with note2 as (
	select l.ID
	       , 'Previously Sent Companies ' as title
	, Stuff(Coalesce('Brooks: ' + NULLIF(l.Brooks__c, '') + char(10), '')
                + Coalesce('Celerant: ' + NULLIF(l.Celerant__c, '') + char(10), '')
                + Coalesce('CPI: ' + NULLIF(l.CPI__c, '') + char(10), '')
                + Coalesce('Highland: ' + NULLIF(l.Highland__c, '') + char(10), '')
                + Coalesce('KM and T: ' + NULLIF(l.KMandT__c, '') + char(10), '')
                + Coalesce('Lausanne_Consulting__c: ' + NULLIF(l.Lausanne_Consulting__c, '') + char(10), '')
                + Coalesce('P&amp;M: ' + NULLIF(l.P_M__c, '') + char(10), '')
                + Coalesce('PDM: ' + NULLIF(l.PDM__c, '') + char(10), '')
                + Coalesce('PiPint: ' + NULLIF(l.PiPint__c, '') + char(10), '')
                + Coalesce('ProAction: ' + NULLIF(l.ProAction__c, '') + char(10), '')
                + Coalesce('Quest Worldwide: ' + NULLIF(l.Quest_Worldwide__c, '') + char(10), '')
                + Coalesce('Resultance: ' + NULLIF(l.Resultance__c, '') + char(10), '')
                + Coalesce('SAMI: ' + NULLIF(l.SAMI__c, '') + char(10), '')
                + Coalesce('TA Cook: ' + NULLIF(l.TA_Cook__c, '') + char(10), '')
                + Coalesce('Other Clients: ' + NULLIF(l.Other_clients__c, '') + char(10), '')
                + Coalesce('CN''s Clients: ' + NULLIF(l.CN_s_Clients__c, '') + char(10), '')
                + Coalesce('Billed For: ' + NULLIF(l.Billed_for__c, '') + char(10), '')
                , 1, 0, '') as note2
                -- select Experience__c, Introduction__c, Sourced_by__c, Reference_CV__c, First_language__c, Second_language__c, Other_languages__c, Comments_on_languages__c, Nationality__c, Ex_Company__c, Operational_consulting__c, Brooks__c, Celerant__c, CPI__c, Highland__c, KMandT__c, Lausanne_Consulting__c, P_M__c, PDM__c, PiPint__c, ProAction__c, Quest_Worldwide__c, Resultance__c, SAMI__c, TA_Cook__c, Other_clients__c, CN_s_Clients__c, Billed_for__c, Source__c, LeadSource
        from Lead l
        )
select * from note2 where note2 is not null</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1696</xloc>
      <yloc>144</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate Source</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>select distinct ltrim(rtrim(source)) as name
       , 1 as source_type
       , current_timestamp as insert_timestamp
       , 11 as payment_style 
from bullhorn1.Candidate C
where source &lt;&gt; '' and C.isPrimaryOwner = 1</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1696</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate Source 2</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>select
	  C.candidateID as 'candidate-externalId'
--       , Coalesce(NULLIF(replace(C.FirstName,'?',''), ''), 'No Firstname') as 'contact-firstName'
--       , Coalesce(NULLIF(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID)) as 'contact-lastName'
       , ltrim(rtrim(c.source)) as 'candidate-source'
-- select count (*) -- select distinct ltrim(rtrim(source))
from bullhorn1.Candidate C
where source &lt;&gt; '' and C.isPrimaryOwner = 1</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1840</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate contract_rate</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>
----------------
with t as (SELECT userid, payRate,dateAdded, rn = ROW_NUMBER() OVER (PARTITION BY userid ORDER BY dateAdded desc) FROM bullhorn1.BH_JobResponse)
--select * from t where rn =1
select       t.userID as '#userID'
		, c.candidateID as 'candidate-externalId'
		, t.payrate
from t
left join bullhorn1.Candidate C on c.userid = t.userid
where t.payrate is not null and  c.isPrimaryOwner = 1</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1680</xloc>
      <yloc>672</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate lookup</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>application-candidateExternalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name />
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>VCCandidateID</rename>
        <default />
        <type>Number</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2544</xloc>
      <yloc>464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate lookup 2</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema />
      <table>candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>Forward_CandidateExtID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name />
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>VCCandidateID</rename>
        <default />
        <type>Integer</type>
      </value>
      <value>
        <name>first_name</name>
        <rename>first_name</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>last_name</name>
        <rename>last_name</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>male</name>
        <rename>male</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>email</name>
        <rename>email</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>date_of_birth</name>
        <rename>date_of_birth</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>notice_period</name>
        <rename>notice_period</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>current_location_id</name>
        <rename>current_location_id</rename>
        <default />
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2528</xloc>
      <yloc>640</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate lookup 2 2</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema />
      <table>candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>CandidateExtID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name />
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>VCCandidateID</rename>
        <default />
        <type>Integer</type>
      </value>
      <value>
        <name>first_name</name>
        <rename>first_name</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>last_name</name>
        <rename>last_name</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>male</name>
        <rename>male</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>email</name>
        <rename>email</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>date_of_birth</name>
        <rename>date_of_birth</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>notice_period</name>
        <rename>notice_period</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>current_location_id</name>
        <rename>current_location_id</rename>
        <default />
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3322</xloc>
      <yloc>103</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate lookup 2 2 2</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>CandidateExtID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name />
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>VCCandidateID</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4228</xloc>
      <yloc>160</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate lookup 2 2 3</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema />
      <table>candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>Forward_CandidateExtID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name />
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>VCCandidateID</rename>
        <default />
        <type>Integer</type>
      </value>
      <value>
        <name>first_name</name>
        <rename>first_name</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>last_name</name>
        <rename>last_name</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>male</name>
        <rename>male</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>email</name>
        <rename>email</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>date_of_birth</name>
        <rename>date_of_birth</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>notice_period</name>
        <rename>notice_period</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>current_location_id</name>
        <rename>current_location_id</rename>
        <default />
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4238</xloc>
      <yloc>431</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate lookup 3</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>application-candidateExternalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name />
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>VCCandidateID</rename>
        <default />
        <type>Number</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2544</xloc>
      <yloc>368</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate lookup 4</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>forward_candidateextid</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name />
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>VCCandidateID</rename>
        <default />
        <type>Number</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2416</xloc>
      <yloc>240</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate lookup 5</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>Sirius_CandExtID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name />
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>VCCandidateID</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1840</xloc>
      <yloc>1872</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate lookup 6</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>forward_candidateextid</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name />
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>VCCandidateID</rename>
        <default />
        <type>Number</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4288</xloc>
      <yloc>99</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Company - employees_number</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>
with 
 dup as (SELECT companyid,ltrim(rtrim(companyname)) as name,ROW_NUMBER() OVER(PARTITION BY ltrim(rtrim(companyname)) ORDER BY companyid ASC) AS rn FROM dbo.companies )


select
         c.companyid as 'company-externalId'
       --, iif(c.companyname in (null,''), 'No CompanyName', c.companyname) as 'company-name'
       , iif(dup.rn > 1,concat(dup.name,' ',dup.rn), iif(dup.name in (null,''),'No CompanyName',dup.name)) as 'company-name'

       , a.telno as 'Location > Phone number' -->>
       , a.email as 'Location > Note'  -->>
       , c.longitude as 'Longitude'  -->>
       , c.latitude as 'Latitude'  -->>
       , c.sector as 'company-industry' -->>
       , c.headcount as 'numEmployees' -->>
-- select count(*) --2377
from companies c
left join dup on dup.companyid = c.companyid
left join addresses a on a.contactid = c.companyid
left join users u on u.username = c.owner
where c.headcount is not null and c.headcount &lt;&gt; ''


</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>64</xloc>
      <yloc>512</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Company Comment</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>-- LOG
select 
         c.companyid as 'company-externalId'
       , companyname as 'companyname'
       , cast('-10' as int) as 'user_account_id'
       , 'comment' as 'category'
       , 'company' as 'type'       
       , l.logdate as 'insert_timestamp'
	, Stuff( 
	          Coalesce('Name: ' + NULLIF(cast(u.username as varchar(max)), '') + char(10), '')
	      + Coalesce(char(10) + 'Subject: ' + NULLIF(cast(l.subject as varchar(max)), '') + char(10), '')
	      + Coalesce(char(10) + 'Log Item Text: ' + char(10) + NULLIF(cast(ld.text as varchar(max)), '') + char(10), '')
              , 1, 0, '')  as 'content'
       --, ld.*
-- select count(*)       
from dbo.companies c 
left join dbo.logitems l on l.itemid =  c.companyid
left join dbo.logdata ld on ld.logdataid = l.logdataid
left join dbo.users u on u.shortuser = l.shortuser</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>80</xloc>
      <yloc>64</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Company Location</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>select
         c.companyid as 'company-externalId'
       --, iif(c.companyname in (null,''), 'No CompanyName', c.companyname) as 'company-name'
       --, iif(dup.rn > 1,concat(dup.name,' ',dup.rn), iif(dup.name in (null,''),'No CompanyName',dup.name)) as 'company-name'
       , a.telno as 'Location > Phone number' -->>
       , a.email as 'Location > Note'  -->>
       , c.longitude as 'Longitude'  -->>
       , c.latitude as 'Latitude'  -->>

-- select count(*) --2377
from companies c
left join addresses a on a.contactid = c.companyid

/*
select concat('NJFS',intCompanyId) as externalID
		, iif(Num = '' or Num is null, locationName,concat(locationName,' - Ph. ',Num)) as locationName
		, vchPostcode as postCode
		, concat(replace(replace(replace(replace(fullAddress,',,',','),'Lo, ndon','London'),'"',''),'  ',''),iif(Num = '' or Num is null, '',concat(' - Ph. ',Num))) as address
              , tl.vchCountryCode as countryCode
              , tl.vchCountryCode as countryNameupdated
		, tl.intCompanyTierId
		, vchTown as City
from tempLocation tl 
left join TierPhone tp on tl.intCompanyTierId = tp.intCompanyTierId--where fullAddress is not null
--where intCompanyId in (2,455)--,1887,4546,6397,1436,6251,1670,2054,6275,499,5081,6676,5508,592,6504,6803,6488,2)
order by tl.intCompanyTierId
*/
</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>64</xloc>
      <yloc>434</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Company lookup</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>company_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name />
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2 />
      </key>
      <value>
        <name>name</name>
        <rename>client_company_name</rename>
        <default />
        <type>String</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2768</xloc>
      <yloc>736</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Company lookup 2</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>company_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>name</name>
        <rename>client_company_name</rename>
        <default />
        <type>String</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3562</xloc>
      <yloc>199</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Company lookup 3</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>company_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>name</name>
        <rename>client_company_name</rename>
        <default />
        <type>String</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4478</xloc>
      <yloc>527</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Compensation</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>select concat('NJFS',intJobId) as JobExternalId, decBasicMinSalary as PayRateFrom, decBasicMaxSalary as PayRateTo
from dJob 
where tintJobType = 2</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>Y</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1184</xloc>
      <yloc>240</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Compensation lookup</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>compensation</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>VCJobID</name>
        <field>position_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>contract_length</name>
        <rename>contract_length</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>contract_rate_from</name>
        <rename>contract_rate_from</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>contract_rate_to</name>
        <rename>contract_rate_to</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>pay_rate</name>
        <rename>pay_rate</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>working_hour_per_day</name>
        <rename>working_hour_per_day</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>working_day_per_week</name>
        <rename>working_day_per_week</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>working_day_per_month</name>
        <rename>working_day_per_month</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>working_week_per_month</name>
        <rename>working_week_per_month</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>annual_paid_holiday_charge_client</name>
        <rename>annual_paid_holiday_charge_client</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>annual_paid_sick_day_charge_client</name>
        <rename>annual_paid_sick_day_charge_client</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>projected_pay_rate</name>
        <rename>projected_pay_rate</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>projected_charge_rate</name>
        <rename>projected_charge_rate</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>projected_profit</name>
        <rename>projected_profit</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>gross_annual_salary</name>
        <rename>gross_annual_salary</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>payment_amount</name>
        <rename>payment_amount</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>present_salary_rate</name>
        <rename>present_salary_rate</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>quick_charge_rate</name>
        <rename>quick_charge_rate</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>quick_charge_rate_updated</name>
        <rename>quick_charge_rate_updated</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>profit</name>
        <rename>profit</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>margin_percent</name>
        <rename>margin_percent</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>markup_percent</name>
        <rename>markup_percent</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>charge_rate</name>
        <rename>charge_rate</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>total_pay_rate</name>
        <rename>total_pay_rate</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>on_cost</name>
        <rename>on_cost</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>on_cost_percentage</name>
        <rename>on_cost_percentage</rename>
        <default />
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2768</xloc>
      <yloc>464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Compensation lookup 2</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>compensation</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>VCJobID</name>
        <field>position_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>contract_length</name>
        <rename>contract_length</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>contract_rate_from</name>
        <rename>contract_rate_from</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>contract_rate_to</name>
        <rename>contract_rate_to</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>pay_rate</name>
        <rename>pay_rate</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>working_hour_per_day</name>
        <rename>working_hour_per_day</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>working_day_per_week</name>
        <rename>working_day_per_week</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>working_day_per_month</name>
        <rename>working_day_per_month</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>working_week_per_month</name>
        <rename>working_week_per_month</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>annual_paid_holiday_charge_client</name>
        <rename>annual_paid_holiday_charge_client</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>annual_paid_sick_day_charge_client</name>
        <rename>annual_paid_sick_day_charge_client</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>projected_pay_rate</name>
        <rename>projected_pay_rate</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>projected_charge_rate</name>
        <rename>projected_charge_rate</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>projected_profit</name>
        <rename>projected_profit</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>gross_annual_salary</name>
        <rename>gross_annual_salary</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>payment_amount</name>
        <rename>payment_amount</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>present_salary_rate</name>
        <rename>present_salary_rate</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>quick_charge_rate</name>
        <rename>quick_charge_rate</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>quick_charge_rate_updated</name>
        <rename>quick_charge_rate_updated</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>profit</name>
        <rename>profit</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>margin_percent</name>
        <rename>margin_percent</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>markup_percent</name>
        <rename>markup_percent</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>charge_rate</name>
        <rename>charge_rate</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>total_pay_rate</name>
        <rename>total_pay_rate</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>on_cost</name>
        <rename>on_cost</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>on_cost_percentage</name>
        <rename>on_cost_percentage</rename>
        <default />
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2640</xloc>
      <yloc>240</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Compensation lookup 3</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>compensation</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>VCJobID</name>
        <field>position_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>contract_length</name>
        <rename>contract_length</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>contract_rate_from</name>
        <rename>contract_rate_from</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>contract_rate_to</name>
        <rename>contract_rate_to</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>pay_rate</name>
        <rename>pay_rate</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>working_hour_per_day</name>
        <rename>working_hour_per_day</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>working_day_per_week</name>
        <rename>working_day_per_week</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>working_day_per_month</name>
        <rename>working_day_per_month</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>working_week_per_month</name>
        <rename>working_week_per_month</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>annual_paid_holiday_charge_client</name>
        <rename>annual_paid_holiday_charge_client</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>annual_paid_sick_day_charge_client</name>
        <rename>annual_paid_sick_day_charge_client</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>projected_pay_rate</name>
        <rename>projected_pay_rate</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>projected_charge_rate</name>
        <rename>projected_charge_rate</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>projected_profit</name>
        <rename>projected_profit</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>gross_annual_salary</name>
        <rename>gross_annual_salary</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>payment_amount</name>
        <rename>payment_amount</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>present_salary_rate</name>
        <rename>present_salary_rate</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>quick_charge_rate</name>
        <rename>quick_charge_rate</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>quick_charge_rate_updated</name>
        <rename>quick_charge_rate_updated</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>profit</name>
        <rename>profit</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>margin_percent</name>
        <rename>margin_percent</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>markup_percent</name>
        <rename>markup_percent</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>charge_rate</name>
        <rename>charge_rate</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>total_pay_rate</name>
        <rename>total_pay_rate</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>on_cost</name>
        <rename>on_cost</rename>
        <default />
        <type>None</type>
      </value>
      <value>
        <name>on_cost_percentage</name>
        <rename>on_cost_percentage</rename>
        <default />
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4512</xloc>
      <yloc>99</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Concat Fields</name>
    <type>ConcatFields</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <separator> </separator>
    <enclosure />
    <enclosure_forced>N</enclosure_forced>
    <enclosure_fix_disabled>N</enclosure_fix_disabled>
    <header>N</header>
    <footer>N</footer>
    <format>DOS</format>
    <compression>None</compression>
    <encoding />
    <endedLine />
    <fileNameInField>N</fileNameInField>
    <fileNameField />
    <create_parent_folder>Y</create_parent_folder>
    <file>
      <name>file</name>
      <is_command>N</is_command>
      <servlet_output>N</servlet_output>
      <do_not_open_new_file_init>N</do_not_open_new_file_init>
      <extention>txt</extention>
      <append>N</append>
      <split>N</split>
      <haspartno>N</haspartno>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <SpecifyFormat>N</SpecifyFormat>
      <date_time_format />
      <add_to_result_filenames>Y</add_to_result_filenames>
      <pad>N</pad>
      <fast_dump>N</fast_dump>
      <splitevery>0</splitevery>
    </file>
    <fields>
      <field>
        <name>client_first_name</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>client_last_name</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
    </fields>
    <ConcatFields>
      <targetFieldName>client_contact_name</targetFieldName>
      <targetFieldLength>0</targetFieldLength>
      <removeSelectedFields>N</removeSelectedFields>
    </ConcatFields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2880</xloc>
      <yloc>832</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Concat Fields 2</name>
    <type>ConcatFields</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <separator> </separator>
    <enclosure />
    <enclosure_forced>N</enclosure_forced>
    <enclosure_fix_disabled>N</enclosure_fix_disabled>
    <header>N</header>
    <footer>N</footer>
    <format>DOS</format>
    <compression>None</compression>
    <encoding />
    <endedLine />
    <fileNameInField>N</fileNameInField>
    <fileNameField />
    <create_parent_folder>Y</create_parent_folder>
    <file>
      <name>file</name>
      <is_command>N</is_command>
      <servlet_output>N</servlet_output>
      <do_not_open_new_file_init>N</do_not_open_new_file_init>
      <extention>txt</extention>
      <append>N</append>
      <split>N</split>
      <haspartno>N</haspartno>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <SpecifyFormat>N</SpecifyFormat>
      <date_time_format />
      <add_to_result_filenames>Y</add_to_result_filenames>
      <pad>N</pad>
      <fast_dump>N</fast_dump>
      <splitevery>0</splitevery>
    </file>
    <fields>
      <field>
        <name>client_first_name</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>client_last_name</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
    </fields>
    <ConcatFields>
      <targetFieldName>client_contact_name</targetFieldName>
      <targetFieldLength>0</targetFieldLength>
      <removeSelectedFields>N</removeSelectedFields>
    </ConcatFields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3674</xloc>
      <yloc>295</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Concat Fields 3</name>
    <type>ConcatFields</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <separator> </separator>
    <enclosure />
    <enclosure_forced>N</enclosure_forced>
    <enclosure_fix_disabled>N</enclosure_fix_disabled>
    <header>N</header>
    <footer>N</footer>
    <format>DOS</format>
    <compression>None</compression>
    <encoding />
    <endedLine />
    <fileNameInField>N</fileNameInField>
    <fileNameField />
    <create_parent_folder>Y</create_parent_folder>
    <file>
      <name>file</name>
      <is_command>N</is_command>
      <servlet_output>N</servlet_output>
      <do_not_open_new_file_init>N</do_not_open_new_file_init>
      <extention>txt</extention>
      <append>N</append>
      <split>N</split>
      <haspartno>N</haspartno>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <SpecifyFormat>N</SpecifyFormat>
      <date_time_format />
      <add_to_result_filenames>Y</add_to_result_filenames>
      <pad>N</pad>
      <fast_dump>N</fast_dump>
      <splitevery>0</splitevery>
    </file>
    <fields>
      <field>
        <name>client_first_name</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>client_last_name</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
    </fields>
    <ConcatFields>
      <targetFieldName>client_contact_name</targetFieldName>
      <targetFieldLength>0</targetFieldLength>
      <removeSelectedFields>N</removeSelectedFields>
    </ConcatFields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4590</xloc>
      <yloc>623</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact Comment</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>
-- LOG
select 
         distinct replace(c.contactid,'Z','') as 'contact_id'      
       , case when (ltrim(replace(c.firstname,'?','')) = '' or  c.firstname is null) then 'Firstname' else ltrim(replace(c.firstname,'?','')) end as 'contact-firstName'
       , case when (ltrim(replace(c.lastname,'?','')) = '' or c.lastname is null) then concat('Lastname-',c.contactid) else ltrim(replace(c.lastname,'?','')) end as 'contact-Lastname'
       , cast('-10' as int) as 'user_account_id'
       , 'comment' as 'category'
       , 'contact' as 'type'       
       , l.logdate as 'insert_timestamp'
	, Stuff( 
	          Coalesce('Name: ' + NULLIF(cast(u.username as varchar(max)), '') + char(10), '')
	      + Coalesce(char(10) + 'Subject: ' + NULLIF(cast(l.subject as varchar(max)), '') + char(10), '')
	      + Coalesce(char(10) + 'Log Item Text: ' + char(10) + NULLIF(cast(ld.text as varchar(max)), '') + char(10), '')
              , 1, 0, '')  as 'content'
       --, ld.*
-- select count(*)       
from dbo.contacts c 
left join dbo.logitems l on l.itemid =  c.contactid
left join dbo.logdata ld on ld.logdataid = l.logdataid
left join dbo.users u on u.shortuser = l.shortuser
where c.type in ('Client','Contact','Contractor')        </sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>624</xloc>
      <yloc>64</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact Custom Field</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>
-- TV Business Area
select
        Cl.clientID as 'external_additional_id'
        , 'add_con_info' as additional_type
        , 1007 as form_id
        , 1019 as field_id
        , replace(replace(replace(replace( ltrim(rtrim(UC.customText1)),'Advisory',1),'General',2),'Investment',3),'TT Client',4) as field_value
-- select distinct ltrim(rtrim(UC.customText1))
from bullhorn1.BH_Client Cl
left join bullhorn1.BH_UserContact UC ON Cl.userID = UC.userID
where Cl.isPrimaryOwner = 1 and UC.customText1 &lt;&gt; ''
</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>624</xloc>
      <yloc>608</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact Info</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>/*
select 
	 Cl.clientID as 'contact-externalId'
	, UC.Phone2 as 'home_phone'
	, UC.Mobile as 'mobile_phone'
	, Cl.division as 'department'
	, e2.email as 'personal_email'
	, UC.namePrefix as 'gender_tile'
	, UC.NickName as 'nickname'
    , UC.customText1 as 'LinkedIn'
-- select count(*) --7487 -- select top 10 *
from bullhorn1.BH_Client Cl --where isPrimaryOwner = 1
left join bullhorn1.BH_UserContact UC ON Cl.userID = UC.userID
left join e2 ON Cl.userID = e2.ID -- candidate-email
left join tmp_country tc ON UC.countryID = tc.code
where isPrimaryOwner = 1 
*/

select 
         distinct replace(c.contactid,'Z','') as 'contact-externalId'
       , c.department as 'Department'
       , c.mobiletel  as 'mobile_phone'
       , ltrim(Stuff( Coalesce(' ' + NULLIF(c.worktel, ''), '') + Coalesce(', ' + NULLIF(c.hometel, ''), ''), 1, 1, '') )  as 'home_phone'
       , ltrim(Stuff( Coalesce(' ' + NULLIF(a.address1, ''), '') + Coalesce(', ' + NULLIF(a.address2, ''), '') + Coalesce(', ' + NULLIF(a.address3, ''), '') + Coalesce(', ' + NULLIF(a.city, ''), '') + Coalesce(', ' + NULLIF(a.county, ''), '') + Coalesce(', ' + NULLIF(a.postcode, ''), '') + Coalesce(', ' + NULLIF(a.country, ''), '') , 1, 1, '') ) as 'contact-locationAddress'      
       , a.city as 'contact-locationCity'
       , a.county as 'contact-locationState'
       , a.postcode as 'contact-locationZipCode'
       , case
		when a.country like 'Africa%' then 'ZA'
		when a.country like 'Austral%' then 'AU'
		when a.country like 'Austria%' then 'AT'
		when a.country like 'Begium%' then 'BE'
		when a.country like 'Beglium%' then 'BE'
		when a.country like 'Belgie%' then 'BE'
		when a.country like 'België%' then 'BE'
		when a.country like 'Belgiqu%' then 'BE'
		when a.country like 'Belgium%' then 'BE'
		when a.country like 'Berkshi%' then 'GB'
		when a.country like 'Birming%' then 'GB'
		when a.country like 'Brussel%' then 'BE'
		when a.country like 'Bulgari%' then 'BG'
		when a.country like 'Canada%' then 'CA'
		when a.country like 'CA%' then 'CA'
		when a.country like 'Denmark%' then 'DK'
		when a.country like 'Deutsch%' then 'DE'
		when a.country like 'Dubai%' then 'AE'
		when a.country like 'England%' then 'GB'
		when a.country like 'Essex%' then 'GB'
		when a.country like 'Finland%' then 'FI'
		when a.country like 'France%' then 'FR'
		when a.country like 'Frankfu%' then 'DE'
		when a.country like 'Germany%' then 'DE'
		when a.country like 'Gibralt%' then 'ES'
		when a.country like 'Greece%' then 'GR'
		when a.country like 'Hamburg%' then 'DE'
		when a.country like 'Hampshi%' then 'GB'
		when a.country like 'Hungary%' then 'HU'
		when a.country like 'Ireland%' then 'IE'
		when a.country like 'Italy%' then 'IT'
		when a.country like 'Kiel%' then 'DE'
		when a.country like 'Lancs%' then 'GB'
		when a.country like 'London%' then 'GB'
		when a.country like 'Lübeck%' then 'DE'
		when a.country like 'Luxembo%' then 'LU'
		when a.country like 'Malta%' then 'MT'
		when a.country like 'Münche%' then 'DE'
		when a.country like 'Munich%' then 'DE'
		when a.country like 'Netherl%' then 'NL'
		when a.country like 'Norway%' then 'NO'
		when a.country like 'Poland%' then 'PL'
		when a.country like 'russia%' then 'RU'
		when a.country like 'Scotlan%' then 'GB'
		when a.country like 'Singapo%' then 'SG'
		when a.country like 'Spain%' then 'ES'
		when a.country like 'Sweden%' then 'SE'
		when a.country like 'Switzer%' then 'CH'
		when a.country like 'UAE%' then 'AE'
		when a.country like 'UKnited%' then 'GB'
		when a.country like 'UKraine%' then 'UA'
		when a.country like 'UK%' then 'GB'
		when a.country like 'USA%' then 'US'
		when a.country like 'Wales%' then 'GB'
		when a.country like 'Western%' then  'AU'
		when a.country like 'West%' then 'GB'
		when a.country like 'Yorkshi%' then 'GB'
              else '' end as 'contact-locationCountry'       

       , c.alsoknownas as 'nickname'
, ltrim(Stuff( Coalesce(' ' + NULLIF(c.email2, ''), '') + Coalesce(', ' + NULLIF(a.email, ''), '') , 1, 1, '') ) as 'personal_email'
       --, c.email2 as 'PersonalEmail'
       --, a.email as 'Details-Address-Email: Personal Email'

       , c.longitude as 'Longitude'
       , c.latitude as 'Latitude'
      
-- select count(*) --5845 --  select distinct c.type, count(*)
from dbo.contacts c --group by c.type
left join dbo.addresses a on a.contactid = c.companyid
left join dbo.users u on u.userid = c.userid
where c.type in ('Client','Contact','Contractor')</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>624</xloc>
      <yloc>144</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact Location</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>
select 
         distinct replace(c.contactid,'Z','') as 'contact-externalId'
       , c.department as 'Department'
       , c.mobiletel  as 'mobile_phone'
       , ltrim(Stuff( Coalesce(' ' + NULLIF(c.worktel, ''), '') + Coalesce(', ' + NULLIF(c.hometel, ''), ''), 1, 1, '') )  as 'home_phone'
       , ltrim(Stuff( Coalesce(' ' + NULLIF(a.address1, ''), '') + Coalesce(', ' + NULLIF(a.address2, ''), '') + Coalesce(', ' + NULLIF(a.address3, ''), '') + Coalesce(', ' + NULLIF(a.city, ''), '') + Coalesce(', ' + NULLIF(a.county, ''), '') + Coalesce(', ' + NULLIF(a.postcode, ''), '') + Coalesce(', ' + NULLIF(a.country, ''), '') , 1, 1, '') ) as 'address'      
       , a.city as 'City'
       , a.county as 'State'
       , a.postcode as 'post_code'
       , case
		when a.country like 'Africa%' then 'ZA'
		when a.country like 'Austral%' then 'AU'
		when a.country like 'Austria%' then 'AT'
		when a.country like 'Begium%' then 'BE'
		when a.country like 'Beglium%' then 'BE'
		when a.country like 'Belgie%' then 'BE'
		when a.country like 'België%' then 'BE'
		when a.country like 'Belgiqu%' then 'BE'
		when a.country like 'Belgium%' then 'BE'
		when a.country like 'Berkshi%' then 'GB'
		when a.country like 'Birming%' then 'GB'
		when a.country like 'Brussel%' then 'BE'
		when a.country like 'Bulgari%' then 'BG'
		when a.country like 'Canada%' then 'CA'
		when a.country like 'CA%' then 'CA'
		when a.country like 'Denmark%' then 'DK'
		when a.country like 'Deutsch%' then 'DE'
		when a.country like 'Dubai%' then 'AE'
		when a.country like 'England%' then 'GB'
		when a.country like 'Essex%' then 'GB'
		when a.country like 'Finland%' then 'FI'
		when a.country like 'France%' then 'FR'
		when a.country like 'Frankfu%' then 'DE'
		when a.country like 'Germany%' then 'DE'
		when a.country like 'Gibralt%' then 'ES'
		when a.country like 'Greece%' then 'GR'
		when a.country like 'Hamburg%' then 'DE'
		when a.country like 'Hampshi%' then 'GB'
		when a.country like 'Hungary%' then 'HU'
		when a.country like 'Ireland%' then 'IE'
		when a.country like 'Italy%' then 'IT'
		when a.country like 'Kiel%' then 'DE'
		when a.country like 'Lancs%' then 'GB'
		when a.country like 'London%' then 'GB'
		when a.country like 'Lübeck%' then 'DE'
		when a.country like 'Luxembo%' then 'LU'
		when a.country like 'Malta%' then 'MT'
		when a.country like 'Münche%' then 'DE'
		when a.country like 'Munich%' then 'DE'
		when a.country like 'Netherl%' then 'NL'
		when a.country like 'Norway%' then 'NO'
		when a.country like 'Poland%' then 'PL'
		when a.country like 'russia%' then 'RU'
		when a.country like 'Scotlan%' then 'GB'
		when a.country like 'Singapo%' then 'SG'
		when a.country like 'Spain%' then 'ES'
		when a.country like 'Sweden%' then 'SE'
		when a.country like 'Switzer%' then 'CH'
		when a.country like 'UAE%' then 'AE'
		when a.country like 'UKnited%' then 'GB'
		when a.country like 'UKraine%' then 'UA'
		when a.country like 'UK%' then 'GB'
		when a.country like 'USA%' then 'US'
		when a.country like 'Wales%' then 'GB'
		when a.country like 'Western%' then  'AU'
		when a.country like 'West%' then 'GB'
		when a.country like 'Yorkshi%' then 'GB'
              else '' end as 'country_code'       

       , c.alsoknownas as 'nickname'
, ltrim(Stuff( Coalesce(' ' + NULLIF(c.email2, ''), '') + Coalesce(', ' + NULLIF(a.email, ''), '') , 1, 1, '') ) as 'personal_email'
       --, c.email2 as 'PersonalEmail'
       --, a.email as 'Details-Address-Email: Personal Email'

       , c.longitude as 'Longitude'
       , c.latitude as 'Latitude'
      
-- select count(*) --5845 --  select distinct c.type, count(*)
from dbo.contacts c --group by c.type
left join dbo.addresses a on a.contactid = c.companyid
left join dbo.users u on u.userid = c.userid
where c.type in ('Client','Contact','Contractor')

/*
select 
	 Cl.clientID as 'contact-externalId'
       , Stuff(
                                   Coalesce(' ' + NULLIF(UC.address1, ''), '')
                               + Coalesce(', ' + NULLIF(UC.address2, ''), '')
                               + Coalesce(', ' + NULLIF(UC.city, ''), '')
                               + Coalesce(', ' + NULLIF(UC.state, ''), '')
                               + Coalesce(', ' + NULLIF(tc.country, ''), '')
                       , 1, 1, '') as 'address'
       , UC.city
       , UC.state
       , UC.zip as 'post_code'
       , tc.ABBREVIATION as 'country_code' --UC.countryID
       , ltrim(Stuff(
                         Coalesce(', ' + NULLIF(UC.city, ''), '')
                        + Coalesce(', ' + NULLIF(UC.state, ''), '')
                        + Coalesce(', ' + NULLIF(tc.country, ''), '')
                , 1, 1, '') ) as 'locationName'
-- select count(*) --7487 -- select top 10 *
from bullhorn1.BH_Client Cl --where isPrimaryOwner = 1
left join bullhorn1.BH_UserContact UC ON Cl.userID = UC.userID
left join tmp_country tc ON UC.countryID = tc.code
where isPrimaryOwner = 1 
*/</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>624</xloc>
      <yloc>224</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact New documents</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <sql>SELECT 'CONTACT' as Sirius_entity_type
, PEOPLECLOUD1__DOCUMENT_RELATED_TO__C as Sirius_ContactExtID
, PEOPLECLOUD1__OBJECTKEY__C as Sirius_file_name
, 'documents' as Sirius_document_type
, 0 as Sirius_default_file
from NewResumes
where PEOPLECLOUD1__DOCUMENT_RELATED_TO__C is not NULL
and (NAME like '%doc%' or NAME like '%xls%' or NAME like '%pdf' or NAME like '%txt' or NAME like '%rtf' or NAME like '%htm%' or NAME like '%msg')</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>624</xloc>
      <yloc>896</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact industry</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>
-- BusinessSector: split by separate rows by comma, then combine them into Business Sector(Industry)
with
  BusinessSector0(userid, businessSectorID) as (SELECT userid, a.value as ind FROM  ( select Cl.userID, UC.businessSectorIDList from bullhorn1.BH_Client Cl left join bullhorn1.BH_UserContact UC ON Cl.userID = UC.userID where Cl.isPrimaryOwner = 1 and convert(varchar(100),UC.businessSectorIDList) &lt;&gt; '' and UC.businessSectorIDList is not null ) m CROSS APPLY STRING_SPLIT( ltrim(rtrim( convert(varchar(100),m.businessSectorIDList) )), ',') AS a )
, BusinessSector(userId, BusinessSector) as (SELECT userId, ltrim(rtrim(BSL.name)) as BusinessSector from BusinessSector0 left join bullhorn1.BH_BusinessSectorList BSL ON BusinessSector0.businessSectorID = BSL.businessSectorID WHERE BusinessSector0.businessSectorID &lt;&gt; '' )
-- select * from BusinessSector
select
       distinct BusinessSector
       , current_timestamp as insert_timestamp
from BusinessSector</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>624</xloc>
      <yloc>304</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact lookup</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>client_contact_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name />
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2 />
      </key>
      <value>
        <name>first_name</name>
        <rename>client_first_name</rename>
        <default />
        <type>String</type>
      </value>
      <value>
        <name>last_name</name>
        <rename>client_last_name</rename>
        <default />
        <type>String</type>
      </value>
      <value>
        <name>department</name>
        <rename>client_department</rename>
        <default />
        <type>String</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2768</xloc>
      <yloc>832</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact lookup 2</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema />
      <table>contact</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>Sirius_ContactExtID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name />
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>VCContactID</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>768</xloc>
      <yloc>896</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact lookup 3</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>client_contact_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>first_name</name>
        <rename>client_first_name</rename>
        <default />
        <type>String</type>
      </value>
      <value>
        <name>last_name</name>
        <rename>client_last_name</rename>
        <default />
        <type>String</type>
      </value>
      <value>
        <name>department</name>
        <rename>client_department</rename>
        <default />
        <type>String</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3562</xloc>
      <yloc>295</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact lookup 4</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>client_contact_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>first_name</name>
        <rename>client_first_name</rename>
        <default />
        <type>String</type>
      </value>
      <value>
        <name>last_name</name>
        <rename>client_last_name</rename>
        <default />
        <type>String</type>
      </value>
      <value>
        <name>department</name>
        <rename>client_department</rename>
        <default />
        <type>String</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4478</xloc>
      <yloc>623</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Custom Field</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>SELECT
         clientCorporationID as 'external_additional_id'
        --, name 
        , 'add_com_info' as additional_type
        , 1006 as form_id
        , 1018 as field_id
        , replace(replace(replace(replace( ltrim(rtrim(customText1)),'Advisory',1),'General',2),'Investment',3),'TT Client',4) as field_value
from bullhorn1.BH_ClientCorporation
where customText1 &lt;&gt; ''</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>64</xloc>
      <yloc>320</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Custom Field 2</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>
select 
        c.CandidateId as 'additional_id'
	, case when (ltrim(replace(C.firstName,'?','')) = '' or  C.firstName is null) then 'FirstName' else ltrim(replace(C.firstName,'?','')) end as 'contact-firstName'
	, case when (ltrim(replace(C.lastName,'?','')) = '' or  C.lastName is null) then concat('LastName-',C.CandidateId) else ltrim(replace(C.lastName,'?','')) end as 'contact-Lastname'
                , 'add_cand_info' as additional_type
                , convert(int,1006) as form_id
                , convert(int,1019) as field_id
        , c.LookingFor
        ,replace(replace(replace(replace(replace(replace(replace(replace(c.LookingFor,
        'Winter','1'
        ),'Summer','2'
        ),'Permanent','3'
        ),'Temporary','4'
        ),'Private Household','5'
        ),'Yacht','6'
        ),'Middle East','7'),';',',') as field_value
-- select distinct LookingFor
from Candidates c
where LookingFor &lt;&gt; ''
</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1681</xloc>
      <yloc>2042</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>company-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>VCID</rename>
        <default />
        <type>Number</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>176</xloc>
      <yloc>434</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup - Company</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>company-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>actual_id</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>224</xloc>
      <yloc>64</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup - Contact</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contact_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>actual_contactid</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>784</xloc>
      <yloc>64</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>CanExternalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name />
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>id</rename>
        <default />
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1840</xloc>
      <yloc>816</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 2</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>position-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>actual_id</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1328</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 2 2</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>ID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>actual_candidate_id</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1856</xloc>
      <yloc>144</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 2 2 2</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>actual_candidate_id</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1840</xloc>
      <yloc>672</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 2 2 2 2</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>actual_candidateid</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1856</xloc>
      <yloc>272</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 2 2 3</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contact-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>actual_contactid</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>784</xloc>
      <yloc>144</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 2 2 3 2</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contact-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>actual_contactid</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>784</xloc>
      <yloc>464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 2 2 3 2 2</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contact-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>actual_contactid</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>784</xloc>
      <yloc>528</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 2 2 3 2 2 2</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>actual_contactid</rename>
        <default />
        <type>Integer</type>
      </value>
      <value>
        <name>current_location_id</name>
        <rename>current_location_id</rename>
        <default />
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1837</xloc>
      <yloc>2236</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 2 3</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>actual_candidate_id</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1872</xloc>
      <yloc>1152</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 2 4</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>JobExternalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>Job_VincereID</rename>
        <default />
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1328</xloc>
      <yloc>240</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 2 4 2</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>JobExternalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>Job_VincereID</rename>
        <default />
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1328</xloc>
      <yloc>480</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 2 4 2 2</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>JobExternalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>Job_VincereID</rename>
        <default />
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1312</xloc>
      <yloc>949</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 2 5</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>UniqueID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>actual_id</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1328</xloc>
      <yloc>560</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 2 6</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidateID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>actual_candidate_id</rename>
        <default />
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1840</xloc>
      <yloc>2144</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 2 7</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>position-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name />
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>actual_id</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1295</xloc>
      <yloc>1057</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 3</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidateID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>actual_candidate_id</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1856</xloc>
      <yloc>208</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 3 2</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name />
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>id</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1840</xloc>
      <yloc>880</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 4</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>actual_candidate_id</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1840</xloc>
      <yloc>1088</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 5</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidateID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>actual_id</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1792</xloc>
      <yloc>1216</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 3</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>CanExternalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name />
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>id</rename>
        <default />
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1840</xloc>
      <yloc>944</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 4</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>CanExternalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name />
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>id</rename>
        <default />
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1840</xloc>
      <yloc>1008</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup Job</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>externalid</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>actual_id</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1328</xloc>
      <yloc>64</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>FacebookURL</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>--Inject Marital Status: maritalstatus = maritalStatus
--select concat('NJF',intCandidateId) as CanExternalId,
-- case 
--	 when tintMaritalStatusId = 102 then 1
--	 when tintMaritalStatusId = 101 then 2
--	 when tintMaritalStatusId = 103 then 3
--	 when tintMaritalStatusId = 104 then 7
--	 when tintMaritalStatusId = 105 then 4
--	 else '' end as maritalStatus
--from dCandidate c left join dPerson p on c.intPersonId = p.intPersonId
--where tintMaritalStatusId &lt;&gt;0
--and c.intCandidateId in (select intCandidateId from temp_Can)
--(48445,31880,44007,15490,44296,16796,38402,44798,44982,38455,15944,45834,45826,10987,22607,11200,52754,53354,19816,40589,44976,45050,44823,3334,44314,45794,22999,51044,2732,52304,44988)

--Inject Xing URL: xing = XingURL
--select concat('NJF',intCandidateId) as CanExternalId, C.intpersonid, p.vchXingUrl as XingURL
--from dCandidate c left join dPerson p on c.intPersonId = p.intPersonId
--where vchXingUrl &lt;&gt; ''
--and c.intCandidateId in (select intCandidateId from temp_Can)

--Inject Facebook URL: facebook = FacebookURL
select concat('NJFS',intCandidateId) as CanExternalId, C.intpersonid, replace(p.vchFacebookProfileUrl,',','') as FacebookURL
from dCandidate c left join dPerson p on c.intPersonId = p.intPersonId
where vchFacebookProfileUrl &lt;&gt; ''
--and c.intCandidateId in (select intCandidateId from temp_Can)

--Inject Twitter URL: twitter = TwitterURL
--select concat('NJF',intCandidateId) as CanExternalId, C.intpersonid, iif(p.vchTwitterProfileUrl like '%twitter.com%', p.vchTwitterProfileUrl, '') as TwitterURL
--from dCandidate c left join dPerson p on c.intPersonId = p.intPersonId
--where iif(p.vchTwitterProfileUrl like '%twitter.com%', p.vchTwitterProfileUrl, '') &lt;&gt; ''</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>Y</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1680</xloc>
      <yloc>944</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Gross annual salary</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>with ContactMaxID as (select 
case when ct.intCompanyId is NULL then '9999999'
else ct.intCompanyId end as CompanyId
, max(intCompanyTierContactId) as ContactMaxID 
from lCompanyTierContact ctc left join dCompanyTier ct on ctc.intCompanyTierId = ct.intCompanyTierId
group by intCompanyId)

, tempJobOwner as (select cj.*, u.vchEmail, ROW_NUMBER() OVER(PARTITION BY intJobId ORDER BY intConsultantId ASC) AS rn
 from lConsultantJob cj left join dUser u on cj.intConsultantId = u.intUserId)

, jobOwner as (SELECT intJobId, 
     STUFF(
         (SELECT ',' + vchEmail
          from  tempJobOwner
          WHERE intJobId =jo.intJobId
    order by intJobId asc
          FOR XML PATH (''), TYPE).value('.', 'nvarchar(MAX)')
          ,1,1, '')  AS jobOwner
FROM tempJobOwner as jo
GROUP BY jo.intJobId)

----------------Get all events of a job to a comment
, tempEvents as (select intJobId, ej.intEventId, sdtEventDate, vchShortname, vchEventDetail, vchEventActionName
from lEventJob ej left join dEvent e on ej.intEventId = e.intEventId
				  left join dUser u on e.intLoggedById = u.intUserId
				  left join svw_EventAction sea on e.sintEventActionId = sea.sintEventActionId)

, JobEvents as (select intJobId,
STUFF(
         (SELECT '&lt;hr>' + 'Event Date: ' + convert(varchar(20),sdtEventDate,120) + char(10) + 'Logged By: ' + vchShortname + char(10)
		  + coalesce('Action: ' + vchEventActionName + char(10), '')
		  + iif(vchEventDetail = '' or vchEventDetail is null,'',concat('Event Detail: ',char(10),vchEventDetail))
          from  tempEvents
          WHERE intJobId = te.intJobId
		  order by sdtEventDate desc
          FOR XML PATH (''),TYPE).value('.','nvarchar(MAX)')
          , 1, 4, '')  AS eventComment
FROM tempEvents as te
GROUP BY te.intJobId)

, combinedJobLocation as (select j.intJobId
	, Stuff(
			  Coalesce(' ' + NULLIF(ltrim(rtrim(vchAddressLine1)), ''), '')
			+ Coalesce(', ' + NULLIF(ltrim(rtrim(vchAddressLine2)), ''), '')
			+ Coalesce(', ' + NULLIF(ltrim(rtrim(vchAddressLine3)), ''), '')
			+ Coalesce(', ' + NULLIF(ltrim(rtrim(vchTown)), ''), '')
			+ Coalesce(', ' + NULLIF(ltrim(rtrim(vchCounty)), ''), '')
			+ Coalesce(', ' + NULLIF(rc.vchCountryName, ''), '')
			+ Coalesce(', ' + NULLIF(ltrim(rtrim(vchPostCode)), ''), '')
			, 1, 1, '') as 'jobLocation'
from dJob j left join dJobLocation jl on j.intJobId = jl.intJobId
			left join refCountry rc on jl.sintCountryId = rc.sintCountryId)

--, tempJobAttachment as(
--SELECT intJobId, aj.intAttachmentId, ROW_NUMBER() OVER(PARTITION BY intJobId ORDER BY aj.intAttachmentId ASC) AS rn,
--		 concat(aj.intAttachmentId,'_', 
--		 iif(right(vchAttachmentName,4)=vchFileType or right(vchAttachmentName,5)=vchFileType,replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(left(vchAttachmentName,220),'?',''),' ','_'),'/','.'),'''',''),',','_'),'*','~'),'"','^'),'\',''),'|',''),':','_'),char(10),''),char(13),''),'>',']'),'&lt;','['),char(9),'_')
--		 , concat(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(left(vchAttachmentName,220),'?',''),' ','_'),'/','.'),'''',''),',','_'),'*','~'),'"','^'),'\',''),'|',''),':','_'),char(10),''),char(13),''),'>',']'),'&lt;','['),char(9),'_'), vchFileType)))
--		 as attachmentName
--from lAttachmentJob aj left join dAttachment a on aj.intAttachmentId = a.intAttachmentId
--where vchFileType not in ('.mp4'))
--Because the file name of the msg file is not followed this format so we have to use the file name from the actual msg file

, tempJobAttachment as(
SELECT intJobId, aj.intAttachmentId--, ROW_NUMBER() OVER(PARTITION BY intJobId ORDER BY aj.intAttachmentId ASC) AS rn
	,case when vchFileType like '.eml' then null --e.msgfilename  
		 else
		 concat(aj.intAttachmentId,'_', 
		 iif(right(vchAttachmentName,4)=vchFileType or right(vchAttachmentName,5)=vchFileType,replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(left(vchAttachmentName,220),'?',''),' ','_'),'/','.'),'''',''),',','_'),'*','~'),'"','^'),'\',''),'|',''),':','_'),char(10),''),char(13),''),'>',']'),'&lt;','['),char(9),'_')
		 , concat(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(left(vchAttachmentName,220),'?',''),' ','_'),'/','.'),'''',''),',','_'),'*','~'),'"','^'),'\',''),'|',''),':','_'),char(10),''),char(13),''),'>',']'),'&lt;','['),char(9),'_'), vchFileType)))
		 end as attachmentName
from lAttachmentJob aj left join dAttachment a on aj.intAttachmentId = a.intAttachmentId
						--left join email e on a.intAttachmentId = e.AttachmentID
where vchFileType not in ('.mp4')
/*union
select ej.intJobId, ae.intAttachmentId , null --, em.msgfilename as attachmentName
from lEventJob ej left join dEvent e on ej.intEventId = e.intEventId
				left join lAttachmentEvent ae on ej.intEventId = ae.intEventId
				left join dAttachment a on ae.intAttachmentId = a.intAttachmentId
				--left join email em on ae.intAttachmentId = em.AttachmentID
				left join dUser u on ej.intInsertedById = u.intUserId
				left join dPerson p1 on u.intPersonId = p1.intPersonId
where em.AttachmentID is not null*/
)

, jobAttachment as (SELECT intJobId, 
     STUFF(
         (SELECT ',' + replace(attachmentName,'%','_')
          from  tempJobAttachment
          WHERE intJobId =ja.intJobId
    order by intJobId asc
          FOR XML PATH (''), TYPE).value('.', 'nvarchar(MAX)')
          ,1,1, '')  AS jobAttachments
FROM tempJobAttachment as ja
GROUP BY ja.intJobId)
--select top 100 * from jobAttachment


--DUPLICATE JOB
, dup as (SELECT intJobId, vchClientJobTitle, ROW_NUMBER() OVER(PARTITION BY vchClientJobTitle ORDER BY intJobId ASC) AS rn 
FROM dJob)

--select * from ContactMaxID order by CompanyId

--MAIN SCRIPT
--insert into importJob
select 
case 
	when (ctc.intCompanyTierContactId = '' or ctc.intCompanyTierContactId is NULL) and j.intCompanyId in (select CompanyId from ContactMaxID) then concat('NJFS',cm.ContactMaxID)
	when (ctc.intCompanyTierContactId = '' or ctc.intCompanyTierContactId is NULL) and j.intCompanyId not in (select CompanyID from ContactMaxID) then 'NJFS9999999'
	when ctc.intCompanyTierContactId is NULL and j.intCompanyId is NULL then 'NJFS9999999'
	else concat('NJFS',ctc.intCompanyTierContactId) end as 'position-contactId'
, j.intCompanyId as 'CompanyID'
, j.intMainContactId as 'MainContactId'
, ctc.intCompanyTierContactId as 'ContactID'
, concat('NJFS',j.intJobId) as 'position-externalId'
--, j.vchClientJobTitle as 'position-title(old)'
, iif(dup.rn > 1
	, iif(dup.vchClientJobTitle = '' or dup.vchClientJobTitle is NULL,concat('Job title - ID ',dup.intJobId),concat(dup.vchClientJobTitle,' - ', dup.intJobId))
	, iif(j.vchClientJobTitle = '' or j.vchClientJobTitle is null,concat ('Job title - ID ',j.intJobId),j.vchClientJobTitle)) as 'position-title'

, iif(j.tintJobType = 0 or j.tintJobType = 1, 'PERMANENT','CONTRACT') as 'position-type'

, j.datStartDate as 'position-startDate'
       --, decPackageMinSalary
       --, decPackageMaxSalary
--, decOTEMinSalary
--, decOTEMaxSalary
--, tintSalaryIntervalId
--, decMinSalaryFee
--, decMaxSalaryFee
--, decMinSalaryFeePercentage
--, decMaxSalaryFeePercentage
       --, decCapFeeAt
       --, decRateFeePercentage
       --, decMinRateFee
       --, decMaxRateFee
--, iif(j.decBasicMinSalary is NULL,'',concat('Salary Min: ',j.decBasicMinSalary,char(10),char(10)))
--, iif(j.decBasicMaxSalary is NULL,'',concat('Salary Max: ',j.decBasicMaxSalary,char(10),char(10)))
--, iif(j.decMinSalaryFeePercentage is NULL,'',concat('Fee % Min: ',j.decMinSalaryFeePercentage,char(10),char(10)))
, 1 as 'use_quick_fee_forecast'
, convert(float, iif(j.decMaxSalaryFeePercentage is NULL,'',j.decMaxSalaryFeePercentage) ) as 'percentage_of_annual_salary' --'Use Quick Fee Forecast'
--, j.decSalaryFeePercentage
--, iif(j.decMinSalaryFee is NULL,'',concat('Fee Value Min: ',j.decMinSalaryFee,char(10),char(10))) as 'Compensation SALARY FROM'
, convert(float, iif(j.decMaxSalaryFee is NULL,'',j.decMaxSalaryFee) ) as 'gross_annual_salary - pay_rate' -- 'Compensation SALARY TO'
-- select count(*) --1502 -- select distinct intCandidateReportsToId --datStartDate --tintJobStatusId, decBasicMinSalary, decBasicMaxSalary -- select distinct j.tintJobStatusId as 'Custom Field > Job Status' -->> dbo.refJobStatus -- select *
from dJob j left join ContactMaxID cm on j.intCompanyId = cm.CompanyId
			left join dup on j.intJobId = dup.intJobId
			left join lCompanyTierContact ctc on j.intMainContactId = ctc.intContactId and j.intMainContactCompanyTierId = ctc.intCompanyTierId
			left join refCurrency rc on j.tintPayCurrencyId = rc.tintCurrencyId
			left join jobOwner jo on j.intJobId = jo.intJobId
			left join jobOwner jo2 on j.intCandidateReportsToId = jo2.intJobId -- Reports To
			left join refJobStatus rjs on j.tintJobStatusId = rjs.tintJobStatusId
			left join JobEvents je on j.intJobId = je.intJobId
			left join combinedJobLocation jl on j.intJobId = jl.intJobId
			left join jobAttachment ja on j.intJobId = ja.intJobId
			left join dCompany com on j.intCompanyId = com.intCompanyId
--where j.decMinSalaryFee > j.decMaxSalaryFee
where j.tintJobType in (0,1)
;


--use_quick_fee_forecast	percentage_of_annual_salary	gross_annual_salary	pay_rate
--1	77.0	5290.0	5290.0
</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2304</xloc>
      <yloc>80</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Gross annual salary 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>with ContactMaxID as (select 
case when ct.intCompanyId is NULL then '9999999'
else ct.intCompanyId end as CompanyId
, max(intCompanyTierContactId) as ContactMaxID 
from lCompanyTierContact ctc left join dCompanyTier ct on ctc.intCompanyTierId = ct.intCompanyTierId
group by intCompanyId)

, tempJobOwner as (select cj.*, u.vchEmail, ROW_NUMBER() OVER(PARTITION BY intJobId ORDER BY intConsultantId ASC) AS rn
 from lConsultantJob cj left join dUser u on cj.intConsultantId = u.intUserId)

, jobOwner as (SELECT intJobId, 
     STUFF(
         (SELECT ',' + vchEmail
          from  tempJobOwner
          WHERE intJobId =jo.intJobId
    order by intJobId asc
          FOR XML PATH (''), TYPE).value('.', 'nvarchar(MAX)')
          ,1,1, '')  AS jobOwner
FROM tempJobOwner as jo
GROUP BY jo.intJobId)

----------------Get all events of a job to a comment
, tempEvents as (select intJobId, ej.intEventId, sdtEventDate, vchShortname, vchEventDetail, vchEventActionName
from lEventJob ej left join dEvent e on ej.intEventId = e.intEventId
				  left join dUser u on e.intLoggedById = u.intUserId
				  left join svw_EventAction sea on e.sintEventActionId = sea.sintEventActionId)

, JobEvents as (select intJobId,
STUFF(
         (SELECT '&lt;hr>' + 'Event Date: ' + convert(varchar(20),sdtEventDate,120) + char(10) + 'Logged By: ' + vchShortname + char(10)
		  + coalesce('Action: ' + vchEventActionName + char(10), '')
		  + iif(vchEventDetail = '' or vchEventDetail is null,'',concat('Event Detail: ',char(10),vchEventDetail))
          from  tempEvents
          WHERE intJobId = te.intJobId
		  order by sdtEventDate desc
          FOR XML PATH (''),TYPE).value('.','nvarchar(MAX)')
          , 1, 4, '')  AS eventComment
FROM tempEvents as te
GROUP BY te.intJobId)

, combinedJobLocation as (select j.intJobId
	, Stuff(
			  Coalesce(' ' + NULLIF(ltrim(rtrim(vchAddressLine1)), ''), '')
			+ Coalesce(', ' + NULLIF(ltrim(rtrim(vchAddressLine2)), ''), '')
			+ Coalesce(', ' + NULLIF(ltrim(rtrim(vchAddressLine3)), ''), '')
			+ Coalesce(', ' + NULLIF(ltrim(rtrim(vchTown)), ''), '')
			+ Coalesce(', ' + NULLIF(ltrim(rtrim(vchCounty)), ''), '')
			+ Coalesce(', ' + NULLIF(rc.vchCountryName, ''), '')
			+ Coalesce(', ' + NULLIF(ltrim(rtrim(vchPostCode)), ''), '')
			, 1, 1, '') as 'jobLocation'
from dJob j left join dJobLocation jl on j.intJobId = jl.intJobId
			left join refCountry rc on jl.sintCountryId = rc.sintCountryId)

--, tempJobAttachment as(
--SELECT intJobId, aj.intAttachmentId, ROW_NUMBER() OVER(PARTITION BY intJobId ORDER BY aj.intAttachmentId ASC) AS rn,
--		 concat(aj.intAttachmentId,'_', 
--		 iif(right(vchAttachmentName,4)=vchFileType or right(vchAttachmentName,5)=vchFileType,replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(left(vchAttachmentName,220),'?',''),' ','_'),'/','.'),'''',''),',','_'),'*','~'),'"','^'),'\',''),'|',''),':','_'),char(10),''),char(13),''),'>',']'),'&lt;','['),char(9),'_')
--		 , concat(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(left(vchAttachmentName,220),'?',''),' ','_'),'/','.'),'''',''),',','_'),'*','~'),'"','^'),'\',''),'|',''),':','_'),char(10),''),char(13),''),'>',']'),'&lt;','['),char(9),'_'), vchFileType)))
--		 as attachmentName
--from lAttachmentJob aj left join dAttachment a on aj.intAttachmentId = a.intAttachmentId
--where vchFileType not in ('.mp4'))
--Because the file name of the msg file is not followed this format so we have to use the file name from the actual msg file

, tempJobAttachment as(
SELECT intJobId, aj.intAttachmentId--, ROW_NUMBER() OVER(PARTITION BY intJobId ORDER BY aj.intAttachmentId ASC) AS rn
	,case when vchFileType like '.eml' then null --e.msgfilename  
		 else
		 concat(aj.intAttachmentId,'_', 
		 iif(right(vchAttachmentName,4)=vchFileType or right(vchAttachmentName,5)=vchFileType,replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(left(vchAttachmentName,220),'?',''),' ','_'),'/','.'),'''',''),',','_'),'*','~'),'"','^'),'\',''),'|',''),':','_'),char(10),''),char(13),''),'>',']'),'&lt;','['),char(9),'_')
		 , concat(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(left(vchAttachmentName,220),'?',''),' ','_'),'/','.'),'''',''),',','_'),'*','~'),'"','^'),'\',''),'|',''),':','_'),char(10),''),char(13),''),'>',']'),'&lt;','['),char(9),'_'), vchFileType)))
		 end as attachmentName
from lAttachmentJob aj left join dAttachment a on aj.intAttachmentId = a.intAttachmentId
						--left join email e on a.intAttachmentId = e.AttachmentID
where vchFileType not in ('.mp4')
/*union
select ej.intJobId, ae.intAttachmentId , null --, em.msgfilename as attachmentName
from lEventJob ej left join dEvent e on ej.intEventId = e.intEventId
				left join lAttachmentEvent ae on ej.intEventId = ae.intEventId
				left join dAttachment a on ae.intAttachmentId = a.intAttachmentId
				--left join email em on ae.intAttachmentId = em.AttachmentID
				left join dUser u on ej.intInsertedById = u.intUserId
				left join dPerson p1 on u.intPersonId = p1.intPersonId
where em.AttachmentID is not null*/
)

, jobAttachment as (SELECT intJobId, 
     STUFF(
         (SELECT ',' + replace(attachmentName,'%','_')
          from  tempJobAttachment
          WHERE intJobId =ja.intJobId
    order by intJobId asc
          FOR XML PATH (''), TYPE).value('.', 'nvarchar(MAX)')
          ,1,1, '')  AS jobAttachments
FROM tempJobAttachment as ja
GROUP BY ja.intJobId)
--select top 100 * from jobAttachment


--DUPLICATE JOB
, dup as (SELECT intJobId, vchClientJobTitle, ROW_NUMBER() OVER(PARTITION BY vchClientJobTitle ORDER BY intJobId ASC) AS rn 
FROM dJob)

--select * from ContactMaxID order by CompanyId

--MAIN SCRIPT
--insert into importJob
select 
case 
	when (ctc.intCompanyTierContactId = '' or ctc.intCompanyTierContactId is NULL) and j.intCompanyId in (select CompanyId from ContactMaxID) then concat('NJFS',cm.ContactMaxID)
	when (ctc.intCompanyTierContactId = '' or ctc.intCompanyTierContactId is NULL) and j.intCompanyId not in (select CompanyID from ContactMaxID) then 'NJFS9999999'
	when ctc.intCompanyTierContactId is NULL and j.intCompanyId is NULL then 'NJFS9999999'
	else concat('NJFS',ctc.intCompanyTierContactId) end as 'position-contactId'
, j.intCompanyId as 'CompanyID'
, j.intMainContactId as 'MainContactId'
, ctc.intCompanyTierContactId as 'ContactID'
, concat('NJFS',j.intJobId) as 'position-externalId'
--, j.vchClientJobTitle as 'position-title(old)'
, iif(dup.rn > 1
	, iif(dup.vchClientJobTitle = '' or dup.vchClientJobTitle is NULL,concat('Job title - ID ',dup.intJobId),concat(dup.vchClientJobTitle,' - ', dup.intJobId))
	, iif(j.vchClientJobTitle = '' or j.vchClientJobTitle is null,concat ('Job title - ID ',j.intJobId),j.vchClientJobTitle)) as 'position-title'

, iif(j.tintJobType = 0 or j.tintJobType = 1, 'PERMANENT','CONTRACT') as 'position-type'

, j.datStartDate as 'position-startDate'
       --, decPackageMinSalary
       --, decPackageMaxSalary
--, decOTEMinSalary
--, decOTEMaxSalary
--, tintSalaryIntervalId
--, decMinSalaryFee
--, decMaxSalaryFee
--, decMinSalaryFeePercentage
--, decMaxSalaryFeePercentage
       --, decCapFeeAt
       --, decRateFeePercentage
       --, decMinRateFee
       --, decMaxRateFee
--, iif(j.decBasicMinSalary is NULL,'',concat('Salary Min: ',j.decBasicMinSalary,char(10),char(10)))
--, iif(j.decBasicMaxSalary is NULL,'',concat('Salary Max: ',j.decBasicMaxSalary,char(10),char(10)))
--, iif(j.decMinSalaryFeePercentage is NULL,'',concat('Fee % Min: ',j.decMinSalaryFeePercentage,char(10),char(10)))
, 1 as 'use_quick_fee_forecast'
, convert(float, iif(j.decMaxSalaryFeePercentage is NULL,'',j.decMaxSalaryFeePercentage) ) as 'percentage_of_annual_salary' --'Use Quick Fee Forecast'
--, j.decSalaryFeePercentage
--, iif(j.decMinSalaryFee is NULL,'',concat('Fee Value Min: ',j.decMinSalaryFee,char(10),char(10))) as 'Compensation SALARY FROM'
, convert(float, iif(j.decMaxSalaryFee is NULL,'',j.decMaxSalaryFee) ) as 'gross_annual_salary - pay_rate' -- 'Compensation SALARY TO'
-- select count(*) --1502 -- select distinct intCandidateReportsToId --datStartDate --tintJobStatusId, decBasicMinSalary, decBasicMaxSalary -- select distinct j.tintJobStatusId as 'Custom Field > Job Status' -->> dbo.refJobStatus -- select *
from dJob j left join ContactMaxID cm on j.intCompanyId = cm.CompanyId
			left join dup on j.intJobId = dup.intJobId
			left join lCompanyTierContact ctc on j.intMainContactId = ctc.intContactId and j.intMainContactCompanyTierId = ctc.intCompanyTierId
			left join refCurrency rc on j.tintPayCurrencyId = rc.tintCurrencyId
			left join jobOwner jo on j.intJobId = jo.intJobId
			left join jobOwner jo2 on j.intCandidateReportsToId = jo2.intJobId -- Reports To
			left join refJobStatus rjs on j.tintJobStatusId = rjs.tintJobStatusId
			left join JobEvents je on j.intJobId = je.intJobId
			left join combinedJobLocation jl on j.intJobId = jl.intJobId
			left join jobAttachment ja on j.intJobId = ja.intJobId
			left join dCompany com on j.intCompanyId = com.intCompanyId
--where j.decMinSalaryFee > j.decMaxSalaryFee
where j.tintJobType in (0,1)
;


--use_quick_fee_forecast	percentage_of_annual_salary	gross_annual_salary	pay_rate
--1	77.0	5290.0	5290.0
</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2304</xloc>
      <yloc>160</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>company_location</table>
      <key>
        <name>VCID</name>
        <field>company_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>longitude</name>
        <rename>Longitude</rename>
        <update>Y</update>
      </value>
      <value>
        <name>latitude</name>
        <rename>Latitude</rename>
        <update>Y</update>
      </value>
      <value>
        <name>note</name>
        <rename>Location > Note</rename>
        <update>Y</update>
      </value>
      <value>
        <name>phone_number</name>
        <rename>Location > Phone number</rename>
        <update>Y</update>
      </value>
      <value>
        <name>company_id</name>
        <rename>VCID</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>272</xloc>
      <yloc>434</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update - Contact Comment</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>activity</table>
      <key>
        <name>actual_contactid</name>
        <field>contact_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>content</name>
        <field>content</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>insert_timestamp</name>
        <field>insert_timestamp</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>contact_id</name>
        <rename>actual_contactid</rename>
        <update>Y</update>
      </value>
      <value>
        <name>user_account_id</name>
        <rename>user_account_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>content</name>
        <rename>content</rename>
        <update>Y</update>
      </value>
      <value>
        <name>type</name>
        <rename>type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>category</name>
        <rename>category</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>960</xloc>
      <yloc>64</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update - Contact Location</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>common_location</table>
      <key>
        <name>contact-externalId</name>
        <field>tmp_externalid</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>state</name>
        <rename>state</rename>
        <update>Y</update>
      </value>
      <value>
        <name>city</name>
        <rename>city</rename>
        <update>Y</update>
      </value>
      <value>
        <name>post_code</name>
        <rename>post_code</rename>
        <update>Y</update>
      </value>
      <value>
        <name>country_code</name>
        <rename>country_code</rename>
        <update>Y</update>
      </value>
      <value>
        <name>address</name>
        <rename>address</rename>
        <update>Y</update>
      </value>
      <value>
        <name>location_name</name>
        <rename>address</rename>
        <update>Y</update>
      </value>
      <value>
        <name>tmp_externalid</name>
        <rename>contact-externalId</rename>
        <update>N</update>
      </value>
      <value>
        <name>longitude</name>
        <rename>Longitude</rename>
        <update>Y</update>
      </value>
      <value>
        <name>latitude</name>
        <rename>Latitude</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>816</xloc>
      <yloc>224</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update 2</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>id</name>
        <field>id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>maritalstatus</name>
        <rename>maritalStatus</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2000</xloc>
      <yloc>816</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update 2 2</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>candidate_functional_expertise</table>
      <key>
        <name>final_candidate_id</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>feid</name>
        <field>functional_expertise_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>candidate_id</name>
        <rename>final_candidate_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>functional_expertise_id</name>
        <rename>feid</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1920</xloc>
      <yloc>1520</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update 2 2 2</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>candidate_functional_expertise</table>
      <key>
        <name>final_candidate_id</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>feid</name>
        <field>functional_expertise_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>final_sfe_id</name>
        <field>sub_functional_expertise_id</field>
        <condition>= ~NULL</condition>
        <name2 />
      </key>
      <value>
        <name>candidate_id</name>
        <rename>final_candidate_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>functional_expertise_id</name>
        <rename>feid</rename>
        <update>Y</update>
      </value>
      <value>
        <name>sub_functional_expertise_id</name>
        <rename>final_sfe_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2016</xloc>
      <yloc>1584</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update 2 2 2 2</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>compensation</table>
      <key>
        <name>Job_VincereID</name>
        <field>position_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>contract_rate_from</name>
        <rename>PayRateFrom</rename>
        <update>Y</update>
      </value>
      <value>
        <name>contract_rate_to</name>
        <rename>PayRateTo</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1504</xloc>
      <yloc>480</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update 2 2 2 2 2</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>common_location</table>
      <key>
        <name>contact-externalId</name>
        <field>tmp_externalid</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>state</name>
        <rename>state</rename>
        <update>Y</update>
      </value>
      <value>
        <name>city</name>
        <rename>city</rename>
        <update>Y</update>
      </value>
      <value>
        <name>post_code</name>
        <rename>post_code</rename>
        <update>Y</update>
      </value>
      <value>
        <name>country_code</name>
        <rename>country_code</rename>
        <update>Y</update>
      </value>
      <value>
        <name>address</name>
        <rename>address</rename>
        <update>Y</update>
      </value>
      <value>
        <name>location_name</name>
        <rename>locationName</rename>
        <update>Y</update>
      </value>
      <value>
        <name>tmp_externalid</name>
        <rename>contact-externalId</rename>
        <update>N</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>928</xloc>
      <yloc>528</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update 2 2 2 2 2 2</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>common_location</table>
      <key>
        <name>contact-externalId</name>
        <field>tmp_externalid</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>state</name>
        <rename>state</rename>
        <update>Y</update>
      </value>
      <value>
        <name>city</name>
        <rename>city</rename>
        <update>Y</update>
      </value>
      <value>
        <name>post_code</name>
        <rename>post_code</rename>
        <update>Y</update>
      </value>
      <value>
        <name>country_code</name>
        <rename>country_code</rename>
        <update>Y</update>
      </value>
      <value>
        <name>address</name>
        <rename>address</rename>
        <update>Y</update>
      </value>
      <value>
        <name>location_name</name>
        <rename>locationName</rename>
        <update>Y</update>
      </value>
      <value>
        <name>tmp_externalid</name>
        <rename>contact-externalId</rename>
        <update>N</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1981</xloc>
      <yloc>2236</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update 2 2 2 2 3</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>compensation</table>
      <key>
        <name>Job_VincereID</name>
        <field>position_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>contract_rate_from</name>
        <rename>PayRateFrom</rename>
        <update>Y</update>
      </value>
      <value>
        <name>contract_rate_to</name>
        <rename>PayRateTo</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1488</xloc>
      <yloc>949</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update 2 3</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <key>
        <name>actual_id</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>position_description_id</name>
        <rename>actual_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>annual_salary_from</name>
        <rename>FromSalary</rename>
        <update>Y</update>
      </value>
      <value>
        <name>annual_salary_to</name>
        <rename>ToSalary</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1488</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update 2 3 2</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>activity</table>
      <key>
        <name>actual_candidateid</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>content</name>
        <field>content</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>insert_timestamp</name>
        <field>insert_timestamp</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>candidate_id</name>
        <rename>actual_candidateid</rename>
        <update>N</update>
      </value>
      <value>
        <name>user_account_id</name>
        <rename>user_account_id</rename>
        <update>N</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>N</update>
      </value>
      <value>
        <name>content</name>
        <rename>content</rename>
        <update>N</update>
      </value>
      <value>
        <name>type</name>
        <rename>type</rename>
        <update>N</update>
      </value>
      <value>
        <name>category</name>
        <rename>category</rename>
        <update>N</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2000</xloc>
      <yloc>272</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update 2 3 3</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <key>
        <name>actual_id</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>position_description_id</name>
        <rename>actual_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>annual_salary_from</name>
        <rename>FromSalary</rename>
        <update>Y</update>
      </value>
      <value>
        <name>annual_salary_to</name>
        <rename>ToSalary</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1455</xloc>
      <yloc>1057</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update 2 4</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>candidate_note</table>
      <key>
        <name>actual_candidate_id</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>note2</name>
        <field>note</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>title</name>
        <field>title</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>candidate_id</name>
        <rename>actual_candidate_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>title</name>
        <rename>title</rename>
        <update>Y</update>
      </value>
      <value>
        <name>note</name>
        <rename>note2</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2000</xloc>
      <yloc>112</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update 2 5</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>position_description_functional_expertise</table>
      <key>
        <name>actual_id</name>
        <field>position_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>fe</name>
        <field>functional_expertise_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>position_id</name>
        <rename>actual_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>functional_expertise_id</name>
        <rename>fe</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1488</xloc>
      <yloc>560</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update 3</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>candidate_functional_expertise</table>
      <key>
        <name>final_candidate_id</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>fe</name>
        <field>functional_expertise_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>candidate_id</name>
        <rename>final_candidate_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>functional_expertise_id</name>
        <rename>fe</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1936</xloc>
      <yloc>1744</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update Activity</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>activity</table>
      <key>
        <name>actual_candidate_id</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>content</name>
        <field>content</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>insert_timestamp</name>
        <field>insert_timestamp</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>candidate_id</name>
        <rename>actual_candidate_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>user_account_id</name>
        <rename>user_account_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>content</name>
        <rename>content</rename>
        <update>Y</update>
      </value>
      <value>
        <name>type</name>
        <rename>type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>category</name>
        <rename>category</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2000</xloc>
      <yloc>208</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update Company Comment</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>activity</table>
      <key>
        <name>actual_id</name>
        <field>company_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>content</name>
        <field>content</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>insert_timestamp</name>
        <field>insert_timestamp</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>company_id</name>
        <rename>actual_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>user_account_id</name>
        <rename>user_account_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>content</name>
        <rename>content</rename>
        <update>Y</update>
      </value>
      <value>
        <name>type</name>
        <rename>type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>category</name>
        <rename>category</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>400</xloc>
      <yloc>64</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update Compensation</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>compensation</table>
      <key>
        <name>Job_VincereID</name>
        <field>position_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>contract_rate_from</name>
        <rename>PayRateFrom</rename>
        <update>Y</update>
      </value>
      <value>
        <name>contract_rate_to</name>
        <rename>PayRateTo</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1504</xloc>
      <yloc>240</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update FacebookURL</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>id</name>
        <field>id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>facebook</name>
        <rename>FacebookURL</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2000</xloc>
      <yloc>944</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update Job Comment</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>activity</table>
      <key>
        <name>actual_id</name>
        <field>position_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>content</name>
        <field>content</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>insert_timestamp</name>
        <field>insert_timestamp</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>position_id</name>
        <rename>actual_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>user_account_id</name>
        <rename>user_account_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>content</name>
        <rename>content</rename>
        <update>Y</update>
      </value>
      <value>
        <name>type</name>
        <rename>type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>category</name>
        <rename>category</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1488</xloc>
      <yloc>64</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update TwitterURL</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>id</name>
        <field>id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>twitter</name>
        <rename>TwitterURL</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2000</xloc>
      <yloc>1008</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update XingURL</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>id</name>
        <field>id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>xing</name>
        <rename>XingURL</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2000</xloc>
      <yloc>880</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert FE</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>SELECT 'Accounting &amp; Finance' as name, current_timestamp as insert_timestamp
UNION SELECT 'Banking', current_timestamp
UNION SELECT 'Commercial Planning', current_timestamp
UNION SELECT 'Fundraising', current_timestamp
UNION SELECT 'General Manager', current_timestamp
UNION SELECT 'HR', current_timestamp
UNION SELECT 'Insurance', current_timestamp
UNION SELECT 'IT Knowledge', current_timestamp
UNION SELECT 'IT &amp; T', current_timestamp
UNION SELECT 'Job Seniority', current_timestamp
UNION SELECT 'Marketing &amp; Communications', current_timestamp
UNION SELECT 'Media', current_timestamp
UNION SELECT 'Operations', current_timestamp
UNION SELECT 'Administrative', current_timestamp
UNION SELECT 'Procurement', current_timestamp
UNION SELECT 'Sales &amp; BD', current_timestamp
UNION SELECT 'Supply Chain Management', current_timestamp</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1680</xloc>
      <yloc>1280</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert Offer details</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>offer</table>
      <key>
        <name>VCPositionCandidateID</name>
        <field>position_candidate_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>position_candidate_id</name>
        <rename>VCPositionCandidateID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>currency_type</name>
        <rename>VCCurrency</rename>
        <update>Y</update>
      </value>
      <value>
        <name>contract_length</name>
        <rename>contract_length</rename>
        <update>Y</update>
      </value>
      <value>
        <name>contract_rate_from</name>
        <rename>contract_rate_from</rename>
        <update>Y</update>
      </value>
      <value>
        <name>contract_rate_to</name>
        <rename>contract_rate_to</rename>
        <update>Y</update>
      </value>
      <value>
        <name>pay_rate</name>
        <rename>pay_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>working_hour_per_day</name>
        <rename>working_hour_per_day</rename>
        <update>Y</update>
      </value>
      <value>
        <name>working_day_per_week</name>
        <rename>working_day_per_week</rename>
        <update>Y</update>
      </value>
      <value>
        <name>working_day_per_month</name>
        <rename>working_day_per_month</rename>
        <update>Y</update>
      </value>
      <value>
        <name>working_week_per_month</name>
        <rename>working_week_per_month</rename>
        <update>Y</update>
      </value>
      <value>
        <name>annual_paid_holiday_charge_client</name>
        <rename>annual_paid_holiday_charge_client</rename>
        <update>Y</update>
      </value>
      <value>
        <name>annual_paid_sick_day_charge_client</name>
        <rename>annual_paid_sick_day_charge_client</rename>
        <update>Y</update>
      </value>
      <value>
        <name>projected_pay_rate</name>
        <rename>projected_pay_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>projected_charge_rate</name>
        <rename>projected_charge_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>projected_profit</name>
        <rename>projected_profit</rename>
        <update>Y</update>
      </value>
      <value>
        <name>gross_annual_salary</name>
        <rename>gross_annual_salary</rename>
        <update>Y</update>
      </value>
      <value>
        <name>employment_type</name>
        <rename>position_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>payment_amount</name>
        <rename>payment_amount</rename>
        <update>Y</update>
      </value>
      <value>
        <name>present_salary_rate</name>
        <rename>present_salary_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>quick_charge_rate</name>
        <rename>quick_charge_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>quick_charge_rate_updated</name>
        <rename>quick_charge_rate_updated</rename>
        <update>Y</update>
      </value>
      <value>
        <name>profit</name>
        <rename>profit</rename>
        <update>Y</update>
      </value>
      <value>
        <name>margin_percent</name>
        <rename>margin_percent</rename>
        <update>Y</update>
      </value>
      <value>
        <name>markup_percent</name>
        <rename>markup_percent</rename>
        <update>Y</update>
      </value>
      <value>
        <name>charge_rate</name>
        <rename>charge_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>latest_update_date</name>
        <rename>Forward_latest_update_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>latest_user_id</name>
        <rename>Forward_latest_user_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>total_pay_rate</name>
        <rename>total_pay_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>on_cost</name>
        <rename>on_cost</rename>
        <update>Y</update>
      </value>
      <value>
        <name>on_cost_percentage</name>
        <rename>on_cost_percentage</rename>
        <update>Y</update>
      </value>
      <value>
        <name>use_quick_fee_forecast</name>
        <rename>use_quick_fee_forecast</rename>
        <update>Y</update>
      </value>
      <value>
        <name>percentage_of_annual_salary</name>
        <rename>percentage_of_annual_salary</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2944</xloc>
      <yloc>464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert Offer details 2</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>offer</table>
      <key>
        <name>VCPositionCandidateID</name>
        <field>position_candidate_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>position_candidate_id</name>
        <rename>VCPositionCandidateID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>currency_type</name>
        <rename>VCCurrency</rename>
        <update>Y</update>
      </value>
      <value>
        <name>contract_length</name>
        <rename>contract_length</rename>
        <update>Y</update>
      </value>
      <value>
        <name>contract_rate_from</name>
        <rename>contract_rate_from</rename>
        <update>Y</update>
      </value>
      <value>
        <name>contract_rate_to</name>
        <rename>contract_rate_to</rename>
        <update>Y</update>
      </value>
      <value>
        <name>pay_rate</name>
        <rename>pay_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>working_hour_per_day</name>
        <rename>working_hour_per_day</rename>
        <update>Y</update>
      </value>
      <value>
        <name>working_day_per_week</name>
        <rename>working_day_per_week</rename>
        <update>Y</update>
      </value>
      <value>
        <name>working_day_per_month</name>
        <rename>working_day_per_month</rename>
        <update>Y</update>
      </value>
      <value>
        <name>working_week_per_month</name>
        <rename>working_week_per_month</rename>
        <update>Y</update>
      </value>
      <value>
        <name>annual_paid_holiday_charge_client</name>
        <rename>annual_paid_holiday_charge_client</rename>
        <update>Y</update>
      </value>
      <value>
        <name>annual_paid_sick_day_charge_client</name>
        <rename>annual_paid_sick_day_charge_client</rename>
        <update>Y</update>
      </value>
      <value>
        <name>projected_pay_rate</name>
        <rename>projected_pay_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>projected_charge_rate</name>
        <rename>projected_charge_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>projected_profit</name>
        <rename>projected_profit</rename>
        <update>Y</update>
      </value>
      <value>
        <name>gross_annual_salary</name>
        <rename>gross_annual_salary</rename>
        <update>Y</update>
      </value>
      <value>
        <name>employment_type</name>
        <rename>position_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>payment_amount</name>
        <rename>payment_amount</rename>
        <update>Y</update>
      </value>
      <value>
        <name>present_salary_rate</name>
        <rename>present_salary_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>quick_charge_rate</name>
        <rename>quick_charge_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>quick_charge_rate_updated</name>
        <rename>quick_charge_rate_updated</rename>
        <update>Y</update>
      </value>
      <value>
        <name>profit</name>
        <rename>profit</rename>
        <update>Y</update>
      </value>
      <value>
        <name>margin_percent</name>
        <rename>margin_percent</rename>
        <update>Y</update>
      </value>
      <value>
        <name>markup_percent</name>
        <rename>markup_percent</rename>
        <update>Y</update>
      </value>
      <value>
        <name>charge_rate</name>
        <rename>charge_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>latest_update_date</name>
        <rename>Forward_latest_update_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>latest_user_id</name>
        <rename>Forward_latest_user_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>total_pay_rate</name>
        <rename>total_pay_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>on_cost</name>
        <rename>on_cost</rename>
        <update>Y</update>
      </value>
      <value>
        <name>on_cost_percentage</name>
        <rename>on_cost_percentage</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4688</xloc>
      <yloc>99</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert SFE</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>
-- SFE
with t as
(
        SELECT 'Sales &amp; BD' AS FE,'Account mgmt' AS SFE
UNION SELECT 'Banking' AS FE,'Advisory' AS SFE
UNION SELECT 'Media' AS FE,'Affiliate sales' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'AIX' AS SFE
UNION SELECT 'IT&amp;T' AS FE,'Application support' AS SFE
UNION SELECT 'Accounting &amp; Finance' AS FE,'Accounts receivable &amp; Accounts payables' AS SFE
UNION SELECT 'IT&amp;T' AS FE,'Software architect' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'ASP.net' AS SFE
UNION SELECT 'Banking' AS FE,'Asset mgmt ops' AS SFE
UNION SELECT 'Accounting &amp; Finance' AS FE,'Audit &amp; assurance' AS SFE
UNION SELECT 'Banking' AS FE,'Branch ops' AS SFE
UNION SELECT 'IT&amp;T' AS FE,'BCM/BCP' AS SFE
UNION SELECT 'Banking' AS FE,'Bonds/Fixed income' AS SFE
UNION SELECT 'Marketing &amp; Communications' AS FE,'Brand manager' AS SFE
UNION SELECT 'IT&amp;T' AS FE,'Business analyst' AS SFE
UNION SELECT 'Sales &amp; BD' AS FE,'Business development' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'Business Intelligence(BI)' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'Business Objects' AS SFE
UNION SELECT 'Commercial Planning' AS FE,'Business planning' AS SFE
UNION SELECT 'Supply Chain Managment' AS FE,'Business planning / analysis' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'C#' AS SFE
UNION SELECT 'HR' AS FE,'C&amp;B' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'C++' AS SFE
UNION SELECT 'HR' AS FE,'Campus recruitment' AS SFE
UNION SELECT 'Supply Chain Managment' AS FE,'Capacity planning' AS SFE
UNION SELECT 'Accounting &amp; Finance' AS FE,'CFO' AS SFE
UNION SELECT 'HR' AS FE,'Change mgmt/M&amp;A/HR transformation project' AS SFE
UNION SELECT 'IT&amp;T' AS FE,'CIO/CTO' AS SFE
UNION SELECT 'Insurance' AS FE,'Claims processing' AS SFE
UNION SELECT 'Banking' AS FE,'Credit admin/ops' AS SFE
UNION SELECT 'Banking' AS FE,'Wholesale banking ops' AS SFE
UNION SELECT 'Banking' AS FE,'Commodities' AS SFE
UNION SELECT 'Banking' AS FE,'Compliance' AS SFE
UNION SELECT 'Accounting &amp; Finance' AS FE,'Consolidation' AS SFE
UNION SELECT 'Banking' AS FE,'Retail banking ops' AS SFE
UNION SELECT 'Marketing &amp; Communications' AS FE,'Content' AS SFE
UNION SELECT 'Marketing &amp; Communications' AS FE,'Corp comms' AS SFE
UNION SELECT 'Banking' AS FE,'Wholesale banking ops' AS SFE
UNION SELECT 'Accounting &amp; Finance' AS FE,'Corporate finance' AS SFE
UNION SELECT 'Accounting &amp; Finance' AS FE,'Costing' AS SFE
UNION SELECT 'Accounting &amp; Finance' AS FE,'Credit control' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'CRM software' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'Crystal reports' AS SFE
UNION SELECT 'Banking' AS FE,'Custody &amp; settlements' AS SFE
UNION SELECT 'Supply Chain Managment' AS FE,'Customer service' AS SFE
UNION SELECT 'Supply Chain Managment' AS FE,'Data analytics' AS SFE
UNION SELECT 'IT&amp;T' AS FE,'Data centre ops' AS SFE
UNION SELECT 'Marketing &amp; Communications' AS FE,'Data marketing' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'Data warehouse' AS SFE
UNION SELECT 'IT&amp;T' AS FE,'Database administrator' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'Data mining' AS SFE
UNION SELECT 'Supply Chain Managment' AS FE,'Demand planning' AS SFE
UNION SELECT 'Banking' AS FE,'Derivatives' AS SFE
UNION SELECT 'IT&amp;T' AS FE,'Software developer' AS SFE
UNION SELECT 'Marketing &amp; Communications' AS FE,'Digital marketing' AS SFE
UNION SELECT 'Procurement' AS FE,'Direct purchasing' AS SFE
UNION SELECT 'Accounting &amp; Finance' AS FE,'Direct tax' AS SFE
UNION SELECT 'Insurance' AS FE,'Distribution' AS SFE
UNION SELECT 'HR' AS FE,'Diversity' AS SFE
UNION SELECT 'IT&amp;T' AS FE,'eCommerce' AS SFE
UNION SELECT 'HR' AS FE,'Employee communications' AS SFE
UNION SELECT 'HR' AS FE,'Employee relations' AS SFE
UNION SELECT 'Banking' AS FE,'Equities' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'Oracle ERP' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'Other ERP' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'SAP ERP' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'Peoplesoft ERP' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'ETL' AS SFE
UNION SELECT 'Job Seniority' AS FE,'Executive/Analyst' AS SFE
UNION SELECT 'HR' AS FE,'Mobility' AS SFE
UNION SELECT 'Accounting &amp; Finance' AS FE,'External audit' AS SFE
UNION SELECT 'Accounting &amp; Finance' AS FE,'Finance controller' AS SFE
UNION SELECT 'Accounting &amp; Finance' AS FE,'Finance director' AS SFE
UNION SELECT 'Accounting &amp; Finance' AS FE,'Finance shared services' AS SFE
UNION SELECT 'Accounting &amp; Finance' AS FE,'Finance manager' AS SFE
UNION SELECT 'Accounting &amp; Finance' AS FE,'Financial accounting' AS SFE
UNION SELECT 'Accounting &amp; Finance' AS FE,'Financial planning &amp; analysis' AS SFE
UNION SELECT 'Banking' AS FE,'Sales/BD' AS SFE
UNION SELECT 'Banking' AS FE,'Fund admin/ops' AS SFE
UNION SELECT 'Fundraising' AS FE,'Fundraising' AS SFE
UNION SELECT 'Banking' AS FE,'Futures' AS SFE
UNION SELECT 'Banking' AS FE,'FX/MM' AS SFE
UNION SELECT 'Banking' AS FE,'Hedge fund' AS SFE
UNION SELECT 'Accounting &amp; Finance' AS FE,'Hedging' AS SFE
UNION SELECT 'IT&amp;T' AS FE,'Helpdesk/Desktop Support' AS SFE
UNION SELECT 'HR' AS FE,'HR generalist' AS SFE
UNION SELECT 'HR' AS FE,'HR generalist' AS SFE
UNION SELECT 'HR' AS FE,'HR generalist' AS SFE
UNION SELECT 'HR' AS FE,'HR generalist' AS SFE
UNION SELECT 'HR' AS FE,'HR ops' AS SFE
UNION SELECT 'HR' AS FE,'HR reporting' AS SFE
UNION SELECT 'HR' AS FE,'HR BP' AS SFE
UNION SELECT 'HR' AS FE,'HRIS' AS SFE
UNION SELECT 'HR' AS FE,'HRSS' AS SFE
UNION SELECT 'Procurement' AS FE,'Indirect purchasing' AS SFE
UNION SELECT 'Accounting &amp; Finance' AS FE,'Indirect tax' AS SFE
UNION SELECT 'Accounting &amp; Finance' AS FE,'Internal audit' AS SFE
UNION SELECT 'Supply Chain Managment' AS FE,'Inventory mgmt' AS SFE
UNION SELECT 'Banking' AS FE,'Investment banking' AS SFE
UNION SELECT 'IT&amp;T' AS FE,'IT audit' AS SFE
UNION SELECT 'IT&amp;T' AS FE,'IT governance' AS SFE
UNION SELECT 'IT&amp;T' AS FE,'IT mgmt' AS SFE
UNION SELECT 'IT&amp;T' AS FE,'IT security/ID admin' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'Java' AS SFE
UNION SELECT 'Marketing &amp; Communications' AS FE,'Journalist' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'JSP/Java servlets' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'Linux' AS SFE
UNION SELECT 'Supply Chain Managment' AS FE,'Logistics' AS SFE
UNION SELECT 'Accounting &amp; Finance' AS FE,'Management accounting' AS SFE
UNION SELECT 'Job Seniority' AS FE,'Manager' AS SFE
UNION SELECT 'Procurement' AS FE,'Manufacturing sourcing' AS SFE
UNION SELECT 'Marketing &amp; Communications' AS FE,'Marcomms' AS SFE
UNION SELECT 'Commercial Planning' AS FE,'Market planning' AS SFE
UNION SELECT 'Banking' AS FE,'Market/Credit risk' AS SFE
UNION SELECT 'Marketing &amp; Communications' AS FE,'Marketing manager' AS SFE
UNION SELECT 'Supply Chain Managment' AS FE,'Master data mgmt' AS SFE
UNION SELECT 'Supply Chain Managment' AS FE,'Material mgmt' AS SFE
UNION SELECT 'Media' AS FE,'Media sales' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'Midas/Kondor+' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'MS SQL' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'Murex' AS SFE
UNION SELECT 'IT&amp;T' AS FE,'Network administrator' AS SFE
UNION SELECT 'IT&amp;T' AS FE,'Network security' AS SFE
UNION SELECT 'Supply Chain Managment' AS FE,'New product introduction' AS SFE
UNION SELECT 'HR' AS FE,'OD' AS SFE
UNION SELECT 'Supply Chain Managment' AS FE,'Order fulfilment' AS SFE
UNION SELECT 'Administrative' AS FE,'PA/Executive Admin/Secretary' AS SFE
UNION SELECT 'Procurement' AS FE,'Packaging category sourcing' AS SFE
UNION SELECT 'Banking' AS FE,'Payment ops' AS SFE
UNION SELECT 'HR' AS FE,'Payroll' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'PL SQL/Oracle' AS SFE
UNION SELECT 'Accounting &amp; Finance' AS FE,'Financial Planning &amp; Analysis' AS SFE
UNION SELECT 'Supply Chain Managment' AS FE,'PMO' AS SFE
UNION SELECT 'HR' AS FE,'Policy' AS SFE
UNION SELECT 'Marketing &amp; Communications' AS FE,'PR' AS SFE
UNION SELECT 'Marketing &amp; Communications' AS FE,'PR agency' AS SFE
UNION SELECT 'Banking' AS FE,'PB ops' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'Process re-engineering' AS SFE
UNION SELECT 'Procurement' AS FE,'Procurement excellence' AS SFE
UNION SELECT 'Banking' AS FE,'Product control' AS SFE
UNION SELECT 'Insurance' AS FE,'Product Mgmt/Marketing' AS SFE
UNION SELECT 'Media' AS FE,'Program sales' AS SFE
UNION SELECT 'Media' AS FE,'Media programming' AS SFE
UNION SELECT 'IT&amp;T' AS FE,'Project/Programme mgmt' AS SFE
UNION SELECT 'Banking' AS FE,'Project mgmt &amp; transformation' AS SFE
UNION SELECT 'HR' AS FE,'Recruitment' AS SFE
UNION SELECT 'Job Seniority' AS FE,'Regional' AS SFE
UNION SELECT 'Banking' AS FE,'Compliance' AS SFE
UNION SELECT 'Banking' AS FE,'Relationship mgmt' AS SFE
UNION SELECT 'HR' AS FE,'Researcher/Resourcer' AS SFE
UNION SELECT 'Commercial planning' AS FE,'Retail planning' AS SFE
UNION SELECT 'Banking' AS FE,'Risk mgmt' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'Ruby on rails' AS SFE
UNION SELECT 'Sales &amp; BD' AS FE,'Sales' AS SFE
UNION SELECT 'Sales &amp; BD' AS FE,'Sales ops' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'SAP ABAP' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'SAP Basis' AS SFE
UNION SELECT 'Supply Chain Management' AS FE,'SCM process - business' AS SFE
UNION SELECT 'Supply Chain Management' AS FE,'SCM process - mfg' AS SFE
UNION SELECT 'Marketing &amp; Communications' AS FE,'SEM' AS SFE
UNION SELECT 'Marketing &amp; Communications' AS FE,'SEO' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'Sharepoint' AS SFE
UNION SELECT 'Marketing &amp; Communications' AS FE,'Social media' AS SFE
UNION SELECT 'IT&amp;T' AS FE,'Software QA' AS SFE
UNION SELECT 'IT&amp;T' AS FE,'Software testing' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'Solaris' AS SFE
UNION SELECT 'IT&amp;T' AS FE,'Storage administrator' AS SFE
UNION SELECT 'Banking' AS FE,'Structured/Hybrid Products' AS SFE
UNION SELECT 'Supply Chain Management' AS FE,'Supply and demand planning' AS SFE
UNION SELECT 'Supply Chain Management' AS FE,'Supply planning' AS SFE
UNION SELECT 'IT&amp;T' AS FE,'System administrator' AS SFE
UNION SELECT 'IT&amp;T' AS FE,'System integration' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'T SQL/Sybase' AS SFE
UNION SELECT 'HR' AS FE,'T&amp;D' AS SFE
UNION SELECT 'HR' AS FE,'Talent Mgmt' AS SFE
UNION SELECT 'Accounting &amp; Finance' AS FE,'Tax' AS SFE
UNION SELECT 'Accounting &amp; Finance' AS FE,'Tax' AS SFE
UNION SELECT 'Job Seniority' AS FE,'Team lead' AS SFE
UNION SELECT 'IT&amp;T' AS FE,'Technical writer' AS SFE
UNION SELECT 'Banking' AS FE,'Trade ops' AS SFE
UNION SELECT 'Banking' AS FE,'Transaction services' AS SFE
UNION SELECT 'Accounting &amp; Finance' AS FE,'Treasury' AS SFE
UNION SELECT 'Accounting &amp; Finance' AS FE,'Treasury' AS SFE
UNION SELECT 'Insurance' AS FE,'Underwriting' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'Unix' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'VB' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'VB.NET' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'VBA' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'VC++' AS SFE
UNION SELECT 'IT&amp;T' AS FE,'Voice/VoIP' AS SFE
UNION SELECT 'Job Seniority' AS FE,'VP/Director' AS SFE
UNION SELECT 'Supply Chain Management' AS FE,'Warehouse' AS SFE
UNION SELECT 'Banking' AS FE,'Wealth Mgmt Ops' AS SFE
UNION SELECT 'IT&amp;T' AS FE,'Web app developer' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'Windows servers' AS SFE
UNION SELECT 'HR' AS FE,'Workforce planning' AS SFE
UNION SELECT 'Banking' AS FE,'Algo/Electronic trading' AS SFE
UNION SELECT 'Banking' AS FE,'Consumer asset' AS SFE
UNION SELECT 'Banking' AS FE,'Product Mgmt &amp; Marketing' AS SFE
UNION SELECT 'Banking' AS FE,'Customer/Data Analytics' AS SFE
UNION SELECT 'Banking' AS FE,'Cash Ops' AS SFE
UNION SELECT 'Banking' AS FE,'Investment/Portfolio Mgmt' AS SFE
UNION SELECT 'Banking' AS FE,'Investment research and analysis' AS SFE
UNION SELECT 'Banking' AS FE,'Credit admin/ops' AS SFE
UNION SELECT 'Banking' AS FE,'Card Ops' AS SFE
UNION SELECT 'Commercial Planning' AS FE,'Corporate strategy' AS SFE
UNION SELECT 'Commercial Planning' AS FE,'Merchandise planning' AS SFE
UNION SELECT 'HR' AS FE,'HR Analytics' AS SFE
UNION SELECT 'HR' AS FE,'Compensation' AS SFE
UNION SELECT 'HR' AS FE,'Benefits' AS SFE
UNION SELECT 'HR' AS FE,'L&amp;D' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'Robotic process automation (RPA)' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'AI &amp; machine learning' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'JD Edwards ERP' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'Avaloq' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'Cognos' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'Hyperion' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'Bloomberg' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'Reuters' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'Matlab' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'Labview' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'Pro E+' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'SAS' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'Qlikview' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'Tableau' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'R Programming' AS SFE
UNION SELECT 'IT Knowledge' AS FE,'SPSS' AS SFE
UNION SELECT 'IT&amp;T' AS FE,'Mobile app developer' AS SFE
UNION SELECT 'Job Seniority' AS FE,'Assistant Manager' AS SFE
UNION SELECT 'Job Seniority' AS FE,'Senior Manager' AS SFE
UNION SELECT 'Job Seniority' AS FE,'Local' AS SFE
UNION SELECT 'Job Seniority' AS FE,'Startup' AS SFE
UNION SELECT 'Marketing &amp; Communications' AS FE,'Community mgmt' AS SFE
UNION SELECT 'Marketing &amp; Communications' AS FE,'CRM' AS SFE
UNION SELECT 'Marketing &amp; Communications' AS FE,'Social Insights &amp; Analytics' AS SFE
UNION SELECT 'Marketing &amp; Communications' AS FE,'Art Creative Director' AS SFE
UNION SELECT 'Marketing &amp; Communications' AS FE,'Copy Art Director' AS SFE
UNION SELECT 'Marketing &amp; Communications' AS FE,'Integrated Marketing' AS SFE
UNION SELECT 'Media' AS FE,'Digital media' AS SFE
UNION SELECT 'Insurance' AS FE,'Customer/Data Analytics' AS SFE
UNION SELECT 'Insurance' AS FE,'Risk &amp; Compliance' AS SFE
UNION SELECT 'Insurance' AS FE,'Advisory/Sales' AS SFE
UNION SELECT 'Insurance' AS FE,'Investment/Portfolio Mgmt' AS SFE
UNION SELECT 'Insurance' AS FE,'Project Mgmt/Transformation' AS SFE
UNION SELECT 'Insurance' AS FE,'Client Service/Call Centre' AS SFE
UNION SELECT 'Procurement' AS FE,'Capex or Opex category sourcing' AS SFE
UNION SELECT 'Procurement' AS FE,'Chemical sourcing' AS SFE
UNION SELECT 'Procurement' AS FE,'Consumables category' AS SFE
UNION SELECT 'Procurement' AS FE,'Electrical category' AS SFE
UNION SELECT 'Procurement' AS FE,'Electronic component category' AS SFE
UNION SELECT 'Procurement' AS FE,'EMS category' AS SFE
UNION SELECT 'Procurement' AS FE,'Flavour category' AS SFE
UNION SELECT 'Procurement' AS FE,'Frangrance category' AS SFE
UNION SELECT 'Procurement' AS FE,'IT category sourcing' AS SFE
UNION SELECT 'Procurement' AS FE,'Logistic category sourcing' AS SFE
UNION SELECT 'Procurement' AS FE,'Marketing category sourcing' AS SFE
UNION SELECT 'Procurement' AS FE,'Mechanical category' AS SFE
UNION SELECT 'Procurement' AS FE,'NPI category sourcing' AS SFE
UNION SELECT 'Procurement' AS FE,'Oil &amp; gas sourcing' AS SFE
UNION SELECT 'Procurement' AS FE,'Professional category sourcing' AS SFE
UNION SELECT 'Procurement' AS FE,'Project category sourcing' AS SFE
UNION SELECT 'Procurement' AS FE,'Supplier mgmt' AS SFE
UNION SELECT 'Procurement' AS FE,'Raw material sourcing' AS SFE
UNION SELECT 'Procurement' AS FE,'Reverse auction' AS SFE
UNION SELECT 'Marketing &amp; Communications' AS FE,'Digital media planner' AS SFE
UNION SELECT 'Supply Chain Managment' AS FE,'Supply chain excellence' AS SFE
UNION SELECT 'Supply Chain Managment' AS FE,'Supply chain finance' AS SFE
UNION SELECT 'Supply Chain Managment' AS FE,'Distribution' AS SFE
UNION SELECT 'Media' AS FE,'Media research' AS SFE
)
select 
        case fe
        when 'Supply Chain Management' then 3108
        when 'Supply Chain Managment' then 3108
        when 'Accounting &amp; Finance' then 3093
        when 'Administrative' then 3111
        when 'Banking' then 3112
        when 'Commercial Planning' then 3113
        when 'Commercial planning' then 3113
        when 'Fundraising' then 3114
        when 'HR' then 3116
        when 'Insurance' then 3117
        when 'IT Knowledge' then 3119
        when 'IT &amp; T' then 3118
        when 'IT&amp;T' then 3118
        when 'Job Seniority' then 3120
        when 'Marketing &amp; Communications' then 3121
        when 'Media' then 3122
        when 'Procurement' then 3124
        when 'Sales &amp; BD' then 3125
        end feid
        , sfe
from t
</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1680</xloc>
      <yloc>1344</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert candidate new resumes</name>
    <type>TableOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <schema>public</schema>
    <table>bulk_upload_document_mapping</table>
    <commit>100</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field />
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field />
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field />
    <fields>
      <field>
        <column_name>entity_type</column_name>
        <stream_name>Sirius_entity_type</stream_name>
      </field>
      <field>
        <column_name>entity_id</column_name>
        <stream_name>VCCandidateID</stream_name>
      </field>
      <field>
        <column_name>file_name</column_name>
        <stream_name>Sirius_file_name</stream_name>
      </field>
      <field>
        <column_name>document_type</column_name>
        <stream_name>Sirius_document_type</stream_name>
      </field>
      <field>
        <column_name>default_file</column_name>
        <stream_name>Sirius_default_file</stream_name>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2000</xloc>
      <yloc>1952</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert candidate_source</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>candidate_source</table>
      <key>
        <name>name</name>
        <field>name</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>name</name>
        <rename>name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>source_type</name>
        <rename>source_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>payment_style</name>
        <rename>payment_style</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1696</xloc>
      <yloc>400</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert contact new documents</name>
    <type>TableOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <schema>public</schema>
    <table>bulk_upload_document_mapping</table>
    <commit>100</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field />
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field />
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field />
    <fields>
      <field>
        <column_name>entity_type</column_name>
        <stream_name>Sirius_entity_type</stream_name>
      </field>
      <field>
        <column_name>entity_id</column_name>
        <stream_name>VCContactID</stream_name>
      </field>
      <field>
        <column_name>file_name</column_name>
        <stream_name>Sirius_file_name</stream_name>
      </field>
      <field>
        <column_name>document_type</column_name>
        <stream_name>Sirius_document_type</stream_name>
      </field>
      <field>
        <column_name>default_file</column_name>
        <stream_name>Sirius_default_file</stream_name>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>944</xloc>
      <yloc>992</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert industry</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>vertical</table>
      <key>
        <name>BusinessSector</name>
        <field>name</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>name</name>
        <rename>BusinessSector</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1808</xloc>
      <yloc>496</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert invoice</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>invoice</table>
      <key>
        <name>VCOfferID</name>
        <field>offer_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>VCPositionCandidateID</name>
        <field>position_candidate_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>offer_id</name>
        <rename>VCOfferID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>position_candidate_id</name>
        <rename>VCPositionCandidateID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>status</name>
        <rename>invoice_status</rename>
        <update>Y</update>
      </value>
      <value>
        <name>renewal_flow_status</name>
        <rename>invoice_renewal_flow_status</rename>
        <update>Y</update>
      </value>
      <value>
        <name>valid</name>
        <rename>invoice_valid</rename>
        <update>Y</update>
      </value>
      <value>
        <name>renewal_index</name>
        <rename>invoice_renewal_index</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3808</xloc>
      <yloc>370</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert invoice 2</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>invoice</table>
      <key>
        <name>VCOfferID</name>
        <field>offer_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>VCPositionCandidateID</name>
        <field>position_candidate_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>offer_id</name>
        <rename>VCOfferID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>position_candidate_id</name>
        <rename>VCPositionCandidateID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>status</name>
        <rename>C_status</rename>
        <update>Y</update>
      </value>
      <value>
        <name>renewal_flow_status</name>
        <rename>C_renewal_flow_status</rename>
        <update>Y</update>
      </value>
      <value>
        <name>valid</name>
        <rename>C_valid</rename>
        <update>Y</update>
      </value>
      <value>
        <name>renewal_index</name>
        <rename>C_valid</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4724</xloc>
      <yloc>698</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert new industry</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>vertical</table>
      <key>
        <name>company-industry</name>
        <field>name</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>name</name>
        <rename>company-industry</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>N</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>176</xloc>
      <yloc>160</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert new industry 2</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>vertical</table>
      <key>
        <name>BusinessSector</name>
        <field>name</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>name</name>
        <rename>BusinessSector</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>N</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>752</xloc>
      <yloc>304</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert new industry 2 2</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>vertical</table>
      <key>
        <name>industry</name>
        <field>name</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>name</name>
        <rename>industry</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>N</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1289</xloc>
      <yloc>776</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert offer personal info</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>offer_personal_info</table>
      <key>
        <name>VCOfferID</name>
        <field>offer_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>offer_id</name>
        <rename>VCOfferID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>last_name</name>
        <rename>last_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>first_name</name>
        <rename>first_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>male</name>
        <rename>male</rename>
        <update>Y</update>
      </value>
      <value>
        <name>email</name>
        <rename>email</rename>
        <update>Y</update>
      </value>
      <value>
        <name>date_of_birth</name>
        <rename>date_of_birth</rename>
        <update>Y</update>
      </value>
      <value>
        <name>start_date</name>
        <rename>Forward_start_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>notice_period</name>
        <rename>notice_period</rename>
        <update>Y</update>
      </value>
      <value>
        <name>current_location_id</name>
        <rename>current_location_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_company_id</name>
        <rename>company_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_company_name</name>
        <rename>client_company_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_contact_id</name>
        <rename>client_contact_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_contact_name</name>
        <rename>client_contact_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_department</name>
        <rename>client_department</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3008</xloc>
      <yloc>832</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert offer personal info 2</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>offer_personal_info</table>
      <key>
        <name>VCOfferID</name>
        <field>offer_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>offer_id</name>
        <rename>VCOfferID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>last_name</name>
        <rename>last_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>first_name</name>
        <rename>first_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>male</name>
        <rename>male</rename>
        <update>Y</update>
      </value>
      <value>
        <name>email</name>
        <rename>email</rename>
        <update>Y</update>
      </value>
      <value>
        <name>date_of_birth</name>
        <rename>date_of_birth</rename>
        <update>Y</update>
      </value>
      <value>
        <name>notice_period</name>
        <rename>notice_period</rename>
        <update>Y</update>
      </value>
      <value>
        <name>current_location_id</name>
        <rename>current_location_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_company_id</name>
        <rename>company_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_company_name</name>
        <rename>client_company_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_contact_id</name>
        <rename>client_contact_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_contact_name</name>
        <rename>client_contact_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_department</name>
        <rename>client_department</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3802</xloc>
      <yloc>295</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert offer personal info 3</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>offer_personal_info</table>
      <key>
        <name>VCOfferID</name>
        <field>offer_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>offer_id</name>
        <rename>VCOfferID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>last_name</name>
        <rename>last_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>first_name</name>
        <rename>first_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>male</name>
        <rename>male</rename>
        <update>Y</update>
      </value>
      <value>
        <name>email</name>
        <rename>email</rename>
        <update>Y</update>
      </value>
      <value>
        <name>date_of_birth</name>
        <rename>date_of_birth</rename>
        <update>Y</update>
      </value>
      <value>
        <name>notice_period</name>
        <rename>notice_period</rename>
        <update>Y</update>
      </value>
      <value>
        <name>current_location_id</name>
        <rename>current_location_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_company_id</name>
        <rename>company_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_company_name</name>
        <rename>client_company_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_contact_id</name>
        <rename>client_contact_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_contact_name</name>
        <rename>client_contact_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_department</name>
        <rename>client_department</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4718</xloc>
      <yloc>623</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert vertical </name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>with
  CateSplit(userid, categoryid) as (SELECT userid, Split.a.value('.','varchar(2000)') AS categoryID FROM (SELECT userid, CAST('&lt;M>' + REPLACE(cast(categoryIDList as varchar(max)),',','&lt;/M>&lt;M>') + '&lt;/M>' AS XML) AS x FROM  bullhorn1.Candidate where isPrimaryOwner = 1) t CROSS APPLY x.nodes('/M') as Split(a) )
, CName(Userid, Name) as (SELECT Userid, CL.occupation from CateSplit left join bullhorn1.BH_CategoryList CL ON CateSplit.categoryid = CL.categoryID )
--select distinct Name from CName

, industry as (
        select  ca.candidateID
        , c.userid
        , case c.Name
        when 'Accounting &amp; Finance' then null
        when 'Aerospace' then 28739
        when 'Agriculture' then 28736
        when 'Alternative Energy' then null
        when 'Automobile &amp; Parts' then 28932
        when 'Aviation' then 28933
        when 'Banking' then 28768
        when 'Building Automation' then null
        when 'Casino, Gaming' then null
        when 'Chemicals' then 28900
        when 'Compliance' then null
        when 'Compressor &amp; Refrigeration' then 28935
        when 'Computer Hard Ware' then null
        when 'Computer Software' then null
        when 'Construction Equipment' then 28916
        when 'Consulting' then 28804
        when 'Consumer Goods' then 28884
        when 'Contracts Managers' then null
        when 'Corporate Secretaries' then null
        when 'Defense' then null
        when 'eCommerce /Digital Media' then 28886
        when 'Education' then 28777
        when 'Electrical' then 28936
        when 'Electronics &amp; Semiconductor' then 28918
        when 'Elevator/Escalator' then 28930
        when 'Energy (Power Generation)' then null
        when 'Engineering Services' then null
        when 'Environment, Water, Utilities' then null
        when 'EPC' then null
        when 'Fire, Security &amp; Surveillance' then 28893
        when 'FMCG' then null
        when 'Food' then null
        when 'Healthcare' then null
        when 'Hospitality' then null
        when 'Human Resources &amp; Administration' then 28751
        when 'HVAC' then 28937
        when 'Information Technology (Hardware)' then 28914
        when 'Information Technology (Software)' then 28915
        when 'Inhouse Legal' then null
        when 'Insurance/Financial Services' then null
        when 'Logistics' then null
        when 'Manufacturing' then null
        when 'Marine &amp; Offshore Engineering' then 28925
        when 'Material Handling' then null
        when 'Media &amp; Entertainment' then null
        when 'Medical Devices/Technology' then null
        when 'Mining' then null
        when 'Oil &amp; Gas' then 28769
        when 'Other' then null
        when 'Other Area(s)' then null
        when 'Paints &amp; Adhesives' then null
        when 'Paper &amp; Packaging' then 28912
        when 'Pharmaceutical &amp; Biotechnology' then null
        when 'Plant Automation' then 28938
        when 'Plastics' then null
        when 'Power Tools &amp; Parts' then 28939
        when 'Precision Engineering' then 28929
        when 'Private Equity' then null
        when 'Private Practice (Legal)' then null
        when 'Procurement' then null
        when 'Professional Services' then null
        when 'Pumps &amp; Valves' then null
        when 'Real Estate - Property - Construction' then 28853
        when 'Recruitment/Executive Search' then 28854
        when 'Renewable Energy' then 28910
        when 'Retail' then 28780
        when 'Sales &amp; Marketing (B2B)' then null
        when 'Shipping' then null
        when 'Supply Chain' then 28760
        when 'Supply Chain, Logistics, Procurement' then 28760
        when 'Telco' then null
        when 'Telecommunications' then 28763
        when 'Testing &amp; Certification' then 28919
        when 'Transportation' then 28796
        when 'Travel &amp; Leisure' then null
        when 'Warehouse Logistcs' then null
        when 'Wireless' then null
        end as 'industry'
from cname c
left join bullhorn1.Candidate CA on CA.userID = c.Userid
)
select *, current_timestamp as timestamp from industry where candidateID is not null and industry is not null

</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1680</xloc>
      <yloc>1216</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>InsertUpdate Custom Field</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>additional_form_values</table>
      <key>
        <name>additional_type</name>
        <field>additional_type</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>final_additional_id</name>
        <field>additional_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>form_id</name>
        <field>form_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>field_id</name>
        <field>field_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>field_value</name>
        <field>field_value</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>additional_type</name>
        <rename>additional_type</rename>
        <update>N</update>
      </value>
      <value>
        <name>additional_id</name>
        <rename>final_additional_id</rename>
        <update>N</update>
      </value>
      <value>
        <name>form_id</name>
        <rename>form_id</rename>
        <update>N</update>
      </value>
      <value>
        <name>field_id</name>
        <rename>field_id</rename>
        <update>N</update>
      </value>
      <value>
        <name>field_value</name>
        <rename>field_value</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>368</xloc>
      <yloc>320</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Job - FromSalary - ToSalary</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>select  v.UniqueID as 'position-externalId' 
        , cast(FromSalary as int) as 'FromSalary' -- INJECTION
        , cast(ToSalary as int) as 'ToSalary' -- INJECTION
from vacancies v</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1184</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Job - FromSalary - ToSalary 2</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>select
         distinct v.JobNumber as 'position-externalId'

	, v.Salary as 'FromSalary'
       , v.Salary1 as 'ToSalary'

-- select count(*) --599 -- select v.jobnumber, count(*) -- select distinct v.jobstatus, count(*) --PermanentJob -- select top 10 *
from dbo.vacancies v --group by v.jobstatus

</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1151</xloc>
      <yloc>1057</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Job - contract_rate  FROM/TO</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>select concat('NJFS',intJobId) as JobExternalId, decBasicMinSalary as PayRateFrom, decBasicMaxSalary as PayRateTo
from dJob 
where tintJobType = 2</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>Y</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1184</xloc>
      <yloc>480</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Job - contract_rate  FROM/TO 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>select concat('NJFS',intJobId) as JobExternalId, decBasicMinSalary as PayRateFrom, decBasicMaxSalary as PayRateTo
from dJob 
where tintJobType = 2</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>Y</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1168</xloc>
      <yloc>949</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Job Application - Rejected</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>	        
with
  JPInfo as (
  	select JP.jobPostingID as JobID
  		, JP.title as JobTitle
		, Cl.clientID as ContactID
		, Cl.userID as ClientUserID
		, UC.name as ContactName
		, UC.email as ContactEmail
		, CC.clientCorporationID as CompanyID
		, CC.name as CompanyName
	from bullhorn1.BH_JobPosting JP
	left join bullhorn1.BH_Client Cl on JP.clientUserID = Cl.userID
	left join bullhorn1.BH_UserContact UC on JP.clientUserID = UC.userID
	left join bullhorn1.BH_ClientCorporation CC on JP.clientCorporationID = CC.clientCorporationID
	where 1=1 and JP.title &lt;&gt; '' and Cl.isPrimaryOwner = 1 )
        --select * from JPInfo order by JobID

, ja0 as (
       select
                JR.jobPostingID as 'application-positionExternalId'
               --JPI.ClientUserID
               --, JPI.ContactID, JPI.ContactName, JPI.ContactEmail
               --, JPI.CompanyID, JPI.CompanyName, JPI.JobID,  JPI.JobTitle
               --, JR.userID
               --, CAI.CandidateName as '#Candidate Name'
               , CAI.candidateID as 'application-candidateExternalId'
               , CONVERT(VARCHAR(10),JR.dateAdded,120) as 'dateAdded'
               --, JR.status as '#application-stage' --This field only accepts: SHORTLISTED,SENT,FIRST_INTERVIEW,SECOND_INTERVIEW,OFFERED,PLACED, INVOICED, Other values will not be recognized.
               , Coalesce(NULLIF(case

              when JR.status = 'Candidate Rejected' then 'SHORTLISTED' -- > REJECTED
              when JR.status = 'Client Rejected' then 'SHORTLISTED' -- > REJECTED

                        else '' end, ''), '') as 'application-stage'
                --, JR.status as '#Original-status'
        --select count(*) --5995-- select distinct JR.status -- select top 100 *
        from bullhorn1.BH_JobResponse JR
        left join (select CA.userID as CandidateUserID, CA.candidateID, UC.userID, UC.name as CandidateName, UC.email as CandidateEmail from bullhorn1.BH_Candidate CA left join bullhorn1.BH_UserContact UC on CA.userID = UC.userID where CA.isPrimaryOwner = 1) CAI on JR.userID = CAI.CandidateUserID
        left join JPInfo JPI on JR.jobPostingID = JPI.JobID
        where CAI.candidateID is not null 
UNION
       select 
                PL.jobPostingID as 'application-positionExternalId'
              , CAI.candidateID as 'application-candidateExternalId' --, CAI.CandidateName as '#Candidate Name'
              , CONVERT(VARCHAR(10),PL.dateAdded,120) as 'dateAdded'
              , 'PLACED' as 'application-stage'
        from bullhorn1.BH_Placement PL
        left join (select CA.userID as CandidateUserID, CA.candidateID, UC.userID, UC.name as CandidateName, UC.email as CandidateEmail from bullhorn1.BH_Candidate CA left join bullhorn1.BH_UserContact UC on CA.userID = UC.userID where CA.isPrimaryOwner = 1) CAI on PL.userID = CAI.CandidateUserID
)


, ja1 ("application-positionExternalId","application-candidateExternalId","application-Stage","dateAdded", rn) as (
       SELECT 
              "application-positionExternalId"
              ,"application-candidateExternalId"
              ,"application-Stage"
              ,"dateAdded"
              , rn = ROW_NUMBER() OVER (PARTITION BY "application-positionExternalId","application-candidateExternalId","application-Stage" ORDER BY "application-positionExternalId" desc) FROM ja0 )


select "application-positionExternalId","application-candidateExternalId","application-Stage", "dateAdded", current_timestamp as 'TIME_REJECTED'
from ja1
where rn = 1 and [application-stage] &lt;&gt; '' --and [application-stage] not like 'CANDIDATE%' --and [#Candidate Name] like '%Freeman%'
order by [application-positionExternalId]  asc,
    CASE [application-stage]
        WHEN 'PLACED' THEN 1
        WHEN 'OFFERED' THEN 2
        WHEN 'SECOND_INTERVIEW' THEN 3
        WHEN 'FIRST_INTERVIEW' THEN 4
        WHEN 'SENT' THEN 5
        WHEN 'SHORTLISTED' THEN 6
    END asc

--select [application-stage], count(*) from jobapp group by [application-stage]

</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1184</xloc>
      <yloc>144</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Job Comment</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>-- LOG
select 
         v.jobnumber as 'externalid'
       , v.JobTitle as 'position-title'
       , cast('-10' as int) as 'user_account_id'
       , 'comment' as 'category'
       , 'job' as 'type'       
       , l.logdate as 'insert_timestamp'
	, Stuff( 
	          Coalesce('Name: ' + NULLIF(cast(u.username as varchar(max)), '') + char(10), '')
	      + Coalesce(char(10) + 'Subject: ' + NULLIF(cast(l.subject as varchar(max)), '') + char(10), '')
	      + Coalesce(char(10) + 'Log Item Text: ' + char(10) + NULLIF(cast(ld.text as varchar(max)), '') + char(10), '')
              , 1, 0, '')  as 'content'
       --, ld.*
-- select count(*)       
from dbo.vacancies v
left join dbo.logitems l on l.itemid  = v.jobnumber
left join dbo.logdata ld on ld.logdataid = l.logdataid
left join dbo.users u on u.shortuser = l.shortuser

/*
select --top 100
                   externalid
                  , cast('-10' as int) as 'user_account_id'
                  , 'comment' as 'category'
                  , 'job' as 'type'
                  , dateAdded as 'insert_timestamp'
                  , [dbo].[fn_ConvertHTMLToText](content) as 'content'
from comments where 'content' &lt;&gt; '' 
--and candidateID = 2988 or fullname like '%Philip%'                
                

*/</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1184</xloc>
      <yloc>64</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Job FE</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <sql>
-- JOB
with t as (
        -- select count(*)
        -- select distinct al.ATTDESCRIPTION
        select c.UniqueID, al.ATTDESCRIPTION as fe
        from vacancies c
        left join attributeslink al on al.ATTOBJECTUNIQ = c.UniqueID 
        where c.UniqueID is not null and al.ATTOBJECTTYPE = 'VAC'
        )
select UniqueID --, RoleDescription
        , case fe
When '.Net' then 4073
When '.Net 2.0' then 4074
When '.Net 3.0' then 3688
When '.Net 3.5' then 4075
When '.Net 4.0' then 3699
When '.Net mobile' then 3701
When '1st Line' then 3689
When '2G' then 3700
When '2nd Line' then 3827
When '3G' then 3828
When '3rd Line' then 3829
When 'Ab Initio' then 3702
When 'Aberdeen' then 4076
When 'Access' then 3690
When 'Account Manager' then 3830
When 'Accounting &amp; Finance' then 3093
When 'Actionscript 2.0' then 3831
When 'Actionscript 3.0' then 4077
When 'Active Directory' then 3832
When 'Actuate' then 3691
When 'ADA' then 3833
When 'ADF' then 3834
When 'ADO.Net' then 4078
When 'Adobe Flash' then 3835
When 'Adobe Flex' then 3973
When 'Agile' then 3692
When 'Agresso' then 3836
When 'AIX' then 3693
When 'AJAX' then 4079
When 'Alteryx' then 3974
When 'Analogue' then 3837
When 'Android' then 3975
When 'Apple' then 3694
When 'Application Support' then 3838
When 'Architect' then 3695
When 'Arcplan' then 3696
When 'AS400' then 3697
When 'ASP.Net' then 3839
When 'Automated Testing' then 3698
When 'Automotive / Automotive Parts' then 3094
When 'AV' then 3703
When 'Azure' then 3704
When 'Baan' then 4080
When 'Back Up' then 3976
When 'Banking &amp; Finance' then 3095
When 'Bash' then 4081
When 'Benjaporn' then 3840
When 'BI Consultant' then 3841
When 'Birst' then 3842
When 'Biz Dev' then 3843
When 'Blackberry' then 3705
When 'Board International' then 4082
When 'Borders' then 3844
When 'Bsm' then 3706
When 'Bus. Intelligence' then 3845
When 'Business Analyst' then 3977
When 'Business Development / Sales' then 3707
When 'Business Intelligence' then 3708
When 'Business Objects' then 3846
When 'C' then 3978
When 'C#' then 3979
When 'C++' then 4083
When 'CakePHP' then 3980
When 'Call Centre' then 3709
When 'Cantonese' then 3981
When 'CAT5' then 3847
When 'CAT6' then 4084
When 'CCA' then 3848
When 'CCDP' then 3849
When 'CCEE' then 4085
When 'CCI' then 3850
When 'CCIA' then 3982
When 'CCIE' then 3983
When 'CCNA' then 3710
When 'CCNP' then 3984
When 'CCSP' then 3711
When 'CEO' then 3712
When 'Chaiwat' then 4086
When 'Change' then 4087
When 'Change Analyst' then 3851
When 'Change Manager' then 3713
When 'Chemical / Material' then 3096
When 'Chief Financial Officer' then 3852
When 'Chief Operations Officer' then 3714
When 'Chief Technical Officer' then 4088
When 'CIO' then 3715
When 'CIO / CTO' then 3985
When 'Cisco' then 3986
When 'Cisco (Gen)' then 4089
When 'CISM' then 3853
When 'CISSP' then 3987
When 'Citirx (Gen)' then 3716
When 'Citrix' then 4090
When 'Classic ASP' then 3717
When 'Clojure' then 3988
When 'Cloud' then 3718
When 'CMOS' then 3989
When 'CMS (Gen)' then 3719
When 'Cobol' then 4091
When 'Cognos' then 3854
When 'Coins' then 4092
When 'ColdFusion' then 3855
When 'Construction' then 3990
When 'Council' then 3991
When 'CRM' then 3992
When 'Crystal Reports' then 3720
When 'CS Core' then 3856
When 'CSS' then 3857
When 'CSS3' then 4093
When 'Cucumber' then 4094
When 'Data Science' then 3993
When 'Database Adminstrator' then 3858
When 'Database Developer' then 3994
When 'Database Specialist' then 3859
When 'Databases' then 4095
When 'DataCentre' then 3995
When 'Datastage' then 3721
When 'Datawarehouse' then 4096
When 'DB2' then 4097
When 'Delphi' then 4098
When 'Developer' then 3860
When 'Developer/Programmer' then 4099
When 'Development' then 3722
When 'Development Manager' then 3861
When 'DHTML' then 3723
When 'DHTMLX' then 3862
When 'Digital' then 3996
When 'Director' then 3997
When 'DirectX' then 3724
When 'Discoverer' then 4100
When 'Django' then 3725
When 'Document Controller' then 4101
When 'DOJO' then 4102
When 'Dplyr' then 4103
When 'Drupal' then 3726
When 'Dundee' then 3863
When 'Dynamics' then 3864
When 'Dynamics (Gen)' then 3727
When 'Dynamics Ax' then 3998
When 'Dynamics Crm' then 3728
When 'Dynamics Gp' then 3999
When 'Dynamics Nav' then 3729
When 'Dynamics Sl' then 3730
When 'Dynatrace' then 4000
When 'Eclipse' then 3865
When 'Edinburgh' then 3731
When 'efacs' then 4001
When 'EJB' then 3732
When 'Elastic Search' then 3866
When 'Embedded C' then 4104
When 'Embedded C++' then 3733
When 'Engineering' then 3097
When 'Epicor' then 3734
When 'Ericsson' then 3867
When 'ERP' then 4105
When 'ERP Consultant' then 3735
When 'Essbase' then 4002
When 'ETL' then 3736
When 'Excel' then 4003
When 'Exchange' then 3868
When 'Executive Management' then 3098
When 'EXTGWT' then 3737
When 'EXTJS' then 4004
When 'F#' then 3738
When 'Fedora' then 4106
When 'Fife' then 4107
When 'Financial Director' then 4108
When 'Firewall' then 4005
When 'FMCG' then 3869
When 'FMEA' then 4109
When 'Forms' then 4006
When 'Fortran' then 4007
When 'French' then 3870
When 'Front End Web' then 3739
When 'Functional Testing' then 4008
When 'Games Developer' then 3871
When 'German' then 4110
When 'GIS' then 4111
When 'Glasgow' then 3740
When 'Glovia' then 4009
When 'Gnu' then 3741
When 'Government' then 4010
When 'Group Policy' then 4112
When 'Groupwise' then 4011
When 'Hadoop' then 3872
When 'Handheld' then 3742
When 'HAZOP' then 4113
When 'Helpdesk Manager' then 3743
When 'Hibernate' then 4012
When 'HP-UX' then 4115
When 'HPUX' then 4114
When 'HR' then 4116
When 'HR, GA &amp; Facilities' then 3099
When 'HSE' then 3744
When 'HTML' then 4013
When 'HTML5' then 4117
When 'Human Resource(sample only)' then 2981
When 'Hyperion' then 4118
When 'IBM' then 4014
When 'IFS' then 4119
When 'IIS' then 3745
When 'Industrial Equipment / Plant / Parts' then 3101
When 'Infor' then 4015
When 'Informatica' then 3873
When 'Infrastructure' then 3874
When 'Infrastructure Manager' then 3875
When 'Infrastructure Project Manager' then 3876
When 'Ingress' then 3746
When 'Interest In Big Data' then 3877
When 'iPhone' then 3878
When 'Ipython' then 4016
When 'ISO20071' then 3879
When 'IT &amp; Telecoms' then 3100
When 'IT Director' then 3880
When 'IT Manager' then 4017
When 'Italian' then 3747
When 'Iterative' then 4120
When 'ITIL' then 3748
When 'J2EE' then 3881
When 'J2ME' then 3882
When 'J2SE' then 3749
When 'Jaspersoft' then 3750
When 'Java' then 3883
When 'JavaScript' then 3751
When 'JBoss' then 3884
When 'Jd Edwards E1' then 4018
When 'JD Edwards World' then 4019
When 'JDBC' then 3752
When 'JDeveloper' then 4121
When 'Jidapa' then 3753
When 'Joomla' then 3754
When 'jQuery' then 3885
When 'JSF' then 4122
When 'JSP' then 4020
When 'JSPHP' then 3886
When 'JUnit' then 4123
When 'JWT' then 3755
When 'Jython' then 4124
When 'Kernel' then 3756
When 'Kimball' then 3757
When 'Knitr' then 3887
When 'Korn Shell' then 3758
When 'Lamp' then 3759
When 'LAN' then 4125
When 'Languages' then 4021
When 'Lean/6 Sigma' then 4126
When 'Legal' then 3102
When 'LINQ' then 4022
When 'Linux' then 3888
When 'Load testing' then 3889
When 'LoadRunner' then 3760
When 'Logistics' then 3890
When 'Lotus' then 3891
When 'Lotus Domino' then 3892
When 'LTE' then 4023
When 'Lync' then 3893
When 'Magento' then 3894
When 'Mahout' then 4024
When 'MAN' then 3895
When 'Manager' then 3761
When 'Managing Director' then 3896
When 'Mandarin' then 3897
When 'Manual Testing' then 3762
When 'Manufacturing' then 3898
When 'Mapics' then 3763
When 'Masters  Level' then 3899
When 'Matlab' then 3764
When 'Maven' then 4025
When 'Maximo' then 3900
When 'mba' then 3765
When 'MCDBA' then 4026
When 'Mcdoogs' then 3901
When 'MCITP' then 3902
When 'MCP' then 3903
When 'MCPD' then 3904
When 'MCSE' then 3905
When 'MCTP' then 3906
When 'MCTS' then 4027
When 'Medical Device / Diagnostics / Analytical' then 3103
When 'Mercury' then 3766
When 'Microsoft' then 4028
When 'Microsoft &amp; SQL Server' then 3907
When 'Microsoft BI' then 4127
When 'Microsoft Partner' then 3908
When 'Microstrategy' then 3909
When 'Microwave' then 3910
When 'Mobile' then 3911
When 'Mobile Development' then 4128
When 'Monitoring' then 4129
When 'MooTools' then 4130
When 'Movex' then 4131
When 'MRP' then 4029
When 'Ms Bi Developer' then 4030
When 'Mura' then 3912
When 'Music' then 2982
When 'MVC' then 4132
When 'MySQL' then 4031
When 'NetAct' then 4133
When 'NetBeans' then 3913
When 'Netezza' then 3767
When 'NetScaler' then 4134
When 'Netsuite' then 3914
When 'Netware' then 3768
When 'Network Engineer' then 4032
When 'Network Manager' then 4033
When 'Networking' then 4135
When 'nHibernate' then 4034
When 'NHS' then 3769
When 'Nosql' then 3770
When 'Novell (Gen)' then 3771
When 'NSN' then 4136
When 'OBIEE' then 3915
When 'Ods' then 4035
When 'Oil And Gas' then 4137
When 'Olap' then 4138
When 'Oltp' then 3916
When 'OO' then 4139
When 'OpenSUSE' then 4036
When 'Operations Manager' then 4037
When 'Oracle' then 4038
When 'Oracle 10g' then 4140
When 'Oracle 11g' then 4141
When 'Oracle 11gR2' then 4142
When 'Oracle 8i' then 3772
When 'Oracle 9i' then 3773
When 'Oracle Application Server' then 3774
When 'Oracle BI' then 3917
When 'Oracle Collaboration' then 3918
When 'Oracle Crm' then 3919
When 'Oracle DataGuard' then 3920
When 'Oracle Designer' then 3775
When 'Oracle Dev (Gen)' then 4143
When 'Oracle ERP' then 3921
When 'Oracle Flashback' then 4144
When 'Oracle Lite' then 3922
When 'Oracle OCA' then 4145
When 'Oracle OCP' then 3923
When 'Oracle OEM' then 4039
When 'Oracle RAC' then 3924
When 'Oracle RMAN' then 3925
When 'OSS' then 4040
When 'Outlook' then 3926
When 'OWB' then 3927
When 'Panda' then 4041
When 'Panorama' then 4146
When 'Pascal' then 3776
When 'Pegasus' then 3777
When 'Pentaho' then 3778
When 'PeopleSoft' then 3928
When 'Performance Point' then 3929
When 'Performance Testing' then 4147
When 'Perl' then 4148
When 'Perth' then 4149
When 'Pharawi' then 3930
When 'Pharma' then 4150
When 'Pharmaceutical / CRO / Reagents / Personal Care' then 3104
When 'PHD Level' then 3931
When 'PHP' then 3779
When 'PHP (General)' then 4151
When 'PHP5' then 3780
When 'PL/SQL' then 3932
When 'PMO' then 4152
When 'Prairie' then 4153
When 'Process Safety' then 3781
When 'Procurement' then 3933
When 'Product Manager' then 4042
When 'Prognoz' then 3782
When 'Programme Manager' then 4154
When 'Progress' then 3934
When 'Project Manager' then 3783
When 'PS Core' then 4155
When 'Publisher' then 3935
When 'Python' then 3784
When 'QA' then 3785
When 'Qlikview' then 4156
When 'QTP' then 3936
When 'RAD' then 3786
When 'Radio' then 3787
When 'RCN' then 3937
When 'Real Estate &amp; Insurance' then 3105
When 'RedHat' then 3788
When 'Regression Testing' then 4043
When 'Reports' then 3938
When 'Retail' then 4157
When 'RF' then 3939
When 'Ruby' then 3789
When 'Ruby on Rails' then 4158
When 'RUP' then 3790
When 'Russian' then 3940
When 'Sage' then 3791
When 'Sales &amp; Marketing' then 3106
When 'Salesforce' then 4159
When 'Salient' then 4044
When 'Samba' then 4160
When 'SAP' then 3792
When 'SAP ABAP' then 3793
When 'SAP BI' then 4161
When 'Sap Crm' then 4045
When 'SAP CRM (Gen)' then 4046
When 'SAP CRM Interaction Centre' then 4162
When 'SAP CRM Marketing' then 3941
When 'SAP CRM Web' then 3794
When 'SAP FICO' then 3795
When 'SAP Financials' then 4163
When 'SAP HR' then 4047
When 'SAP MM' then 3942
When 'SAP PP' then 3943
When 'SAP QM' then 3944
When 'SAS' then 3796
When 'SBS' then 4164
When 'Scala' then 4165
When 'SCCM' then 3945
When 'Script.aculo.us' then 4048
When 'Scrum' then 3946
When 'Security Testing' then 4049
When 'Selenium' then 4050
When 'Semiconductor / Embedded Device' then 3107
When 'Server Engineer' then 4051
When 'Server Support' then 3947
When 'Service Delivery Manager' then 4166
When 'Servlets' then 3948
When 'Sharepoint' then 3797
When 'Shell Script' then 3949
When 'Siebel' then 4167
When 'Siebel BI' then 4168
When 'Silverlight' then 4169
When 'SiteCore' then 3798
When 'Sittikarn' then 4052
When 'Software' then 3950
When 'Software Developer' then 3951
When 'Software Project Manager' then 3952
When 'Solaris' then 3799
When 'Spanish' then 3953
When 'Spring' then 4170
When 'SQL' then 4171
When 'SQL Server' then 3800
When 'SQL Server 2000' then 3954
When 'SQL Server 2005' then 3801
When 'SQL Server 2008' then 4053
When 'SQL Server 2012' then 4054
When 'SQL Server 2014' then 4055
When 'SQL Server Compact' then 4172
When 'SSAS' then 4173
When 'SSIS' then 3802
When 'SSRS' then 4056
When 'Stirling' then 4174
When 'Storage' then 4057
When 'Struts' then 4058
When 'Sugar' then 4175
When 'Sun Accounts' then 3955
When 'Sun Certified' then 3803
When 'Supply Chain Management' then 3108
When 'Swing' then 3804
When 'Sybase' then 3805
When 'Symfony' then 3806
When 'Syspro' then 4059
When 'Systems Analyst' then 3807
When 'Systems Testing' then 4176
When 'T-SQL' then 4181
When 'Tableau' then 4060
When 'Tapestry' then 3956
When 'Targit' then 4061
When 'TCP/IP' then 3957
When 'Team Leader' then 3808
When 'Technical Consultancy' then 3809
When 'Test Director' then 4062
When 'Test Manager' then 4177
When 'Tester' then 4178
When 'Testing' then 3810
When 'TETRA Telecoms' then 3811
When 'TFS' then 4179
When 'Third Sector' then 3812
When 'Tibco' then 4180
When 'Tomcat' then 3958
When 'Traffic' then 4063
When 'Trainer' then 4064
When 'UAT' then 4182
When 'UI' then 3959
When 'UMTS' then 4065
When 'Unit Testing' then 4183
When 'Unix (Gen)' then 3960
When 'Unix Dev (Gen)' then 4184
When 'UNIX/LINUX' then 4185
When 'Utilities' then 4186
When 'UTRAN' then 3813
When 'UX' then 4066
When 'VB.Net' then 4067
When 'VBA' then 3961
When 'Verilog' then 3962
When 'Virtualisation' then 3814
When 'Visual Basic' then 3963
When 'VMODEL' then 4187
When 'Voice' then 3815
When 'VPN' then 3964
When 'W3C' then 3816
When 'Wamp' then 3817
When 'WAN' then 4068
When 'Waterfall' then 3965
When 'WCF' then 4188
When 'Web Designer' then 3818
When 'WF' then 3819
When 'WIFI' then 3966
When 'WiMAX' then 3967
When 'Windows Desktop' then 4189
When 'Windows Server' then 3820
When 'WLAN' then 3821
When 'WordPress' then 3968
When 'WPF' then 3822
When 'Xamarin' then 3823
When 'XAML' then 3969
When 'XenApp' then 4190
When 'Xendesktop' then 3824
When 'XenServer' then 4069
When 'XHTML' then 4070
When 'XML' then 3825
When 'XPATH' then 3826
When 'XQuery' then 4071
When 'XSL' then 3970
When 'XSLT' then 4072
When 'Yellowfin' then 4191
When 'YUI' then 3971
When 'Zend' then 3972
else '' end fe
from t
--where UniqueID = '129'</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1184</xloc>
      <yloc>560</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Job lookup 2</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>JobExtID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name />
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>VCJobID</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4404</xloc>
      <yloc>160</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>JobApp PLACED status</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>
with 
ja0 as (
       -- INTERVIEW
       select
                c.contactid as 'application-candidateExternalId'
              , case when (ltrim(replace(c.firstname,'?','')) = '' or  c.firstname is null) then 'Firstname' else ltrim(replace(c.firstname,'?','')) end as 'candidate-firstName'
              , case when (ltrim(replace(c.lastname,'?','')) = '' or c.lastname is null) then concat('Lastname-',c.contactid) else ltrim(replace(c.lastname,'?','')) end as 'candidate-Lastname'       
              , i.vacancyid as 'application-positionExternalId'
              , i.job
              , c2.regdate as 'dateAdded'
              , coalesce(nullif(case
                           when c2.offered =1 then 'OFFERED'
                           when c2.accepted = 1 then 'OFFERED'
                           when c2.tobearranged = 1 then 'FIRST_INTERVIEW'
                           when c2.CVSent = 1 then 'SENT'
                           when c2.Interested = 1 then 'SHORTLISTED'
                           when c2.onhold = 1 then 'SHORTLISTED'
                           when c2.replacementneeded = 1 then 'SHORTLISTED'
                           else '' end, ''), '')  as 'application-stage'
              --, c2.CVSent, c2.tobearranged, c2.Interested, c2.onhold, c2.offered, c2.offerid, c2.accepted, /*c2.contactsource,  c2.NotInterested, c2.withdrawn, c2.rejected, c2.rejectedoffer,*/ c2.replacementneeded
       -- select count(*)
       from dbo.interviews i
       left join (select can.contactid, c.firstname, c.lastname  from dbo.candidates can left join dbo.contacts c on c.contactid = can.contactid where c.type in ('Candidate') ) c on c.contactid = i.candidateid
       left join dbo.candidateslist2 c2 on c2.contactid = i.candidateid
UNION
       -- PLACEMENT
       select 
              can.contactid as 'application-candidateExternalId'
              , case when (ltrim(replace(c.firstname,'?','')) = '' or  c.firstname is null) then 'Firstname' else ltrim(replace(c.firstname,'?','')) end as 'candidate-firstName'
              , case when (ltrim(replace(c.lastname,'?','')) = '' or c.lastname is null) then concat('Lastname-',c.contactid) else ltrim(replace(c.lastname,'?','')) end as 'candidate-Lastname'       
              --, p.candfirstname, p.candlastname
              , p.vacancyid as 'application-positionExternalId'
              , p.position
              , p.dateplaced  as 'dateAdded'
              , 'PLACEMENT_PERMANENT' as  'application-stage'
       from dbo.placements p
       left join dbo.candidates can on can.contactid = p.contactid
       left join dbo.contacts c on c.contactid = can.contactid
)

, ja1 ("application-positionExternalId","application-candidateExternalId","application-Stage","dateAdded", rn) as (
       SELECT 
              "application-positionExternalId"
              ,"application-candidateExternalId"
              ,"application-Stage"
              ,"dateAdded"
              , rn = ROW_NUMBER() OVER (PARTITION BY "application-positionExternalId","application-candidateExternalId","application-Stage" ORDER BY "application-positionExternalId" desc) 
       FROM ja0 
)

/*
select "application-positionExternalId","application-candidateExternalId","application-Stage", "dateAdded", current_timestamp as 'TIME_REJECTED'
from ja1
where rn = 1 and [application-stage] &lt;&gt; '' and ( [application-positionExternalId] is not null and [application-candidateExternalId] is not null)
--and [application-stage] = 'PLACEMENT_PERMANENT'
order by [application-positionExternalId]  asc,
    CASE [application-stage]
        WHEN 'PLACEMENT_PERMANENT' THEN 1
        WHEN 'OFFERED' THEN 2
        WHEN 'SECOND_INTERVIEW' THEN 3
        WHEN 'FIRST_INTERVIEW' THEN 4
        WHEN 'SENT' THEN 5
        WHEN 'SHORTLISTED' THEN 6
    END asc
*/    
select "application-positionExternalId" as JobExtID,"application-candidateExternalId" as CandidateExtID,301 as PlacedStage
	, 3 as draft_offer --used to move OFFERED to PLACED in VC [offer]
	, 2 as InvoiceStatus --used to update invoice status in VC [invoice] as 'active'
	, 1 as renewal_index --default value in VC [invoice]
	, 1 as renewal_flow_status --used to update flow status in VC [invoice] as 'placement_active'
from ja1
where rn = 1 and [application-stage] &lt;&gt; '' and ( [application-positionExternalId] is not null and [application-candidateExternalId] is not null)
and [application-stage] = 'PLACEMENT_PERMANENT'
order by [application-positionExternalId]  asc,
    CASE [application-stage]
        WHEN 'PLACED' THEN 1
        WHEN 'OFFERED' THEN 2
        WHEN 'SECOND_INTERVIEW' THEN 3
        WHEN 'FIRST_INTERVIEW' THEN 4
        WHEN 'SENT' THEN 5
        WHEN 'SHORTLISTED' THEN 6
    END asc
</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4052</xloc>
      <yloc>160</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Microsoft Excel Output</name>
    <type>ExcelOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <header>Y</header>
    <footer>N</footer>
    <encoding />
    <append>N</append>
    <add_to_result_filenames>Y</add_to_result_filenames>
    <file>
      <name>C:\TRUONG\temp.xls</name>
      <extention>xls</extention>
      <do_not_open_newfile_init>N</do_not_open_newfile_init>
      <create_parent_folder>N</create_parent_folder>
      <split>N</split>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <SpecifyFormat>N</SpecifyFormat>
      <date_time_format />
      <sheetname>Sheet1</sheetname>
      <autosizecolums>N</autosizecolums>
      <nullisblank>N</nullisblank>
      <protect_sheet>N</protect_sheet>
      <password>Encrypted </password>
      <splitevery>0</splitevery>
      <usetempfiles>N</usetempfiles>
      <tempdirectory />
    </file>
    <template>
      <enabled>N</enabled>
      <append>N</append>
      <filename>template.xls</filename>
    </template>
    <fields>
      <field>
        <name>Forward_JobExtID</name>
        <type>String</type>
        <format />
      </field>
      <field>
        <name>Forward_CandidateExtID</name>
        <type>String</type>
        <format />
      </field>
      <field>
        <name>Forward_latest_update_date</name>
        <type>Timestamp</type>
        <format />
      </field>
      <field>
        <name>Forward_latest_user_id</name>
        <type>Integer</type>
        <format />
      </field>
      <field>
        <name>stage</name>
        <type>String</type>
        <format />
      </field>
      <field>
        <name>rn</name>
        <type>Integer</type>
        <format />
      </field>
      <field>
        <name>VCJobID</name>
        <type>Integer</type>
        <format />
      </field>
      <field>
        <name>position_type</name>
        <type>Integer</type>
        <format />
      </field>
      <field>
        <name>VCCurrency</name>
        <type>String</type>
        <format />
      </field>
      <field>
        <name>VCCandidateID</name>
        <type>Integer</type>
        <format />
      </field>
      <field>
        <name>VCPositionCandidateID</name>
        <type>Integer</type>
        <format />
      </field>
      <field>
        <name>contract_length</name>
        <type>Number</type>
        <format />
      </field>
      <field>
        <name>contract_rate_from</name>
        <type>Number</type>
        <format />
      </field>
      <field>
        <name>contract_rate_to</name>
        <type>Number</type>
        <format />
      </field>
      <field>
        <name>pay_rate</name>
        <type>Number</type>
        <format />
      </field>
      <field>
        <name>working_hour_per_day</name>
        <type>Number</type>
        <format />
      </field>
      <field>
        <name>working_day_per_week</name>
        <type>Number</type>
        <format />
      </field>
      <field>
        <name>working_day_per_month</name>
        <type>Number</type>
        <format />
      </field>
      <field>
        <name>working_week_per_month</name>
        <type>Number</type>
        <format />
      </field>
      <field>
        <name>annual_paid_holiday_charge_client</name>
        <type>Integer</type>
        <format />
      </field>
      <field>
        <name>annual_paid_sick_day_charge_client</name>
        <type>Integer</type>
        <format />
      </field>
      <field>
        <name>projected_pay_rate</name>
        <type>Number</type>
        <format />
      </field>
      <field>
        <name>projected_charge_rate</name>
        <type>Number</type>
        <format />
      </field>
      <field>
        <name>projected_profit</name>
        <type>Number</type>
        <format />
      </field>
      <field>
        <name>gross_annual_salary</name>
        <type>Number</type>
        <format />
      </field>
      <field>
        <name>payment_amount</name>
        <type>Number</type>
        <format />
      </field>
      <field>
        <name>present_salary_rate</name>
        <type>Number</type>
        <format />
      </field>
      <field>
        <name>quick_charge_rate</name>
        <type>Number</type>
        <format />
      </field>
      <field>
        <name>quick_charge_rate_updated</name>
        <type>Integer</type>
        <format />
      </field>
      <field>
        <name>profit</name>
        <type>Number</type>
        <format />
      </field>
      <field>
        <name>margin_percent</name>
        <type>Number</type>
        <format />
      </field>
      <field>
        <name>markup_percent</name>
        <type>Number</type>
        <format />
      </field>
      <field>
        <name>charge_rate</name>
        <type>Number</type>
        <format />
      </field>
      <field>
        <name>total_pay_rate</name>
        <type>Number</type>
        <format />
      </field>
      <field>
        <name>on_cost</name>
        <type>Number</type>
        <format />
      </field>
      <field>
        <name>on_cost_percentage</name>
        <type>Number</type>
        <format />
      </field>
    </fields>
    <custom>
      <header_font_name>arial</header_font_name>
      <header_font_size>10</header_font_size>
      <header_font_bold>N</header_font_bold>
      <header_font_italic>N</header_font_italic>
      <header_font_underline>no</header_font_underline>
      <header_font_orientation>horizontal</header_font_orientation>
      <header_font_color>black</header_font_color>
      <header_background_color>none</header_background_color>
      <header_row_height>255</header_row_height>
      <header_alignment>left</header_alignment>
      <header_image />
      <row_font_name>arial</row_font_name>
      <row_font_size>10</row_font_size>
      <row_font_color>black</row_font_color>
      <row_background_color>none</row_background_color>
    </custom>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2944</xloc>
      <yloc>544</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Offer lookup</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>offer</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>VCPositionCandidateID</name>
        <field>position_candidate_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>VCOfferID</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2768</xloc>
      <yloc>640</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Offer lookup 2</name>
    <type>DBLookup</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>offer</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>VCPositionCandidateID</name>
        <field>position_candidate_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>VCOfferID</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3562</xloc>
      <yloc>103</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Offer lookup 3</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>offer</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>VCPositionCandidateID</name>
        <field>position_candidate_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>VCOfferID</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4478</xloc>
      <yloc>431</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Placements</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>with 
maxInterviewLevel as (
       select intInterviewProcessId, max(intInterviewId) as maxInterviewLevelId--max(tintInterviewLevelId) as maxInterviewLebel
       from dInterview
       group by intInterviewProcessId)

, tempInterview as (
       select i.*
       from maxInterviewLevel mil 
       left join dInterview i on mil.maxInterviewLevelId = i.intInterviewId)

, latestPlacement as (
       select js.intJobId, js.intCandidateId, max(dtupdated) as latestUpdate--max(js.intPlacementId)--, vchSystemEventAction
       from dPlacement js 
       group by js.intJobId, js.intCandidateId)

, tempPlacement as (
       select p.*
       from dPlacement p left join latestPlacement lp on p.intJobId = lp.intJobId and p.intCandidateId = lp.intCandidateId and p.dtupdated = lp.latestUpdate
       where latestUpdate is not null)

, jobApp as (
       select js.intJobId, j.datStartDate, j.intCompanyId as CompID, js.intCandidateId, tintShortlisted, tintCommunicated, tintInterested, tintSummarySubmit, tintCVSubmit, tintInterview, i.intInterviewProcessId, iif(intInterviewId is null, 999999,intInterviewId) as intInterviewId, i.tintInterviewLevelId, vchInterviewLevelName, i.tintInterviewStatusId, vchInterviewStatusName, tintOffered, tintPlaced, intPlacementId, p.tintPlacementStatusId, vchPlacementStatusName, vchSystemEventAction
       from dJobShortlist js
       left join tempPlacement p on js.intJobId = p.intJobId and js.intCandidateId = p.intCandidateId
       left join refPlacementStatus ps on p.tintPlacementStatusId = ps.tintPlacementStatusId
       left join sEventAction ea on js.tintSystemEventActionId = ea.tintSystemEventActionId
       left join dInterviewProcess ip on js.intJobId = ip.intJobId and js.intCandidateId = ip.intCandidateId
       left join tempInterview i on ip.intInterviewProcessId = i.intInterviewProcessId
       left join refInterviewLevel il on i.tintInterviewLevelId = il.tintInterviewLevelId
       left join refInterviewStatus ris on i.tintInterviewStatusId = ris.tintInterviewStatusId
       left join dJob j on js.intJobId = j.intJobId)
       --where tintPlaced = 1 and intPlacementId is not null
       
--select distinct tintInterviewLevelId, vchInterviewLevelName from jobApp
--select * from  jobApp --where tintInterview>1 --where tintPlacementStatusId = 4 or tintPlacementStatusId =9
--select distinct from 
--select * from jobApp where intJobId = 5118
--CREATE TABLE temp_Can (
--    intCandidateId int
--);
--select distinct intCandidateId
--from  jobApp where intInterviewId &lt;&gt; 14264 and intInterviewId &lt;&gt; 13470 and CompID in (2,455)
--insert into importJobApp
, ja0 as (
select concat('NJFS',intJobId) as intJobId, --'application-positionExternalId',
		concat('NJFS',intCandidateId) as intCandidateId, --'application-candidateExternalId',
		datStartDate,
		--*,
		iif(tintPlaced = 1, iif(tintPlacementStatusId in (4,9),'SENT','PLACEMENT_PERMANENT'), --PLACED
		iif(tintOffered >1, 'SENT',
		iif(tintOffered =1, 'OFFERED',
		iif(tintInterviewStatusId in (6,7,8,9), 'SENT',
		iif(tintInterviewLevelId in (0,1,101,104), 'FIRST_INTERVIEW',
		iif(tintInterviewLevelId in (2,3,102,103,105,106), 'SECOND_INTERVIEW',
		iif(tintCVSubmit = 1 or tintSummarySubmit = 1, 'SENT','SHORTLISTED'))))))) as stage --'application-Stage'
from  jobApp
--where intInterviewId &lt;&gt; 14264 and intInterviewId &lt;&gt; 13470 --and CompID in (2,455)--and intInterviewId = 7583
--and intCandidateId in (48445,31880)
--and intJobid in (4177,4236,4361,4683,4822,4992,5124,5227,5228,5229,5230,5231,5232,5233,5262,5270,5371,5402,5417,5418,5419,5420,5421,5422,5423,5424,5425,5426,5427,5428,5429,5430,5431,5432) 
--or intCandidateId in (48445,31880)--,44007,15490,44296,16796,38402,44798,44982,38455,15944,45834,45826,10987,22607,11200,52754,53354,19816,40589,44976,45050,44823,3334,44314,45794,22999,51044,2732,52304,44988)
)
--select * from refPlacementStatus

--select * from dJobShortlist where intJobId = 4221

, ja1 ("Forward_JobExtID","Forward_CandidateExtID", "Forward_start_date", "application-Stage", rn) as (
       SELECT 
                intJobId
              , intCandidateId
              , convert(datetime, datStartDate) as datStartDate
              ,  stage
              , rn = ROW_NUMBER() OVER (PARTITION BY intJobId,intCandidateId,stage ORDER BY intJobId desc) FROM ja0 
where stage = 'PLACEMENT_PERMANENT'
)
              
select * from ja1 where rn = 1
--and Forward_JobExtID = 'NJFS140'

--total: 1053</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2304</xloc>
      <yloc>640</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Placements 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <sql>
select 
		pc.job_external_id as Forward_JobExtID,
        pc.candidate_external_id as Forward_CandidateExtID,
		opi.start_date as Forward_start_date,
        opi.end_date as Forward_end_date,
        opi.invoice_message as "Forward_invoice_description",
        opi.note as "Forward_placement_notes"
from offer o 
left join offer_personal_info opi on opi.offer_id = o.id
left join ( 
       select 
              pc.id,
              pd.id as "job_vc_id", pd.external_id as "job_external_id", pd.name as "job_title",
              c.id as "candidate_vc_id" ,c.external_id as "candidate_external_id", c.first_name, c.last_name, c.email,
              pc.status              
       from position_candidate pc
       left join position_description pd on pd.id = pc.position_description_id
       left join candidate c on c.id = pc.candidate_id
       where c.deleted_timestamp is null --and pc.id in (39343,39325,39302,39262)
and  (pd.external_id = '7162' and c.external_id = 'griffiths_raymond@hotmail.com')
or (pd.external_id = '7125' and c.external_id = 'jeanphils.louis@gmail.com')
or (pd.external_id = '7092' and c.external_id = '1725')
or (pd.external_id = '7104' and c.external_id = 'scottjgardiner@gmail.com')
or (pd.external_id = '7182' and c.external_id = '68543')
or (pd.external_id = '7016' and c.external_id = '57308')
or (pd.external_id = '7063' and c.external_id = '33586')
or (pd.external_id = '6844' and c.external_id = 'zilli.zeng@gmail.com')
or (pd.external_id = '6777' and c.external_id = '33842')
or (pd.external_id = '7048' and c.external_id = 'mkrsnadas@gmail.com')
or (pd.external_id = '7035' and c.external_id = 'lukeboicos@gmail.com')
or (pd.external_id = '7037' and c.external_id = 'gmsskau@gmail.com')
or (pd.external_id = '6910' and c.external_id = 'dorothy.baduria@live.com.au')
or (pd.external_id = '7204' and c.external_id = '66431')
or (pd.external_id = '6644' and c.external_id = '49340')
or (pd.external_id = '7000' and c.external_id = '67527')
or (pd.external_id = '7076' and c.external_id = 'helac@outlook.com')
or (pd.external_id = '2620' and c.external_id = '164529')
or (pd.external_id = '6891' and c.external_id = '11022')
       ) pc on pc.id = o.position_candidate_id
where pc.status >=300
and o.id in (3277,3275,3274,3271,3266,3264,3262,3261,3256,3255,3254,3253,3251,3250,3249,3247,3246,3245,3243,3241,3239,3238,3237,3236,3232,3231,3230,3227,3226,3225,3224,3222,3220,3218,2781,2159,2068,2037,2027,1974,1900,1882,1846,1760,1732,1731,1706,1700,1683,1679,1653,1636,1598,1433,1401,1346,1261,1249,1107,1100,1079)
and pc.job_external_id &lt;&gt; ''
--and pc.job_external_id = '7125'</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2304</xloc>
      <yloc>704</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Placements 2 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>with
  JPInfo as (
  	select JP.jobPostingID as JobID
  		, JP.title as JobTitle
		, Cl.clientID as ContactID
		, Cl.userID as ClientUserID
		, UC.name as ContactName
		, UC.email as ContactEmail
		, CC.clientCorporationID as CompanyID
		, CC.name as CompanyName
	from bullhorn1.BH_JobPosting JP
	left join bullhorn1.BH_Client Cl on JP.clientUserID = Cl.userID
	left join bullhorn1.BH_UserContact UC on JP.clientUserID = UC.userID
	left join bullhorn1.BH_ClientCorporation CC on JP.clientCorporationID = CC.clientCorporationID
	where 1=1 and JP.title &lt;&gt; '' and Cl.isPrimaryOwner = 1 )
 --select * from JPInfo order by JobID
        

, ja0 as (
       select
                JR.jobPostingID as 'application-positionExternalId'
               , JPI.CompanyID, JPI.CompanyName,  JPI.ContactID, JPI.ContactName, JPI.ContactEmail, JPI.JobID,  JPI.JobTitle, CAI.CandidateName as '#Candidate Name' --, JR.userID, JPI.ClientUserID, 
               , CAI.candidateID as 'application-candidateExternalId'
               , convert(varchar(10),JR.dateAdded,120) as 'dateAdded'
               , coalesce(nullif(case
                     when JR.status = ' Shortlisted' then 'SHORTLISTED'
                     when JR.status = '1st Interview' then 'FIRST_INTERVIEW'
                     when JR.status = '2nd Interview' then 'SECOND_INTERVIEW'
                     when JR.status = 'Candidate Rejected' then 'CANDIDATE'
                     when JR.status = 'Client Rejected' then 'CANDIDATE'
                     when JR.status = 'CV Sent' then 'SENT'
                     when JR.status = 'Offer Extended' then 'OFFERED'
                     when JR.status = 'Placed' then 'PLACEMENT_PERMANENT'
                     when JR.status = 'Shortlisted' then 'SHORTLISTED'
                     when JR.status = 'Submitted' then 'SHORTLISTED'
                     else '' end, ''), '') as 'application-stage'  --, JR.status as '#Original-status' -- SHORTLISTED, SENT, FIRST_INTERVIEW, SECOND_INTERVIEW, OFFERED, PLACEMENT_PERMANENT, PLACEMENT_CONTRACT, PLACEMENT_TEMP, ONBOARDING.
        -- select count(*) --5995 -- select distinct JR.status -- select top 100 *
        from bullhorn1.BH_JobResponse JR
        left join (select CA.userID as CandidateUserID, CA.candidateID, UC.userID, UC.name as CandidateName, UC.email as CandidateEmail  from bullhorn1.BH_Candidate CA left join bullhorn1.BH_UserContact UC on CA.userID = UC.userID where CA.isPrimaryOwner = 1) CAI on JR.userID = CAI.CandidateUserID
        left join JPInfo JPI on JR.jobPostingID = JPI.JobID
        where CAI.candidateID is not null 
UNION
       select 
                PL.jobPostingID as 'application-positionExternalId'
              , JPI.CompanyID, JPI.CompanyName,  JPI.ContactID, JPI.ContactName, JPI.ContactEmail, JPI.JobID,  JPI.JobTitle, CAI.CandidateName as '#Candidate Name' --, JR.userID, JPI.ClientUserID, 
              , CAI.candidateID as 'application-candidateExternalId'
              , convert(varchar(10),PL.dateAdded,120) as 'dateAdded'
              , 'OFFERED' as 'application-stage'
        -- select count(*)
        from bullhorn1.BH_Placement PL
        left join ( select CA.userID as CandidateUserID, CA.candidateID, UC.userID, UC.name as CandidateName, UC.email as CandidateEmail from bullhorn1.BH_Candidate CA left join bullhorn1.BH_UserContact UC on CA.userID = UC.userID where CA.isPrimaryOwner = 1) CAI on PL.userID = CAI.CandidateUserID 
        left join JPInfo JPI on PL.jobPostingID = JPI.JobID
)
--select * from ja0 
--where ( [application-positionExternalId] = 6744 and [application-candidateExternalId] = 64995) or ([application-positionExternalId] = 5343 and [application-candidateExternalId] = 193508)
--where CompanyName like 'Nuance%' or CompanyID = 6

, ja1 ("application-positionExternalId","application-candidateExternalId","application-Stage","dateAdded", rn) as (
       SELECT 
              "application-positionExternalId"
              ,"application-candidateExternalId"
              ,"application-Stage"
              ,"dateAdded"
              , rn = ROW_NUMBER() OVER (PARTITION BY "application-positionExternalId","application-candidateExternalId","application-Stage" ORDER BY "application-positionExternalId" desc) 
       FROM ja0
       where "application-Stage" &lt;&gt; 'CANDIDATE' )

select "application-positionExternalId" as JobExtID,"application-candidateExternalId" as CandidateExtID
	, 301 as POSITIONCANDIDATE_status
	, 3 as OFFER_draft_offer --used to move OFFERED to PLACED in VC [offer]
	, 2 as INVOICE_status --used to update invoice status in VC [invoice] as 'active'
	, 1 as INVOICE_renewal_index --default value in VC [invoice]
	, 1 as INVOICE_renewal_flow_status --used to update flow status in VC [invoice] as 'placement_active'
	, 1 as INVOICE_valid
from ja1
where rn = 1 and [application-stage] &lt;&gt; '' --and [application-stage] not like 'CANDIDATE%' --and [#Candidate Name] like '%Freeman%'
and [application-stage] = 'PLACEMENT_PERMANENT'
order by [application-positionExternalId]  asc,
    CASE [application-stage]
        WHEN 'PLACEMENT_PERMANENT' THEN 1
        WHEN 'OFFERED' THEN 2
        WHEN 'SECOND_INTERVIEW' THEN 3
        WHEN 'FIRST_INTERVIEW' THEN 4
        WHEN 'SENT' THEN 5
        WHEN 'SHORTLISTED' THEN 6
    END asc




--total: 1053</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3088</xloc>
      <yloc>112</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Placements 2 3</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>
with 
ja0 as (
       -- INTERVIEW
       select
                c.contactid as 'application-candidateExternalId'
              , case when (ltrim(replace(c.firstname,'?','')) = '' or  c.firstname is null) then 'Firstname' else ltrim(replace(c.firstname,'?','')) end as 'candidate-firstName'
              , case when (ltrim(replace(c.lastname,'?','')) = '' or c.lastname is null) then concat('Lastname-',c.contactid) else ltrim(replace(c.lastname,'?','')) end as 'candidate-Lastname'       
              , i.vacancyid as 'application-positionExternalId'
              , i.job
              , c2.regdate as 'dateAdded'
              , coalesce(nullif(case
                           when c2.offered =1 then 'OFFERED'
                           when c2.accepted = 1 then 'OFFERED'
                           when c2.tobearranged = 1 then 'FIRST_INTERVIEW'
                           when c2.CVSent = 1 then 'SENT'
                           when c2.Interested = 1 then 'SHORTLISTED'
                           when c2.onhold = 1 then 'SHORTLISTED'
                           when c2.replacementneeded = 1 then 'SHORTLISTED'
                           else '' end, ''), '')  as 'application-stage'
              --, c2.CVSent, c2.tobearranged, c2.Interested, c2.onhold, c2.offered, c2.offerid, c2.accepted, /*c2.contactsource,  c2.NotInterested, c2.withdrawn, c2.rejected, c2.rejectedoffer,*/ c2.replacementneeded
       -- select count(*)
       from dbo.interviews i
       left join (select can.contactid, c.firstname, c.lastname  from dbo.candidates can left join dbo.contacts c on c.contactid = can.contactid where c.type in ('Candidate') ) c on c.contactid = i.candidateid
       left join dbo.candidateslist2 c2 on c2.contactid = i.candidateid
UNION
       -- PLACEMENT
       select 
              can.contactid as 'application-candidateExternalId'
              , case when (ltrim(replace(c.firstname,'?','')) = '' or  c.firstname is null) then 'Firstname' else ltrim(replace(c.firstname,'?','')) end as 'candidate-firstName'
              , case when (ltrim(replace(c.lastname,'?','')) = '' or c.lastname is null) then concat('Lastname-',c.contactid) else ltrim(replace(c.lastname,'?','')) end as 'candidate-Lastname'       
              --, p.candfirstname, p.candlastname
              , p.vacancyid as 'application-positionExternalId'
              , p.position
              , p.dateplaced  as 'dateAdded'
              , 'PLACEMENT_PERMANENT' as  'application-stage'
       from dbo.placements p
       left join dbo.candidates can on can.contactid = p.contactid
       left join dbo.contacts c on c.contactid = can.contactid
)

, ja1 ("application-positionExternalId","application-candidateExternalId","application-Stage","dateAdded", rn) as (
       SELECT 
              "application-positionExternalId"
              ,"application-candidateExternalId"
              ,"application-Stage"
              ,"dateAdded"
              , rn = ROW_NUMBER() OVER (PARTITION BY "application-positionExternalId","application-candidateExternalId","application-Stage" ORDER BY "application-positionExternalId" desc) 
       FROM ja0 
)

/*
select "application-positionExternalId","application-candidateExternalId","application-Stage", "dateAdded", current_timestamp as 'TIME_REJECTED'
from ja1
where rn = 1 and [application-stage] &lt;&gt; '' and ( [application-positionExternalId] is not null and [application-candidateExternalId] is not null)
--and [application-stage] = 'PLACEMENT_PERMANENT'
order by [application-positionExternalId]  asc,
    CASE [application-stage]
        WHEN 'PLACEMENT_PERMANENT' THEN 1
        WHEN 'OFFERED' THEN 2
        WHEN 'SECOND_INTERVIEW' THEN 3
        WHEN 'FIRST_INTERVIEW' THEN 4
        WHEN 'SENT' THEN 5
        WHEN 'SHORTLISTED' THEN 6
    END asc
*/    

select "application-positionExternalId" as Forward_JobExtID,"application-candidateExternalId" as Forward_CandidateExtID
, 2 as C_status, 1 as C_valid, 1 as renewal_index, 1 as C_renewal_flow_status

from ja1
where rn = 1 and [application-stage] &lt;&gt; '' and ( [application-positionExternalId] is not null and [application-candidateExternalId] is not null)
and [application-stage] = 'PLACEMENT_PERMANENT'
order by [application-positionExternalId]  asc,
    CASE [application-stage]
        WHEN 'PLACEMENT_PERMANENT' THEN 1
        WHEN 'OFFERED' THEN 2
        WHEN 'SECOND_INTERVIEW' THEN 3
        WHEN 'FIRST_INTERVIEW' THEN 4
        WHEN 'SENT' THEN 5
        WHEN 'SHORTLISTED' THEN 6
    END asc
/*
where rn = 1 and [application-stage] &lt;&gt; '' --and [application-stage] not like 'CANDIDATE%' --and [#Candidate Name] like '%Freeman%'
and [application-stage] = 'PLACED'
order by [application-positionExternalId]  asc,
    CASE [application-stage]
        WHEN 'PLACED' THEN 1
        WHEN 'OFFERED' THEN 2
        WHEN 'SECOND_INTERVIEW' THEN 3
        WHEN 'FIRST_INTERVIEW' THEN 4
        WHEN 'SENT' THEN 5
        WHEN 'SHORTLISTED' THEN 6
    END asc
*/



--total: 1053</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4014</xloc>
      <yloc>495</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Placements 3</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>  
  -------05_JOB APPLICATION---------145,704----------
with 
ja0 as
(
         SELECT 
         --, a.[1 Auto Ref Numeric] as 'Id'
           b.[4 Ref No Numeric] as 'application-candidateExternalId'
         , c.[1 Job Ref Numeric] as 'application-positionExternalId'
         , case act.Description
              when 'Contr Pl' then 'PLACED'
              when 'CV Sent' then 'SENT'
              when 'Int Feedbk' then 'FIRST_INTERVIEW'
              when 'Interview' then 'FIRST_INTERVIEW'
              when 'Perm Place' then 'PLACED'
              when 'Shortlist' then 'SHORTLISTED'
              when 'Temp Book' then 'SHORTLISTED'
              else '' end as 'application-Stage'
       --, convert(date,left([16 Lastactnda Date], 10), 103) as 'actioned-date' --associated_date
       -- select count(*) --91493 -- select distinct act.Description
       FROM F13 as a
       left JOIN F01 as b on (b.UniqueID = a.[4 Candidate Xref] /*or b.[4 RefNumber Numeric] = a.[5 Cand id Numeric]*/)
       left JOIN F03 as c on c.UniqueID = a.[6 Job Id Xref]
       JOIN ( select * from codes where Codegroup = 94 ) as act on act.Code = a.[15 Last Actio Codegroup  94] --left([15 Last Actio Codegroup  94], 2)
       where b.[4 Ref No Numeric] is NOT NULL and c.[1 Job Ref Numeric] is not null
)

, ja1 ("application-positionExternalId","application-candidateExternalId","application-Stage", rn) as (
       SELECT 
              "application-positionExternalId"
              ,"application-candidateExternalId"
              ,"application-Stage"
              , rn = ROW_NUMBER() OVER (PARTITION BY "application-positionExternalId","application-candidateExternalId","application-Stage" ORDER BY "application-positionExternalId" desc) 
       FROM ja0 where [application-stage] &lt;&gt; '')
--select * from ja0

select "application-positionExternalId" as Forward_JobExtID,"application-candidateExternalId" as Forward_CandidateExtID
from ja1
where rn = 1 and [application-stage] &lt;&gt; '' --and [application-stage] not like 'CANDIDATE%' --and [#Candidate Name] like '%Freeman%'
and [application-stage] = 'PLACED'
order by [application-positionExternalId]  asc,
    CASE [application-stage]
        WHEN 'PLACED' THEN 1
        WHEN 'OFFERED' THEN 2
        WHEN 'SECOND_INTERVIEW' THEN 3
        WHEN 'FIRST_INTERVIEW' THEN 4
        WHEN 'SENT' THEN 5
        WHEN 'SHORTLISTED' THEN 6
    END asc




--total: 1053</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4014</xloc>
      <yloc>431</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Position Candidate</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>VCJobID</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>VCCandidateID</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>VCPositionCandidateID</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2656</xloc>
      <yloc>464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Position Candidate 2</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema />
      <table>position_candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>VCJobID</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>VCCandidateID</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>VCPositionCandidateID</rename>
        <default />
        <type>Integer</type>
      </value>
      <value>
        <name>currency_type</name>
        <rename>VCPositionCurrency</rename>
        <default />
        <type>String</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2656</xloc>
      <yloc>640</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Position Candidate 2 2</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema />
      <table>position_candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>VCJobID</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>VCCandidateID</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>VCPositionCandidateID</rename>
        <default />
        <type>Integer</type>
      </value>
      <value>
        <name>currency_type</name>
        <rename>VCPositionCurrency</rename>
        <default />
        <type>String</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3450</xloc>
      <yloc>103</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Position Candidate 2 3</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema />
      <table>position_candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>VCJobID</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>VCCandidateID</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>VCPositionCandidateID</rename>
        <default />
        <type>Integer</type>
      </value>
      <value>
        <name>currency_type</name>
        <rename>VCPositionCurrency</rename>
        <default />
        <type>String</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4366</xloc>
      <yloc>431</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Position Candidate 3</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>VCJobID</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>VCCandidateID</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>VCPositionCandidateID</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2656</xloc>
      <yloc>368</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Position Candidate 4</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>position_candidate</table>
      <key>
        <name>VCJobID</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>VCCandidateID</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>position_description_id</name>
        <rename>VCJobID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>candidate_id</name>
        <rename>VCCandidateID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>associated_date</name>
        <rename>associated_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>interview1_date</name>
        <rename>interview1_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>interview2_date</name>
        <rename>interview2_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>offer_date</name>
        <rename>offer_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>rejected_date</name>
        <rename>rejected_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>hire_date</name>
        <rename>hire_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>latest_average_feedback_score</name>
        <rename>latest_average_feedback_score</rename>
        <update>Y</update>
      </value>
      <value>
        <name>feedback_count</name>
        <rename>feedback_count</rename>
        <update>Y</update>
      </value>
      <value>
        <name>comment_count</name>
        <rename>comment_count</rename>
        <update>Y</update>
      </value>
      <value>
        <name>comment</name>
        <rename>comment</rename>
        <update>Y</update>
      </value>
      <value>
        <name>status</name>
        <rename>status</rename>
        <update>Y</update>
      </value>
      <value>
        <name>active</name>
        <rename>active</rename>
        <update>Y</update>
      </value>
      <value>
        <name>person_responsible</name>
        <rename>person_responsible</rename>
        <update>Y</update>
      </value>
      <value>
        <name>background_check</name>
        <rename>background_check</rename>
        <update>Y</update>
      </value>
      <value>
        <name>offer_status</name>
        <rename>offer_status</rename>
        <update>Y</update>
      </value>
      <value>
        <name>send_mail_option</name>
        <rename>send_mail_option</rename>
        <update>Y</update>
      </value>
      <value>
        <name>confirm_hire_date</name>
        <rename>confirm_hire_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>screening_out</name>
        <rename>screening_out</rename>
        <update>Y</update>
      </value>
      <value>
        <name>status_skip_interview</name>
        <rename>status_skip_interview</rename>
        <update>Y</update>
      </value>
      <value>
        <name>employee_before_hired</name>
        <rename>employee_before_hired</rename>
        <update>Y</update>
      </value>
      <value>
        <name>sent_date</name>
        <rename>sent_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>old_status</name>
        <rename>old_status</rename>
        <update>Y</update>
      </value>
      <value>
        <name>rejected_email_to_company_date</name>
        <rename>rejected_email_to_company_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>created_by</name>
        <rename>created_by</rename>
        <update>Y</update>
      </value>
      <value>
        <name>sub_status_id</name>
        <rename>sub_status_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>hide_candidate_name_in_live_list</name>
        <rename>hide_candidate_name_in_live_list</rename>
        <update>Y</update>
      </value>
      <value>
        <name>hide_employer_name_in_live_list</name>
        <rename>hide_employer_name_in_live_list</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2656</xloc>
      <yloc>320</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Position Candidate 5</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>VCJobID</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>VCCandidateID</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>VCPositionCandidateID</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2528</xloc>
      <yloc>240</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Position Candidate 6</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>VCJobID</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>VCCandidateID</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>VCPositionCandidateID</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4400</xloc>
      <yloc>99</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Position lookup</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>application-positionExternalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>VCJobID</rename>
        <default />
        <type>Number</type>
      </value>
      <value>
        <name>position_type</name>
        <rename>position_type</rename>
        <default />
        <type>Integer</type>
      </value>
      <value>
        <name>currency_type</name>
        <rename>VCCurrency</rename>
        <default />
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2432</xloc>
      <yloc>464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Position lookup 2</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>Forward_JobExtID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name />
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>VCJobID</rename>
        <default />
        <type>Integer</type>
      </value>
      <value>
        <name>company_id</name>
        <rename>company_id</rename>
        <default />
        <type>Integer</type>
      </value>
      <value>
        <name>contact_id</name>
        <rename>client_contact_id</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2400</xloc>
      <yloc>640</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Position lookup 2 2</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>JobExtID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>VCJobID</rename>
        <default />
        <type>Integer</type>
      </value>
      <value>
        <name>company_id</name>
        <rename>company_id</rename>
        <default />
        <type>Integer</type>
      </value>
      <value>
        <name>contact_id</name>
        <rename>client_contact_id</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3194</xloc>
      <yloc>103</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Position lookup 2 3</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>Forward_JobExtID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>VCJobID</rename>
        <default />
        <type>Integer</type>
      </value>
      <value>
        <name>company_id</name>
        <rename>company_id</rename>
        <default />
        <type>Integer</type>
      </value>
      <value>
        <name>contact_id</name>
        <rename>client_contact_id</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4110</xloc>
      <yloc>431</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Position lookup 3</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>application-positionExternalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>VCJobID</rename>
        <default />
        <type>Number</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2432</xloc>
      <yloc>368</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Position lookup 3 2</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>Y</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>position-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name />
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>vc_job_id</rename>
        <default />
        <type>Number</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2432</xloc>
      <yloc>80</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Position lookup 4</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>position-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>VCJobID</rename>
        <default />
        <type>Number</type>
      </value>
      <value>
        <name>position_type</name>
        <rename>position_type</rename>
        <default />
        <type>Integer</type>
      </value>
      <value>
        <name>currency_type</name>
        <rename>VCCurrency</rename>
        <default />
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2304</xloc>
      <yloc>240</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Position lookup 5</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>forward_jobextid</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>VCJobID</rename>
        <default />
        <type>Number</type>
      </value>
      <value>
        <name>position_type</name>
        <rename>position_type</rename>
        <default />
        <type>Integer</type>
      </value>
      <value>
        <name>currency_type</name>
        <rename>VCCurrency</rename>
        <default />
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4176</xloc>
      <yloc>99</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>TwitterURL</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>--Inject Marital Status: maritalstatus = maritalStatus
--select concat('NJF',intCandidateId) as CanExternalId,
-- case 
--	 when tintMaritalStatusId = 102 then 1
--	 when tintMaritalStatusId = 101 then 2
--	 when tintMaritalStatusId = 103 then 3
--	 when tintMaritalStatusId = 104 then 7
--	 when tintMaritalStatusId = 105 then 4
--	 else '' end as maritalStatus
--from dCandidate c left join dPerson p on c.intPersonId = p.intPersonId
--where tintMaritalStatusId &lt;&gt;0
--and c.intCandidateId in (select intCandidateId from temp_Can)
--(48445,31880,44007,15490,44296,16796,38402,44798,44982,38455,15944,45834,45826,10987,22607,11200,52754,53354,19816,40589,44976,45050,44823,3334,44314,45794,22999,51044,2732,52304,44988)

--Inject Xing URL: xing = XingURL
--select concat('NJF',intCandidateId) as CanExternalId, C.intpersonid, p.vchXingUrl as XingURL
--from dCandidate c left join dPerson p on c.intPersonId = p.intPersonId
--where vchXingUrl &lt;&gt; ''
--and c.intCandidateId in (select intCandidateId from temp_Can)

--Inject Facebook URL: facebook = FacebookURL
--select concat('NJF',intCandidateId) as CanExternalId, C.intpersonid, replace(p.vchFacebookProfileUrl,',','') as FacebookURL
--from dCandidate c left join dPerson p on c.intPersonId = p.intPersonId
--where vchFacebookProfileUrl &lt;&gt; ''
--and c.intCandidateId in (select intCandidateId from temp_Can)

--Inject Twitter URL: twitter = TwitterURL
select concat('NJFS',intCandidateId) as CanExternalId, C.intpersonid, iif(p.vchTwitterProfileUrl like '%twitter.com%', p.vchTwitterProfileUrl, '') as TwitterURL
from dCandidate c left join dPerson p on c.intPersonId = p.intPersonId
where iif(p.vchTwitterProfileUrl like '%twitter.com%', p.vchTwitterProfileUrl, '') &lt;&gt; ''
--and c.intCandidateId in (select intCandidateId from temp_Can)
</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>Y</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1680</xloc>
      <yloc>1008</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update</name>
    <type>Update</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field />
    <lookup>
      <schema>public</schema>
      <table>compensation</table>
      <key>
        <name>vc_job_id</name>
        <field>position_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>gross_annual_salary</name>
        <rename>gross_annual_salary - pay_rate</rename>
      </value>
      <value>
        <name>pay_rate</name>
        <rename>gross_annual_salary - pay_rate</rename>
      </value>
      <value>
        <name>percentage_of_annual_salary</name>
        <rename>percentage_of_annual_salary</rename>
      </value>
      <value>
        <name>use_quick_fee_forecast</name>
        <rename>use_quick_fee_forecast</rename>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2560</xloc>
      <yloc>80</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update - Contact Info</name>
    <type>Update</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field />
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <key>
        <name>actual_contactid</name>
        <field>id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>department</name>
        <rename>department</rename>
      </value>
      <value>
        <name>personal_email</name>
        <rename>personal_email</rename>
      </value>
      <value>
        <name>nick_name</name>
        <rename>nickname</rename>
      </value>
      <value>
        <name>mobile_phone</name>
        <rename>mobile_phone</rename>
      </value>
      <value>
        <name>home_phone</name>
        <rename>home_phone</rename>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>928</xloc>
      <yloc>144</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update 2</name>
    <type>Update</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>1000</commit>
    <use_batch>Y</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field />
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>actual_candidate_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>note</name>
        <rename>note</rename>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2000</xloc>
      <yloc>144</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update 2 2</name>
    <type>Update</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field />
    <lookup>
      <schema>public</schema>
      <table>position_candidate</table>
      <key>
        <name>final_candidate_id</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>final_position_id</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>rejected_date</name>
        <rename>TIME_REJECTED</rename>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1504</xloc>
      <yloc>144</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update 2 2 2</name>
    <type>Update</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>1000</commit>
    <use_batch>Y</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field />
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>actual_candidate_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>contract_rate</name>
        <rename>payrate</rename>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2000</xloc>
      <yloc>672</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update 2 3</name>
    <type>Update</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field />
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <key>
        <name>actual_contactid</name>
        <field>id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>department</name>
        <rename>department</rename>
      </value>
      <value>
        <name>gender_title</name>
        <rename>gender_tile</rename>
      </value>
      <value>
        <name>personal_email</name>
        <rename>personal_email</rename>
      </value>
      <value>
        <name>nick_name</name>
        <rename>nickname</rename>
      </value>
      <value>
        <name>mobile_phone</name>
        <rename>mobile_phone</rename>
      </value>
      <value>
        <name>home_phone</name>
        <rename>home_phone</rename>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>928</xloc>
      <yloc>464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update 2 4</name>
    <type>Update</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field />
    <lookup>
      <schema>public</schema>
      <table>offer</table>
      <key>
        <name>vc_job_id</name>
        <field>position_candidate_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>gross_annual_salary</name>
        <rename>gross_annual_salary - pay_rate</rename>
      </value>
      <value>
        <name>pay_rate</name>
        <rename>gross_annual_salary - pay_rate</rename>
      </value>
      <value>
        <name>percentage_of_annual_salary</name>
        <rename>percentage_of_annual_salary</rename>
      </value>
      <value>
        <name>use_quick_fee_forecast</name>
        <rename>use_quick_fee_forecast</rename>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2640</xloc>
      <yloc>160</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update 2 5</name>
    <type>Update</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <skip_lookup>Y</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field />
    <lookup>
      <schema>public</schema>
      <table>candidate_work_history</table>
      <key>
        <name>actual_candidate_id</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>company</name>
        <rename>candidate-company1</rename>
      </value>
      <value>
        <name>job_title</name>
        <rename>candidate-jobTitle1</rename>
      </value>
      <value>
        <name>current_employer</name>
        <rename>candidate-employer1</rename>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2000</xloc>
      <yloc>1152</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update 2 6</name>
    <type>Update</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>1000</commit>
    <use_batch>Y</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field />
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>actual_candidate_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>candidate_source_id</name>
        <rename>source</rename>
      </value>
      <value>
        <name>active</name>
        <rename>active</rename>
      </value>
      <value>
        <name>availability_start</name>
        <rename>Availability for work</rename>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2000</xloc>
      <yloc>2144</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update 2 6 2</name>
    <type>Update</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>1000</commit>
    <use_batch>Y</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field />
    <lookup>
      <schema>public</schema>
      <table>common_location</table>
      <key>
        <name>current_location_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>longitude</name>
        <rename>Longitude</rename>
      </value>
      <value>
        <name>latitude</name>
        <rename>Latitude</rename>
      </value>
      <value>
        <name>location_type</name>
        <rename>Location > Type</rename>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1981</xloc>
      <yloc>2311</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update 2 7</name>
    <type>Update</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field />
    <lookup>
      <schema>public</schema>
      <table>position_candidate_id</table>
      <key>
        <name>VCJobID</name>
        <field>position_candidate_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>VCCandidateID</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>draft_offer</name>
        <rename>draft_offer</rename>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4462</xloc>
      <yloc>294</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update 3</name>
    <type>Update</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <skip_lookup>Y</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field />
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>actual_candidate_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>nickname</name>
        <rename>PreferredName</rename>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1984</xloc>
      <yloc>1088</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update 3 2</name>
    <type>Update</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <skip_lookup>Y</skip_lookup>
    <commit>300</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field />
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>desired_contract_rate</name>
        <rename>desired_contract_rate</rename>
      </value>
      <value>
        <name>contract_rate</name>
        <rename>contract_rate</rename>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1872</xloc>
      <yloc>736</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update 4</name>
    <type>Update</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field />
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <key>
        <name>final_job_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>vertical_id</name>
        <rename>final_industry_id</rename>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1513</xloc>
      <yloc>776</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update Candidate New Resumes</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>bulk_upload_document_mapping</table>
      <key>
        <name>Sirius_entity_type</name>
        <field>entity_type</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>VCCandidateID</name>
        <field>entity_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>Sirius_file_name</name>
        <field>file_name</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>Sirius_document_type</name>
        <field>document_type</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>entity_type</name>
        <rename>Sirius_entity_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>entity_id</name>
        <rename>VCCandidateID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>file_name</name>
        <rename>Sirius_file_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>document_type</name>
        <rename>Sirius_document_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>default_file</name>
        <rename>Sirius_default_file</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2000</xloc>
      <yloc>1872</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update Candidate Note</name>
    <type>Update</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <skip_lookup>Y</skip_lookup>
    <commit>300</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field />
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>note</name>
        <rename>candidate-note</rename>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1888</xloc>
      <yloc>64</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update Contact Documents</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>bulk_upload_document_mapping</table>
      <key>
        <name>Sirius_entity_type</name>
        <field>entity_type</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>VCContactID</name>
        <field>entity_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>Sirius_file_name</name>
        <field>file_name</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>Sirius_document_type</name>
        <field>document_type</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>entity_type</name>
        <rename>Sirius_entity_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>entity_id</name>
        <rename>VCContactID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>file_name</name>
        <rename>Sirius_file_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>document_type</name>
        <rename>Sirius_document_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>default_file</name>
        <rename>Sirius_default_file</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>944</xloc>
      <yloc>896</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update [Invoice]</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>invoice</table>
      <key>
        <name>VCJobID</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>VCCandidateID</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>status</name>
        <rename>InvoiceStatus</rename>
        <update>Y</update>
      </value>
      <value>
        <name>renewal_index</name>
        <rename>renewal_index</rename>
        <update>Y</update>
      </value>
      <value>
        <name>renewal_flow_status</name>
        <rename>renewal_flow_status</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4612</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update [Offer]</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>offer</table>
      <key>
        <name>VCJobID</name>
        <field>position_candidate_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>VCCandidateID</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>draft_offer</name>
        <rename>draft_offer</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4612</xloc>
      <yloc>240</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update job App status</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>position_candidate</table>
      <key>
        <name>VCJobID</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>VCCandidateID</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>status</name>
        <rename>PlacedStage</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4612</xloc>
      <yloc>160</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>WRONG WRONG</name>
    <type>Update</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <skip_lookup>N</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field />
    <lookup>
      <schema>public</schema>
      <table>compensation</table>
      <key>
        <name>actual_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>actual_id</rename>
      </value>
      <value>
        <name>annual_salary_from</name>
        <rename>FromSalary</rename>
      </value>
      <value>
        <name>annual_salary_to</name>
        <rename>ToSalary</rename>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1488</xloc>
      <yloc>400</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>WRONG WRONG 2</name>
    <type>Update</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field />
    <lookup>
      <schema>public</schema>
      <table>compensation</table>
      <key>
        <name>actual_id</name>
        <field>position_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>annual_salary_from</name>
        <rename>FromSalary</rename>
      </value>
      <value>
        <name>annual_salary_to</name>
        <rename>ToSalary</rename>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1455</xloc>
      <yloc>1121</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>XingURL</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>--Inject Marital Status: maritalstatus = maritalStatus
--select concat('NJF',intCandidateId) as CanExternalId,
-- case 
--	 when tintMaritalStatusId = 102 then 1
--	 when tintMaritalStatusId = 101 then 2
--	 when tintMaritalStatusId = 103 then 3
--	 when tintMaritalStatusId = 104 then 7
--	 when tintMaritalStatusId = 105 then 4
--	 else '' end as maritalStatus
--from dCandidate c left join dPerson p on c.intPersonId = p.intPersonId
--where tintMaritalStatusId &lt;&gt;0
--and c.intCandidateId in (select intCandidateId from temp_Can)
--(48445,31880,44007,15490,44296,16796,38402,44798,44982,38455,15944,45834,45826,10987,22607,11200,52754,53354,19816,40589,44976,45050,44823,3334,44314,45794,22999,51044,2732,52304,44988)

--Inject Xing URL: xing = XingURL
select concat('NJFS',intCandidateId) as CanExternalId, C.intpersonid, concat('https://www.xing.com/',replace(p.vchXingUrl,'\','/')) as XingURL
from dCandidate c left join dPerson p on c.intPersonId = p.intPersonId
where vchXingUrl &lt;&gt; ''
--and c.intCandidateId in (select intCandidateId from temp_Can)

--Inject Facebook URL: facebook = FacebookURL
--select concat('NJF',intCandidateId) as CanExternalId, C.intpersonid, replace(p.vchFacebookProfileUrl,',','') as FacebookURL
--from dCandidate c left join dPerson p on c.intPersonId = p.intPersonId
--where vchFacebookProfileUrl &lt;&gt; ''
--and c.intCandidateId in (select intCandidateId from temp_Can)

--Inject Twitter URL: twitter = TwitterURL
--select concat('NJF',intCandidateId) as CanExternalId, C.intpersonid, iif(p.vchTwitterProfileUrl like '%twitter.com%', p.vchTwitterProfileUrl, '') as TwitterURL
--from dCandidate c left join dPerson p on c.intPersonId = p.intPersonId
--where iif(p.vchTwitterProfileUrl like '%twitter.com%', p.vchTwitterProfileUrl, '') &lt;&gt; ''</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>Y</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1680</xloc>
      <yloc>880</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>active - availability_start</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>select          C.candidateID, concat(C.FirstName,' ',C.LastName) as fullname
		--, C.hourlyRateLow as '(Pay Rate) Contract Rate' --&lt;&lt;Desired contract rate
		--, C.employmentPreference as 'candidate-jobTypes'  --, 'PERMANENT' as 'candidate-jobTypes' --&lt;&lt;
                , C.status as 'candidate-status' --&lt;&lt;
                , case C.status
                        when 'Active' then 1
                        when 'Archive' then 1
                        when 'DNC' then 1
                        when 'Former Contact' then 1
                        when 'Imported' then 1
                        when 'Inactive' then 1
                        when 'new Lead' then 1
                        when 'Passive' then 0
                        when 'Placed' then 1
                        when 'Private' then 1
                        when 'Unavailable' then 1
		   end as 'active'                 
		, C.source as 'candidate-source' --&lt;&lt;
		, case C.source
                        when 'Advertisement' then 29100
                        when 'Alsacreation' then 29101
                        when 'APEC' then 29102
                        when 'Auto Parsed' then 29095
                        when 'Broadbean' then 29089
                        when 'Candidate Email Parser' then 29103
                        when 'CarrerBuilder' then 29104
                        when 'Coder.com' then 29105
                        when 'Company ' then 29106
                        when 'Company Website' then 29107
                        when 'Consultant Website' then 29108
                        when 'CV Library' then 29109
                        when 'CWJobs' then 29110
                        when 'Data Import' then 29093
                        when 'Dice.com' then 29111
                        when 'Dova' then 29086
                        when 'DoYouBuzz' then 29112
                        when 'eFinancialCareers' then 29113
                        when 'Facebook' then 29114
                        when 'Freelance.de' then 29115
                        when 'FreelanceInfo' then 29116
                        when 'Freelancerde' then 29117
                        when 'Freelancermap' then 29118
                        when 'freelancermap.de' then 29119
                        when 'FreelancerRepublik' then 29120
                        when 'Github' then 29098
                        when 'GULP' then 29121
                        when 'Headhunt' then 29091
                        when 'HH' then 29122
                        when 'Indeed' then 29085
                        when 'Instant Job Board' then 29087
                        when 'It JobBoard' then 29123
                        when 'Jobs.ch' then 29124
                        when 'Jobserve' then 29125
                        when 'Jobserve Database' then 29126
                        when 'Jobsite' then 29127
                        when 'jobupch' then 29128
                        when 'LinkedIn' then 29096
                        when 'Linkedrecruiter' then 29129
                        when 'LogicMelon' then 29094
                        when 'Monster' then 29130
                        when 'Monster.com' then 29131
                        when 'Paper' then 29132
                        when 'Qapa' then 29133
                        when 'QX' then 29134
                        when 'Referral' then 29092
                        when 'Resume Parser' then 29135
                        when 'SourceBreaker' then 29136
                        when 'Stack Overflow' then 29137
                        when 'TalentSpa' then 29138
                        when 'TheITJobBoard' then 29139
                        when 'Twitter' then 29140
                        when 'Viadeo' then 29141
                        when 'Volcanic' then 29084
                        when 'Website' then 29142
                        when 'WeJob' then 29143
                        when 'Workday Gigs' then 29144
                        when 'Xing' then 29097
		end as 'source'                 
		, C.dateAvailable as 'Availability for work'
		--, coalesce(NULLIF(convert(varchar(19), dateAvailable, 120),''), CURRENT_TIMESTAMP) as 'dateAvailable'
		, coalesce(NULLIF(convert(varchar(19), dateAvailable, 120),''), null) as 'dateAvailable'
-- select distinct status ---- select distinct source ---- select distinct dateAvailable --
from bullhorn1.Candidate C where C.isPrimaryOwner = 1
--and C.candidateID = 10</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1680</xloc>
      <yloc>2144</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>additional_form_values InsertUpdate</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>additional_form_values</table>
      <key>
        <name>final_additional_id</name>
        <field>additional_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>field_value</name>
        <field>field_value</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>form_id</name>
        <field>form_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>field_id</name>
        <field>field_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>additional_type</name>
        <field>additional_type</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>additional_type</name>
        <rename>additional_type</rename>
        <update>N</update>
      </value>
      <value>
        <name>additional_id</name>
        <rename>final_additional_id</rename>
        <update>N</update>
      </value>
      <value>
        <name>form_id</name>
        <rename>form_id</rename>
        <update>N</update>
      </value>
      <value>
        <name>field_id</name>
        <rename>field_id</rename>
        <update>N</update>
      </value>
      <value>
        <name>field_value</name>
        <rename>field_value</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1490</xloc>
      <yloc>666</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>additional_form_values InsertUpdate 2</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>additional_form_values</table>
      <key>
        <name>additional_type</name>
        <field>additional_type</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>final_additional_id</name>
        <field>additional_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>form_id</name>
        <field>form_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>field_id</name>
        <field>field_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>field_value</name>
        <field>field_value</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>additional_type</name>
        <rename>additional_type</rename>
        <update>N</update>
      </value>
      <value>
        <name>additional_id</name>
        <rename>final_additional_id</rename>
        <update>N</update>
      </value>
      <value>
        <name>form_id</name>
        <rename>form_id</rename>
        <update>N</update>
      </value>
      <value>
        <name>field_id</name>
        <rename>field_id</rename>
        <update>N</update>
      </value>
      <value>
        <name>field_value</name>
        <rename>field_value</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>912</xloc>
      <yloc>608</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>additional_form_values InsertUpdate 3 3</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>additional_form_values</table>
      <key>
        <name>final_additional_id</name>
        <field>additional_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>field_id</name>
        <field>field_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>form_id</name>
        <field>form_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>field_value</name>
        <field>field_value</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>additional_type</name>
        <rename>additional_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>additional_id</name>
        <rename>final_additional_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>form_id</name>
        <rename>form_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>field_id</name>
        <rename>field_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>field_value</name>
        <rename>field_value</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1969</xloc>
      <yloc>2042</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>application-candidateExternalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name />
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>final_candidate_id</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1408</xloc>
      <yloc>144</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate 3</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>external_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>final_candidate_id</rename>
        <default />
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1776</xloc>
      <yloc>1440</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate 3 3 2</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>UniqueID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>final_candidate_id</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1776</xloc>
      <yloc>1680</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate 3 3 2 2</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidateID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>final_candidate_id</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1808</xloc>
      <yloc>1520</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate 3 3 2 2 2</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidateID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>final_candidate_id</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1808</xloc>
      <yloc>1584</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate FE-SFE</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>with 
SkillName0(userid, skillID) as (SELECT userid, Split.a.value('.', 'VARCHAR(2000)') AS skillID FROM (SELECT userid, CAST('&lt;M>' + REPLACE(cast(skillIDList as varchar(max)),',','&lt;/M>&lt;M>') + '&lt;/M>' AS XML) AS x FROM  bullhorn1.Candidate where isPrimaryOwner = 1) t CROSS APPLY x.nodes('/M') AS Split(a) )
--, SkillName(userId, SkillName) as (SELECT userId, STUFF((SELECT DISTINCT ', ' + SL.name from SkillName0 left join bullhorn1.BH_SkillList SL ON SkillName0.skillID = SL.skillID WHERE SkillName0.skillID &lt;&gt; '' and userId = a.userId FOR XML PATH (''), TYPE).value('.', 'nvarchar(MAX)'), 1, 2, '') AS URLList FROM SkillName0 as a where a.skillID &lt;&gt; '' GROUP BY a.userId)
, SkillName(userId, SkillName) as (SELECT userId, SL.name from SkillName0 left join bullhorn1.BH_SkillList SL ON SkillName0.skillID = SL.skillID WHERE SkillName0.skillID &lt;&gt; '' )
--select * from bullhorn1.BH_SkillList (156) >>> VC functional_expertise.name

-- SPECIALTY - VC SFE info
, CateSplit(userid, categoryid) as (SELECT userid, Split.a.value('.','varchar(2000)') AS categoryID FROM (SELECT userid, CAST('&lt;M>' + REPLACE(cast(categoryIDList as varchar(max)),',','&lt;/M>&lt;M>') + '&lt;/M>' AS XML) AS x FROM  bullhorn1.Candidate where isPrimaryOwner = 1) t CROSS APPLY x.nodes('/M') as Split(a) )
--, CName(Userid, Name) as (SELECT Userid, STUFF((SELECT DISTINCT ', ' + CL.occupation from CateSplit left join bullhorn1.BH_CategoryList CL ON CateSplit.categoryid = CL.categoryID WHERE CateSplit.categoryid &lt;&gt; '' and Userid = a.Userid FOR XML PATH (''), TYPE).value('.', 'nvarchar(MAX)'), 1, 2, '') AS URLList FROM CateSplit as a where a.categoryid &lt;&gt; '' GROUP BY a.Userid)
, CName(Userid, Name) as (SELECT Userid, CL.occupation from CateSplit left join bullhorn1.BH_CategoryList CL ON CateSplit.categoryid = CL.categoryID WHERE CateSplit.categoryid &lt;&gt; '' )
--select * from bullhorn1.BH_CategoryList (433) >>> VC sub_functional_expertise.name

select ca.userid, ca.candidateID as external_id, ca.firstname, ca.lastname , fe.SkillName as fe, sfe.name as sfe
--select top 10 * 
from bullhorn1.Candidate ca
left join SkillName fe on fe.userid = ca.userID
left join CName sfe on sfe.userid = ca.userID
where ca.candidateID = 104
</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1680</xloc>
      <yloc>1440</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate FE-SFE 2 2</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <sql>-- CANDIDATE
with t as (
        -- select count(*)
        -- select distinct al.ATTDESCRIPTION
        select c.UniqueID, al.ATTDESCRIPTION as fe
        from candidates c
        left join attributeslink al on al.ATTOBJECTUNIQ = c.UniqueID
        where c.UniqueID is not null and al.ATTOBJECTTYPE = 'CAND'
        )
--select count(*) from t
select UniqueID
        , case fe
When '.Net' then 4073
When '.Net 2.0' then 4074
When '.Net 3.0' then 3688
When '.Net 3.5' then 4075
When '.Net 4.0' then 3699
When '.Net mobile' then 3701
When '1st Line' then 3689
When '2G' then 3700
When '2nd Line' then 3827
When '3G' then 3828
When '3rd Line' then 3829
When 'Ab Initio' then 3702
When 'Aberdeen' then 4076
When 'Access' then 3690
When 'Account Manager' then 3830
When 'Accounting &amp; Finance' then 3093
When 'Actionscript 2.0' then 3831
When 'Actionscript 3.0' then 4077
When 'Active Directory' then 3832
When 'Actuate' then 3691
When 'ADA' then 3833
When 'ADF' then 3834
When 'ADO.Net' then 4078
When 'Adobe Flash' then 3835
When 'Adobe Flex' then 3973
When 'Agile' then 3692
When 'Agresso' then 3836
When 'AIX' then 3693
When 'AJAX' then 4079
When 'Alteryx' then 3974
When 'Analogue' then 3837
When 'Android' then 3975
When 'Apple' then 3694
When 'Application Support' then 3838
When 'Architect' then 3695
When 'Arcplan' then 3696
When 'AS400' then 3697
When 'ASP.Net' then 3839
When 'Automated Testing' then 3698
When 'Automotive / Automotive Parts' then 3094
When 'AV' then 3703
When 'Azure' then 3704
When 'Baan' then 4080
When 'Back Up' then 3976
When 'Banking &amp; Finance' then 3095
When 'Bash' then 4081
When 'Benjaporn' then 3840
When 'BI Consultant' then 3841
When 'Birst' then 3842
When 'Biz Dev' then 3843
When 'Blackberry' then 3705
When 'Board International' then 4082
When 'Borders' then 3844
When 'Bsm' then 3706
When 'Bus. Intelligence' then 3845
When 'Business Analyst' then 3977
When 'Business Development / Sales' then 3707
When 'Business Intelligence' then 3708
When 'Business Objects' then 3846
When 'C' then 3978
When 'C#' then 3979
When 'C++' then 4083
When 'CakePHP' then 3980
When 'Call Centre' then 3709
When 'Cantonese' then 3981
When 'CAT5' then 3847
When 'CAT6' then 4084
When 'CCA' then 3848
When 'CCDP' then 3849
When 'CCEE' then 4085
When 'CCI' then 3850
When 'CCIA' then 3982
When 'CCIE' then 3983
When 'CCNA' then 3710
When 'CCNP' then 3984
When 'CCSP' then 3711
When 'CEO' then 3712
When 'Chaiwat' then 4086
When 'Change' then 4087
When 'Change Analyst' then 3851
When 'Change Manager' then 3713
When 'Chemical / Material' then 3096
When 'Chief Financial Officer' then 3852
When 'Chief Operations Officer' then 3714
When 'Chief Technical Officer' then 4088
When 'CIO' then 3715
When 'CIO / CTO' then 3985
When 'Cisco' then 3986
When 'Cisco (Gen)' then 4089
When 'CISM' then 3853
When 'CISSP' then 3987
When 'Citirx (Gen)' then 3716
When 'Citrix' then 4090
When 'Classic ASP' then 3717
When 'Clojure' then 3988
When 'Cloud' then 3718
When 'CMOS' then 3989
When 'CMS (Gen)' then 3719
When 'Cobol' then 4091
When 'Cognos' then 3854
When 'Coins' then 4092
When 'ColdFusion' then 3855
When 'Construction' then 3990
When 'Council' then 3991
When 'CRM' then 3992
When 'Crystal Reports' then 3720
When 'CS Core' then 3856
When 'CSS' then 3857
When 'CSS3' then 4093
When 'Cucumber' then 4094
When 'Data Science' then 3993
When 'Database Adminstrator' then 3858
When 'Database Developer' then 3994
When 'Database Specialist' then 3859
When 'Databases' then 4095
When 'DataCentre' then 3995
When 'Datastage' then 3721
When 'Datawarehouse' then 4096
When 'DB2' then 4097
When 'Delphi' then 4098
When 'Developer' then 3860
When 'Developer/Programmer' then 4099
When 'Development' then 3722
When 'Development Manager' then 3861
When 'DHTML' then 3723
When 'DHTMLX' then 3862
When 'Digital' then 3996
When 'Director' then 3997
When 'DirectX' then 3724
When 'Discoverer' then 4100
When 'Django' then 3725
When 'Document Controller' then 4101
When 'DOJO' then 4102
When 'Dplyr' then 4103
When 'Drupal' then 3726
When 'Dundee' then 3863
When 'Dynamics' then 3864
When 'Dynamics (Gen)' then 3727
When 'Dynamics Ax' then 3998
When 'Dynamics Crm' then 3728
When 'Dynamics Gp' then 3999
When 'Dynamics Nav' then 3729
When 'Dynamics Sl' then 3730
When 'Dynatrace' then 4000
When 'Eclipse' then 3865
When 'Edinburgh' then 3731
When 'efacs' then 4001
When 'EJB' then 3732
When 'Elastic Search' then 3866
When 'Embedded C' then 4104
When 'Embedded C++' then 3733
When 'Engineering' then 3097
When 'Epicor' then 3734
When 'Ericsson' then 3867
When 'ERP' then 4105
When 'ERP Consultant' then 3735
When 'Essbase' then 4002
When 'ETL' then 3736
When 'Excel' then 4003
When 'Exchange' then 3868
When 'Executive Management' then 3098
When 'EXTGWT' then 3737
When 'EXTJS' then 4004
When 'F#' then 3738
When 'Fedora' then 4106
When 'Fife' then 4107
When 'Financial Director' then 4108
When 'Firewall' then 4005
When 'FMCG' then 3869
When 'FMEA' then 4109
When 'Forms' then 4006
When 'Fortran' then 4007
When 'French' then 3870
When 'Front End Web' then 3739
When 'Functional Testing' then 4008
When 'Games Developer' then 3871
When 'German' then 4110
When 'GIS' then 4111
When 'Glasgow' then 3740
When 'Glovia' then 4009
When 'Gnu' then 3741
When 'Government' then 4010
When 'Group Policy' then 4112
When 'Groupwise' then 4011
When 'Hadoop' then 3872
When 'Handheld' then 3742
When 'HAZOP' then 4113
When 'Helpdesk Manager' then 3743
When 'Hibernate' then 4012
When 'HP-UX' then 4115
When 'HPUX' then 4114
When 'HR' then 4116
When 'HR, GA &amp; Facilities' then 3099
When 'HSE' then 3744
When 'HTML' then 4013
When 'HTML5' then 4117
When 'Human Resource(sample only)' then 2981
When 'Hyperion' then 4118
When 'IBM' then 4014
When 'IFS' then 4119
When 'IIS' then 3745
When 'Industrial Equipment / Plant / Parts' then 3101
When 'Infor' then 4015
When 'Informatica' then 3873
When 'Infrastructure' then 3874
When 'Infrastructure Manager' then 3875
When 'Infrastructure Project Manager' then 3876
When 'Ingress' then 3746
When 'Interest In Big Data' then 3877
When 'iPhone' then 3878
When 'Ipython' then 4016
When 'ISO20071' then 3879
When 'IT &amp; Telecoms' then 3100
When 'IT Director' then 3880
When 'IT Manager' then 4017
When 'Italian' then 3747
When 'Iterative' then 4120
When 'ITIL' then 3748
When 'J2EE' then 3881
When 'J2ME' then 3882
When 'J2SE' then 3749
When 'Jaspersoft' then 3750
When 'Java' then 3883
When 'JavaScript' then 3751
When 'JBoss' then 3884
When 'Jd Edwards E1' then 4018
When 'JD Edwards World' then 4019
When 'JDBC' then 3752
When 'JDeveloper' then 4121
When 'Jidapa' then 3753
When 'Joomla' then 3754
When 'jQuery' then 3885
When 'JSF' then 4122
When 'JSP' then 4020
When 'JSPHP' then 3886
When 'JUnit' then 4123
When 'JWT' then 3755
When 'Jython' then 4124
When 'Kernel' then 3756
When 'Kimball' then 3757
When 'Knitr' then 3887
When 'Korn Shell' then 3758
When 'Lamp' then 3759
When 'LAN' then 4125
When 'Languages' then 4021
When 'Lean/6 Sigma' then 4126
When 'Legal' then 3102
When 'LINQ' then 4022
When 'Linux' then 3888
When 'Load testing' then 3889
When 'LoadRunner' then 3760
When 'Logistics' then 3890
When 'Lotus' then 3891
When 'Lotus Domino' then 3892
When 'LTE' then 4023
When 'Lync' then 3893
When 'Magento' then 3894
When 'Mahout' then 4024
When 'MAN' then 3895
When 'Manager' then 3761
When 'Managing Director' then 3896
When 'Mandarin' then 3897
When 'Manual Testing' then 3762
When 'Manufacturing' then 3898
When 'Mapics' then 3763
When 'Masters  Level' then 3899
When 'Matlab' then 3764
When 'Maven' then 4025
When 'Maximo' then 3900
When 'mba' then 3765
When 'MCDBA' then 4026
When 'Mcdoogs' then 3901
When 'MCITP' then 3902
When 'MCP' then 3903
When 'MCPD' then 3904
When 'MCSE' then 3905
When 'MCTP' then 3906
When 'MCTS' then 4027
When 'Medical Device / Diagnostics / Analytical' then 3103
When 'Mercury' then 3766
When 'Microsoft' then 4028
When 'Microsoft &amp; SQL Server' then 3907
When 'Microsoft BI' then 4127
When 'Microsoft Partner' then 3908
When 'Microstrategy' then 3909
When 'Microwave' then 3910
When 'Mobile' then 3911
When 'Mobile Development' then 4128
When 'Monitoring' then 4129
When 'MooTools' then 4130
When 'Movex' then 4131
When 'MRP' then 4029
When 'Ms Bi Developer' then 4030
When 'Mura' then 3912
When 'Music' then 2982
When 'MVC' then 4132
When 'MySQL' then 4031
When 'NetAct' then 4133
When 'NetBeans' then 3913
When 'Netezza' then 3767
When 'NetScaler' then 4134
When 'Netsuite' then 3914
When 'Netware' then 3768
When 'Network Engineer' then 4032
When 'Network Manager' then 4033
When 'Networking' then 4135
When 'nHibernate' then 4034
When 'NHS' then 3769
When 'Nosql' then 3770
When 'Novell (Gen)' then 3771
When 'NSN' then 4136
When 'OBIEE' then 3915
When 'Ods' then 4035
When 'Oil And Gas' then 4137
When 'Olap' then 4138
When 'Oltp' then 3916
When 'OO' then 4139
When 'OpenSUSE' then 4036
When 'Operations Manager' then 4037
When 'Oracle' then 4038
When 'Oracle 10g' then 4140
When 'Oracle 11g' then 4141
When 'Oracle 11gR2' then 4142
When 'Oracle 8i' then 3772
When 'Oracle 9i' then 3773
When 'Oracle Application Server' then 3774
When 'Oracle BI' then 3917
When 'Oracle Collaboration' then 3918
When 'Oracle Crm' then 3919
When 'Oracle DataGuard' then 3920
When 'Oracle Designer' then 3775
When 'Oracle Dev (Gen)' then 4143
When 'Oracle ERP' then 3921
When 'Oracle Flashback' then 4144
When 'Oracle Lite' then 3922
When 'Oracle OCA' then 4145
When 'Oracle OCP' then 3923
When 'Oracle OEM' then 4039
When 'Oracle RAC' then 3924
When 'Oracle RMAN' then 3925
When 'OSS' then 4040
When 'Outlook' then 3926
When 'OWB' then 3927
When 'Panda' then 4041
When 'Panorama' then 4146
When 'Pascal' then 3776
When 'Pegasus' then 3777
When 'Pentaho' then 3778
When 'PeopleSoft' then 3928
When 'Performance Point' then 3929
When 'Performance Testing' then 4147
When 'Perl' then 4148
When 'Perth' then 4149
When 'Pharawi' then 3930
When 'Pharma' then 4150
When 'Pharmaceutical / CRO / Reagents / Personal Care' then 3104
When 'PHD Level' then 3931
When 'PHP' then 3779
When 'PHP (General)' then 4151
When 'PHP5' then 3780
When 'PL/SQL' then 3932
When 'PMO' then 4152
When 'Prairie' then 4153
When 'Process Safety' then 3781
When 'Procurement' then 3933
When 'Product Manager' then 4042
When 'Prognoz' then 3782
When 'Programme Manager' then 4154
When 'Progress' then 3934
When 'Project Manager' then 3783
When 'PS Core' then 4155
When 'Publisher' then 3935
When 'Python' then 3784
When 'QA' then 3785
When 'Qlikview' then 4156
When 'QTP' then 3936
When 'RAD' then 3786
When 'Radio' then 3787
When 'RCN' then 3937
When 'Real Estate &amp; Insurance' then 3105
When 'RedHat' then 3788
When 'Regression Testing' then 4043
When 'Reports' then 3938
When 'Retail' then 4157
When 'RF' then 3939
When 'Ruby' then 3789
When 'Ruby on Rails' then 4158
When 'RUP' then 3790
When 'Russian' then 3940
When 'Sage' then 3791
When 'Sales &amp; Marketing' then 3106
When 'Salesforce' then 4159
When 'Salient' then 4044
When 'Samba' then 4160
When 'SAP' then 3792
When 'SAP ABAP' then 3793
When 'SAP BI' then 4161
When 'Sap Crm' then 4045
When 'SAP CRM (Gen)' then 4046
When 'SAP CRM Interaction Centre' then 4162
When 'SAP CRM Marketing' then 3941
When 'SAP CRM Web' then 3794
When 'SAP FICO' then 3795
When 'SAP Financials' then 4163
When 'SAP HR' then 4047
When 'SAP MM' then 3942
When 'SAP PP' then 3943
When 'SAP QM' then 3944
When 'SAS' then 3796
When 'SBS' then 4164
When 'Scala' then 4165
When 'SCCM' then 3945
When 'Script.aculo.us' then 4048
When 'Scrum' then 3946
When 'Security Testing' then 4049
When 'Selenium' then 4050
When 'Semiconductor / Embedded Device' then 3107
When 'Server Engineer' then 4051
When 'Server Support' then 3947
When 'Service Delivery Manager' then 4166
When 'Servlets' then 3948
When 'Sharepoint' then 3797
When 'Shell Script' then 3949
When 'Siebel' then 4167
When 'Siebel BI' then 4168
When 'Silverlight' then 4169
When 'SiteCore' then 3798
When 'Sittikarn' then 4052
When 'Software' then 3950
When 'Software Developer' then 3951
When 'Software Project Manager' then 3952
When 'Solaris' then 3799
When 'Spanish' then 3953
When 'Spring' then 4170
When 'SQL' then 4171
When 'SQL Server' then 3800
When 'SQL Server 2000' then 3954
When 'SQL Server 2005' then 3801
When 'SQL Server 2008' then 4053
When 'SQL Server 2012' then 4054
When 'SQL Server 2014' then 4055
When 'SQL Server Compact' then 4172
When 'SSAS' then 4173
When 'SSIS' then 3802
When 'SSRS' then 4056
When 'Stirling' then 4174
When 'Storage' then 4057
When 'Struts' then 4058
When 'Sugar' then 4175
When 'Sun Accounts' then 3955
When 'Sun Certified' then 3803
When 'Supply Chain Management' then 3108
When 'Swing' then 3804
When 'Sybase' then 3805
When 'Symfony' then 3806
When 'Syspro' then 4059
When 'Systems Analyst' then 3807
When 'Systems Testing' then 4176
When 'T-SQL' then 4181
When 'Tableau' then 4060
When 'Tapestry' then 3956
When 'Targit' then 4061
When 'TCP/IP' then 3957
When 'Team Leader' then 3808
When 'Technical Consultancy' then 3809
When 'Test Director' then 4062
When 'Test Manager' then 4177
When 'Tester' then 4178
When 'Testing' then 3810
When 'TETRA Telecoms' then 3811
When 'TFS' then 4179
When 'Third Sector' then 3812
When 'Tibco' then 4180
When 'Tomcat' then 3958
When 'Traffic' then 4063
When 'Trainer' then 4064
When 'UAT' then 4182
When 'UI' then 3959
When 'UMTS' then 4065
When 'Unit Testing' then 4183
When 'Unix (Gen)' then 3960
When 'Unix Dev (Gen)' then 4184
When 'UNIX/LINUX' then 4185
When 'Utilities' then 4186
When 'UTRAN' then 3813
When 'UX' then 4066
When 'VB.Net' then 4067
When 'VBA' then 3961
When 'Verilog' then 3962
When 'Virtualisation' then 3814
When 'Visual Basic' then 3963
When 'VMODEL' then 4187
When 'Voice' then 3815
When 'VPN' then 3964
When 'W3C' then 3816
When 'Wamp' then 3817
When 'WAN' then 4068
When 'Waterfall' then 3965
When 'WCF' then 4188
When 'Web Designer' then 3818
When 'WF' then 3819
When 'WIFI' then 3966
When 'WiMAX' then 3967
When 'Windows Desktop' then 4189
When 'Windows Server' then 3820
When 'WLAN' then 3821
When 'WordPress' then 3968
When 'WPF' then 3822
When 'Xamarin' then 3823
When 'XAML' then 3969
When 'XenApp' then 4190
When 'Xendesktop' then 3824
When 'XenServer' then 4069
When 'XHTML' then 4070
When 'XML' then 3825
When 'XPATH' then 3826
When 'XQuery' then 4071
When 'XSL' then 3970
When 'XSLT' then 4072
When 'Yellowfin' then 4191
When 'YUI' then 3971
When 'Zend' then 3972
else '' end fe
from t
--where UniqueID = '1935'
</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1680</xloc>
      <yloc>1680</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate FE-SFE 2 2 2</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <sql>
with
-- FE
  CateSplit(userid, categoryid) as (SELECT userid, Split.a.value('.','varchar(2000)') AS categoryID FROM (SELECT userid, CAST('&lt;M>' + REPLACE(cast(categoryIDList as varchar(max)),',','&lt;/M>&lt;M>') + '&lt;/M>' AS XML) AS x FROM  bullhorn1.Candidate where isPrimaryOwner = 1) t CROSS APPLY x.nodes('/M') as Split(a) )
, CName(Userid, Name) as (SELECT Userid, CL.occupation from CateSplit left join bullhorn1.BH_CategoryList CL ON CateSplit.categoryid = CL.categoryID )
--select count(distinct userid) from CName --11792
--select distinct Name from CName

-- SFE
-- SkillName: split by separate rows by comma, then combine them into SkillName
, SkillName0(userid, skillID) as (SELECT userid, Split.a.value('.', 'VARCHAR(2000)') AS skillID FROM (SELECT userid, CAST('&lt;M>' + REPLACE(cast(skillIDList as varchar(max)),',','&lt;/M>&lt;M>') + '&lt;/M>' AS XML) AS x FROM  bullhorn1.Candidate where isPrimaryOwner = 1) t CROSS APPLY x.nodes('/M') AS Split(a) )
, SkillName(userId, SkillName) as (SELECT userId, SL.name from SkillName0 left join bullhorn1.BH_SkillList SL ON SkillName0.skillID = SL.skillID WHERE SkillName0.skillID &lt;&gt; '')
--select distinct SkillName from SkillName
-- where SkillName in ('Product Mgmt &amp; Marketing','Customer/Data Analytics','Cash Ops','Investment/Portfolio Mgmt','Investment research and analysis','Credit admin/ops','Card Ops','HR Analytics','Compensation','Benefits','L&amp;D','Robotic process automation (RPA)','AI &amp; machine learning','JD Edwards ERP','Avaloq','Cognos','Hyperion','Bloomberg','Reuters','Matlab','Labview','Pro E+','SAS','Qlikview','Tableau','R Programming','SPSS','Mobile app developer','Assistant Manager','Senior Manager','Local','Startup','Social Insights &amp; Analytics','Art Creative Director','Copy Art Director','Integrated Marketing','Digital media','Customer/Data Analytics','Risk &amp; Compliance','Advisory/Sales','Investment/Portfolio Mgmt','Project Mgmt/Transformation','Client Service/Call Centre','Capex or Opex category sourcing','Chemical sourcing','Consumables category','Electrical category','Electronic component category','EMS category','Flavour category','Frangrance category','IT category sourcing','Logistic category sourcing','Marketing category sourcing','Mechanical category','NPI category sourcing','Oil &amp; gas sourcing','Professional category sourcing','Project category sourcing','Supplier mgmt','Raw material sourcing','Reverse auction','Distribution','Media research')

, cfe as (select CA.candidateID, concat(ca.FirstName,' ',ca.lastName) as fullname
        --, CName.Name as fe
, case cn.name
When 'Accounting &amp; Finance' then 'Accounting &amp; Finance'
When 'Banking' then 'Banking'
When 'Commercial Planning' then 'Commercial Planning'
When 'Fundraising' then 'Fundraising'
When 'General Manager' then 'General Manager'
When 'HR' then 'HR'
When 'Insurance' then 'Insurance'
When 'IT Skills' then 'IT Knowledge'
When 'IT&amp;T Functions' then 'IT &amp; T'
When 'Job Seniority' then 'Job Seniority'
When 'Marketing &amp; Communications' then 'Marketing &amp; Communications'
When 'Media' then 'Media'
When 'Operations' then 'Operations'
When 'Other Area(s)' then 'Administrative'
When 'Procurement' then 'Procurement'
When 'Sales/BD' then 'Sales &amp; BD'
When 'Supply Chain' then 'Supply Chain Management' end as fe        
        --, sn.SkillName as sfe
, case sn.SkillName
When 'Account Management' then 'Account mgmt'
When 'Advisory' then 'Advisory'
When 'Affiliate Sales' then 'Affiliate sales'
When 'AIX' then 'AIX'
When 'Application support' then 'Application support'
When 'AR and AP' then 'Accounts receivable &amp; Accounts payables'
When 'Architect' then 'Software architect'
When 'ASP.NET' then 'ASP.net'
When 'Asset Management' then 'Asset mgmt ops'
When 'Audit &amp; Assurance Director' then 'Audit &amp; assurance'
When 'banking ops &amp; processing' then 'Branch ops'
When 'BCM/BCP' then 'BCM/BCP'
When 'Bonds/Fixed Income' then 'Bonds/Fixed income'
When 'Brand Manager' then 'Brand manager'
When 'Business Analyst' then 'Business analyst'
When 'Business Development' then 'Business development'
When 'Business Intelligence(BI)' then 'Business Intelligence(BI)'
When 'Business Objects' then 'Business Objects'
When 'business planning' then 'Business planning'
When 'BUSINESS PLANNING / ANALYSIS' then 'Business planning / analysis'
When 'C#' then 'C#'
When 'C&amp;B' then 'C&amp;B'
When 'C++' then 'C++'
When 'Campus Recruitment' then 'Campus recruitment'
When 'CAPACITY PLANNING' then 'Capacity planning'
When 'CFO' then 'CFO'
When 'Change mgt/M&amp;A/HR Transformation/Project Management' then 'Change mgmt/M&amp;A/HR transformation project'
When 'CIO/CTO' then 'CIO/CTO'
When 'Claims processing' then 'Claims processing'
When 'Client Services' then 'Credit admin/ops'
When 'Commercial Banking' then 'Wholesale banking ops'
When 'Commodities' then 'Commodities'
When 'Compliance' then 'Compliance'
When 'Consolidation' then 'Consolidation'
When 'Consumer/Retail Banking' then 'Retail banking ops'
When 'Content' then 'Content'
When 'Corp Comms' then 'Corp comms'
When 'Corporate Banking' then 'Wholesale banking ops'
When 'Corporate Finance' then 'Corporate finance'
When 'Costing Controller' then 'Costing'
When 'Credit Controller' then 'Credit control'
When 'CRM' then 'CRM software'
When 'Crystal Reports' then 'Crystal reports'
When 'custody &amp; settlements' then 'Custody &amp; settlements'
When 'Customer Service' then 'Customer service'
When 'Data Analytics' then 'Data analytics'
When 'Data Centre Operations' then 'Data centre ops'
When 'Data Marketing' then 'Data marketing'
When 'Data Warehouse' then 'Data warehouse'
When 'Database Administrator' then 'Database administrator'
When 'Datamining' then 'Data mining'
When 'Demand Planning' then 'Demand planning'
When 'Derivatives' then 'Derivatives'
When 'Developer' then 'Software developer'
When 'Digital Marketing' then 'Digital marketing'
When 'Direct Purchasing' then 'Direct purchasing'
When 'Direct Tax' then 'Direct tax'
When 'Distribution' then 'Distribution'
When 'Diversity' then 'Diversity'
When 'Ecommerce' then 'eCommerce'
When 'Employee Communications' then 'Employee communications'
When 'Employee Relations' then 'Employee relations'
When 'Equities' then 'Equities'
When 'ERP - Oracle' then 'Oracle ERP'
When 'ERP - Others' then 'Other ERP'
When 'ERP - SAP' then 'SAP ERP'
When 'ERP- PeopleSoft' then 'Peoplesoft ERP'
When 'ETL' then 'ETL'
When 'Executive/Analyst' then 'Executive/Analyst'
When 'Expat' then 'Mobility'
When 'External Audit' then 'External audit'
When 'FINANCE CONTROLLER' then 'Finance controller'
When 'Finance Director' then 'Finance director'
When 'Finance Shared Services' then 'Finance shared services'
When 'Finance/Accounting Manager' then 'Finance manager'
When 'FINANCIAL ACCOUNTANT' then 'Financial accounting'
When 'Financial Analyst' then 'Financial planning &amp; analysis'
When 'Front Office' then 'Sales/BD'
When 'fund admin/ops' then 'Fund admin/ops'
When 'Fundraising' then 'Fundraising'
When 'Futures' then 'Futures'
When 'FX/MM' then 'FX/MM'
When 'Hedge Fund' then 'Hedge fund'
When 'Hedging' then 'Hedging'
When 'Helpdesk/Desktop Support' then 'Helpdesk/Desktop Support'
When 'HR Director' then 'HR generalist'
When 'HR Executive' then 'HR generalist'
When 'HR Generalist' then 'HR generalist'
When 'HR Manager' then 'HR generalist'
When 'HR Operations' then 'HR ops'
When 'hr reporting' then 'HR reporting'
When 'HRBP' then 'HR BP'
When 'HRIS' then 'HRIS'
When 'HRSS' then 'HRSS'
When 'Indirect Purchasing' then 'Indirect purchasing'
When 'Indirect Tax' then 'Indirect tax'
When 'Internal Audit Director' then 'Internal audit'
When 'Inventory management' then 'Inventory mgmt'
When 'Investment banking' then 'Investment banking'
When 'IT Audit' then 'IT audit'
When 'IT governance' then 'IT governance'
When 'IT Manager' then 'IT mgmt'
When 'IT Security/ID Admin' then 'IT security/ID admin'
When 'Java' then 'Java'
When 'Journalist' then 'Journalist'
When 'JSP/Java servlets' then 'JSP/Java servlets'
When 'Linux' then 'Linux'
When 'Logistics' then 'Logistics'
When 'Management Accountant' then 'Management accounting'
When 'Manager' then 'Manager'
When 'manufacturing sourcing' then 'Manufacturing sourcing'
When 'Marcoms' then 'Marcomms'
When 'market planning' then 'Market planning'
When 'Market/Credit Risk' then 'Market/Credit risk'
When 'Marketing Manager' then 'Marketing manager'
When 'Master Data Management' then 'Master data mgmt'
When 'MATERIALS MGMT' then 'Material mgmt'
When 'Media Sales' then 'Media sales'
When 'midas/kondor+' then 'Midas/Kondor+'
When 'MS SQL' then 'MS SQL'
When 'Murex' then 'Murex'
When 'Network administrator' then 'Network administrator'
When 'Network Security' then 'Network security'
When 'New production introduction' then 'New product introduction'
When 'OD/L&amp;D' then 'OD'
When 'Order fulfilment' then 'Order fulfilment'
When 'PA/Executive Admin/Secretary' then 'PA/Executive Admin/Secretary'
When 'packaging category sourcing' then 'Packaging category sourcing'
When 'payment &amp; cash management' then 'Payment ops'
When 'Payroll' then 'Payroll'
When 'PL SQL/Oracle' then 'PL SQL/Oracle'
When 'Planning &amp; Analysis Manager' then 'Financial Planning &amp; Analysis'
When 'PMO' then 'PMO'
When 'Policy' then 'Policy'
When 'PR' then 'PR'
When 'PR Agency' then 'PR agency'
When 'Private Banking' then 'PB ops'
When 'Process re-engineering' then 'Process re-engineering'
When 'procurement excellence' then 'Procurement excellence'
When 'Product Control' then 'Product control'
When 'Product Management' then 'Product Mgmt/Marketing'
When 'Program Sales' then 'Program sales'
When 'Programming' then 'Media programming'
When 'Project/Programme Manager' then 'Project/Programme mgmt'
When 'projects &amp; change management' then 'Project mgmt &amp; transformation'
When 'Recruitment' then 'Recruitment'
When 'Regional' then 'Regional'
When 'Regulatory/Compliance' then 'Compliance'
When 'Relationship Management' then 'Relationship mgmt'
When 'Researcher/Resourcer' then 'Researcher/Resourcer'
When 'retail planning' then 'Retail planning'
When 'Risk Management' then 'Risk mgmt'
When 'Ruby on Rails' then 'Ruby on rails'
When 'Sales' then 'Sales'
When 'Sales Operations' then 'Sales ops'
When 'SAP ABAP' then 'SAP ABAP'
When 'SAP Basis' then 'SAP Basis'
When 'SCM processes - business' then 'SCM process - business'
When 'SCM processes – mfg' then 'SCM process - mfg'
When 'SEM' then 'SEM'
When 'SEO' then 'SEO'
When 'Sharepoint' then 'Sharepoint'
When 'Social Media' then 'Social media'
When 'Software Qa Analyst' then 'Software QA'
When 'Software Tester' then 'Software testing'
When 'Solaris' then 'Solaris'
When 'Storage Administrator' then 'Storage administrator'
When 'Structured/Hybrid Products' then 'Structured/Hybrid Products'
When 'Supply and demanding planning' then 'Supply and demand planning'
When 'Supply Planning' then 'Supply planning'
When 'System Administrator' then 'System administrator'
When 'System Integration' then 'System integration'
When 'T SQL/Sybase' then 'T SQL/Sybase'
When 'T&amp;D' then 'T&amp;D'
When 'Talent Management' then 'Talent Mgmt'
When 'Tax Director' then 'Tax'
When 'Tax Manager' then 'Tax'
When 'Team Lead' then 'Team lead'
When 'Technical Writer' then 'Technical writer'
When 'Trade Finance' then 'Trade ops'
When 'Transaction Banking' then 'Transaction services'
When 'Treasury director' then 'Treasury'
When 'Treasury Manager' then 'Treasury'
When 'Underwriter' then 'Underwriting'
When 'UNIX' then 'Unix'
When 'VB' then 'VB'
When 'VB.NET' then 'VB.NET'
When 'VBA' then 'VBA'
When 'VC++' then 'VC++'
When 'Voice/VoIP' then 'Voice/VoIP'
When 'VP/Director' then 'VP/Director'
When 'Warehouse and distribution' then 'Warehouse'
When 'Wealth Management' then 'Wealth Mgmt Ops'
When 'Website Developer' then 'Web app developer'
When 'Windows NT/2000/XP' then 'Windows servers'
When 'Workforce Planning' then 'Workforce planning'
When 'Algo/Electronic Trading' then 'Algo/Electronic trading'
When 'Consumer asset' then 'Consumer asset'
When 'Corporate planning' then 'Corporate strategy'
When 'Merchandise planning' then 'Merchandise planning'
When 'Community Management' then 'Community mgmt'
When 'CRM' then 'CRM'
When 'Digital media planner' then 'Digital media planner'
When 'Supply chain excellence' then 'Supply chain excellence'
When 'Supply chain finance' then 'Supply chain finance'
end as sfe
from bullhorn1.Candidate CA
left join CName cn on cn.userid = ca.userid
left join SkillName sn on sn.userid = ca.userid
where ca.isPrimaryOwner = 1
)

, t as (
select candidateID, fullname
, case fe
when 'Human Resource(sample only)' then 2981
when 'Automotive / Automotive Parts' then 3094
when 'Banking &amp; Finance' then 3095
when 'Chemical / Material' then 3096
when 'Engineering' then 3097
when 'Executive Management' then 3098
when 'HR, GA &amp; Facilities' then 3099
when 'IT &amp; Telecoms' then 3100
when 'Industrial Equipment / Plant / Parts' then 3101
when 'Legal' then 3102
when 'Medical Device / Diagnostics / Analytical' then 3103
when 'Pharmaceutical / CRO / Reagents / Personal Care' then 3104
when 'Real Estate &amp; Insurance' then 3105
when 'Sales &amp; Marketing' then 3106
when 'Semiconductor / Embedded Device' then 3107
when 'Supply Chain Management' then 3108
when 'Accounting &amp; Finance' then 3093
when 'Music' then 2982
when 'Administrative' then 3111
when 'Banking' then 3112
when 'Commercial Planning' then 3113
when 'Fundraising' then 3114
when 'General Manager' then 3115
when 'HR' then 3116
when 'Insurance' then 3117
when 'IT &amp; T' then 3118
when 'IT Knowledge' then 3119
when 'Job Seniority' then 3120
when 'Marketing &amp; Communications' then 3121
when 'Media' then 3122
when 'Operations' then 3123
when 'Procurement' then 3124
when 'Sales &amp; BD' then 3125 end as feid
, sfe
from cfe
)

select *
from t
where feid is not null
--and candidateID = 300
</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1680</xloc>
      <yloc>1520</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate FE-SFE 2 2 2 2</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <sql>
with
-- FE
  CateSplit(userid, categoryid) as (SELECT userid, Split.a.value('.','varchar(2000)') AS categoryID FROM (SELECT userid, CAST('&lt;M>' + REPLACE(cast(categoryIDList as varchar(max)),',','&lt;/M>&lt;M>') + '&lt;/M>' AS XML) AS x FROM  bullhorn1.Candidate where isPrimaryOwner = 1) t CROSS APPLY x.nodes('/M') as Split(a) )
, CName(Userid, Name) as (SELECT Userid, CL.occupation from CateSplit left join bullhorn1.BH_CategoryList CL ON CateSplit.categoryid = CL.categoryID )
--select count(distinct userid) from CName --11792
--select distinct Name from CName

-- SFE
-- SkillName: split by separate rows by comma, then combine them into SkillName
, SkillName0(userid, skillID) as (SELECT userid, Split.a.value('.', 'VARCHAR(2000)') AS skillID FROM (SELECT userid, CAST('&lt;M>' + REPLACE(cast(skillIDList as varchar(max)),',','&lt;/M>&lt;M>') + '&lt;/M>' AS XML) AS x FROM  bullhorn1.Candidate where isPrimaryOwner = 1) t CROSS APPLY x.nodes('/M') AS Split(a) )
, SkillName(userId, SkillName) as (SELECT userId, SL.name from SkillName0 left join bullhorn1.BH_SkillList SL ON SkillName0.skillID = SL.skillID WHERE SkillName0.skillID &lt;&gt; '')
--select distinct SkillName from SkillName
-- where SkillName in ('Product Mgmt &amp; Marketing','Customer/Data Analytics','Cash Ops','Investment/Portfolio Mgmt','Investment research and analysis','Credit admin/ops','Card Ops','HR Analytics','Compensation','Benefits','L&amp;D','Robotic process automation (RPA)','AI &amp; machine learning','JD Edwards ERP','Avaloq','Cognos','Hyperion','Bloomberg','Reuters','Matlab','Labview','Pro E+','SAS','Qlikview','Tableau','R Programming','SPSS','Mobile app developer','Assistant Manager','Senior Manager','Local','Startup','Social Insights &amp; Analytics','Art Creative Director','Copy Art Director','Integrated Marketing','Digital media','Customer/Data Analytics','Risk &amp; Compliance','Advisory/Sales','Investment/Portfolio Mgmt','Project Mgmt/Transformation','Client Service/Call Centre','Capex or Opex category sourcing','Chemical sourcing','Consumables category','Electrical category','Electronic component category','EMS category','Flavour category','Frangrance category','IT category sourcing','Logistic category sourcing','Marketing category sourcing','Mechanical category','NPI category sourcing','Oil &amp; gas sourcing','Professional category sourcing','Project category sourcing','Supplier mgmt','Raw material sourcing','Reverse auction','Distribution','Media research')

, cfe as (select CA.candidateID, concat(ca.FirstName,' ',ca.lastName) as fullname
        --, CName.Name as fe
, case cn.name
When 'Accounting &amp; Finance' then 'Accounting &amp; Finance'
When 'Banking' then 'Banking'
When 'Commercial Planning' then 'Commercial Planning'
When 'Fundraising' then 'Fundraising'
When 'General Manager' then 'General Manager'
When 'HR' then 'HR'
When 'Insurance' then 'Insurance'
When 'IT Skills' then 'IT Knowledge'
When 'IT&amp;T Functions' then 'IT &amp; T'
When 'Job Seniority' then 'Job Seniority'
When 'Marketing &amp; Communications' then 'Marketing &amp; Communications'
When 'Media' then 'Media'
When 'Operations' then 'Operations'
When 'Other Area(s)' then 'Administrative'
When 'Procurement' then 'Procurement'
When 'Sales/BD' then 'Sales &amp; BD'
When 'Supply Chain' then 'Supply Chain Management' end as fe        
        --, sn.SkillName as sfe
, case sn.SkillName
When 'Account Management' then 'Account mgmt'
When 'Advisory' then 'Advisory'
When 'Affiliate Sales' then 'Affiliate sales'
When 'AIX' then 'AIX'
When 'Application support' then 'Application support'
When 'AR and AP' then 'Accounts receivable &amp; Accounts payables'
When 'Architect' then 'Software architect'
When 'ASP.NET' then 'ASP.net'
When 'Asset Management' then 'Asset mgmt ops'
When 'Audit &amp; Assurance Director' then 'Audit &amp; assurance'
When 'banking ops &amp; processing' then 'Branch ops'
When 'BCM/BCP' then 'BCM/BCP'
When 'Bonds/Fixed Income' then 'Bonds/Fixed income'
When 'Brand Manager' then 'Brand manager'
When 'Business Analyst' then 'Business analyst'
When 'Business Development' then 'Business development'
When 'Business Intelligence(BI)' then 'Business Intelligence(BI)'
When 'Business Objects' then 'Business Objects'
When 'business planning' then 'Business planning'
When 'BUSINESS PLANNING / ANALYSIS' then 'Business planning / analysis'
When 'C#' then 'C#'
When 'C&amp;B' then 'C&amp;B'
When 'C++' then 'C++'
When 'Campus Recruitment' then 'Campus recruitment'
When 'CAPACITY PLANNING' then 'Capacity planning'
When 'CFO' then 'CFO'
When 'Change mgt/M&amp;A/HR Transformation/Project Management' then 'Change mgmt/M&amp;A/HR transformation project'
When 'CIO/CTO' then 'CIO/CTO'
When 'Claims processing' then 'Claims processing'
When 'Client Services' then 'Credit admin/ops'
When 'Commercial Banking' then 'Wholesale banking ops'
When 'Commodities' then 'Commodities'
When 'Compliance' then 'Compliance'
When 'Consolidation' then 'Consolidation'
When 'Consumer/Retail Banking' then 'Retail banking ops'
When 'Content' then 'Content'
When 'Corp Comms' then 'Corp comms'
When 'Corporate Banking' then 'Wholesale banking ops'
When 'Corporate Finance' then 'Corporate finance'
When 'Costing Controller' then 'Costing'
When 'Credit Controller' then 'Credit control'
When 'CRM' then 'CRM software'
When 'Crystal Reports' then 'Crystal reports'
When 'custody &amp; settlements' then 'Custody &amp; settlements'
When 'Customer Service' then 'Customer service'
When 'Data Analytics' then 'Data analytics'
When 'Data Centre Operations' then 'Data centre ops'
When 'Data Marketing' then 'Data marketing'
When 'Data Warehouse' then 'Data warehouse'
When 'Database Administrator' then 'Database administrator'
When 'Datamining' then 'Data mining'
When 'Demand Planning' then 'Demand planning'
When 'Derivatives' then 'Derivatives'
When 'Developer' then 'Software developer'
When 'Digital Marketing' then 'Digital marketing'
When 'Direct Purchasing' then 'Direct purchasing'
When 'Direct Tax' then 'Direct tax'
When 'Distribution' then 'Distribution'
When 'Diversity' then 'Diversity'
When 'Ecommerce' then 'eCommerce'
When 'Employee Communications' then 'Employee communications'
When 'Employee Relations' then 'Employee relations'
When 'Equities' then 'Equities'
When 'ERP - Oracle' then 'Oracle ERP'
When 'ERP - Others' then 'Other ERP'
When 'ERP - SAP' then 'SAP ERP'
When 'ERP- PeopleSoft' then 'Peoplesoft ERP'
When 'ETL' then 'ETL'
When 'Executive/Analyst' then 'Executive/Analyst'
When 'Expat' then 'Mobility'
When 'External Audit' then 'External audit'
When 'FINANCE CONTROLLER' then 'Finance controller'
When 'Finance Director' then 'Finance director'
When 'Finance Shared Services' then 'Finance shared services'
When 'Finance/Accounting Manager' then 'Finance manager'
When 'FINANCIAL ACCOUNTANT' then 'Financial accounting'
When 'Financial Analyst' then 'Financial planning &amp; analysis'
When 'Front Office' then 'Sales/BD'
When 'fund admin/ops' then 'Fund admin/ops'
When 'Fundraising' then 'Fundraising'
When 'Futures' then 'Futures'
When 'FX/MM' then 'FX/MM'
When 'Hedge Fund' then 'Hedge fund'
When 'Hedging' then 'Hedging'
When 'Helpdesk/Desktop Support' then 'Helpdesk/Desktop Support'
When 'HR Director' then 'HR generalist'
When 'HR Executive' then 'HR generalist'
When 'HR Generalist' then 'HR generalist'
When 'HR Manager' then 'HR generalist'
When 'HR Operations' then 'HR ops'
When 'hr reporting' then 'HR reporting'
When 'HRBP' then 'HR BP'
When 'HRIS' then 'HRIS'
When 'HRSS' then 'HRSS'
When 'Indirect Purchasing' then 'Indirect purchasing'
When 'Indirect Tax' then 'Indirect tax'
When 'Internal Audit Director' then 'Internal audit'
When 'Inventory management' then 'Inventory mgmt'
When 'Investment banking' then 'Investment banking'
When 'IT Audit' then 'IT audit'
When 'IT governance' then 'IT governance'
When 'IT Manager' then 'IT mgmt'
When 'IT Security/ID Admin' then 'IT security/ID admin'
When 'Java' then 'Java'
When 'Journalist' then 'Journalist'
When 'JSP/Java servlets' then 'JSP/Java servlets'
When 'Linux' then 'Linux'
When 'Logistics' then 'Logistics'
When 'Management Accountant' then 'Management accounting'
When 'Manager' then 'Manager'
When 'manufacturing sourcing' then 'Manufacturing sourcing'
When 'Marcoms' then 'Marcomms'
When 'market planning' then 'Market planning'
When 'Market/Credit Risk' then 'Market/Credit risk'
When 'Marketing Manager' then 'Marketing manager'
When 'Master Data Management' then 'Master data mgmt'
When 'MATERIALS MGMT' then 'Material mgmt'
When 'Media Sales' then 'Media sales'
When 'midas/kondor+' then 'Midas/Kondor+'
When 'MS SQL' then 'MS SQL'
When 'Murex' then 'Murex'
When 'Network administrator' then 'Network administrator'
When 'Network Security' then 'Network security'
When 'New production introduction' then 'New product introduction'
When 'OD/L&amp;D' then 'OD'
When 'Order fulfilment' then 'Order fulfilment'
When 'PA/Executive Admin/Secretary' then 'PA/Executive Admin/Secretary'
When 'packaging category sourcing' then 'Packaging category sourcing'
When 'payment &amp; cash management' then 'Payment ops'
When 'Payroll' then 'Payroll'
When 'PL SQL/Oracle' then 'PL SQL/Oracle'
When 'Planning &amp; Analysis Manager' then 'Financial Planning &amp; Analysis'
When 'PMO' then 'PMO'
When 'Policy' then 'Policy'
When 'PR' then 'PR'
When 'PR Agency' then 'PR agency'
When 'Private Banking' then 'PB ops'
When 'Process re-engineering' then 'Process re-engineering'
When 'procurement excellence' then 'Procurement excellence'
When 'Product Control' then 'Product control'
When 'Product Management' then 'Product Mgmt/Marketing'
When 'Program Sales' then 'Program sales'
When 'Programming' then 'Media programming'
When 'Project/Programme Manager' then 'Project/Programme mgmt'
When 'projects &amp; change management' then 'Project mgmt &amp; transformation'
When 'Recruitment' then 'Recruitment'
When 'Regional' then 'Regional'
When 'Regulatory/Compliance' then 'Compliance'
When 'Relationship Management' then 'Relationship mgmt'
When 'Researcher/Resourcer' then 'Researcher/Resourcer'
When 'retail planning' then 'Retail planning'
When 'Risk Management' then 'Risk mgmt'
When 'Ruby on Rails' then 'Ruby on rails'
When 'Sales' then 'Sales'
When 'Sales Operations' then 'Sales ops'
When 'SAP ABAP' then 'SAP ABAP'
When 'SAP Basis' then 'SAP Basis'
When 'SCM processes - business' then 'SCM process - business'
When 'SCM processes – mfg' then 'SCM process - mfg'
When 'SEM' then 'SEM'
When 'SEO' then 'SEO'
When 'Sharepoint' then 'Sharepoint'
When 'Social Media' then 'Social media'
When 'Software Qa Analyst' then 'Software QA'
When 'Software Tester' then 'Software testing'
When 'Solaris' then 'Solaris'
When 'Storage Administrator' then 'Storage administrator'
When 'Structured/Hybrid Products' then 'Structured/Hybrid Products'
When 'Supply and demanding planning' then 'Supply and demand planning'
When 'Supply Planning' then 'Supply planning'
When 'System Administrator' then 'System administrator'
When 'System Integration' then 'System integration'
When 'T SQL/Sybase' then 'T SQL/Sybase'
When 'T&amp;D' then 'T&amp;D'
When 'Talent Management' then 'Talent Mgmt'
When 'Tax Director' then 'Tax'
When 'Tax Manager' then 'Tax'
When 'Team Lead' then 'Team lead'
When 'Technical Writer' then 'Technical writer'
When 'Trade Finance' then 'Trade ops'
When 'Transaction Banking' then 'Transaction services'
When 'Treasury director' then 'Treasury'
When 'Treasury Manager' then 'Treasury'
When 'Underwriter' then 'Underwriting'
When 'UNIX' then 'Unix'
When 'VB' then 'VB'
When 'VB.NET' then 'VB.NET'
When 'VBA' then 'VBA'
When 'VC++' then 'VC++'
When 'Voice/VoIP' then 'Voice/VoIP'
When 'VP/Director' then 'VP/Director'
When 'Warehouse and distribution' then 'Warehouse'
When 'Wealth Management' then 'Wealth Mgmt Ops'
When 'Website Developer' then 'Web app developer'
When 'Windows NT/2000/XP' then 'Windows servers'
When 'Workforce Planning' then 'Workforce planning'
When 'Algo/Electronic Trading' then 'Algo/Electronic trading'
When 'Consumer asset' then 'Consumer asset'
When 'Corporate planning' then 'Corporate strategy'
When 'Merchandise planning' then 'Merchandise planning'
When 'Community Management' then 'Community mgmt'
When 'CRM' then 'CRM'
When 'Digital media planner' then 'Digital media planner'
When 'Supply chain excellence' then 'Supply chain excellence'
When 'Supply chain finance' then 'Supply chain finance'
end as sfe
from bullhorn1.Candidate CA
left join CName cn on cn.userid = ca.userid
left join SkillName sn on sn.userid = ca.userid
where ca.isPrimaryOwner = 1
)

, t as (
select candidateID, fullname
, case fe
when 'Human Resource(sample only)' then 2981
when 'Automotive / Automotive Parts' then 3094
when 'Banking &amp; Finance' then 3095
when 'Chemical / Material' then 3096
when 'Engineering' then 3097
when 'Executive Management' then 3098
when 'HR, GA &amp; Facilities' then 3099
when 'IT &amp; Telecoms' then 3100
when 'Industrial Equipment / Plant / Parts' then 3101
when 'Legal' then 3102
when 'Medical Device / Diagnostics / Analytical' then 3103
when 'Pharmaceutical / CRO / Reagents / Personal Care' then 3104
when 'Real Estate &amp; Insurance' then 3105
when 'Sales &amp; Marketing' then 3106
when 'Semiconductor / Embedded Device' then 3107
when 'Supply Chain Management' then 3108
when 'Accounting &amp; Finance' then 3093
when 'Music' then 2982
when 'Administrative' then 3111
when 'Banking' then 3112
when 'Commercial Planning' then 3113
when 'Fundraising' then 3114
when 'General Manager' then 3115
when 'HR' then 3116
when 'Insurance' then 3117
when 'IT &amp; T' then 3118
when 'IT Knowledge' then 3119
when 'Job Seniority' then 3120
when 'Marketing &amp; Communications' then 3121
when 'Media' then 3122
when 'Operations' then 3123
when 'Procurement' then 3124
when 'Sales &amp; BD' then 3125 end as feid
, sfe
from cfe
)

select *
from t
where feid is not null
--and candidateID = 300
</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1680</xloc>
      <yloc>1584</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate id</name>
    <type>DBLookup</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidateID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>final_candidate_id</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1920</xloc>
      <yloc>576</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate industry</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>-- BusinessSector: split by separate rows by comma, then combine them into Business Sector(Industry)
with
  BusinessSector0(userid, businessSectorID) as (SELECT userid, a.value as ind FROM  bullhorn1.Candidate m CROSS APPLY STRING_SPLIT( ltrim(rtrim( convert(varchar(100),m.businessSectorIDList) )), ',') AS a where isPrimaryOwner = 1 )
, BusinessSector(userId, BusinessSector) as (SELECT userId, ltrim(rtrim(BSL.name)) as BusinessSector from BusinessSector0 left join bullhorn1.BH_BusinessSectorList BSL ON BusinessSector0.businessSectorID = BSL.businessSectorID WHERE BusinessSector0.businessSectorID &lt;&gt; '' )
select distinct BusinessSector, current_timestamp as insert_timestamp from BusinessSector
  </sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1696</xloc>
      <yloc>496</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate industry 2</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>
-- BusinessSector: split by separate rows by comma, then combine them into Business Sector(Industry)
with
  BusinessSector0(userid, businessSectorID) as (SELECT userid, a.value as ind FROM  bullhorn1.Candidate m CROSS APPLY STRING_SPLIT( ltrim(rtrim( convert(varchar(100),m.businessSectorIDList) )), ',') AS a where isPrimaryOwner = 1 )
, BusinessSector(userId, BusinessSector) as (SELECT userId, ltrim(rtrim(BSL.name)) as BusinessSector from BusinessSector0 left join bullhorn1.BH_BusinessSectorList BSL ON BusinessSector0.businessSectorID = BSL.businessSectorID WHERE BusinessSector0.businessSectorID &lt;&gt; '' )
/*select 
       distinct BusinessSector
       , current_timestamp as insert_timestamp
from BusinessSector*/
  
 
SELECT
         CA.candidateID
       , BS.BusinessSector
       , current_timestamp as insert_timestamp
from bullhorn1.Candidate CA
left join BusinessSector BS on CA.userID = BS.userId
where CA.isPrimaryOwner = 1</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1808</xloc>
      <yloc>576</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate_functional_expertise</name>
    <type>TableOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <schema>public</schema>
    <table>candidate_functional_expertise</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>Y</ignore_errors>
    <use_batch>N</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field>contactid</partitioning_field>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field />
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field />
    <fields>
      <field>
        <column_name>candidate_id</column_name>
        <stream_name>final_candidate_id</stream_name>
      </field>
      <field>
        <column_name>functional_expertise_id</column_name>
        <stream_name>final_fe_id</stream_name>
      </field>
      <field>
        <column_name>sub_functional_expertise_id</column_name>
        <stream_name>final_sfe_id</stream_name>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2096</xloc>
      <yloc>1440</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate_functional_expertise 2 2</name>
    <type>TableOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <schema>public</schema>
    <table>candidate_functional_expertise</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>Y</ignore_errors>
    <use_batch>N</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field>contactid</partitioning_field>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field />
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field />
    <fields>
      <field>
        <column_name>candidate_id</column_name>
        <stream_name>final_candidate_id</stream_name>
      </field>
      <field>
        <column_name>functional_expertise_id</column_name>
        <stream_name>final_fe_id</stream_name>
      </field>
      <field>
        <column_name>sub_functional_expertise_id</column_name>
        <stream_name>final_sfe_id</stream_name>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1936</xloc>
      <yloc>1680</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate_industry</name>
    <type>TableOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <schema>public</schema>
    <table>candidate_industry</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>Y</ignore_errors>
    <use_batch>N</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field>contactid</partitioning_field>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field />
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field />
    <fields>
      <field>
        <column_name>vertical_id</column_name>
        <stream_name>final_industry_id</stream_name>
      </field>
      <field>
        <column_name>candidate_id</column_name>
        <stream_name>final_candidate_id</stream_name>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2016</xloc>
      <yloc>496</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate_source_id</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>vc_candidate_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>candidate_source_id</name>
        <rename>vc_source_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2000</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>external_additional_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>final_additional_id</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>208</xloc>
      <yloc>320</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company 2</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>company-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>final_companyl_id</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>208</xloc>
      <yloc>512</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company 2 3</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>additional_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>final_additional_id</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1809</xloc>
      <yloc>2042</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company industry</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>

select

        distinct c.sector as 'company-industry' -->>
, current_timestamp as insert_timestamp
-- select count(*) --2377
from companies c

where c.sector is not null and c.sector &lt;&gt; ''


</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>48</xloc>
      <yloc>160</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company industry 2</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>
select
         c.companyid as 'company-externalId'

       , c.sector as 'company_industry' -->>
-- select count(*) --2377
from companies c
where c.sector is not null and c.sector &lt;&gt; ''</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>176</xloc>
      <yloc>240</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company_industry 2</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>company_industry</table>
      <key>
        <name>final_industry_id</name>
        <field>industry_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>final_company_id</name>
        <field>company_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>industry_id</name>
        <rename>final_industry_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>company_id</name>
        <rename>final_company_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>400</xloc>
      <yloc>160</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>external_additional_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>final_additional_id</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>736</xloc>
      <yloc>608</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact FE-SFE</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>
-- FE
select 
       Cl.clientid
       --, UC.categoryID
       , cat.occupation
from bullhorn1.BH_Client Cl 
left join bullhorn1.BH_UserContact UC ON Cl.userID = UC.userID 
left join bullhorn1.BH_CategoryList cat ON cat.categoryID = UC.categoryID
where Cl.isPrimaryOwner = 1
</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>624</xloc>
      <yloc>720</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact FE-SFE 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <sql>
with skill as (select c.contactid,ss.skill from Contacts c left join SkillInstances si on c.contactid = si.objectid  left join skills ss on si.skillid = ss.skillid)
select --top 200
                  CL.ContactId
                --, CL.FirstName, CL.LastName
         
		--, CL.Sector as 'INDUSTRY' --> VC vertical.name
                , case
                        when CL.Sector = 'Ad Networks' then 'Advertising Networks/Adtech Agency'
                        when CL.Sector = 'Advertising' then 'Advertising Agency'
                        when CL.Sector = 'Branding/Design' then 'Branding and Design Agency'
                        when CL.Sector = 'Business Intelligence' then 'Business Intelligence Agency'
                        when CL.Sector = 'Consulting Services' then ''
                        when CL.Sector = 'Digital' then 'Digital Agency'
                        when CL.Sector = 'Market Research/Insights' then 'Market Research/Insights Agency'
                        when CL.Sector = 'Marketing' then 'Marketing Agency'
                        when CL.Sector = 'Marketing Services' then 'Marketing Agency'
                        when CL.Sector = 'Media' then 'Media Agency'
                        when CL.Sector = 'Medical Education' then 'Medical Education Agency'
                        when CL.Sector = 'Mobile Marketing' then 'Mobile Marketing Agency'
                        when CL.Sector = 'Non Dept Gov Body' then 'Non Dept Gov Body'
                        when CL.Sector = 'Pharmacuetical/Bio Tech' then 'Pharmaceutical and BioTech'
                        when CL.Sector = 'Platforms' then 'Technology'
                        when CL.Sector = 'PR and Communications' then 'PR and Communications Agency'
                        when CL.Sector = 'Public Affairs' then 'Public Affairs Agency'
                        when CL.Sector = 'Shopping Marketing' then 'Shopper Marketing Agency'
                        when CL.Sector = 'Social Media' then 'Social Media Agency'
                        when CL.Sector = 'Strategy Consulting' then 'Strategy Consulting Agency'
                        when CL.Sector = '' then 'Content Agency'
                        when CL.Sector is null then 'Content Agency'
                        else CL.Sector
                        end as 'INDUSTRY' --> VC vertical.name
                
                --, CL.Segment as 'FUNCTIONAL_EXPERTISE(old)' --> VC functional_expertise.name
                , Coalesce(NULLIF(case
                        when CL.Segment = '' then ''
                        when CL.Segment = 'Asset management' then ''
                        when CL.Segment = 'Branding/Design' then 'Branding and Design'
                        when CL.Segment = 'Broadcast' then ''
                        when CL.Segment = 'Broadcasting Agency' then ''
                        when CL.Segment = 'Broadcasting PR' then 'Broadcast PR'
                        when CL.Segment = 'Business Services' then ''
                        when CL.Segment = 'Commercial Support' then ''
                        when CL.Segment = 'Comms' then 'Communications Planning'
                        when CL.Segment = 'Consumer' then 'Consumer PR'
                        when CL.Segment = 'Consumer Tech' then ''
                        when CL.Segment = 'corporate' then 'Corporate PR'
                        when CL.Segment = 'Cross' then 'Media Cross'
                        when CL.Segment = 'Defence' then ''
                        when CL.Segment = 'Education' then ''
                        when CL.Segment = 'Energy' then ''
                        when CL.Segment = 'Entertainment' then ''
                        when CL.Segment = 'financial' then 'Financial PR'
                        when CL.Segment = 'Financial Services' then ''
                        when CL.Segment = 'FMCG' then ''
                        when CL.Segment = 'healthcare' then ''
                        when CL.Segment = 'Healthcare / Pharma' then ''
                        when CL.Segment = 'HR' then 'Human Resources'
                        when CL.Segment = 'Internal Communictions' then 'Internal Communications'
                        when CL.Segment = 'Internal PR' then 'Internal Communications'
                        when CL.Segment = 'Luxury' then ''
                        when CL.Segment = 'Management Consultancy' then ''
                        when CL.Segment = 'Market Reseach/Insight' then 'Market Research and Insights '
                        when CL.Segment = 'Market Research' then 'Market Research and Insights '
                        when CL.Segment = 'Market Research / Insights' then 'Market Research and Insights '
                        when CL.Segment = 'Market Research/Insight' then 'Market Research and Insights '
                        when CL.Segment = 'Market Research/Insights' then ''
                        when CL.Segment = 'Marketing / Insight' then ''
                        when CL.Segment = 'Marketing Services' then ''
                        when CL.Segment = 'Marketing/Insight' then ''
                        when CL.Segment = 'Media' then ''
                        when CL.Segment = 'Medical Education' then 'Medical Affairs'
                        when CL.Segment = 'Not for profit' then ''
                        when CL.Segment = 'Office' then ''
                        when CL.Segment = 'Planning and Buying Agency' then 'Planning and Buying'
                        when CL.Segment = 'PR and Communications' then ''
                        when CL.Segment = 'Production Agency' then ''
                        when CL.Segment = 'Professional Services' then ''
                        when CL.Segment = 'Project Management' then ''
                        when CL.Segment = 'Public Relations' then ''
                        when CL.Segment = 'Public Sector' then ''
                        when CL.Segment = 'Pure Player' then 'Pure Play Digital '
                        when CL.Segment = 'Retail' then ''
                        when CL.Segment = 'Sale' then 'Sales'
                        when CL.Segment = 'Shopping Marketing' then 'Shopper Marketing'
                        when CL.Segment = 'Strategy Consultancy' then ''
                        when CL.Segment = 'Strategy Consulting' then ''
                        when CL.Segment = 'Supply Side Platform' then 'Supply Side Platform '
                        when CL.Segment = 'technology' then 'Technology  '
                        when CL.Segment = 'Transport' then ''
                        when CL.Segment = 'Utilities' then ''
                        when CL.Segment = 'Web' then ''
                else CL.Segment
                end, ''), 'Others') as 'FUNCTIONAL_EXPERTISE' --> VC functional_expertise.name
                
		--, skill.skill as 'SUB-FUNCTIONAL_EXPERTISE(old)' --> VC sub_functional_expertise.name
		, case
                        when skill.skill = 'Advertising' then ''
                        when skill.skill = 'Consumer Technology' then ''
                        when skill.skill = 'Consumer Technology' then ''
                        when skill.skill = 'Crisis &amp; Issues Managment' then 'Crisis &amp; Issues Management'
                        when skill.skill = 'Data &amp; Analysis' then 'Data Analytics'
                        when skill.skill = 'Defence and Security' then 'Defence'
                        when skill.skill = 'Field Marketing' then ''
                        when skill.skill = 'Field Sales' then ''
                        when skill.skill = 'Hibernate' then ''
                        when skill.skill = 'Information Architecture' then ''
                        when skill.skill = 'Java' then 'Javascript'
                        when skill.skill = 'Logistics &amp; Express' then ''
                        when skill.skill = 'Magento' then ''
                        when skill.skill = 'Measurement &amp; Evaluation' then 'Analytics'
                        when skill.skill = 'Modeling' then ''
                        when skill.skill = 'NodeJS' then ''
                        when skill.skill = 'Objective-c' then ''
                        when skill.skill = 'On Rails' then ''
                        when skill.skill = 'OOH' then ''
                        when skill.skill = 'OS' then ''
                        when skill.skill = 'OTC' then ''
                        when skill.skill = 'pharmaceuticals' then 'Pharamaceutical'
                        when skill.skill = 'Prestashop' then ''
                        when skill.skill = 'Pricing and Reimbursement' then ''
                        when skill.skill = 'Print' then ''
                        when skill.skill = 'Product Design' then ''
                        when skill.skill = 'Quantitative research' then 'Quantative Research'
                        when skill.skill = 'Spring' then ''
                        when skill.skill = 'SVN' then ''
                        when skill.skill = 'Swift' then ''
                        when skill.skill = 'Trade Activation' then ''
                        when skill.skill = 'Transport' then ''
                        when skill.skill = 'Travel &amp; Tourism' then 'Travel and Tourism'
                        when skill.skill = 'Unix' then ''
                        when skill.skill = 'UX' then ''
                        when skill.skill = 'W3C compliance,' then ''
                        when skill.skill = 'Windows' then ''
                        when skill.skill = 'Wireless' then ''
                else skill.skill
                end as 'SUB-FUNCTIONAL_EXPERTISE' --> VC sub_functional_expertise.name

from Contacts CL
left join skill on CL.contactid = skill.contactid
left join (SELECT contactid, skill = STUFF((SELECT skill + char(10) FROM skill b WHERE b.contactid = a.contactid FOR XML PATH(''), TYPE).value('.', 'nvarchar(MAX)'), 1, 0, '') FROM skill a GROUP BY contactid) skills on CL.contactid = skills.contactid
where cl.descriptor = 1
--and CL.ContactId in ('909076-2318-15147')
</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>624</xloc>
      <yloc>816</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact id</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>clientid</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>final_contact_id</rename>
        <default />
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>736</xloc>
      <yloc>720</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact id 2</name>
    <type>DBLookup</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contact-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>final_contact_id</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>896</xloc>
      <yloc>384</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact id 3</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>ContactId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>final_contact_id</rename>
        <default />
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>736</xloc>
      <yloc>816</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact industry 2 2</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>
-- BusinessSector: split by separate rows by comma, then combine them into Business Sector(Industry)
with
  BusinessSector0(userid, businessSectorID) as (SELECT userid, a.value as ind FROM  ( select Cl.userID, UC.businessSectorIDList from bullhorn1.BH_Client Cl left join bullhorn1.BH_UserContact UC ON Cl.userID = UC.userID where Cl.isPrimaryOwner = 1 and convert(varchar(100),UC.businessSectorIDList) &lt;&gt; '' and UC.businessSectorIDList is not null ) m CROSS APPLY STRING_SPLIT( ltrim(rtrim( convert(varchar(100),m.businessSectorIDList) )), ',') AS a )
, BusinessSector(userId, BusinessSector) as (SELECT userId, ltrim(rtrim(BSL.name)) as BusinessSector from BusinessSector0 left join bullhorn1.BH_BusinessSectorList BSL ON BusinessSector0.businessSectorID = BSL.businessSectorID WHERE BusinessSector0.businessSectorID &lt;&gt; '' )
-- select * from BusinessSector
/*select
       distinct BusinessSector
       , current_timestamp as insert_timestamp
from BusinessSector*/
  
 
SELECT
         Cl.clientID as 'contact-externalId'
--       , case when (ltrim(replace(UC.firstName,'?','')) = '' or  UC.firstName is null) then 'Firstname' else ltrim(replace(UC.firstName,'?','')) end as 'contact-firstName'
--	, case when (ltrim(replace(UC.lastName,'?','')) = '' or  UC.lastName is null) then concat('Lastname-',Cl.clientID) else ltrim(replace(UC.lastName,'?','')) end as 'contact-Lastname'
       , BS.BusinessSector
from bullhorn1.BH_Client Cl
left join bullhorn1.BH_UserContact UC ON Cl.userID = UC.userID
left join BusinessSector BS on Cl.userID = BS.userId
where cl.isPrimaryOwner = 1 and BS.BusinessSector is not null</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>752</xloc>
      <yloc>384</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact_functional_expertise 2</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>contact_functional_expertise</table>
      <key>
        <name>final_contact_id</name>
        <field>contact_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>functional_expertise_id</name>
        <rename>final_fe_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>contact_id</name>
        <rename>final_contact_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>976</xloc>
      <yloc>720</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact_functional_expertise 2 2</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>contact_functional_expertise</table>
      <key>
        <name>final_contact_id</name>
        <field>contact_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>functional_expertise_id</name>
        <rename>final_fe_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>sub_functional_expertise_id</name>
        <rename>final_sfe_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>contact_id</name>
        <rename>final_contact_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1056</xloc>
      <yloc>816</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact_industry 3</name>
    <type>TableOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <schema>public</schema>
    <table>contact_industry</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>Y</ignore_errors>
    <use_batch>N</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field>contactid</partitioning_field>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field />
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field />
    <fields>
      <field>
        <column_name>industry_id</column_name>
        <stream_name>final_industry_id</stream_name>
      </field>
      <field>
        <column_name>contact_id</column_name>
        <stream_name>final_contact_id</stream_name>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>992</xloc>
      <yloc>304</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>employees_number</name>
    <type>Update</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field />
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <key>
        <name>final_companyl_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>employees_number</name>
        <rename>numEmployees</rename>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>320</xloc>
      <yloc>512</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>fe</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>functional_expertise</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>occupation</name>
        <field>name</field>
        <condition>LIKE</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>final_fe_id</rename>
        <default />
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>848</xloc>
      <yloc>720</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>fe 2</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>functional_expertise</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>fe</name>
        <field>name</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>final_fe_id</rename>
        <default />
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1856</xloc>
      <yloc>1440</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>fe 3</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <cache>Y</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>functional_expertise</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>FUNCTIONAL_EXPERTISE</name>
        <field>name</field>
        <condition>LIKE</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>final_fe_id</rename>
        <default />
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>832</xloc>
      <yloc>816</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>functional_expertise</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>functional_expertise</table>
      <key>
        <name>name</name>
        <field>name</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>name</name>
        <rename>name</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1920</xloc>
      <yloc>1280</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>industry</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>vertical</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>BusinessSector</name>
        <field>name</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>final_industry_id</rename>
        <default />
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1920</xloc>
      <yloc>496</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>industry 4</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>vertical</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>BusinessSector</name>
        <field>name</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>final_industry_id</rename>
        <default />
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>896</xloc>
      <yloc>304</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>industry 4 2</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>vertical</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>job-industry</name>
        <field>name</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>final_industry_id</rename>
        <default />
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1433</xloc>
      <yloc>776</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>lookup Candidate</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>vc_candidate_id</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1840</xloc>
      <yloc>400</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>lookup candidate_source</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate_source</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate-source</name>
        <field>name</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>vc_source_id</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2000</xloc>
      <yloc>400</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>lookup company</name>
    <type>DBLookup</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>company-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>final_company_id</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>288</xloc>
      <yloc>240</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>lookup industry</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>vertical</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>company_industry</name>
        <field>name</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>final_industry_id</rename>
        <default />
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>288</xloc>
      <yloc>160</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>maritalStatus</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>--Inject Marital Status: maritalstatus = maritalStatus
select concat('NJFS',intCandidateId) as CanExternalId,
 case 
	 when tintMaritalStatusId = 101 then 1
	 when tintMaritalStatusId = 100 then 2
	 when tintMaritalStatusId = 102 then 3
	 when tintMaritalStatusId = 103 then 7
	 when tintMaritalStatusId = 104 then 4
	 else '' end as maritalStatus
from dCandidate c left join dPerson p on c.intPersonId = p.intPersonId
where tintMaritalStatusId &lt;&gt;0
--and c.intCandidateId in (select intCandidateId from temp_Can)
--(48445,31880,44007,15490,44296,16796,38402,44798,44982,38455,15944,45834,45826,10987,22607,11200,52754,53354,19816,40589,44976,45050,44823,3334,44314,45794,22999,51044,2732,52304,44988)

--Inject Xing URL: xing = XingURL
--select concat('NJF',intCandidateId) as CanExternalId, C.intpersonid, p.vchXingUrl as XingURL
--from dCandidate c left join dPerson p on c.intPersonId = p.intPersonId
--where vchXingUrl &lt;&gt; ''
--and c.intCandidateId in (select intCandidateId from temp_Can)

--Inject Facebook URL: facebook = FacebookURL
--select concat('NJF',intCandidateId) as CanExternalId, C.intpersonid, replace(p.vchFacebookProfileUrl,',','') as FacebookURL
--from dCandidate c left join dPerson p on c.intPersonId = p.intPersonId
--where vchFacebookProfileUrl &lt;&gt; ''
--and c.intCandidateId in (select intCandidateId from temp_Can)

--Inject Twitter URL: twitter = TwitterURL
--select concat('NJF',intCandidateId) as CanExternalId, C.intpersonid, iif(p.vchTwitterProfileUrl like '%twitter.com%', p.vchTwitterProfileUrl, '') as TwitterURL
--from dCandidate c left join dPerson p on c.intPersonId = p.intPersonId
--where iif(p.vchTwitterProfileUrl like '%twitter.com%', p.vchTwitterProfileUrl, '') &lt;&gt; ''</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>Y</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1680</xloc>
      <yloc>816</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>position_candidate - STATUS</name>
    <type>Update</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field />
    <lookup>
      <schema>public</schema>
      <table>position_candidate</table>
      <key>
        <name>VCPositionCandidateID</name>
        <field>id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>status</name>
        <rename>positioncandidate_status</rename>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3688</xloc>
      <yloc>97</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>position_description</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>application-positionExternalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name />
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>final_position_id</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1312</xloc>
      <yloc>144</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>position_description 2</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>additional_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>final_additional_id</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1298</xloc>
      <yloc>666</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>position_description Custom Field</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>
SELECT
          a.jobPostingID as additional_id 
        , a.title as 'position-title'
        , 'add_job_info' as additional_type
        , convert(int,1006) as form_id
        , convert(int,1018) as field_id
        , convert(varchar(max),
                case a.status
                when 'Accepting' then 2
                when 'Accepting candidates' then 3
                when 'Archive' then 4
                when 'Bid' then 5
                when 'Covered' then 6
                when 'Dead' then 7
                when 'Filled' then 8
                when 'Filled by Client' then 9
                when 'Filled by Competitor' then 10
                when 'Live' then 11
                when 'Lost to Competitor' then 12
                when 'On Hold' then 13
                when 'Placed' then 14       
                end) as field_value
-- select distinct status
from bullhorn1.BH_JobPosting a
where status &lt;&gt; ''
and a.jobPostingID &lt;&gt; 138


</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1154</xloc>
      <yloc>666</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>position_description id 2 3</name>
    <type>DBLookup</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>position-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name />
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>final_job_id</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1433</xloc>
      <yloc>856</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>position_description industry 2</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>

select
         distinct v.sector as 'INDUSTRY'
 , current_timestamp as insert_timestamp
-- select count(*) --599 -- select v.jobnumber, count(*) -- select distinct v.jobstatus, count(*) --PermanentJob -- select top 10 *
from dbo.vacancies v --group by v.jobstatus
where v.sector is not null and v.sector &lt;&gt; ''
</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1161</xloc>
      <yloc>776</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>position_description industry 2 2 2</name>
    <type>TableInput</type>
    <description />
    <distribute>N</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>from</connection>
    <sql>select
         distinct v.JobNumber as 'position-externalId'

	, v.sector as 'job-industry'
-- select count(*) --599 -- select v.jobnumber, count(*) -- select distinct v.jobstatus, count(*) --PermanentJob -- select top 10 *
from dbo.vacancies v --group by v.jobstatus
where v.sector  is not null and v.sector  &lt;&gt; ''

/*

-- INDUSTRY
select
         a.[1 Job Ref Numeric] as 'position-externalId'
         , a.[98 Area Codegroup 132], ind.description as 'job-industry'
-- select top 10 * -- select distinct ind.description
from(select ROW_NUMBER() over(partition by [3 Position Alphanumeric] order by [1 Job Ref Numeric]) as rnk, * from F03 )as a
left join (SELECT * FROM CODES WHERE Codegroup = 132) as ind on ind.code = a.[98 Area Codegroup 132] --a.[128 Industry Codegroup 127]
where ind.description is not null --a.[128 Industry Codegroup 127] &lt;&gt; ''
*/</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1289</xloc>
      <yloc>856</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>sfe</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>sub_functional_expertise</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>sfe</name>
        <field>name</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>final_fe_id</name>
        <field>functional_expertise_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>final_sfe_id</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1952</xloc>
      <yloc>1440</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>sfe 2</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>sub_functional_expertise</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>sfe</name>
        <field>name</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>feid</name>
        <field>functional_expertise_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>final_sfe_id</rename>
        <default />
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1904</xloc>
      <yloc>1584</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>sfe 3</name>
    <type>DBLookup</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <cache>Y</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>sub_functional_expertise</table>
      <orderby />
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>SUB-FUNCTIONAL_EXPERTISE</name>
        <field>name</field>
        <condition>LIKE</condition>
        <name2 />
      </key>
      <key>
        <name>final_fe_id</name>
        <field>functional_expertise_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>id</name>
        <rename>final_sfe_id</rename>
        <default />
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>928</xloc>
      <yloc>816</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>sub_functional_expertise</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>sub_functional_expertise</table>
      <key>
        <name>feid</name>
        <field>functional_expertise_id</field>
        <condition>=</condition>
        <name2 />
      </key>
      <key>
        <name>sfe</name>
        <field>name</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>functional_expertise_id</name>
        <rename>feid</rename>
        <update>Y</update>
      </value>
      <value>
        <name>name</name>
        <rename>sfe</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1920</xloc>
      <yloc>1344</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>vertical</name>
    <type>InsertUpdate</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection />
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>vertical</table>
      <key>
        <name>name</name>
        <field>name</field>
        <condition>=</condition>
        <name2 />
      </key>
      <value>
        <name>name</name>
        <rename>name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>N</update>
      </value>
    </lookup>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1920</xloc>
      <yloc>1216</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step_error_handling>
  </step_error_handling>
  <slave-step-copy-partition-distribution>
  </slave-step-copy-partition-distribution>
  <slave_transformation>N</slave_transformation>
</transformation>
