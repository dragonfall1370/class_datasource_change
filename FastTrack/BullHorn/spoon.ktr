<?xml version="1.0" encoding="UTF-8"?>
<transformation>
  <info>
    <name>pentaho_export</name>
    <description/>
    <extended_description/>
    <trans_version/>
    <trans_type>Normal</trans_type>
    <trans_status>0</trans_status>
    <directory>/</directory>
    <parameters>
    </parameters>
    <log>
      <trans-log-table>
        <connection/>
        <schema/>
        <table/>
        <size_limit_lines/>
        <interval/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STATUS</id>
          <enabled>Y</enabled>
          <name>STATUS</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
          <subject/>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
          <subject/>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
          <subject/>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
          <subject/>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
          <subject/>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
          <subject/>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>STARTDATE</id>
          <enabled>Y</enabled>
          <name>STARTDATE</name>
        </field>
        <field>
          <id>ENDDATE</id>
          <enabled>Y</enabled>
          <name>ENDDATE</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>DEPDATE</id>
          <enabled>Y</enabled>
          <name>DEPDATE</name>
        </field>
        <field>
          <id>REPLAYDATE</id>
          <enabled>Y</enabled>
          <name>REPLAYDATE</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>Y</enabled>
          <name>LOG_FIELD</name>
        </field>
        <field>
          <id>EXECUTING_SERVER</id>
          <enabled>N</enabled>
          <name>EXECUTING_SERVER</name>
        </field>
        <field>
          <id>EXECUTING_USER</id>
          <enabled>N</enabled>
          <name>EXECUTING_USER</name>
        </field>
        <field>
          <id>CLIENT</id>
          <enabled>N</enabled>
          <name>CLIENT</name>
        </field>
      </trans-log-table>
      <perf-log-table>
        <connection/>
        <schema/>
        <table/>
        <interval/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>SEQ_NR</id>
          <enabled>Y</enabled>
          <name>SEQ_NR</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>INPUT_BUFFER_ROWS</id>
          <enabled>Y</enabled>
          <name>INPUT_BUFFER_ROWS</name>
        </field>
        <field>
          <id>OUTPUT_BUFFER_ROWS</id>
          <enabled>Y</enabled>
          <name>OUTPUT_BUFFER_ROWS</name>
        </field>
      </perf-log-table>
      <channel-log-table>
        <connection/>
        <schema/>
        <table/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>LOGGING_OBJECT_TYPE</id>
          <enabled>Y</enabled>
          <name>LOGGING_OBJECT_TYPE</name>
        </field>
        <field>
          <id>OBJECT_NAME</id>
          <enabled>Y</enabled>
          <name>OBJECT_NAME</name>
        </field>
        <field>
          <id>OBJECT_COPY</id>
          <enabled>Y</enabled>
          <name>OBJECT_COPY</name>
        </field>
        <field>
          <id>REPOSITORY_DIRECTORY</id>
          <enabled>Y</enabled>
          <name>REPOSITORY_DIRECTORY</name>
        </field>
        <field>
          <id>FILENAME</id>
          <enabled>Y</enabled>
          <name>FILENAME</name>
        </field>
        <field>
          <id>OBJECT_ID</id>
          <enabled>Y</enabled>
          <name>OBJECT_ID</name>
        </field>
        <field>
          <id>OBJECT_REVISION</id>
          <enabled>Y</enabled>
          <name>OBJECT_REVISION</name>
        </field>
        <field>
          <id>PARENT_CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>PARENT_CHANNEL_ID</name>
        </field>
        <field>
          <id>ROOT_CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>ROOT_CHANNEL_ID</name>
        </field>
      </channel-log-table>
      <step-log-table>
        <connection/>
        <schema/>
        <table/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>N</enabled>
          <name>LOG_FIELD</name>
        </field>
      </step-log-table>
      <metrics-log-table>
        <connection/>
        <schema/>
        <table/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>METRICS_DATE</id>
          <enabled>Y</enabled>
          <name>METRICS_DATE</name>
        </field>
        <field>
          <id>METRICS_CODE</id>
          <enabled>Y</enabled>
          <name>METRICS_CODE</name>
        </field>
        <field>
          <id>METRICS_DESCRIPTION</id>
          <enabled>Y</enabled>
          <name>METRICS_DESCRIPTION</name>
        </field>
        <field>
          <id>METRICS_SUBJECT</id>
          <enabled>Y</enabled>
          <name>METRICS_SUBJECT</name>
        </field>
        <field>
          <id>METRICS_TYPE</id>
          <enabled>Y</enabled>
          <name>METRICS_TYPE</name>
        </field>
        <field>
          <id>METRICS_VALUE</id>
          <enabled>Y</enabled>
          <name>METRICS_VALUE</name>
        </field>
      </metrics-log-table>
    </log>
    <maxdate>
      <connection/>
      <table/>
      <field/>
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
    </maxdate>
    <size_rowset>10000000</size_rowset>
    <sleep_time_empty>50</sleep_time_empty>
    <sleep_time_full>50</sleep_time_full>
    <unique_connections>N</unique_connections>
    <feedback_shown>Y</feedback_shown>
    <feedback_size>50000</feedback_size>
    <using_thread_priorities>Y</using_thread_priorities>
    <shared_objects_file/>
    <capture_step_performance>N</capture_step_performance>
    <step_performance_capturing_delay>1000</step_performance_capturing_delay>
    <step_performance_capturing_size_limit/>
    <dependencies>
    </dependencies>
    <partitionschemas>
    </partitionschemas>
    <slaveservers>
    </slaveservers>
    <clusterschemas>
    </clusterschemas>
    <created_user/>
    <created_date>2017/01/20 16:14:34.085</created_date>
    <modified_user/>
    <modified_date>2017/01/20 16:14:34.085</modified_date>
    <key_for_session_key>H4sIAAAAAAAAAAMAAAAAAAAAAAA=</key_for_session_key>
    <is_key_private>N</is_key_private>
  </info>
  <notepads>
    <notepad>
      <note>COMPANY</note>
      <xloc>336</xloc>
      <yloc>16</yloc>
      <width>68</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>CONTACT</note>
      <xloc>1888</xloc>
      <yloc>16</yloc>
      <width>65</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>JOB</note>
      <xloc>3360</xloc>
      <yloc>16</yloc>
      <width>31</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>CANDIDATE</note>
      <xloc>5040</xloc>
      <yloc>16</yloc>
      <width>79</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>DISTRIBUTION LIST</note>
      <xloc>2464</xloc>
      <yloc>720</yloc>
      <width>112</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>Settings</note>
      <xloc>80</xloc>
      <yloc>1328</yloc>
      <width>60</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>BRAND









</note>
      <xloc>5520</xloc>
      <yloc>1216</yloc>
      <width>52</width>
      <heigth>176</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>SALARY
























</note>
      <xloc>5520</xloc>
      <yloc>1664</yloc>
      <width>55</width>
      <heigth>401</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>CUSTOM FIELD</note>
      <xloc>4144</xloc>
      <yloc>1536</yloc>
      <width>100</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>SFE</note>
      <xloc>4368</xloc>
      <yloc>720</yloc>
      <width>29</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>FE</note>
      <xloc>4368</xloc>
      <yloc>592</yloc>
      <width>23</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>CONTACT DOCUMENT</note>
      <xloc>32</xloc>
      <yloc>1024</yloc>
      <width>134</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>WORK LOCATION</note>
      <xloc>2608</xloc>
      <yloc>592</yloc>
      <width>105</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>INDUSTRY</note>
      <xloc>1232</xloc>
      <yloc>272</yloc>
      <width>65</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>DISTRIBUTION LIST + TEARSHEET/HOTLIST
</note>
      <xloc>4368</xloc>
      <yloc>208</yloc>
      <width>239</width>
      <heigth>41</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>COMPANY DOCUMENT</note>
      <xloc>32</xloc>
      <yloc>928</yloc>
      <width>137</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>Billing Location</note>
      <xloc>448</xloc>
      <yloc>352</yloc>
      <width>92</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>activity</note>
      <xloc>832</xloc>
      <yloc>736</yloc>
      <width>48</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>REPORT TO</note>
      <xloc>2464</xloc>
      <yloc>336</yloc>
      <width>71</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>PERSONAL ADDRESS</note>
      <xloc>2608</xloc>
      <yloc>528</yloc>
      <width>136</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>SOURCE</note>
      <xloc>5520</xloc>
      <yloc>544</yloc>
      <width>59</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>INDUSTRY</note>
      <xloc>4368</xloc>
      <yloc>464</yloc>
      <width>70</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>CANDIDATE DOCUMENT</note>
      <xloc>32</xloc>
      <yloc>1200</yloc>
      <width>143</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>FUNCTIONAL EXPERTISE</note>
      <xloc>1232</xloc>
      <yloc>416</yloc>
      <width>141</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>company industry</note>
      <xloc>592</xloc>
      <yloc>576</yloc>
      <width>120</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>Location</note>
      <xloc>448</xloc>
      <yloc>272</yloc>
      <width>61</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>BRAND
      -
CUSTOM







</note>
      <xloc>5520</xloc>
      <yloc>1424</yloc>
      <width>61</width>
      <heigth>178</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>SUB FUNCTIONAL EXPERTISE</note>
      <xloc>1136</xloc>
      <yloc>528</yloc>
      <width>165</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>parent_id</note>
      <xloc>560</xloc>
      <yloc>128</yloc>
      <width>63</width>
      <heigth>27</heigth>
      <fontname>Noto Sans</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>Create Owner</note>
      <xloc>864</xloc>
      <yloc>432</yloc>
      <width>83</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>Create Owner</note>
      <xloc>2816</xloc>
      <yloc>848</yloc>
      <width>83</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>Create Owner</note>
      <xloc>3984</xloc>
      <yloc>272</yloc>
      <width>83</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>document</note>
      <xloc>672</xloc>
      <yloc>192</yloc>
      <width>66</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>DOCUMENT</note>
      <xloc>3824</xloc>
      <yloc>208</yloc>
      <width>76</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>DOCUMENT</note>
      <xloc>2576</xloc>
      <yloc>272</yloc>
      <width>76</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>LOCATION</note>
      <xloc>3952</xloc>
      <yloc>528</yloc>
      <width>68</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>FE</note>
      <xloc>3616</xloc>
      <yloc>784</yloc>
      <width>23</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>INDUSTRY</note>
      <xloc>3568</xloc>
      <yloc>656</yloc>
      <width>65</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>Create Owner</note>
      <xloc>6080</xloc>
      <yloc>256</yloc>
      <width>83</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>DOCUMENT</note>
      <xloc>5808</xloc>
      <yloc>192</yloc>
      <width>76</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>DESIRED LOCATION</note>
      <xloc>5808</xloc>
      <yloc>768</yloc>
      <width>115</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>LOCATION</note>
      <xloc>5808</xloc>
      <yloc>688</yloc>
      <width>68</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>SOURCE</note>
      <xloc>2336</xloc>
      <yloc>400</yloc>
      <width>55</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>Comment</note>
      <xloc>1120</xloc>
      <yloc>656</yloc>
      <width>65</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>DISTRIBUTION LIST - Duplicated</note>
      <xloc>4368</xloc>
      <yloc>336</yloc>
      <width>181</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>Contact distribution list - Duplicated</note>
      <xloc>1232</xloc>
      <yloc>784</yloc>
      <width>203</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>PERSONAL LOCATION</note>
      <xloc>5808</xloc>
      <yloc>832</yloc>
      <width>129</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>COMMENT</note>
      <xloc>4224</xloc>
      <yloc>864</yloc>
      <width>71</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>COMMENT</note>
      <xloc>3952</xloc>
      <yloc>1040</yloc>
      <width>71</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>JOB APPLICATION</note>
      <xloc>6672</xloc>
      <yloc>1296</yloc>
      <width>107</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>PLACEMENT DETAIL</note>
      <xloc>6320</xloc>
      <yloc>336</yloc>
      <width>118</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>Insert all offer / placement details (default value)
- with PERMANENT jobs, End date is not mandatory
- with CONTRACT / TEMP jobs, End date is mandatory</note>
      <xloc>7536</xloc>
      <yloc>688</yloc>
      <width>298</width>
      <heigth>58</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>255</backgroundcolorgreen>
      <backgroundcolorblue>0</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>[Invoice] table only contains PLACED stage</note>
      <xloc>7872</xloc>
      <yloc>688</yloc>
      <width>237</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>255</backgroundcolorgreen>
      <backgroundcolorblue>0</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>CANDIDATE COMPANY ADDRESS</note>
      <xloc>5808</xloc>
      <yloc>912</yloc>
      <width>188</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>COMPENSATION</note>
      <xloc>3824</xloc>
      <yloc>432</yloc>
      <width>101</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>EMAIL SUBSCRIPTION</note>
      <xloc>5632</xloc>
      <yloc>976</yloc>
      <width>127</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>CUSTOM FIELD




</note>
      <xloc>4160</xloc>
      <yloc>1200</yloc>
      <width>91</width>
      <heigth>101</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>JOB DOCUMENT</note>
      <xloc>32</xloc>
      <yloc>1120</yloc>
      <width>99</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>DOCUMENT TYPE</note>
      <xloc>32</xloc>
      <yloc>832</yloc>
      <width>107</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>EMAIL SUBSCRIPTION</note>
      <xloc>2480</xloc>
      <yloc>976</yloc>
      <width>127</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>SFE</note>
      <xloc>3744</xloc>
      <yloc>912</yloc>
      <width>29</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>JOB APPLICATION</note>
      <xloc>6672</xloc>
      <yloc>1184</yloc>
      <width>107</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>Department</note>
      <xloc>2688</xloc>
      <yloc>1040</yloc>
      <width>74</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>SOURCE</note>
      <xloc>2336</xloc>
      <yloc>1296</yloc>
      <width>55</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>Create Owner</note>
      <xloc>2816</xloc>
      <yloc>1440</yloc>
      <width>83</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>WORK LOCATION</note>
      <xloc>2608</xloc>
      <yloc>1568</yloc>
      <width>105</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>------- LEAD -------</note>
      <xloc>1616</xloc>
      <yloc>1216</yloc>
      <width>114</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>JOB APPLICATION
(stattus + rejected_date + substatus)</note>
      <xloc>6320</xloc>
      <yloc>64</yloc>
      <width>201</width>
      <heigth>42</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>CUSTOM</note>
      <xloc>4816</xloc>
      <yloc>1216</yloc>
      <width>58</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>CUSTOM</note>
      <xloc>1280</xloc>
      <yloc>928</yloc>
      <width>58</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
  </notepads>
  <connection>
    <name>from</name>
    <server>10.0.1.65</server>
    <type>MSSQL</type>
    <access>Native</access>
    <database>itexperts</database>
    <port>1433</port>
    <username>sa</username>
    <password>Encrypted 2be98afc86aa7f2d5f94aea35e083b8df</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>MSSQL_DOUBLE_DECIMAL_SEPARATOR</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>1433</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <connection>
    <name>to</name>
    <server>rdb</server>
    <type>POSTGRESQL</type>
    <access>Native</access>
    <database>singulartalent.vincere.io</database>
    <port>5432</port>
    <username>dbapplication_user</username>
    <password>Encrypted 2be98afc819e8b9aebe11bd63cb8b9ae3</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>5432</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <order>
    <hop>
      <from>source 2</from>
      <to>CANDIDATE SOURCE</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 10</from>
      <to>candidate_source</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate id</from>
      <to>industry</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate industry</from>
      <to>VERTICAL</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>hourlyRate/hourlyRateLow/hour - desired_contract_rate/contract_rate/contract_interval</from>
      <to>Update 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 8</from>
      <to>WORK HISTORY + REFERENCE + EDUCATION</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 13</from>
      <to>ACTIVITY - EMAIL BODY</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company industry</from>
      <to>INSERT NEW INDUSTRY</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 3 2 3</from>
      <to>Contact Emails Comment</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 16</from>
      <to>Update 19</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate owners</from>
      <to>Database lookup 16</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>salary - contract_rate</from>
      <to>contract_rate 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database join 2 2 2</from>
      <to>CANDIDATE ACTIVITY</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database join</from>
      <to>COMPANY ACTIVITY</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 12</from>
      <to>Database join 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database join 2 2</from>
      <to>Contact Comment</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact 4</from>
      <to>Database join 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company 4</from>
      <to>Database join</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>DB industry</from>
      <to>Insert new industry 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>FE lookup 2</from>
      <to>VC SFE</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Functional Exp</from>
      <to>Vincere FE</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Sub FE</from>
      <to>FE lookup 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 9</from>
      <to>CANDIDATE NOTE</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Desired Location</from>
      <to>Insert / Update common loc 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate_source</from>
      <to>CANDIDATE SOURCE 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>salary/hourlyratelow - contract_rate</from>
      <to>contract_rate</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>salary - desire_salary</from>
      <to>desire_salary</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>ALL</from>
      <to>Update Candidate desire_salary 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>ALL</from>
      <to>Update Candidate desire_salary 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 3 3</from>
      <to>fe 5</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>fe 5</from>
      <to>CANDIDATE FUNCTIONAL EXPERTISE</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>fe 3 2 2</from>
      <to>sfe 3 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 3 3 2</from>
      <to>fe 3 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>sfe 3 2 2</from>
      <to>candidate_sub_functional_expertise</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate</from>
      <to>additional_form_values InsertUpdate 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>cf 2 2</from>
      <to>candidate</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 2</from>
      <to>additional_form_values InsertUpdate 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>cf 2 2 2</from>
      <to>candidate 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate Source DB</from>
      <to>Insert / Update 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate language</from>
      <to>cand lookup 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>cand lookup 2</from>
      <to>Update Language</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate back office</from>
      <to>Candidate lookup 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate lookup 2 3</from>
      <to>Update Candidate CF</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate national insurance</from>
      <to>Candidate lookup 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>industry</from>
      <to>INDUSTRY 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>document_types 2</from>
      <to>document_types</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 7</from>
      <to>document_types 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>document_types 3</from>
      <to>CANDIDATE DOCUMENT 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact 2 2</from>
      <to>document_types 6</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>document_types 6</from>
      <to>CONTACT DOCUMENT 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company 2</from>
      <to>document_types 5</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company location lookup</from>
      <to>contact lookup</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact lookup</from>
      <to>CONTACT WORK LOCATION</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>View_UserDelimitedCategories</from>
      <to>FE IMPORT</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company_legal_document</from>
      <to>COMPANY DOCUMENT 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>CSV - Latitude Longitude</from>
      <to>candidate lookup 4 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate lookup 4 2</from>
      <to>common_location</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate lookup 3 3</from>
      <to>Distribution lookup 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact 2</from>
      <to>CONTACT REPORT TO</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>salary/salarylow/day - desired_contract_rate/contract_rate/contract_interval</from>
      <to>Update 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>dayRate/dayRateLow/day - desired_contract_rate/contract_rate/contract_interval</from>
      <to>Update 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 4</from>
      <to>candidate 6</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 6</from>
      <to>last_activtiy_date 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>lookup company 2</from>
      <to>industry 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>industry 3</from>
      <to>COMPANY INDUSTRY 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate language 2</from>
      <to>cand lookup 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>cand lookup 2 3</from>
      <to>candidate_language_tmp</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>brand  - BH_DepartmentList 2</from>
      <to>team_group 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>brand - BH_UserDepartmentGrouping</from>
      <to>user_account 5</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>brand - candidate</from>
      <to>candidate 5</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>team_group 3</from>
      <to>team_group_user</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>team_group 2 2</from>
      <to>team_group_candidate</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>user_account 5</from>
      <to>team_group 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 5</from>
      <to>team_group 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>brand  - BH_DepartmentList 2 2</from>
      <to>team_group 4 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>brand - BH_UserDepartmentGrouping 2</from>
      <to>user_account 5 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>brand - candidate 2</from>
      <to>candidate 5 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>team_group 3 2</from>
      <to>team_group_user 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>team_group 2 2 2</from>
      <to>team_group_candidate 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>user_account 5 2</from>
      <to>team_group 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 5 2</from>
      <to>team_group 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Distribution lookup</from>
      <to>DISTRIBUTION LIST</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company 5</from>
      <to>CONTACT INSERT COMPANY LOCATION</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company_lookup</from>
      <to>block 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 4</from>
      <to>COMPANY LOCATION</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company - parent_id 2</from>
      <to>COMPANY PARENT_ID</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company_lookup</from>
      <to>block</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block</from>
      <to>company - parent_id 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company_lookup</from>
      <to>block 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 2</from>
      <to>Split field to rows</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company_lookup</from>
      <to>block 5</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 5</from>
      <to>COMPANY BILLING LOCATION</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company_lookup</from>
      <to>block 6</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 6</from>
      <to>Split field to rows 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Unique rows</from>
      <to>Filter rows</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Split field to rows 2</from>
      <to>Sort rows</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Sort rows</from>
      <to>Unique rows</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Filter rows</from>
      <to>user_account_import</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company_lookup</from>
      <to>block 7</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Group by</from>
      <to>COMPANY OWNER</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>user_account</from>
      <to>Sort rows 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Sort rows 2</from>
      <to>Group by</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 7</from>
      <to>Split field to rows 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Filter rows 2</from>
      <to>user_account</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Split field to rows 2 2</from>
      <to>Filter rows 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company_lookup</from>
      <to>block 8</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 8</from>
      <to>company industry</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact Info</from>
      <to>company 2 2 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company 2 2 2 2 2</from>
      <to>CONTACT IMPORT</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact Default</from>
      <to>company</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company</from>
      <to>CONTACT DEFAULT IMPORT</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 10</from>
      <to>Contact Info</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>final_contact_id</from>
      <to>block 14</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 14</from>
      <to>contact 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company 6</from>
      <to>company location lookup</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 18</from>
      <to>Split field to rows 2 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Filter rows 4</from>
      <to>user_account_import 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Sort rows 4</from>
      <to>Unique rows 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Split field to rows 2 4</from>
      <to>Sort rows 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Unique rows 3</from>
      <to>Filter rows 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>final_contact_id</from>
      <to>block 18</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact id 2</from>
      <to>industry 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>industry 4</from>
      <to>CONTACT INDUSTRY</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact fe</from>
      <to>functional_expertise</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact id</from>
      <to>fe</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>fe</from>
      <to>CONTACT FUNCTIONAL EXPERTISE</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact id 3</from>
      <to>fe 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>fe 3</from>
      <to>sfe 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>sfe 3</from>
      <to>CONTACT SUBFUNTIONAL EXPERTISE 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>user_account 4</from>
      <to>position_agency_consultant</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Filter rows 4 2</from>
      <to>user_account_import 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Sort rows 4 2</from>
      <to>Unique rows 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Split field to rows 2 4 2</from>
      <to>Sort rows 4 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Unique rows 3 2</from>
      <to>Filter rows 4 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job info</from>
      <to>company 2 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company 2 2 2 2</from>
      <to>final_contact_id 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>final_contact_id 2</from>
      <to>JOB IMPORT</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job</from>
      <to>block 34</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 34</from>
      <to>Split field to rows 2 4 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job</from>
      <to>block 33</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Split field to rows 2 2 2 2 2</from>
      <to>Filter rows 2 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 33</from>
      <to>Split field to rows 2 2 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Filter rows 2 2 2 2</from>
      <to>user_account 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 28</from>
      <to>Split field to rows 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job</from>
      <to>block 28</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 13</from>
      <to>Split field to rows 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>final_contact_id</from>
      <to>block 13</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job</from>
      <to>block 35</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 35</from>
      <to>Filter rows 4 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Filter rows 4 2 2</from>
      <to>compensation - permanent</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 37</from>
      <to>Filter rows 4 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Filter rows 4 2 2 2</from>
      <to>compensation - contract</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job</from>
      <to>block 37</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company 7</from>
      <to>company_location 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company 8</from>
      <to>company_location 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company_location 4</from>
      <to>position_description 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>position_description 2</from>
      <to>JOB LOCATION 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>fe 2</from>
      <to>insert job fe</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>position_description 4</from>
      <to>fe 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>fe 4</from>
      <to>position_description_functional_expertise</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>position_description</from>
      <to>industry 4 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>job industry - BusinessSectors</from>
      <to>vertical 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 45</from>
      <to>Split field to rows 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 49</from>
      <to>Split field to rows 2 5</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 51</from>
      <to>Split field to rows 2 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Filter rows 2 3</from>
      <to>user_account 6</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Sort rows 5</from>
      <to>Unique rows 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Split field to rows 2 5</from>
      <to>Sort rows 5</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Split field to rows 2 2 3</from>
      <to>Filter rows 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Unique rows 4</from>
      <to>Filter rows 5</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>common_location 5</from>
      <to>CANDIDATE LOCATION</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Distribution lookup 2</from>
      <to>candidate_group_candidate</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Email Subscription - Candidate </from>
      <to>block 53</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 53</from>
      <to>CANDIDATE EMAIL SUBSCRIPTION</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate industry 2</from>
      <to>block 57</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 57</from>
      <to>candidate id</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact Distribution + TearSheet</from>
      <to>block 54</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 54</from>
      <to>CANDIDATE GROUP 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate Distribution + TearSheet</from>
      <to>block 62</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 62</from>
      <to>candidate lookup 3 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Note</from>
      <to>block 43</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 43</from>
      <to>candidate 9</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Employment history + Reference+ Education</from>
      <to>block 44</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 44</from>
      <to>candidate 8</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>lookup_final_candidate</from>
      <to>block 45</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>lookup_final_candidate</from>
      <to>block 46</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>lookup_final_candidate</from>
      <to>block 49</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>lookup_final_candidate</from>
      <to>block 51</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact Comment - br</from>
      <to>block 26</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 26</from>
      <to>contact 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact Email Body - br</from>
      <to>block 27</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 27</from>
      <to>Database lookup 2 2 3 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Company Comment - br</from>
      <to>block 12</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 12</from>
      <to>company 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Split field to rows</from>
      <to>Filter rows 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Filter rows 3</from>
      <to>COMPANY DOCUMENT</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>CONTACT DEFAULT IMPORT</from>
      <to>block 10</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Split field to rows 4</from>
      <to>Filter rows 6</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Filter rows 6</from>
      <to>CONTACT DOCUMENT</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact location 2 3</from>
      <to>block 15</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 15</from>
      <to>company 5</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact location 2</from>
      <to>block 16</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 16</from>
      <to>company 6</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>final_contact_id</from>
      <to>Contact location 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>final_contact_id</from>
      <to>Contact location 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>final_contact_id</from>
      <to>Contact Distribution DB</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact Distribution DB</from>
      <to>block 17</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 17</from>
      <to>CONTACT GROUP</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact Distribution</from>
      <to>block 9</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 9</from>
      <to>Contact lookup 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 4 3</from>
      <to>CONTACT SOURCE</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 5</from>
      <to>Database lookup 2 4 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>source 2 2</from>
      <to>candidate_source 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>source 3</from>
      <to>block 29</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 29</from>
      <to>Database lookup 2 5</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>final_contact_id</from>
      <to>source 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact industry 2 2</from>
      <to>block 22</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 22</from>
      <to>contact id 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>final_contact_id</from>
      <to>industry - BusinessSectors</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>final_contact_id</from>
      <to>contact fe</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>industry - BusinessSectors</from>
      <to>VERTICAL 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact FE-SFE</from>
      <to>block 23</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 23</from>
      <to>contact id</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>FE lookup 3</from>
      <to>sub_functional_expertise 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact sfe</from>
      <to>FE lookup 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact FE-SFE 2</from>
      <to>block 24</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 24</from>
      <to>contact id 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 11</from>
      <to>candidate_group 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact lookup 3 3</from>
      <to>Distribution lookup 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact Distribution 2</from>
      <to>block 25</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 25</from>
      <to>Contact lookup 3 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact Distribution DB 3</from>
      <to>insert contact_group</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Distribution lookup 3</from>
      <to>contact_group_contact</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Split field to rows 3</from>
      <to>Filter rows 7</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Filter rows 7</from>
      <to>Update Job Documents</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company industry 2</from>
      <to>block 11</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 11</from>
      <to>lookup company 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company_lookup</from>
      <to>company industry 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company_lookup</from>
      <to>Company Comment - br</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job</from>
      <to>job industry - BusinessSectors</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>job industry</from>
      <to>block 40</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 40</from>
      <to>position_description</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>industry 4 2</from>
      <to>JOB INDUSTRY 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job FE</from>
      <to>block 41</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 41</from>
      <to>position_description 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job</from>
      <to>fe 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job location 2</from>
      <to>block 38</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 38</from>
      <to>company 8</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job</from>
      <to>Job location 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job location</from>
      <to>block 39</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 39</from>
      <to>company 7</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Distribution List 2</from>
      <to>block 56</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 56</from>
      <to>candidate 11</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>lookup_final_candidate</from>
      <to>Distribution List 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>source</from>
      <to>block 55</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 55</from>
      <to>candidate 10</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>lookup_final_candidate</from>
      <to>source 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Distribution List 3</from>
      <to>CANDIDATE GROUP</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate_group 2</from>
      <to>CANDIDATE GROUP CANDIDATE</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate FE-SFE 2</from>
      <to>block 58</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 58</from>
      <to>candidate 3 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>sfe</from>
      <to>block 59</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 59</from>
      <to>candidate 3 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>lookup_final_candidate</from>
      <to>candidate industry</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>lookup_final_candidate</from>
      <to>View_UserDelimitedCategories</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate Comment</from>
      <to>block 60</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 60</from>
      <to>candidate 12</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate Email Body - br</from>
      <to>block 61</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 61</from>
      <to>candidate 13</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>lookup_final_candidate</from>
      <to>Candidate Comment</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Split field to rows 3 2</from>
      <to>Filter rows 8</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Filter rows 8</from>
      <to>CANDIDATE DOCUMENT</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>lookup_final_candidate</from>
      <to>Note</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>lookup_final_candidate</from>
      <to>Employment history + Reference+ Education</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>sfe 2</from>
      <to>fe 3 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>fe 3 2 2 2</from>
      <to>SFE IMPORT</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Filter rows 5</from>
      <to>block 50</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 50</from>
      <to>user_account_import 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>common_location 3</from>
      <to>CANDIDATE PERSONAL LOCATION</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>lookup_final_candidate</from>
      <to>block 47</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 47</from>
      <to>Filter rows 9</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Filter rows 9</from>
      <to>common_location 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Filter rows 9 3</from>
      <to>common_location 5</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 46</from>
      <to>Filter rows 9 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>lookup_final_candidate</from>
      <to>Email Subscription - Candidate </to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>lookup_final_candidate</from>
      <to>Contact Distribution + TearSheet</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>BULLHORN Job Comment - br</from>
      <to>block 42</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 42</from>
      <to>position_description 5</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>position_description 5</from>
      <to>Database join 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database join 2</from>
      <to>job activity</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Company 3</from>
      <to>Contact 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Concat Fields</from>
      <to>position_candidate</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact 3</from>
      <to>Concat Fields</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 3</from>
      <to>job 6</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company_location</from>
      <to>compensation</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>compensation</from>
      <to>POSITION CANDIDATE</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>job 6</from>
      <to>company_location</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>[PLACEMENT DETAIL]</from>
      <to>block 63</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 63</from>
      <to>candidate 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 3 2</from>
      <to>job 6 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>job 6 2</from>
      <to>Step1. Update App status</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>STEP1. JOBAPP</from>
      <to>candidate 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 66</from>
      <to>Offer 5</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 64</from>
      <to>Filter rows 10 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Filter rows 10 2</from>
      <to>[OFFER] PERMANENT</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Filter rows 11 2</from>
      <to>[OFFER] CONTRACT</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 65</from>
      <to>Filter rows 11 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 67</from>
      <to>[INVOICE]</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 3 4</from>
      <to>job 6 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company_location 3</from>
      <to>compensation 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>compensation 2</from>
      <to>Position Candidate 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>job 6 3</from>
      <to>company_location 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Offer 5 2</from>
      <to>user_account 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>user_account 2</from>
      <to>[OFFER REVENUE SPLIT]</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 48</from>
      <to>Filter rows 9 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>common_location 2</from>
      <to>CANDIDATE COMPANY ADDRESS</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>lookup_final_candidate</from>
      <to>block 48</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Filter rows 9 4</from>
      <to>common_location 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 3</from>
      <to>company_lookup</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>CONTACT IMPORT</from>
      <to>block 30</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 30</from>
      <to>final_contact_id</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job</from>
      <to>BULLHORN Job Comment - br</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>JOB IMPORT</from>
      <to>block 31</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 31</from>
      <to>Job</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>common_location 4</from>
      <to>CANDIDATE DESIRED LOCATION</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Filter rows 9 2</from>
      <to>common_location 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 36</from>
      <to>Filter rows 9 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>CANDIDATE IMPORT</from>
      <to>block 32</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 32</from>
      <to>lookup_final_candidate</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>lookup_final_candidate</from>
      <to>block 36</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 2 2</from>
      <to>additional_form_values InsertUpdate 2 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 2 2 2</from>
      <to>additional_form_values InsertUpdate 2 2 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 2 2 2 2</from>
      <to>additional_form_values InsertUpdate 2 2 2 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 2 2 3</from>
      <to>additional_form_values InsertUpdate 2 2 2 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 8 2</from>
      <to>additional_form_values InsertUpdate 2 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>cf 2 2 2 2</from>
      <to>candidate 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>cf 2 2 2 2 2</from>
      <to>candidate 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>cf 2 2 2 2 2 2</from>
      <to>candidate 2 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>cf 2 2 2 2 3</from>
      <to>candidate 2 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>cf 2 2 3</from>
      <to>candidate 8 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job Application - Rejected</from>
      <to>position_description 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job Application - Sub Status</from>
      <to>position_description 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Sub status</from>
      <to>SubStatus</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 3 2 2</from>
      <to>Sub status</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 3 2 2</from>
      <to>Update Rejected date</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 3 2 2</from>
      <to>position_candidate 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>position_description 3</from>
      <to>candidate 3 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>[OFFER PERSIONAL INFO]</from>
      <to>block 67</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>document_types 4</from>
      <to>JOB DOCUMENT</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>position_description 8</from>
      <to>document_types 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact document + type</from>
      <to>block 69</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 69</from>
      <to>contact 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job document + type</from>
      <to>block 70</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 70</from>
      <to>position_description 8</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate document + type</from>
      <to>block 71</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 71</from>
      <to>candidate 7</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Filter rows 9 5</from>
      <to>common_location 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 72</from>
      <to>Filter rows 9 5</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>common_location 3 2</from>
      <to>CONTACT PERSONAL LOCATION</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>final_contact_id</from>
      <to>block 72</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job Application</from>
      <to>position_description 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Offer 5</from>
      <to>[CONPENSATION PERIOD]</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact lookup 3</from>
      <to>Distribution lookup</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>[PLACEMENT DETAIL]</from>
      <to>[PROFIT SPLIT]</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>final_contact_id</from>
      <to>Contact Comment - br</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact Comment - br</from>
      <to>Contact Email Body - br</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Email Subscription + contact</from>
      <to>block 53 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 53 2</from>
      <to>EMAIL SUBSCRIPTION 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>final_contact_id</from>
      <to>Email Subscription + contact</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 59 2</from>
      <to>position_description 6</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>position_description 6</from>
      <to>fe 3 2 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>fe 3 2 2 3</from>
      <to>sfe 3 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>sfe 2 2</from>
      <to>sfe 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>sfe 2 2</from>
      <to>fe 3 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>sfe 3 2 2 2</from>
      <to>candidate_sub_functional_expertise 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>sfe 4</from>
      <to>block 59 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>fe 3 2 3</from>
      <to>SFE IMPORT 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job</from>
      <to>sfe 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate Comment</from>
      <to>Candidate Email Body - br</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Company document + type</from>
      <to>Contact document + type</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact document + type</from>
      <to>Job document + type</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job document + type</from>
      <to>Candidate document + type</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate Comment</from>
      <to>candidate 12</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job Application - Sub Status 2 2</from>
      <to>position_description 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Sub status 3</from>
      <to>SUB STATUS 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 3 2 2 2</from>
      <to>Sub status 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>position_description 3 2</from>
      <to>candidate 3 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>[PROFIT SPLIT]</from>
      <to>block 68</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 68</from>
      <to>candidate 3 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>POSITION CANDIDATE</from>
      <to>block 75</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 75</from>
      <to>[OFFER]</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 73</from>
      <to>Company 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>[OFFER PAY CHARGE]</from>
      <to>block 73</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>position_candidate</from>
      <to>block 20</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 20</from>
      <to>[OFFER PERSIONAL INFO]</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Position Candidate 2</from>
      <to>Offer 5 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>[PLACEMENT DETAIL]</from>
      <to>candidate 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>[CONPENSATION PERIOD]</from>
      <to>block 76</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 76</from>
      <to>[OFFER PAY CHARGE]</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Split field to rows 2 2 2 2</from>
      <to>Filter rows 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 19 2</from>
      <to>Split field to rows 2 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>final_contact_id</from>
      <to>block 19 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Filter rows 2 2 2</from>
      <to>user_account 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate Info - DONT USE</from>
      <to>lookup_final_candidate</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>user_account 6</from>
      <to>Java Script 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Java Script 3</from>
      <to>Group by 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Group by 2</from>
      <to>Java Script 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Java Script 4</from>
      <to>CANDIDATE OWNER</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Java Script</from>
      <to>Group by 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Group by 2 2</from>
      <to>Java Script 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Java Script 2</from>
      <to>CONTACT OWNERS</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>user_account 3 2</from>
      <to>Java Script</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Filter rows 10</from>
      <to>company_department</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Filter rows 12</from>
      <to>company_department 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Sort rows 3</from>
      <to>Unique rows 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Unique rows 2</from>
      <to>Filter rows 10</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 78</from>
      <to>Sort rows 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 79</from>
      <to>Filter rows 12</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company_department 2</from>
      <to>contact_department</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>final_contact_id</from>
      <to>block 78</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>final_contact_id</from>
      <to>block 79</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>BULLHORN Contact - PASSIVE 2</from>
      <to>contact 2 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact - STAGE</from>
      <to>contact 2 3 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact - deleted_timestamp</from>
      <to>contact 2 3 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact 2 3 2</from>
      <to>status ACTIVE/PASSIVE 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact 2 3 2 2</from>
      <to>deleted_timestamp</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact 2 3 2 2 2</from>
      <to>Contact STAGE</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>CONTACT IMPORT - Lead</from>
      <to>final_contact_id  - Lead</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact Info  - Lead</from>
      <to>company 2 2 2 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact location 2 2</from>
      <to>block 16 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact location 2 3 2</from>
      <to>block 15 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 4 3 2</from>
      <to>SOURCE 4 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 5 2</from>
      <to>Database lookup 2 4 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Filter rows 2 2 2 3</from>
      <to>user_account 3 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Filter rows 4 3</from>
      <to>user_account_import 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Group by 2 2 2</from>
      <to>Java Script 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Java Script 2 2</from>
      <to>CONTACT OWNERS 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Java Script 5</from>
      <to>Group by 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Sort rows 4 3</from>
      <to>Unique rows 3 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Split field to rows 2 2 2 2 3</from>
      <to>Filter rows 2 2 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Split field to rows 2 4 3</from>
      <to>Sort rows 4 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Unique rows 3 3</from>
      <to>Filter rows 4 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 15 2</from>
      <to>company 5 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 16 2</from>
      <to>company 6 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 18 2</from>
      <to>Split field to rows 2 4 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 74</from>
      <to>Database lookup 2 5 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 77</from>
      <to>Split field to rows 2 2 2 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company 2 2 2 2 2 2</from>
      <to>CONTACT IMPORT - Lead</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company 5 2</from>
      <to>INSERT COMPANY LOCATION 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company 6 2</from>
      <to>company location lookup 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company location lookup 2</from>
      <to>contact lookup 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact lookup 2</from>
      <to>WORK LOCATION 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>final_contact_id  - Lead</from>
      <to>Contact location 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>final_contact_id  - Lead</from>
      <to>Contact location 2 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>final_contact_id  - Lead</from>
      <to>block 18 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>final_contact_id  - Lead</from>
      <to>block 77</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>final_contact_id  - Lead</from>
      <to>source 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>source 2 2 2</from>
      <to>candidate_source - Lead</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>source 2 2 2</from>
      <to>source 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>source 3 2</from>
      <to>block 74</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>user_account 3 2 2</from>
      <to>Java Script 5</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 4 2 2</from>
      <to>status ACTIVE/PASSIVE 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>status 2 2</from>
      <to>Database lookup 2 4 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>CompanyInfo</from>
      <to>COMPANY IMPORT</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>COMPANY IMPORT</from>
      <to>block 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate Email Body - br</from>
      <to>candidate 13</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>CompanyInfo</from>
      <to>company_lookup</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job Application 2</from>
      <to>position_description 7</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 14</from>
      <to>[POSITION CANDIDATE]</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>position_description 7</from>
      <to>candidate 14</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job document + type</from>
      <to>position_description 8</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job info</from>
      <to>Job</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate document + type</from>
      <to>candidate 7</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Sub status 3 2</from>
      <to>SUB STATUS 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Sort rows 6</from>
      <to>Unique rows 5</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 21</from>
      <to>SUB_STATUS</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 49 2 2</from>
      <to>Sub status 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 19</from>
      <to>Sort rows 6</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Unique rows 5</from>
      <to>Filter rows 11</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Filter rows 11</from>
      <to>block 21</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 14</from>
      <to>block 49 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 14</from>
      <to>block 19</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>document_types</from>
      <to>block 52</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 52</from>
      <to>Company document + type</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Company document + type</from>
      <to>block 52 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 52 2</from>
      <to>company 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 15</from>
      <to>contact</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact</from>
      <to>LINK_CONTACT_CANDIDATE 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact Distribution + TearSheet</from>
      <to>Candidate Distribution + TearSheet</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Distribution List 3</from>
      <to>Distribution List 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate industry</from>
      <to>candidate industry 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>View_UserDelimitedCategories</from>
      <to>candidate FE-SFE 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>source 2</from>
      <to>source</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job location 2</from>
      <to>Job location</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>job industry - BusinessSectors</from>
      <to>job industry</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>fe 2</from>
      <to>Job FE</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>source 2 2</from>
      <to>source 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact Distribution DB</from>
      <to>Contact Distribution</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>POSITION CANDIDATE</from>
      <to>block 64</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>POSITION CANDIDATE</from>
      <to>block 65</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>POSITION CANDIDATE</from>
      <to>block 66</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>FE lookup 3 2</from>
      <to>sub_functional_expertise</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>BH_CategorySkillAssociation</from>
      <to>functional_expertise 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>functional_expertise 3</from>
      <to>FE lookup 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact id 3 2</from>
      <to>fe 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>fe 3 2</from>
      <to>sfe 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>sfe 3 2</from>
      <to>CONTACT SUBFUNTIONAL EXPERTISE</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact FE-SFE 2 2</from>
      <to>block 24 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 24 2</from>
      <to>contact id 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>final_contact_id</from>
      <to>BH_CategorySkillAssociation</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>BH_CategorySkillAssociation</from>
      <to>contact FE-SFE 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact fe</from>
      <to>contact FE-SFE</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>industry - BusinessSectors</from>
      <to>contact industry 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>compensation - permanent</from>
      <to>position_sub_type</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 3 3 2 2</from>
      <to>fe 3 2 2 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>fe 3 2 2 4</from>
      <to>sfe 3 2 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>sfe 3 2 2 3</from>
      <to>candidate_sub_functional_expertise 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>FE lookup 3 2 2</from>
      <to>sub_functional_expertise 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>BH_CategorySkillAssociation 2</from>
      <to>functional_expertise 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>functional_expertise 3 2</from>
      <to>FE lookup 3 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>sfe 5</from>
      <to>block 59 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 59 3</from>
      <to>candidate 3 3 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>lookup_final_candidate</from>
      <to>BH_CategorySkillAssociation 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>BH_CategorySkillAssociation 2</from>
      <to>sfe 5</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>lookup_final_candidate</from>
      <to>LINK_CONTACT_CANDIDATE</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>LINK_CONTACT_CANDIDATE</from>
      <to>block 53 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>block 53 3</from>
      <to>candidate 15</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Company document + type</from>
      <to>company 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>document_types 5</from>
      <to>COMPANY DOCUMENT 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate Info 2</from>
      <to>CANDIDATE IMPORT</to>
      <enabled>N</enabled>
    </hop>
  </order>
  <step>
    <name>ACTIVITY - EMAIL BODY</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <schema>public</schema>
    <table>activity</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>N</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field>contactid</partitioning_field>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
      <field>
        <column_name>candidate_id</column_name>
        <stream_name>actual_candidateid</stream_name>
      </field>
      <field>
        <column_name>user_account_id</column_name>
        <stream_name>user_account_id</stream_name>
      </field>
      <field>
        <column_name>insert_timestamp</column_name>
        <stream_name>insert_timestamp</stream_name>
      </field>
      <field>
        <column_name>content</column_name>
        <stream_name>content</stream_name>
      </field>
      <field>
        <column_name>type</column_name>
        <stream_name>type</stream_name>
      </field>
      <field>
        <column_name>category</column_name>
        <stream_name>category</stream_name>
      </field>
      <field>
        <column_name>userMessageID</column_name>
        <stream_name>userMessageID</stream_name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4512</xloc>
      <yloc>944</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>ALL</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
-- SALARY
select
      convert(varchar(max),C.candidateID) as 'candidate-externalId' --, C.userID as '#userID'
	, coalesce(nullif(replace(C.FirstName,'?',''), ''), 'No Firstname') as 'contact-firstName'
    , coalesce(nullif(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID)) as 'contact-lastName'
    , 2 as 'salary_type'
    , 12 as 'months_per_year'
--	, cast(C.salaryLow as int) as 'present_salary_rate'
--	, cast(C.salaryLow*12 as int) as 'current_salary'
--	, cast(C.salary as int) as 'desire_salary'

    , hourlyRate as 'Desired Annual Salary' -- desire_salary as "Annual salary (Desired)"
    , hourlyRateLow as 'Current Annual Salary (auto calculated from monthly salary)' --
    , cast(C.salary as int) as 'Desired Monthly Salary' --**    desire_salary_monthly as "Monthly salary (Desired)"
    , cast(C.salaryLow as int) as 'Current Monthly Salary' --** present_salary_rate as "Monthly salary"
    , cast(C.salaryLow*12 as int) as '#Current Monthly Salary(auto caculated)' --** current_salary as "Annual salary"
from bullhorn1.Candidate C
where C.isdeleted &lt;&gt; 1 --and C.status &lt;&gt; 'Archive'
--and C.candidateID in (9709)</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5680</xloc>
      <yloc>2048</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>BH_CategorySkillAssociation</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
       select
                cl.occupation as fe, lower(cl.occupation)  as 'tmp_fe'
              , sl.name as sfe, lower(sl.name) as 'tmp'
              --, getdate() as insert_timestamp
       from bullhorn1.BH_CategorySkillAssociation csa
       left join bullhorn1.BH_CategoryList cl on cl.categoryID = csa.categoryID
       left join bullhorn1.BH_SkillList sl on sl.skillID = csa.skillID
       where cl.enabled = 1 and sl.enabled = 1
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1696</xloc>
      <yloc>528</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>BH_CategorySkillAssociation 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
       select
                cl.occupation as fe, lower(cl.occupation)  as 'tmp_fe'
              , sl.name as sfe, lower(sl.name) as 'tmp'
              --, getdate() as insert_timestamp
       from bullhorn1.BH_CategorySkillAssociation csa
       left join bullhorn1.BH_CategoryList cl on cl.categoryID = csa.categoryID
       left join bullhorn1.BH_SkillList sl on sl.skillID = csa.skillID
       where cl.enabled = 1 and sl.enabled = 1
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4880</xloc>
      <yloc>720</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>BULLHORN Contact - PASSIVE 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
with t as (
select
         Cl.clientID as 'contact-externalId', Cl.userID as '#UserID'
       , case when (ltrim(replace(UC.firstName,'?','')) = '' or  UC.firstName is null) then 'Firstname' else ltrim(replace(UC.firstName,'?','')) end as 'contact-firstName'
       , case 
              when Cl.status = 'Archive' and (trim(replace(UC.lastName,'?','')) = '' or  UC.lastName is null) then concat('Lastname-',Cl.clientID,' (Archive)')
              when (trim(replace(UC.lastName,'?','')) = '' or  UC.lastName is null) then concat('Lastname-',Cl.clientID)
              else trim(replace(UC.lastName,'?','')) end as 'contact-Lastname'
       , cl.isdeleted
       , CL.STATUS
-- select distinct cl.status
       , case
       --when cl.status in ('Placed','Commenced','No Seeking','Cannot Assist','Not-Responsive','6- Not-Responsive','Placed - Direct Hire','Archive','Left Company','Former Candidate','Former Contact','Inactive','Non MM Contractor','Non MM Placed Perm', 'Placed by us','Placed Contractor','Placed FTC','Placed Permanent') then 0      
       when cl.status like '%Placed%' then 0
       when cl.status like '%Archive%' then 0
       when cl.status like '%Left%' then 0
       when cl.status like '%Former%' then 0
       when cl.status like '%%Inactive' then 0
       when cl.status like '%%Passive' then 0
       when cl.status like '%Non %' then 0
       when cl.status in ('Commenced','No Seeking','Cannot Assist','Not-Responsive') then 0
              
       when cl.status like '%Do%not%use%' then 2
       when cl.status like '%DNC%' then 2
       when cl.status like '%DNU%' then 2
       end as active
from bullhorn1.BH_Client Cl
left join bullhorn1.BH_UserContact UC ON Cl.userID = UC.userID
--WHERE CL.STATUS in ('Do not use','DNC','Placed','Commenced','No Seeking','Cannot Assist','Not-Responsive','6- Not-Responsive','Placed - Direct Hire','Archive','Left Company','Former Candidate','Former Contact','Inactive','Non MM Contractor','Non MM Placed Perm', 'Placed by us','Placed Contractor','Placed FTC','Placed Permanent')
)
select * from t where active is not null
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1424</xloc>
      <yloc>992</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>BULLHORN Job Comment - br</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
with comments as (
(                
       select 
                 a.jobPostingID as 'externalid' --, UC.userID, concat(UC1.firstName,' ',UC1.lastName) as fullname
               , a.title
               , UC.dateAdded
               , UC1.email as user_account_id
               , Stuff('COMMENT: ' + '&lt;br/>'
                       + Coalesce('Created Date: ' + NULLIF(convert(nvarchar,UC.dateAdded,120), '') + '&lt;br/>', '')
                       + Coalesce('Author: ' + NULLIF(U.name, '') + '&lt;br/>', '')
                       + Coalesce('Action: ' + NULLIF(UC.action, '') + '&lt;br/>', '')
                       + Coalesce('Comments: ' + NULLIF(cast(UC.comments as nvarchar(max)), '') + '&lt;br/>', '')
                 , 1, 0, '') as 'content'
               --, 100 tmp_contact_email
       --select top 100 uce.*
       from bullhorn1.BH_UserComment UC --where jobPostingID is not null
       left join bullhorn1.BH_UserCommentEntity uce on uce.userCommentID = UC.userCommentID
       left join bullhorn1.BH_JobPosting a on a.jobPostingID = uce.entityid
       left join bullhorn1.BH_User U on U.userID = UC.commentingUserID
       left join bullhorn1.BH_UserContact UC1 ON UC1.userID = U.userID
       where a.jobPostingID is not null and (a.isdeleted &lt;&gt; 1 ) and uce.entity = 'JobPosting' --and a.status &lt;&gt; 'Archive'
       --and uce.entityid in (367)
       --select distinct entity from bullhorn1.BH_UserCommentEntity
UNION 
       select 
                 a.jobPostingID as 'externalid' --, UC.userID, concat(UC1.firstName,' ',UC1.lastName) as fullname
               , a.title
               , UC.dateAdded
               , UC1.email as user_account_id
               , Stuff('COMMENT: ' + '&lt;br/>'
                       + Coalesce('Created Date: ' + NULLIF(convert(nvarchar,UC.dateAdded,120), '') + '&lt;br/>', '')
                       + Coalesce('Author: ' + NULLIF(U.name, '') + '&lt;br/>', '')
                       + Coalesce('Action: ' + NULLIF(UC.action, '') + '&lt;br/>', '')
                       + Coalesce('Comments: ' + NULLIF(cast(UC.comments as nvarchar(max)), '') + '&lt;br/>', '')
               , 1, 0, '') as 'content'
       -- select top 100 *
       from bullhorn1.BH_UserComment UC --where jobPostingID is not null
       left join bullhorn1.BH_JobPosting a on a.jobPostingID = UC.jobPostingID
       left join bullhorn1.BH_User U on U.userID = UC.commentingUserID
       left join bullhorn1.BH_UserContact UC1 ON UC1.userID = U.userID
       where a.jobPostingID is not null and (a.isdeleted &lt;&gt; 1) -- and a.status &lt;&gt; 'Archive')
       --and a.jobPostingID in (367)
)

UNION ALL

       SELECT
                a.jobPostingID as 'externalid'
              , j.title
              , a.dateAdded
              , UC3.email as user_account_id
              , Stuff('APPOINTMENT: ' + '&lt;br/>'
                     + Coalesce('Contact: ' + NULLIF(cast(concat(UC1.FirstName,' ',UC1.LastName,'     ',UC1.email) as nvarchar(max)), '') + '&lt;br/>', '') --a.clientUserID 
                     + Coalesce('Candidate: ' + NULLIF(cast( concat(UC2.FirstName,' ',UC2.LastName,'     ',UC2.email) as nvarchar(max)), '') + '&lt;br/>', '') --a.candidateUserID 
                     + Coalesce('Job: ' + NULLIF(cast(j.title as nvarchar(max)), '') + '&lt;br/>', '') --jobPostingID
                     + coalesce('Communication Method: ' + NULLIF(convert(nvarchar(max),a.communicationMethod), '') + '&lt;br/>', '')
                     + Coalesce('Date Begin: ' + NULLIF(cast(a.dateBegin as nvarchar(max)), '') + '&lt;br/>', '')
                     + coalesce('Date End: ' + NULLIF(convert(nvarchar(max),a.dateEnd), '') + '&lt;br/>', '')
                     + coalesce('Type: ' + NULLIF(convert(nvarchar(max),a.type), '') + '&lt;br/>', '') --CA.activePlacements
                     + coalesce('Subject: ' + NULLIF(convert(nvarchar(max),a.subject), '') + '&lt;br/>', '')
                     + coalesce('Reminder: ' + NULLIF(convert(nvarchar(max),a.notificationMinutes), '') + '&lt;br/>', '')
                     + coalesce('Opportunity: ' + NULLIF(convert(nvarchar(max),j2.title), '') + '&lt;br/>', '')
                     + coalesce('Location: ' + NULLIF(convert(nvarchar(max),a.location), '') + '&lt;br/>', '')
                     + coalesce('Description: ' + NULLIF([bullhorn1].[fn_ConvertHTMLToText](a.description), '') + '&lt;br/>', '')
                     + coalesce('File Name: ' + NULLIF(convert(nvarchar(max),af.name), '') + '&lt;br/>', '')
                     + coalesce('Owner: ' + NULLIF(cast( concat(UC3.FirstName,' ',UC3.LastName,'     ',UC3.email) as nvarchar(max)), '') + '&lt;br/>', '')
                     + coalesce('Lead: ' + NULLIF(cast( concat(UC4.FirstName,' ',UC4.LastName,'     ',UC4.email) as nvarchar(max)), '') + '&lt;br/>', '')
              , 1, 0, '') as 'content' 
       -- select top 100 * -- select count(*) --2062
       from bullhorn1.View_Appointment a
       left join bullhorn1.View_AppointmentFile af on af.appointmentID = a.appointmentID
       left join bullhorn1.BH_Client Cl on Cl.userID = a.ClientUserID
       left join bullhorn1.BH_UserContact UC1 ON UC1.userID = Cl.userID
       left join bullhorn1.BH_UserContact UC2 ON UC2.userID = a.candidateUserID
       left join bullhorn1.BH_UserContact UC3 ON UC3.userID = a.userID
       left join bullhorn1.BH_UserContact UC4 ON UC4.userID = a.LeaduserID
       left join bullhorn1.BH_JobPosting j on j.jobPostingID = a.jobPostingID
       left join bullhorn1.BH_JobPosting j2 on j.jobPostingID = a.opportunityJobPostingID
       where j.jobPostingID is not null and (j.isdeleted &lt;&gt; 1) -- and j.status &lt;&gt; 'Archive')

UNION ALL

       SELECT ---top 20 
                j.jobPostingID as 'externalid' --,concat(UC1.firstName,' ',UC1.lastName) as fullname
              , j.title
              , a.dateAdded
              , UC4.email as user_account_id
              , Stuff('TASK: ' + '&lt;br/>'
                     + Coalesce('Candidate: ' + NULLIF(cast( concat(UC2.FirstName,' ',UC2.LastName,'     ',UC2.email) as nvarchar(max)), '') + '&lt;br/>', '') --a.candidateUserID 
                     --+ Coalesce('Assigned To: ' + NULLIF(cast(a.childTaskOwners as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Contact: ' + NULLIF(cast(concat(UC1.FirstName,' ',UC1.LastName,'     ',UC1.email) as nvarchar(max)), '') + '&lt;br/>', '') --a.clientUserID 
                     + Coalesce('Due Date And Time: ' + NULLIF(cast(a.dateBegin as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Date End: ' + NULLIF(cast(a.dateEnd as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Description: ' + NULLIF(cast([bullhorn1].[fn_ConvertHTMLToText](a.description) as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Visibility: ' + NULLIF(cast(a.isPrivate as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Job: ' + NULLIF(cast(j.title as nvarchar(max)), '') + '&lt;br/>', '') --jobPostingID
                     + Coalesce('Lead: ' + NULLIF(cast( concat(UC3.FirstName,' ',UC3.LastName,'     ',UC3.email) as nvarchar(max)), '') + '&lt;br/>', '') --a.leadUserID
                     + Coalesce('Reminder: ' + NULLIF(cast(a.notificationMinutes as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Opportunity: ' + NULLIF(cast(a.opportunityJobPostingID as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Placement: ' + NULLIF(cast(a.placementID as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Priority: ' + NULLIF(cast(a.priority as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Recurrence Day Bits: ' + NULLIF(cast(a.recurrenceDayBits as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Recurrence Frequency: ' + NULLIF(cast(a.recurrenceFrequency as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Recurrence Max: ' + NULLIF(cast(a.recurrenceMax as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Recurrence Month Bits: ' + NULLIF(cast(a.recurrenceMonthBits as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Recurrence Style: ' + NULLIF(cast(a.recurrenceStyle as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Recurrence Type: ' + NULLIF(cast(a.recurrenceType as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Subject: ' + NULLIF(cast(a.subject as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Type: ' + NULLIF(cast(a.type as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Owner: ' + NULLIF(cast( concat(UC4.FirstName,' ',UC4.LastName,'     ',UC4.email) as nvarchar(max)), '') + '&lt;br/>', '') --a.userID
              , 1, 0, '') as 'content' 
       -- select top 100 * -- select count(*) --24
       from bullhorn1.View_Task a
       left join bullhorn1.BH_Client Cl on Cl.userID = a.ClientUserID
       left join bullhorn1.BH_UserContact UC1 ON Cl.userID = UC1.userID
       left join bullhorn1.BH_UserContact UC2 ON a.candidateUserID = UC2.userID
       left join bullhorn1.BH_JobPosting j on j.jobPostingID = a.jobPostingID
       left join bullhorn1.BH_UserContact UC3 ON a.leadUserID = UC3.userID
       left join bullhorn1.BH_UserContact UC4 ON a.userID = UC4.userID
       where j.jobPostingID is not null and (j.isdeleted &lt;&gt; 1) --and j.status &lt;&gt; 'Archive')

UNION ALL
        -- PLACEMENT
       select 
                PL.jobPostingID as 'externalid'
              , j.title
              , pl.dateadded
              , UC1.email as user_account_id
              , Stuff( 'PLACEMENT: ' + '&lt;br/>'
                     + Coalesce('Billing Contact: ' + NULLIF(cast( concat(UC1.FirstName,' ',UC1.LastName,'     ',UC1.email)  as nvarchar(max)), '') + '&lt;br/>', '')  --pl.billingUserID
                     --+ Coalesce('Bill Rate Information: ' + NULLIF(cast(pl.billRateInfoHeader as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Bill Rate: ' + NULLIF(cast(pl.clientBillRate as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Over-time Bill Rate: ' + NULLIF(cast(pl.clientOverTimeRate as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Comments: ' + NULLIF(cast(pl.comments as nvarchar(max)), '') + '&lt;br/>', '')
                     --+ Coalesce('Contract Employment Info: ' + NULLIF(cast(pl.contractInfoHeader as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Primary Timesheet Approver: ' + NULLIF(cast(pl.correlatedCustomText1 as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Secondary Timecard Approver: ' + NULLIF(cast(pl.correlatedCustomText2 as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Purchase Order Number: ' + NULLIF(cast(pl.correlatedCustomText3 as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Cost Center: ' + NULLIF(cast(pl.costCenter as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Insurance Reference: ' + NULLIF(cast(pl.customText1 as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Start Date: ' + NULLIF(cast(pl.dateBegin as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Effective Date (Client): ' + NULLIF(cast(pl.dateClientEffective as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Effective Date: ' + NULLIF(cast(pl.dateEffective as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Scheduled End: ' + NULLIF(cast(pl.dateEnd as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Days Guaranteed: ' + NULLIF(cast(pl.daysGuaranteed as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Days Pro-Rated: ' + NULLIF(cast(pl.daysProRated as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Employment Type: ' + NULLIF(cast(pl.employmentType as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Placement Fee (%): ' + NULLIF(cast(pl.fee as nvarchar(max)), '') + '&lt;br/>', '')
                     --+ Coalesce('Placement Fee (Flat): ' + NULLIF(cast(pl.flatFee as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Hours of Operation: ' + NULLIF(cast(pl.hoursOfOperation as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Hours Per Day: ' + NULLIF(cast(pl.hoursPerDay as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Rate Entry Type: ' + NULLIF(cast(pl.isMultirate as nvarchar(max)), '') + '&lt;br/>', '')
                     --+ Coalesce('Mark-up %: ' + NULLIF(cast(pl.markUpPercentage as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Over-time Pay Rate: ' + NULLIF(cast(pl.overtimeRate as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Pay Rate: ' + NULLIF(cast(pl.payRate as nvarchar(max)), '') + '&lt;br/>', '')
                     --+ Coalesce('Pay Rate Information: ' + NULLIF(cast(pl.payRateInfoHeader as nvarchar(max)), '') + '&lt;br/>', '')
                     --+ Coalesce('Permanent Employment Info: ' + NULLIF(cast(pl.permanentInfoHeader as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Referral Fee Type: ' + NULLIF(cast(pl.referralFeeType as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Reporting to: ' + NULLIF(cast(pl.reportTo as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Salary: ' + NULLIF(cast(pl.salary as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Pay Unit: ' + NULLIF(cast(pl.salaryUnit as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Status: ' + NULLIF(cast(pl.status as nvarchar(max)), '') + '&lt;br/>', '')
              , 1, 0, '') as 'content'
       from bullhorn1.BH_Placement PL --where PL.reportTo &lt;&gt; ''
       left join bullhorn1.BH_UserContact UC1 ON UC1.userID = pl.billingUserID
       left join ( select candidateID, concat(FirstName,' ',LastName) as fullname, userid from bullhorn1.Candidate) C on C.userID = pl.userid
       left join bullhorn1.BH_JobPosting j on j.jobPostingID = PL.jobPostingID
       where j.jobPostingID is not null and (j.isdeleted &lt;&gt; 1) -- and j.status &lt;&gt; 'Archive')
)

--select count(*) from comments where content &lt;&gt; '' --12428
--select top 10 * from bullhorn1.BH_Client 
--select count(*) from comments where contact_id is not null
--select * from comments where contact_id is not null and contact_id in (4054,7102) --538216 > 563579



select --top 100
                    externalid
                  , title
                  --, cast('-10' as int) as 'user_account_id'
                  , user_account_id
                  , 'comment' as 'category'
                  , 'job' as 'type'
                  , dateAdded as 'insert_timestamp'
                  --, [dbo].[udf_StripHTML](content) as 'content'
                  , [bullhorn1].[fn_ConvertHTMLToText]( replace(content,char(10),'&lt;br/>')) as 'content'
                  --, '20200202' as tmp
from comments 
where 'content' &lt;&gt; ''
--and externalid in (25447,26051)
--and candidateID = 2988 or fullname like '%Philip%'                
--and dateAdded >= '2020-01-01 00:00:00'                  
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3360</xloc>
      <yloc>1040</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CANDIDATE ACTIVITY</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <schema>public</schema>
    <table>activity</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>N</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field>contactid</partitioning_field>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
      <field>
        <column_name>candidate_id</column_name>
        <stream_name>actual_candidate_id</stream_name>
      </field>
      <field>
        <column_name>user_account_id</column_name>
        <stream_name>final_user_account_id</stream_name>
      </field>
      <field>
        <column_name>insert_timestamp</column_name>
        <stream_name>insert_timestamp</stream_name>
      </field>
      <field>
        <column_name>content</column_name>
        <stream_name>content</stream_name>
      </field>
      <field>
        <column_name>type</column_name>
        <stream_name>type</stream_name>
      </field>
      <field>
        <column_name>category</column_name>
        <stream_name>category</stream_name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4368</xloc>
      <yloc>864</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CANDIDATE COMPANY ADDRESS</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>Y</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>final_candidate_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>company_location_id</name>
        <rename>id</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5696</xloc>
      <yloc>912</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CANDIDATE DESIRED LOCATION</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>Y</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>final_candidate_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>desired_work_location_list</name>
        <rename>id</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5696</xloc>
      <yloc>768</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CANDIDATE DOCUMENT</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>bulk_upload_document_mapping</table>
      <key>
        <name>entity_type</name>
        <field>entity_type</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_candidate_id</name>
        <field>entity_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>document-filename</name>
        <field>file_name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>default_file</name>
        <field>default_file</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>entity_type</name>
        <rename>entity_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>entity_id</name>
        <rename>final_candidate_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>file_name</name>
        <rename>document-filename</rename>
        <update>Y</update>
      </value>
      <value>
        <name>default_file</name>
        <rename>default_file</rename>
        <update>Y</update>
      </value>
      <value>
        <name>document_type</name>
        <rename>document_type</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5696</xloc>
      <yloc>192</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CANDIDATE DOCUMENT 2</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>Y</skip_lookup>
    <commit>200</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema/>
      <table>candidate_document</table>
      <key>
        <name>candidateid</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>UploadedName</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>uploaded_filename</name>
        <rename>RealName</rename>
      </value>
      <value>
        <name>created</name>
        <rename>created</rename>
      </value>
      <value>
        <name>document_types_id</name>
        <rename>document_types_id</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>768</xloc>
      <yloc>1200</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CANDIDATE EMAIL SUBSCRIPTION</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema/>
      <table>email_subscription</table>
      <key>
        <name>email</name>
        <field>email</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>email</name>
        <rename>email</rename>
        <update>Y</update>
      </value>
      <value>
        <name>subscribed</name>
        <rename>subcribed</rename>
        <update>Y</update>
      </value>
      <value>
        <name>last_modified_by</name>
        <rename>last_modified_by</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5536</xloc>
      <yloc>976</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CANDIDATE FUNCTIONAL EXPERTISE</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>candidate_functional_expertise</table>
      <key>
        <name>final_candidate_id</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_fe_id</name>
        <field>functional_expertise_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>candidate_id</name>
        <rename>final_candidate_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>functional_expertise_id</name>
        <rename>final_fe_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4368</xloc>
      <yloc>656</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CANDIDATE GROUP</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>candidate_group</table>
      <key>
        <name>GROUP_NAME</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>owner_id</name>
        <field>owner_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>share_permission</name>
        <field>share_permission</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>name</name>
        <rename>GROUP_NAME</rename>
        <update>Y</update>
      </value>
      <value>
        <name>owner_id</name>
        <rename>owner_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp_ind</rename>
        <update>Y</update>
      </value>
      <value>
        <name>share_permission</name>
        <rename>share_permission</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4752</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CANDIDATE GROUP 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>candidate_group</table>
      <key>
        <name>GROUP_NAME</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>owner_id</name>
        <field>owner_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>share_permission</name>
        <field>share_permission</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>name</name>
        <rename>GROUP_NAME</rename>
        <update>Y</update>
      </value>
      <value>
        <name>owner_id</name>
        <rename>owner_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>share_permission</name>
        <rename>share_permission</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>tmp</name>
        <rename>tmp</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4624</xloc>
      <yloc>208</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CANDIDATE GROUP CANDIDATE</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>candidate_group_candidate</table>
      <key>
        <name>final_candidate_id</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_candidate_group_id</name>
        <field>candidate_group_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>candidate_id</name>
        <rename>final_candidate_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>candidate_group_id</name>
        <rename>final_candidate_group_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4368</xloc>
      <yloc>400</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CANDIDATE IMPORT</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>external_id</name>
        <rename>candidate-externalId</rename>
        <update>N</update>
      </value>
      <value>
        <name>gender_title</name>
        <rename>candidate-title</rename>
        <update>Y</update>
      </value>
      <value>
        <name>male</name>
        <rename>candidate-gender</rename>
        <update>Y</update>
      </value>
      <value>
        <name>first_name</name>
        <rename>contact-firstName</rename>
        <update>Y</update>
      </value>
      <value>
        <name>last_name</name>
        <rename>contact-lastName</rename>
        <update>Y</update>
      </value>
      <value>
        <name>middle_name</name>
        <rename>candidate-middleName</rename>
        <update>Y</update>
      </value>
      <value>
        <name>date_of_birth</name>
        <rename>candidate-dob</rename>
        <update>Y</update>
      </value>
      <value>
        <name>email</name>
        <rename>candidate-email</rename>
        <update>Y</update>
      </value>
      <value>
        <name>phone</name>
        <rename>candidate-phone</rename>
        <update>Y</update>
      </value>
      <value>
        <name>home_phone</name>
        <rename>candidate-homePhone</rename>
        <update>Y</update>
      </value>
      <value>
        <name>work_phone</name>
        <rename>candidate-workPhone</rename>
        <update>Y</update>
      </value>
      <value>
        <name>current_salary</name>
        <rename>candidate-currentSalary</rename>
        <update>Y</update>
      </value>
      <value>
        <name>desire_salary</name>
        <rename>candidate-desiredSalary</rename>
        <update>Y</update>
      </value>
      <value>
        <name>skills</name>
        <rename>candidate-skills</rename>
        <update>Y</update>
      </value>
      <value>
        <name>website</name>
        <rename>Website</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>desired_job_type_json</name>
        <rename>desired_job_type_json</rename>
        <update>Y</update>
      </value>
      <value>
        <name>maritalstatus</name>
        <rename>Marital Status</rename>
        <update>Y</update>
      </value>
      <value>
        <name>nickname</name>
        <rename>Preferred Name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>relocate</name>
        <rename>Willing to Relocate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>contract_interval</name>
        <rename>contract_interval</rename>
        <update>Y</update>
      </value>
      <value>
        <name>desired_contract_rate</name>
        <rename>desired_contract_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>contract_rate</name>
        <rename>contract_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>experience_details_json</name>
        <rename>experience_details_json</rename>
        <update>Y</update>
      </value>
      <value>
        <name>work_email</name>
        <rename>work_email</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5072</xloc>
      <yloc>96</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CANDIDATE LOCATION</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>Y</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>final_candidate_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>current_location_id</name>
        <rename>id</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5696</xloc>
      <yloc>688</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CANDIDATE NOTE</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>Y</skip_lookup>
    <commit>500</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>actual_candidate_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>note</name>
        <rename>note</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5696</xloc>
      <yloc>416</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CANDIDATE OWNER</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>Y</skip_lookup>
    <commit>500</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>final_candidate_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>candidate_owner_json</name>
        <rename>final_candidate_owner</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6128</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CANDIDATE PERSONAL LOCATION</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>Y</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>final_candidate_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>personal_location_id</name>
        <rename>id</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5696</xloc>
      <yloc>832</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CANDIDATE SOURCE</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>candidate_source</table>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>name</name>
        <rename>name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>source_type</name>
        <rename>source_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>payment_style</name>
        <rename>payment_style</rename>
        <update>Y</update>
      </value>
      <value>
        <name>tmp</name>
        <rename>tmp</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5392</xloc>
      <yloc>544</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CANDIDATE SOURCE 2</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>Y</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>vc_candidate_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>candidate_source_id</name>
        <rename>vc_source_id</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5824</xloc>
      <yloc>624</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>COMPANY ACTIVITY</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <schema>public</schema>
    <table>activity</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>N</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field>contactid</partitioning_field>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
      <field>
        <column_name>company_id</column_name>
        <stream_name>actual_id</stream_name>
      </field>
      <field>
        <column_name>user_account_id</column_name>
        <stream_name>final_user_account_id</stream_name>
      </field>
      <field>
        <column_name>insert_timestamp</column_name>
        <stream_name>insert_timestamp</stream_name>
      </field>
      <field>
        <column_name>content</column_name>
        <stream_name>content</stream_name>
      </field>
      <field>
        <column_name>type</column_name>
        <stream_name>type</stream_name>
      </field>
      <field>
        <column_name>category</column_name>
        <stream_name>category</stream_name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>736</xloc>
      <yloc>736</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>COMPANY BILLING LOCATION</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>company_location</table>
      <key>
        <name>final_company_id</name>
        <field>company_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>billing_location_type</name>
        <field>location_type</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>city</name>
        <rename>billing_City</rename>
        <update>Y</update>
      </value>
      <value>
        <name>state</name>
        <rename>billing_State</rename>
        <update>Y</update>
      </value>
      <value>
        <name>country_code</name>
        <rename>billing_country_code</rename>
        <update>Y</update>
      </value>
      <value>
        <name>address</name>
        <rename>billing_locationAddress</rename>
        <update>Y</update>
      </value>
      <value>
        <name>location_type</name>
        <rename>billing_location_type</rename>
        <update>N</update>
      </value>
      <value>
        <name>note</name>
        <rename>billing_note</rename>
        <update>Y</update>
      </value>
      <value>
        <name>post_code</name>
        <rename>billing_post_code</rename>
        <update>Y</update>
      </value>
      <value>
        <name>company_id</name>
        <rename>final_company_id</rename>
        <update>N</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>billing_insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>phone_number</name>
        <rename>billing_phone_number</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>352</xloc>
      <yloc>352</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>COMPANY DOCUMENT</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>bulk_upload_document_mapping</table>
      <key>
        <name>final_company_id</name>
        <field>entity_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>entity_type</name>
        <field>entity_type</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>company-document-filename</name>
        <field>file_name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>document_type</name>
        <field>document_type</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>entity_type</name>
        <rename>entity_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>entity_id</name>
        <rename>final_company_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>file_name</name>
        <rename>company-document-filename</rename>
        <update>Y</update>
      </value>
      <value>
        <name>document_type</name>
        <rename>document_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>default_file</name>
        <rename>default_file</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>576</xloc>
      <yloc>192</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>COMPANY DOCUMENT 2</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>Y</skip_lookup>
    <commit>200</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema/>
      <table>candidate_document</table>
      <key>
        <name>UploadedName</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_companyid</name>
        <field>company_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>uploaded_filename</name>
        <rename>RealName</rename>
      </value>
      <value>
        <name>created</name>
        <rename>created</rename>
      </value>
      <value>
        <name>document_types_id</name>
        <rename>document_types_id</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>768</xloc>
      <yloc>928</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>COMPANY IMPORT</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <key>
        <name>company-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>insert_timestamp</name>
        <rename>registration date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>url_linkedin</name>
        <rename>LinkedIn</rename>
        <update>Y</update>
      </value>
      <value>
        <name>url_facebook</name>
        <rename>Facebook</rename>
        <update>Y</update>
      </value>
      <value>
        <name>external_id</name>
        <rename>company-externalId</rename>
        <update>N</update>
      </value>
      <value>
        <name>name</name>
        <rename>company-name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>phone</name>
        <rename>company-phone</rename>
        <update>Y</update>
      </value>
      <value>
        <name>switch_board</name>
        <rename>company-switchboard</rename>
        <update>Y</update>
      </value>
      <value>
        <name>note</name>
        <rename>company-note</rename>
        <update>Y</update>
      </value>
      <value>
        <name>employees_number</name>
        <rename>No. of Employees</rename>
        <update>Y</update>
      </value>
      <value>
        <name>website</name>
        <rename>company-website</rename>
        <update>Y</update>
      </value>
      <value>
        <name>fax</name>
        <rename>company-fax</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>224</xloc>
      <yloc>64</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>COMPANY INDUSTRY 3</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>company_industry</table>
      <key>
        <name>final_industry_id</name>
        <field>industry_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_company_id</name>
        <field>company_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>industry_id</name>
        <rename>final_industry_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>company_id</name>
        <rename>final_company_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>736</xloc>
      <yloc>656</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>COMPANY LOCATION</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>company_location</table>
      <key>
        <name>final_company_id</name>
        <field>company_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>company_id</name>
        <rename>final_company_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>city</name>
        <rename>company-locationCity</rename>
        <update>Y</update>
      </value>
      <value>
        <name>address</name>
        <rename>company-locationAddress</rename>
        <update>Y</update>
      </value>
      <value>
        <name>country_code</name>
        <rename>company-locationCountry</rename>
        <update>Y</update>
      </value>
      <value>
        <name>location_name</name>
        <rename>company-locationAddress</rename>
        <update>Y</update>
      </value>
      <value>
        <name>post_code</name>
        <rename>company-locationZipCode</rename>
        <update>Y</update>
      </value>
      <value>
        <name>country</name>
        <rename>company-locationCountry</rename>
        <update>Y</update>
      </value>
      <value>
        <name>state</name>
        <rename>company-locationState</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>352</xloc>
      <yloc>272</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>COMPANY OWNER</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <key>
        <name>final_company_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>company_owners</name>
        <rename>final_user_account_id</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>896</xloc>
      <yloc>512</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>COMPANY PARENT_ID</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <key>
        <name>final_company_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>parent_id</name>
        <rename>final_parent_company_id</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>464</xloc>
      <yloc>128</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CONTACT DEFAULT IMPORT</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <key>
        <name>contact-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>external_id</name>
        <rename>contact-externalId</rename>
        <update>N</update>
      </value>
      <value>
        <name>first_name</name>
        <rename>contact-firstname</rename>
        <update>Y</update>
      </value>
      <value>
        <name>last_name</name>
        <rename>contact-lastname</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>company_id</name>
        <rename>final_company_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1984</xloc>
      <yloc>80</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CONTACT DOCUMENT</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>bulk_upload_document_mapping</table>
      <key>
        <name>entity_type</name>
        <field>entity_type</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_contact_id</name>
        <field>entity_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>document-filename</name>
        <field>file_name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>default_file</name>
        <field>default_file</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>document_type</name>
        <field>document_type</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>entity_type</name>
        <rename>entity_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>entity_id</name>
        <rename>final_contact_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>file_name</name>
        <rename>document-filename</rename>
        <update>Y</update>
      </value>
      <value>
        <name>default_file</name>
        <rename>default_file</rename>
        <update>Y</update>
      </value>
      <value>
        <name>document_type</name>
        <rename>document_type</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2480</xloc>
      <yloc>272</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CONTACT DOCUMENT 3</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>Y</skip_lookup>
    <commit>200</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>candidate_document</table>
      <key>
        <name>UploadedName</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_contact_id</name>
        <field>contact_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>uploaded_filename</name>
        <rename>RealName</rename>
      </value>
      <value>
        <name>created</name>
        <rename>created</rename>
      </value>
      <value>
        <name>document_types_id</name>
        <rename>document_types_id</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>768</xloc>
      <yloc>1024</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CONTACT FUNCTIONAL EXPERTISE</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>contact_functional_expertise</table>
      <key>
        <name>final_contact_id</name>
        <field>contact_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_fe_id</name>
        <field>functional_expertise_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>functional_expertise_id</name>
        <rename>final_fe_id</rename>
        <update>N</update>
      </value>
      <value>
        <name>contact_id</name>
        <rename>final_contact_id</rename>
        <update>N</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1232</xloc>
      <yloc>464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CONTACT GROUP</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>contact_group</table>
      <key>
        <name>GROUP_NAME</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>owner_id</name>
        <field>owner_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>share_permission</name>
        <field>share_permission</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>name</name>
        <rename>GROUP_NAME</rename>
        <update>N</update>
      </value>
      <value>
        <name>owner_id</name>
        <rename>owner_id</rename>
        <update>N</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>N</update>
      </value>
      <value>
        <name>share_permission</name>
        <rename>share_permission</rename>
        <update>N</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2352</xloc>
      <yloc>720</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CONTACT IMPORT</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <key>
        <name>contact-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>external_id</name>
        <rename>contact-externalId</rename>
        <update>N</update>
      </value>
      <value>
        <name>company_id</name>
        <rename>final_company_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>first_name</name>
        <rename>contact-firstName</rename>
        <update>Y</update>
      </value>
      <value>
        <name>middle_name</name>
        <rename>contact-middleName</rename>
        <update>Y</update>
      </value>
      <value>
        <name>last_name</name>
        <rename>contact-Lastname</rename>
        <update>Y</update>
      </value>
      <value>
        <name>phone</name>
        <rename>contact-phone</rename>
        <update>Y</update>
      </value>
      <value>
        <name>email</name>
        <rename>contact-email</rename>
        <update>Y</update>
      </value>
      <value>
        <name>job_title</name>
        <rename>contact-jobTitle</rename>
        <update>Y</update>
      </value>
      <value>
        <name>note</name>
        <rename>contact-note</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>registration date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>personal_email</name>
        <rename>Personal Email</rename>
        <update>Y</update>
      </value>
      <value>
        <name>gender_title</name>
        <rename>Title</rename>
        <update>Y</update>
      </value>
      <value>
        <name>nick_name</name>
        <rename>PreferredName</rename>
        <update>Y</update>
      </value>
      <value>
        <name>mobile_phone</name>
        <rename>mobile_phone</rename>
        <update>Y</update>
      </value>
      <value>
        <name>home_phone</name>
        <rename>contact-home_phone</rename>
        <update>Y</update>
      </value>
      <value>
        <name>department</name>
        <rename>Department</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1984</xloc>
      <yloc>160</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CONTACT IMPORT - Lead</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <key>
        <name>contact-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>external_id</name>
        <rename>contact-externalId</rename>
        <update>N</update>
      </value>
      <value>
        <name>company_id</name>
        <rename>final_company_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>first_name</name>
        <rename>contact-firstName</rename>
        <update>Y</update>
      </value>
      <value>
        <name>last_name</name>
        <rename>contact-Lastname</rename>
        <update>Y</update>
      </value>
      <value>
        <name>phone</name>
        <rename>contact-phone</rename>
        <update>Y</update>
      </value>
      <value>
        <name>email</name>
        <rename>contact-email</rename>
        <update>Y</update>
      </value>
      <value>
        <name>job_title</name>
        <rename>contact-jobTitle</rename>
        <update>Y</update>
      </value>
      <value>
        <name>note</name>
        <rename>contact-note</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>registration date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>gender_title</name>
        <rename>Title</rename>
        <update>Y</update>
      </value>
      <value>
        <name>mobile_phone</name>
        <rename>mobile_phone</rename>
        <update>Y</update>
      </value>
      <value>
        <name>home_phone</name>
        <rename>home_phone</rename>
        <update>Y</update>
      </value>
      <value>
        <name>nick_name</name>
        <rename>PreferredName</rename>
        <update>N</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2112</xloc>
      <yloc>1216</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CONTACT INDUSTRY</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>contact_industry</table>
      <key>
        <name>final_industry_id</name>
        <field>industry_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_contact_id</name>
        <field>contact_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>industry_id</name>
        <rename>final_industry_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>contact_id</name>
        <rename>final_contact_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1232</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CONTACT INSERT COMPANY LOCATION</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>200</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>company_location</table>
      <key>
        <name>VCCompanyID</name>
        <field>company_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>location_type</name>
        <field>location_type</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>locationAddress</name>
        <field>address</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>company_id</name>
        <rename>VCCompanyID</rename>
        <update>N</update>
      </value>
      <value>
        <name>tmp</name>
        <rename>tmp</rename>
        <update>N</update>
      </value>
      <value>
        <name>address</name>
        <rename>locationAddress</rename>
        <update>Y</update>
      </value>
      <value>
        <name>country_code</name>
        <rename>country_code</rename>
        <update>Y</update>
      </value>
      <value>
        <name>location_name</name>
        <rename>locationName</rename>
        <update>Y</update>
      </value>
      <value>
        <name>location_type</name>
        <rename>location_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>post_code</name>
        <rename>post_code</rename>
        <update>Y</update>
      </value>
      <value>
        <name>state</name>
        <rename>state</rename>
        <update>Y</update>
      </value>
      <value>
        <name>city</name>
        <rename>city</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2480</xloc>
      <yloc>592</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CONTACT OWNERS</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>Y</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <key>
        <name>final_contact_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>contact_owners</name>
        <rename>final_contact_owner</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2960</xloc>
      <yloc>912</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CONTACT OWNERS 2</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>Y</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <key>
        <name>final_contact_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>contact_owners</name>
        <rename>final_contact_owner</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2960</xloc>
      <yloc>1504</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CONTACT PERSONAL LOCATION</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <key>
        <name>final_contact_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>current_location_id</name>
        <rename>id</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2480</xloc>
      <yloc>528</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CONTACT REPORT TO</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <key>
        <name>final_contact_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>report_to</name>
        <rename>VCContactID_report</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2352</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CONTACT SOURCE</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <key>
        <name>vc_contact_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>candidate_source_id</name>
        <rename>vc_source_id</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2608</xloc>
      <yloc>464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CONTACT SUBFUNTIONAL EXPERTISE</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>contact_functional_expertise</table>
      <key>
        <name>final_contact_id</name>
        <field>contact_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_fe_id</name>
        <field>functional_expertise_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_sfe_id</name>
        <field>sub_functional_expertise_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>functional_expertise_id</name>
        <rename>final_fe_id</rename>
        <update>N</update>
      </value>
      <value>
        <name>sub_functional_expertise_id</name>
        <rename>final_sfe_id</rename>
        <update>N</update>
      </value>
      <value>
        <name>contact_id</name>
        <rename>final_contact_id</rename>
        <update>N</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1104</xloc>
      <yloc>592</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CONTACT SUBFUNTIONAL EXPERTISE 3</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>contact_functional_expertise</table>
      <key>
        <name>final_contact_id</name>
        <field>contact_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_fe_id</name>
        <field>functional_expertise_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_sfe_id</name>
        <field>sub_functional_expertise_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>functional_expertise_id</name>
        <rename>final_fe_id</rename>
        <update>N</update>
      </value>
      <value>
        <name>sub_functional_expertise_id</name>
        <rename>final_sfe_id</rename>
        <update>N</update>
      </value>
      <value>
        <name>contact_id</name>
        <rename>final_contact_id</rename>
        <update>N</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>880</xloc>
      <yloc>1232</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CONTACT WORK LOCATION</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>500</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>contact_location</table>
      <key>
        <name>VCContactID</name>
        <field>contact_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCAddressID</name>
        <field>company_location_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>contact_id</name>
        <rename>VCContactID</rename>
        <update>N</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>N</update>
      </value>
      <value>
        <name>company_location_id</name>
        <rename>VCAddressID</rename>
        <update>N</update>
      </value>
      <value>
        <name>tmp</name>
        <rename>tmp</rename>
        <update>N</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2736</xloc>
      <yloc>656</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CSV - Latitude Longitude</name>
    <type>CsvInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <filename>D:\initi8\20190702\Geo Location File.csv</filename>
    <filename_field/>
    <rownum_field/>
    <include_filename>N</include_filename>
    <separator>,</separator>
    <enclosure>"</enclosure>
    <header>Y</header>
    <buffer_size>50000</buffer_size>
    <lazy_conversion>Y</lazy_conversion>
    <add_filename_result>N</add_filename_result>
    <parallel>N</parallel>
    <newline_possible>N</newline_possible>
    <encoding/>
    <fields>
      <field>
        <name>candidate-externalId</name>
        <type>Integer</type>
        <format>#</format>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>15</length>
        <precision>0</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>#userID</name>
        <type>Integer</type>
        <format>#</format>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>15</length>
        <precision>0</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>dateadded</name>
        <type>String</type>
        <format/>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>16</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>candidate-firstName</name>
        <type>String</type>
        <format/>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>9</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>candidate-lastName</name>
        <type>String</type>
        <format/>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>13</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>candidate-address</name>
        <type>String</type>
        <format/>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>94</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>candidate-LocationName</name>
        <type>String</type>
        <format/>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>56</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>candidate-city</name>
        <type>String</type>
        <format/>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>19</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>candidate-state</name>
        <type>String</type>
        <format/>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>18</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>candidate-zipCode</name>
        <type>String</type>
        <format/>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>8</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>candidate-Country</name>
        <type>String</type>
        <format/>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>2</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>database</name>
        <type>String</type>
        <format/>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>14</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>Latitude</name>
        <type>Number</type>
        <format>#.#</format>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>8</length>
        <precision>5</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>Longitude</name>
        <type>Number</type>
        <format>#.#</format>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>8</length>
        <precision>5</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>H_I_J_K</name>
        <type>String</type>
        <format/>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>41</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>Street number</name>
        <type>Boolean</type>
        <format/>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>Street</name>
        <type>String</type>
        <format/>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>16</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>City</name>
        <type>String</type>
        <format/>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>18</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>State</name>
        <type>String</type>
        <format/>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>14</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>Country</name>
        <type>String</type>
        <format/>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>3</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>Zip</name>
        <type>String</type>
        <format/>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>8</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>Address components</name>
        <type>String</type>
        <format/>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>52</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>Relevance</name>
        <type>Number</type>
        <format>#.#</format>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>4</length>
        <precision>2</precision>
        <trim_type>none</trim_type>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4928</xloc>
      <yloc>1536</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate Comment</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
--select C.candidateID, C.FirstName,C.LastName from bullhorn1.Candidate C where FirstName = 'Mohammad' and lastname = 'Abusalah' --C.isPrimaryOwner = 1 and C.candidateID = 33

with comments as (
       SELECT --top 1000
                 C.candidateID, C.fullname --,UC.Userid
               , UC.dateAdded
               , UC1.email as user_account_id
                       , Stuff('COMMENT: ' + '&lt;br/>'
                               + Coalesce('Created Date: ' + NULLIF(convert(varchar,UC.dateAdded,120), '') + '&lt;br/>', '')
                               + Coalesce('Author: ' + NULLIF(U.name, '') + '&lt;br/>', '')
                               + Coalesce('Action: ' + NULLIF(UC.action, '') + '&lt;br/>', '')
                               + Coalesce('Job: ' + NULLIF(a.title, '') + '&lt;br/>', '')
                               + Coalesce('Comments: ' + NULLIF(
                                         replace(replace(replace(replace(replace(replace([bullhorn1].[fn_ConvertHTMLToText](UC.comments) --[bullhorn1].[fn_ConvertHTMLToText](
                                         ,'Â','')
                                         ,'Â·','')
                                         ,'v\:* {behavior:url(#default#VML);}','')
                                         ,'o\:* {behavior:url(#default#VML);}','')
                                         ,'w\:* {behavior:url(#default#VML);}','')
                                         ,'.shape {behavior:url(#default#VML);}','') , '') + '&lt;br/>', '')
                       , 1, 0, '') as 'content'
       -- select count(*) --12292
       -- select top 100 *
       from bullhorn1.BH_UserComment UC
       left join ( select candidateID, concat(FirstName,' ',LastName) as fullname, userid, isdeleted, status from bullhorn1.Candidate) C on C.userID = UC.Userid
       left join bullhorn1.BH_UserContact UC1 ON UC1.userID = C.userid
       left join bullhorn1.BH_User U on U.userID = UC.commentingUserID
       left join bullhorn1.BH_JobPosting a on a.jobpostingid = UC.jobpostingid
       where C.candidateID is not null and C.isdeleted &lt;&gt; 1 and UC.isDeleted = 0 --and cast(UC.comments as nvarchar(max)) &lt;&gt; '' and C.status &lt;&gt; 'Archive' 
UNION ALL
        SELECT --top 1000
                  ch.candidateID ,C.fullname --,UC.Userid
                , ch.dateAdded
                , UC1.email as user_account_id
                , coalesce('HISTORY: ' + '&lt;br/>'
		           + 'Date Added: ' + convert(varchar, ch.dateAdded, 120) + '&lt;br/>' 
		           + 'Candidate History: ' + NULLIF(convert(nvarchar(max),ch.comments), ''), '') 
		           as 'content'
        -- select count(*) --138
        -- select top 100 *
        from bullhorn1.BH_CandidateHistory CH
        left join ( select candidateID, concat(FirstName,' ',LastName) as fullname, userid, isdeleted, status from bullhorn1.Candidate) C on C.candidateID = CH.candidateID 
        left join bullhorn1.BH_UserContact UC1 ON UC1.userID = C.userid
        where C.candidateID is not null and C.isdeleted &lt;&gt; 1 and ch.comments is not null --and cast(ch.comments as varchar(max)) &lt;&gt; ''   and C.status &lt;&gt; 'Archive'
UNION ALL
	SELECT --top 1000
                C.candidateID ,C.fullname  --, a.candidateuserID, C.userID
              , a.dateAdded
              , UC3.email as user_account_id
		, Stuff(       'APPOINTMENT: ' + '&lt;br/>'
                         	    + Coalesce('Contact: ' + NULLIF(cast(concat(UC1.FirstName,' ',UC1.LastName,'     ',UC1.email) as nvarchar(max)), '') + '&lt;br/>', '') --a.clientUserID 
                         	    + Coalesce('Candidate: ' + NULLIF(cast( concat(UC2.FirstName,' ',UC2.LastName,'     ',UC2.email) as nvarchar(max)), '') + '&lt;br/>', '') --a.candidateUserID 
                         	    + Coalesce('Job: ' + NULLIF(cast(j.title as nvarchar(max)), '') + '&lt;br/>', '') --jobPostingID
                                + coalesce('Communication Method: ' + NULLIF(convert(nvarchar(max),a.communicationMethod), '') + '&lt;br/>', '')
		                  + Coalesce('Date Begin: ' + NULLIF(cast(a.dateBegin as varchar(max)), '') + '&lt;br/>', '')
                                + coalesce('Date End: ' + NULLIF(convert(nvarchar(max),a.dateEnd), '') + '&lt;br/>', '')
                                + coalesce('Type: ' + NULLIF(convert(nvarchar(max),a.type), '') + '&lt;br/>', '') --CA.activePlacements
                                + coalesce('Subject: ' + NULLIF(convert(nvarchar(max),a.subject), '') + '&lt;br/>', '')
                                + coalesce('Reminder: ' + NULLIF(convert(nvarchar(max),a.notificationMinutes), '') + '&lt;br/>', '')
                                + coalesce('Opportunity: ' + NULLIF(convert(nvarchar(max),j2.title), '') + '&lt;br/>', '')
                                + coalesce('Location: ' + NULLIF(convert(nvarchar(max),a.location), '') + '&lt;br/>', '')
                                + coalesce('Description: ' + NULLIF( convert(nvarchar(max),a.description), '') + '&lt;br/>', '') --[dbo].[fn_ConvertHTMLToText](
                                + coalesce('File Name: ' + NULLIF(convert(nvarchar(max),af.name), '') + '&lt;br/>', '')
                                + coalesce('Owner: ' + NULLIF(cast( concat(UC3.FirstName,' ',UC3.LastName,'     ',UC3.email) as nvarchar(max)), '') + '&lt;br/>', '')
                                + coalesce('Lead: ' + NULLIF(cast( concat(UC4.FirstName,' ',UC4.LastName,'     ',UC4.email) as nvarchar(max)), '') + '&lt;br/>', '')
                        , 1, 0, '') as 'content' 
        -- select count(*) --2062
        -- select top 20 *
        from bullhorn1.View_Appointment a
        left join bullhorn1.View_AppointmentFile af on af.appointmentID = a.appointmentID
        left join ( select candidateID, concat(FirstName,' ',LastName) as fullname, userid, isdeleted, status from bullhorn1.Candidate) C on C.userID = a.candidateuserID
        left join bullhorn1.BH_UserContact UC1 ON UC1.userID = a.ClientuserID
        left join bullhorn1.BH_UserContact UC2 ON UC2.userID = a.candidateUserID
        left join bullhorn1.BH_UserContact UC3 ON UC3.userID = a.userID
        left join bullhorn1.BH_UserContact UC4 ON UC4.userID = a.LeaduserID
        left join bullhorn1.BH_JobPosting j on j.jobPostingID = a.jobPostingID
        left join bullhorn1.BH_JobPosting j2 on j.jobPostingID = a.opportunityJobPostingID        
        where C.candidateID is not null and C.isdeleted &lt;&gt; 1 --and C.status &lt;&gt; 'Archive'
UNION ALL
	SELECT --top 1000
                C.candidateID,C.fullname  --, a.candidateuserID, C.userID
              , a.dateAdded
              , UC4.email as user_account_id
		, Stuff(       'TASK: ' + '&lt;br/>'
                            + Coalesce('Candidate: ' + NULLIF(cast( concat(UC2.FirstName,' ',UC2.LastName,'     ',UC2.email) as nvarchar(max)), '') + '&lt;br/>', '') --a.candidateUserID 
                            --+ Coalesce('Assigned To: ' + NULLIF(cast(a.childTaskOwners as nvarchar(max)), '') + '&lt;br/>', '')
                            + Coalesce('Contact: ' + NULLIF(cast(concat(UC1.FirstName,' ',UC1.LastName,'     ',UC1.email) as nvarchar(max)), '') + '&lt;br/>', '') --a.clientUserID 
                            + Coalesce('Due Date And Time: ' + NULLIF(cast(a.dateBegin as nvarchar(max)), '') + '&lt;br/>', '')
                            + Coalesce('Date End: ' + NULLIF(cast(a.dateEnd as nvarchar(max)), '') + '&lt;br/>', '')
                            + Coalesce('Description: ' + NULLIF(cast( a.description as nvarchar(max)), '') + '&lt;br/>', '') --[dbo].[fn_ConvertHTMLToText](
                            + Coalesce('Visibility: ' + NULLIF(cast(a.isPrivate as nvarchar(max)), '') + '&lt;br/>', '')
                            + Coalesce('Job: ' + NULLIF(cast(j.title as nvarchar(max)), '') + '&lt;br/>', '') --jobPostingID
                            + Coalesce('Lead: ' + NULLIF(cast( concat(UC3.FirstName,' ',UC3.LastName,'     ',UC3.email) as nvarchar(max)), '') + '&lt;br/>', '') --a.leadUserID
                            + Coalesce('Reminder: ' + NULLIF(cast(a.notificationMinutes as nvarchar(max)), '') + '&lt;br/>', '')
                            + Coalesce('Opportunity: ' + NULLIF(cast(j2.title as nvarchar(max)), '') + '&lt;br/>', '') --a.opportunityJobPostingID 
                            + Coalesce('Placement: ' + NULLIF(cast(a.placementID as nvarchar(max)), '') + '&lt;br/>', '')
                            + Coalesce('Priority: ' + NULLIF(cast(a.priority as nvarchar(max)), '') + '&lt;br/>', '')
                            + Coalesce('Recurrence Day Bits: ' + NULLIF(cast(a.recurrenceDayBits as nvarchar(max)), '') + '&lt;br/>', '')
                            + Coalesce('Recurrence Frequency: ' + NULLIF(cast(a.recurrenceFrequency as nvarchar(max)), '') + '&lt;br/>', '')
                            + Coalesce('Recurrence Max: ' + NULLIF(cast(a.recurrenceMax as nvarchar(max)), '') + '&lt;br/>', '')
                            + Coalesce('Recurrence Month Bits: ' + NULLIF(cast(a.recurrenceMonthBits as nvarchar(max)), '') + '&lt;br/>', '')
                            + Coalesce('Recurrence Style: ' + NULLIF(cast(a.recurrenceStyle as nvarchar(max)), '') + '&lt;br/>', '')
                            + Coalesce('Recurrence Type: ' + NULLIF(cast(a.recurrenceType as nvarchar(max)), '') + '&lt;br/>', '')
                            + Coalesce('Subject: ' + NULLIF(cast(a.subject as nvarchar(max)), '') + '&lt;br/>', '')
                            + Coalesce('Type: ' + NULLIF(cast(a.type as nvarchar(max)), '') + '&lt;br/>', '')
                            + Coalesce('Owner: ' + NULLIF(cast( concat(UC4.FirstName,' ',UC4.LastName,'     ',UC4.email) as nvarchar(max)), '') + '&lt;br/>', '') --a.userID
                        , 1, 0, '') as 'content' 
        -- select count(*) --24
        -- select top 100 *        
        from bullhorn1.View_Task a
        left join bullhorn1.BH_Client Cl on Cl.userID = a.ClientUserID
        left join bullhorn1.BH_UserContact UC1 ON Cl.userID = UC1.userID
        left join bullhorn1.BH_UserContact UC2 ON a.candidateUserID = UC2.userID
        left join bullhorn1.BH_JobPosting j on j.jobPostingID = a.jobPostingID
        left join bullhorn1.BH_UserContact UC3 ON a.leadUserID = UC3.userID
        left join bullhorn1.BH_UserContact UC4 ON a.userID = UC4.userID
        left join ( select candidateID, concat(FirstName,' ',LastName) as fullname, userid, isdeleted, status from bullhorn1.Candidate) C on C.userID = a.candidateuserID 
        left join bullhorn1.BH_JobPosting j2 on j2.jobPostingID = a.opportunityJobPostingID
        where C.candidateID is not null and C.isdeleted &lt;&gt; 1 --and C.status &lt;&gt; 'Archive'
UNION ALL
       -- PLACEMENT
       select --top 1000
                C.candidateid, C.fullname
              , pl.dateadded 
              , UC1.email as user_account_id
              , Stuff( 'PLACEMENT: ' + '&lt;br/>'
              + Coalesce('Billing Contact: ' + NULLIF(cast( concat(UC1.FirstName,' ',UC1.LastName,'     ',UC1.email)  as nvarchar(max)), '') + '&lt;br/>', '')  --pl.billingUserID
                     --+ Coalesce('Bill Rate Information: ' + NULLIF(cast(pl.billRateInfoHeader as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Bill Rate: ' + NULLIF(cast(pl.clientBillRate as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Over-time Bill Rate: ' + NULLIF(cast(pl.clientOverTimeRate as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Comments: ' + NULLIF(cast(pl.comments as nvarchar(max)), '') + '&lt;br/>', '')
                     --+ Coalesce('Contract Employment Info: ' + NULLIF(cast(pl.contractInfoHeader as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Primary Timesheet Approver: ' + NULLIF(cast(pl.correlatedCustomText1 as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Secondary Timecard Approver: ' + NULLIF(cast(pl.correlatedCustomText2 as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Purchase Order Number: ' + NULLIF(cast(pl.correlatedCustomText3 as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Cost Center: ' + NULLIF(cast(pl.costCenter as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Insurance Reference: ' + NULLIF(cast(pl.customText1 as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Start Date: ' + NULLIF(cast(pl.dateBegin as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Effective Date (Client): ' + NULLIF(cast(pl.dateClientEffective as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Effective Date: ' + NULLIF(cast(pl.dateEffective as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Scheduled End: ' + NULLIF(cast(pl.dateEnd as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Days Guaranteed: ' + NULLIF(cast(pl.daysGuaranteed as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Days Pro-Rated: ' + NULLIF(cast(pl.daysProRated as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Employment Type: ' + NULLIF(cast(pl.employmentType as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Placement Fee (%): ' + NULLIF(cast(pl.fee as nvarchar(max)), '') + '&lt;br/>', '')
              --+ Coalesce('Placement Fee (Flat): ' + NULLIF(cast(pl.flatFee as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Hours of Operation: ' + NULLIF(cast(pl.hoursOfOperation as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Hours Per Day: ' + NULLIF(cast(pl.hoursPerDay as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Rate Entry Type: ' + NULLIF(cast(pl.isMultirate as nvarchar(max)), '') + '&lt;br/>', '')
              --+ Coalesce('Mark-up %: ' + NULLIF(cast(pl.markUpPercentage as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Over-time Pay Rate: ' + NULLIF(cast(pl.overtimeRate as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Pay Rate: ' + NULLIF(cast(pl.payRate as nvarchar(max)), '') + '&lt;br/>', '')
                     --+ Coalesce('Pay Rate Information: ' + NULLIF(cast(pl.payRateInfoHeader as nvarchar(max)), '') + '&lt;br/>', '')
                     --+ Coalesce('Permanent Employment Info: ' + NULLIF(cast(pl.permanentInfoHeader as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Referral Fee Type: ' + NULLIF(cast(pl.referralFeeType as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Reporting to: ' + NULLIF(cast(pl.reportTo as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Salary: ' + NULLIF(cast(pl.salary as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Pay Unit: ' + NULLIF(cast(pl.salaryUnit as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Status: ' + NULLIF(cast(pl.status as nvarchar(max)), '') + '&lt;br/>', '')
        , 1, 0, '') as 'content'
        from bullhorn1.BH_Placement PL --where PL.reportTo &lt;&gt; ''
        left join bullhorn1.BH_UserContact UC1 ON UC1.userID = pl.billingUserID
        left join ( select candidateID, concat(FirstName,' ',LastName) as fullname, userid, isdeleted, status from bullhorn1.Candidate) C on C.userID = pl.userid
        where C.candidateID is not null and C.isdeleted &lt;&gt; 1 --and C.status &lt;&gt; 'Archive'
UNION ALL
       -- Job Submission
       select --top 1000
                C.candidateid, C.fullname
              , jr.dateadded
              , UC2.email as user_account_id
              , Stuff(    'JOB SUBMISSION: ' + '&lt;br/>'
                 --Coalesce('Appointments: ' + NULLIF(cast(jr.appointments as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Bill Rate: ' + NULLIF(cast(jr.billRate as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Comments: ' + NULLIF(cast(jr.comments as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Date Added: ' + NULLIF(cast(jr.dateAdded as nvarchar(max)), '') + '&lt;br/>', '')
              --+ Coalesce('Date Last Modified: ' + NULLIF(cast(jr.dateLastModified as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Date Web Response: ' + NULLIF(cast(jr.dateWebResponse as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Job Order: ' + NULLIF(cast(j.title as nvarchar(max)), '') + '&lt;br/>', '') --jr.jobPostingID
              + Coalesce('Latest Appointment: ' + NULLIF(cast(jr.latestAppointmentID as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Migrate GUID: ' + NULLIF(cast(jr.migrateGUID as nvarchar(max)), '') + '&lt;br/>', '')
              --+ Coalesce('Owners: ' + NULLIF(cast(jr.owners as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Pay Rate: ' + NULLIF(cast(jr.payRate as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Salary: ' + NULLIF(cast(jr.salary as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Added By: ' + NULLIF(cast( concat(UC2.FirstName,' ',UC2.LastName,'     ',UC2.email) as nvarchar(max)), '') + '&lt;br/>', '') --jr.sendingUserID
              + Coalesce('Source: ' + NULLIF(cast(jr.source as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Status: ' + NULLIF(cast(jr.status as nvarchar(max)), '') + '&lt;br/>', '')
              --+ Coalesce('Task: ' + NULLIF(cast(jr.tasks as nvarchar(max)), '') + '&lt;br/>', '')
              + Coalesce('Candidate: ' + NULLIF(cast( concat(UC1.FirstName,' ',UC1.LastName,'     ',UC1.email) as nvarchar(max)), '') + '&lt;br/>', '') --jr.userID 
        , 1, 0, '') as note
        from bullhorn1.View_JobResponse jr
        left join bullhorn1.BH_UserContact UC1 ON UC1.userID = jr.userID
        left join bullhorn1.BH_UserContact UC2 ON UC2.userID = jr.sendingUserID
        left join bullhorn1.BH_JobPosting j on j.jobPostingID = jr.jobPostingID        
        left join ( select candidateID, concat(FirstName,' ',LastName) as fullname, userid, isdeleted, status from bullhorn1.Candidate) C on C.userID = jr.userid
        where C.candidateID is not null and C.isdeleted &lt;&gt; 1 --and C.status &lt;&gt; 'Archive'
        --where jr.userid &lt;&gt; jr.sendingUserID
)


--select count(*) from comments where note &lt;&gt; '' --12428
select --top 100
                   candidateID
                  , user_account_id --, cast('-10' as int) as 'user_account_id'
                  , 'comment' as 'category'
                  , 'candidate' as 'type'
                  , dateAdded as 'insert_timestamp'
                  , [dbo].[RemoveNullCharacters]( [bullhorn1].[fn_ConvertHTMLToText]( replace(content,char(10),'&lt;br/>') ) ) as content
--, '20200202' as tmp
from comments 
where content &lt;&gt; '' 
--and candidateID = 2988 or fullname like '%Philip%'
--and dateAdded >= '2020-01-01 00:00:00'





/*
select top 10
                   candidateID
                  , cast('-10' as int) as 'user_account_id'
                  , 'comment' as 'category'
                  , 'candidate' as 'type'
                  , dateAdded as 'insert_timestamp'
                  --, coalesce('Interview Notes: ' + '&lt;br/>' + nullif([bullhorn1].[fn_ConvertHTMLToText](comments), '') + '&lt;br/>', '') as content
                  , coalesce('INTERVIEW NOTES: ' + '&lt;br/>' + nullif(convert(nvarchar(max),comments), '') + '&lt;br/>', '') as content
from bullhorn1.Candidate 
where convert(nvarchar(max),comments) &lt;&gt; ''
and candidateID = 1
*/



</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4880</xloc>
      <yloc>864</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate Distribution + TearSheet</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
with t as (
select
	  convert(varchar(1000),C.candidateID) as 'contactExtId'
	, c.userID
--	, d.groupname
	, lower(d.name) as tmp
	, getdate() as insert_timestamp

from bullhorn1.View_Candidate c
left join bullhorn1.BH_DistributionListMember dm on dm.userID = c.userID
left join bullhorn1.BH_DistributionList d on d.distributionListID = dm.distributionListID
where d.name is not NULL

UNION

select
	  convert(varchar(1000),C.candidateID) as contactExtId
	, c.userID
--       , stuff( coalesce(' ' + nullif(C.namesuffix, ''), '') + coalesce( nullif(replace(C.FirstName,'?',''), ''), 'No Firstname' ) , 1, 0, '') as 'contact-firstName'
--       , coalesce(nullif(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID)) as 'contact-lastName'
	, lower(sl.name) as tmp
	, getdate() as insert_timestamp

from bullhorn1.View_Candidate VC
left join bullhorn1.Candidate C on C.candidateid = VC.candidateid
left join bullhorn1.BH_ShortListGrouping slg on slg.userid = VC.userid
left join bullhorn1.BH_ShortList sl on slg.shortListID = sl.shortListID
where sl.shortListID is not null 
)

select * from t
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4880</xloc>
      <yloc>272</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate Email Body - br</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
-- EMAIL BODY

with EmailBody as 
(
        -- RECEIVER
        select --top 100 
                um.userMessageID --,um.sendingUserID
              , ca.candidateid --, ca.userid,ca.recruiteruserid,ca.firstname,ca.lastname,ca.companyname
              , um.externalFrom, um.externalTo, um.externalCC, um.externalBCC, um.SMTPSendDate --,convert(nvarchar(max),um.externalTo) as externalTo, convert(nvarchar(max),um.externalCC) as externalCC, convert(nvarchar(max),um.externalBCC) as externalBCC, um.SMTPSendDate
              , um.subject, um.email_content, um.comments --, convert(nvarchar(max),um.comments) as comments
              --,mr.userID,mr.folder,mr.recipientType, mr.email, mr.sendingUserID, mr.subjectSort, mr.externalFrom
              , umf.att --,umf.name, umf.directory
        -- select count(*) -- select top 2000 *
        from bullhorn1.BH_UserMessage um
        --left join INT_UncompressedMessages cont on cont.userMessageID = um.userMessageID
        left join bullhorn1.BH_MessageRecipient mr on mr.userMessageID = um.userMessageID
        --left join bullhorn1.BH_UserMessageFile umf on umf.userMessageID = um.userMessageID
        --left join (SELECT userMessageID, STUFF((SELECT ', ' + [dbo].[fn_ConvertHTMLToText](name) from bullhorn1.BH_UserMessageFile WHERE userMessageID = a.userMessageID order by name asc FOR XML PATH (''), TYPE).value('.', 'nvarchar(64)'), 1, 1, '') AS att FROM bullhorn1.BH_UserMessageFile AS a GROUP BY a.userMessageID ) umf on umf.userMessageID = um.userMessageID
        left join (SELECT userMessageID, STRING_AGG(cast(name as nvarchar(max)),',' ) WITHIN GROUP (ORDER BY name) att from bullhorn1.BH_UserMessageFile GROUP BY userMessageID) umf on umf.userMessageID = um.userMessageID        
        left join bullhorn1.Candidate ca on ca.userid = mr.userid
        where mr.isDeleted = 0 and mr.isSpam = 0 and ca.userid is not null and ca.isdeleted &lt;&gt; 1 --and ca.status &lt;&gt; 'Archive'
        --and um.userMessageID > 2110065
        --and um.userMessageID in (2110065)
        --and um.comments is not null and convert(varchar(max),um.comments) &lt;&gt; '' 
        --and ca.candidateid = 565        
        --and convert(nvarchar(max),um.externalCC) != '' and um.externalCC is not null and convert(nvarchar(max),um.externalBCC) != '' and um.externalBCC is not null
        --and um.SMTPSendDate > '2018-01-01'
UNION ALL
        -- SENDER
        select --top 100
                um.userMessageID --,um.sendingUserID
              , ca.candidateid --, ca.userid,ca.recruiteruserid,ca.firstname,ca.lastname,ca.companyname
              , um.externalFrom, um.externalTo, um.externalCC, um.externalBCC, um.SMTPSendDate --,convert(nvarchar(max),um.externalTo) as externalTo, convert(nvarchar(max),um.externalCC) as externalCC, convert(nvarchar(max),um.externalBCC) as externalBCC, um.SMTPSendDate
              , um.subject, um.email_content, um.comments --, convert(nvarchar(max),um.comments) as comments
              --,mr.userID,mr.folder,mr.recipientType, mr.email, mr.sendingUserID, mr.subjectSort, mr.externalFrom
              , umf.att --,umf.name, umf.directory
        -- select count(*)
        from bullhorn1.BH_UserMessage um
        --left join INT_UncompressedMessages cont on cont.userMessageID = um.userMessageID
        left join bullhorn1.BH_MessageRecipient mr on mr.userMessageID = um.userMessageID
        --left join bullhorn1.BH_UserMessageFile umf on umf.userMessageID = um.userMessageID
        --left join (SELECT userMessageID, STUFF((SELECT ', ' + name from bullhorn1.BH_UserMessageFile WHERE userMessageID = a.userMessageID order by name asc FOR XML PATH (''), TYPE).value('.', 'nvarchar(MAX)'), 1, 1, '') AS att FROM bullhorn1.BH_UserMessageFile AS a GROUP BY a.userMessageID ) umf on umf.userMessageID = um.userMessageID
        left join (SELECT userMessageID, STRING_AGG(cast(name as nvarchar(max)),',' ) WITHIN GROUP (ORDER BY name) att from bullhorn1.BH_UserMessageFile GROUP BY userMessageID) umf on umf.userMessageID = um.userMessageID        
        left join bullhorn1.Candidate ca on ca.userid = um.sendingUserID
        where um.isSenderDeleted = 0 and ca.userid is not null and ca.isdeleted &lt;&gt; 1 --and ca.status &lt;&gt; 'Archive'
        --and convert(nvarchar(max),um.comments) &lt;&gt; '' ) 
        --and ca.candidateid = 565
        --and um.SMTPSendDate > '2018-01-01'
        --and um.userMessageID in (58178)
)

--select count(*) from EmailBody --767438


select
          userMessageID
        --, userid, concat(firstname, ' ',lastname) as fullname, recruiteruserid, companyname, sendingUserID
        , candidateid as 'candidate_id'
        , cast('-10' as int) as 'user_account_id'
        , 'comment' as 'category'
        , 'candidate' as 'type'
        , coalesce(NULLIF(convert(varchar(19), SMTPSendDate, 120),''), CURRENT_TIMESTAMP) as 'insert_timestamp'
        , --[dbo].[RemoveNullCharacters]( --dbo.F_ReplaceNullChar(
              --[dbo].[udf_StripHTML]( --[dbo].[fn_ConvertHTMLToText](
              replace(replace(replace(replace(replace(replace(
              Stuff('EMAIL: ' + '&lt;br/>'
                + Coalesce('From: ' + NULLIF(convert(nvarchar(max),externalFrom), '') + '&lt;br/>', '')
                + Coalesce('To: ' + NULLIF(convert(nvarchar(max),externalTo), '') + '&lt;br/>', '')
                + Coalesce('CC: ' + NULLIF(convert(nvarchar(max),externalCC), '') + '&lt;br/>', '')
                + Coalesce('BCC: ' + NULLIF(convert(nvarchar(max),externalBCC), '') + '&lt;br/>', '')
                + Coalesce('Subject: ' + NULLIF(convert(nvarchar(max),subject), '') + '&lt;br/>', '')
                + Coalesce('Body: ' + NULLIF( replace( convert(nvarchar(max),email_content) ,char(10),'&lt;br/>'), '') + '&lt;br/>', 'Body: ' + '&lt;br/>')
                + Coalesce('Comments: ' + NULLIF( replace( convert(nvarchar(max),comments) ,char(10),'&lt;br/>'), '') + '&lt;br/>', '')
                + Coalesce('Attachments: ' + NULLIF(convert(nvarchar(max),att), '') + '&lt;br/>', '')
              , 1, 0, '')
              ,'Â',''),'Â·',''),'v\:* {behavior:url(#default#VML);}',''),'o\:* {behavior:url(#default#VML);}',''),'w\:* {behavior:url(#default#VML);}',''),'.shape {behavior:url(#default#VML);}','')
              --)
         --) 
         as 'content'
        --, umf.name             --ATTACHMENTS
        --, umf.directory        -- PATHS STORE ATTACHMENTS
from EmailBody
--where comments &lt;&gt; ''
--where usermessageid in (58178) --,58175,58178)
--where candidateid = 3772
--where usermessageid > 58164 --in (6212861, 6204234)
--order by userMessageID asc</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4880</xloc>
      <yloc>944</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate Info - DONT USE</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
/*with
-- EMAIL
  mail1 (ID,email) as (select C.candidateID, replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(concat(UC.email,',',UC.email2,',',UC.email3),'/',' '),'&lt;',' '),'>',' '),'(',' '),')',' '),':',' '),'.@','@'),'@.','@'),'+',' '),'&amp;',' '),'[',' '),']',' '),'?',' '),'''',' '),';',' '),'•',' '),'*',' '),'|',' '),'‘',' '),CHAR(9),' ') as mail from bullhorn1.BH_UserContact UC left join bullhorn1.Candidate C on C.userID = UC.UserID where UC.email like '%_@_%.__%' or UC.email2 like '%_@_%.__%' or UC.email3 like '%_@_%.__%' and C.isdeleted &lt;&gt; 1 and C.status &lt;&gt; 'Archive' *//*and C.isPrimaryOwner = 1*//* )
, mail2 (ID,email) as (SELECT ID, email.value as email FROM mail1 m CROSS APPLY STRING_SPLIT(m.email,',') AS email)
, mail3 (ID,email) as (SELECT ID, case when RIGHT(email, 1) = '.' then LEFT(email, LEN(email) - 1) when LEFT(email, 1) = '.' then RIGHT(email, LEN(email) - 1) else email end as email from mail2 WHERE email like '%_@_%.__%')
, mail4 (ID,email,rn) as ( SELECT ID, email = ltrim(rtrim(CONVERT(NVARCHAR(MAX), email))), r1 = ROW_NUMBER() OVER (PARTITION BY ID ORDER BY ID desc) FROM mail3 )
, e1 (ID,email) as (select ID, email from mail4 where rn = 1)
, ed  (ID,email,rn) as (SELECT ID,email,ROW_NUMBER() OVER(PARTITION BY email ORDER BY ID DESC) AS rn FROM e1 )
, e2 (ID,email) as (select ID, email from mail4 where rn = 2)
, e3 (ID,email) as (select ID, email from mail4 where rn = 3)
, e4 as (select ID, email from mail4 where rn = 4)
--select * from ed
*/

with
mail1 (ID,userID,email,rn) as (
       select C.candidateID, C.userID
	      , replace(translate(value, '!'':"&lt;&gt;[]();,+/\&amp;?•*|‘','                     '),char(9),'') as email --translate special characters
	      , row_number() over(partition by C.candidateID order by C.candidateID) as rn
	from bullhorn1.BH_UserContact UC left join bullhorn1.Candidate C on C.userID = UC.UserID
	--cross apply string_split( concat_ws(' ',UC.email, UC.email2, UC.email3),' ')
	cross apply string_split( concat_ws(' ', nullif(convert(nvarchar(max),trim(UC.email)), '') , nullif(convert(nvarchar(max),trim(UC.email2)), ''), nullif(convert(nvarchar(max),trim(UC.email3)), '') ),' ')
	where (UC.email like '%_@_%.__%' or UC.email2 like '%_@_%.__%' or UC.email3 like '%_@_%.__%') and C.isdeleted &lt;&gt; 1 --and C.status &lt;&gt; 'Archive'
--       and C.userID in (115048)
--       and C.candidateID in (7232,180193)
	)
--select * from mail1 where email &lt;&gt; '' and ID in (7232,180193)

, mail1a (ID,userID,email,rn) as (
       select C.candidateID, C.userID
              , coalesce( nullif( mail1.email,''), concat('candidate_',cast(C.userID as varchar(max)),'@noemailaddress.co')) as email
              , rn
       from bullhorn1.Candidate C
       left join mail1 on mail1.ID = C.candidateID --email-deduplication
--       where C.userID in (115048)
--       where candidateID in (7232,180193)
	)
--select * from mail1a where ID in (7232,180193)
	
, mail2 (ID,userID,email,rn,ID_rn) as (
       select ID, userID
              , trim(' ' from email) as email
--              , row_number() over(partition by trim(' ' from email) order by ID asc) as rn --distinct email if emails exist more than once
--              , row_number() over(partition by ID order by trim(' ' from email)) as ID_rn --distinct if contacts may have more than 1 email
              , row_number() over(partition by trim(' ' from email) order by ID asc) as rn --distinct email if emails exist more than once
              , row_number() over(partition by ID order by rn asc) as ID_rn --distinct if contacts may have more than 1 email
              --, rn as ID_rn
	from mail1a
	)
--select * from mail2 where ID in (7232,180193)

, ed (ID,email) as (
       select ID
	      , case when rn > 1 then concat(email,'_',rn) else email end as email
	from mail2
	where email is not NULL and email &lt;&gt; ''
	and ID_rn = 1
	)
--select * from ed where ID in (186063, 188424)
	
, e2 (ID,email) as (select ID, email from mail2 where ID_rn = 2)
, e3 (ID,email) as (select ID, email from mail2 where ID_rn = 3)	
--select * from mail1 where ID in (391, 2447) or email like '%lburlovich@challenger.com.au%'

, employmentPreference1 as (
       SELECT candidateID
       , userID
	, coalesce(nullif(replace(FirstName,'?',''), ''), 'No Firstname') as 'firstName'
       , coalesce(nullif(replace(LastName,'?',''), ''), concat('Lastname-',userID)) as 'lastName'
       , employmentPreference.value as employmentPreference
       FROM ( 
              SELECT m.candidateID, m.userID, m.firstName, m.lastName, trim( replace(replace(replace(employmentPreference.value,'  ',' '),' )',')'),'( ','(') ) as employmentPreference
              FROM bullhorn1.Candidate m CROSS APPLY STRING_SPLIT(m.employmentPreference,',') AS employmentPreference 
              where m.isdeleted &lt;&gt; 1 and m.employmentPreference &lt;&gt; '' --and status &lt;&gt; 'Archive'
              ) m
       CROSS APPLY STRING_SPLIT( trim( convert(varchar(500),m.employmentPreference) ), ',') AS employmentPreference
       --WHERE candidateID in (18550)
)
--select distinct employmentPreference from employmentPreference1
--select distinct employmentPreference, count(*) from employmentPreference where employmentPreference is not null group by employmentPreference

, employmentPreference2 as (
       select distinct candidateID, userID, firstName, lastname
              --, employmentPreference
              , case
                     -- CONTRACT
                     when employmentPreference like '%Contr%' then '{"desiredJobTypeId":"2"}'
                     when employmentPreference like '%Temp%' then '{"desiredJobTypeId":"2"}'
                     -- PERMANENT
                            when employmentPreference like '%Per%' then '{"desiredJobTypeId":"1"}' 
                            when employmentPreference like '%open%' then '{"desiredJobTypeId":"1"}' 
                            when employmentPreference like '%Please Select%' then '{"desiredJobTypeId":"1"}' 
                            when employmentPreference = 'full_time' then '{"desiredJobTypeId":"1"}' 
                            when employmentPreference = 'fulltime' then '{"desiredJobTypeId":"1"}'
                     when employmentPreference = '' then '{"desiredJobTypeId":"1"}'
                     when employmentPreference is null then '{"desiredJobTypeId":"1"}'
                     else '{"desiredJobTypeId":"2"}'
              end as 'desired_job_type_json'
       from employmentPreference1
)
--select distinct employmentPreference, desired_job_type_json from employmentPreference2 
--select top 100 candidateID, STRING_AGG(desired_job_type_json,',' ) WITHIN GROUP (ORDER BY candidateID) desired_job_type_json from employmentPreference2 GROUP BY candidateID

, employmentPreference3 as (
       SELECT candidateID, coalesce('[' + nullif( STRING_AGG( desired_job_type_json,',' ) WITHIN GROUP (ORDER BY desired_job_type_json) + ']', ''), '') as desired_job_type_json
       from employmentPreference2 
       WHERE desired_job_type_json &lt;&gt; '' GROUP BY candidateID
)
--select * from employmentPreference3


-- BusinessSector >>> INDUSTRY
--select distinct ltrim(rtrim(name)) from bullhorn1.BH_BusinessSectorList
, INDUSTRY0(userid, businessSectorID) as (SELECT userid, Split.a.value('.', 'VARCHAR(2000)') AS businessSectorID FROM (SELECT userid, CAST('&lt;M>' + REPLACE(cast( ltrim(rtrim( convert(nvarchar(max),businessSectorIDList) )) as nvarchar(max)),',','&lt;/M>&lt;M>') + '&lt;/M>' AS XML) AS x FROM bullhorn1.Candidate where isdeleted &lt;&gt; 1 and status &lt;&gt; 'Archive') t CROSS APPLY x.nodes('/M') AS Split(a) )
, INDUSTRY(userId, BusinessSector) as (SELECT userid, STRING_AGG( ltrim(rtrim( convert(nvarchar(max),BSL.name) )),', ' ) WITHIN GROUP (ORDER BY BSL.name) name from INDUSTRY0 left join bullhorn1.BH_BusinessSectorList BSL ON INDUSTRY0.businessSectorID = BSL.businessSectorID WHERE INDUSTRY0.businessSectorID &lt;&gt; '' GROUP BY userid )
--select * from INDUSTRY


-- CATEGORY >>> FUNCTIONAL EXPERTISE
, CATEGORY(candidateID, userid, categoryIDList, categoryID, name) as (
       select C.candidateID, C.userid, C.categoryIDList, C.categoryID, UC.name
       FROM bullhorn1.Candidate C
       left join ( select UC.userID, UC.categoryID, replace(replace(replace(replace(replace(name,'4294:',''),'4295:',''),'4296:',''),'4297:',''),'850:','') as name from BULLHORN1.View_UserCategory UC left join bullhorn1.BH_CategoryList CL ON UC.categoryid = CL.categoryID ) UC on UC.userid = C.userID
       where UC.name is not null and UC.name &lt;&gt; '' and C.isdeleted &lt;&gt; 1 and C.status &lt;&gt; 'Archive' --and C.userid in (165180)
       )
-- select distinct name from CATEGORY
-- select * from CATEGORY where userid in (165180,165184 ,165199, 161585)


-- SPECIALTY >>> SUB FUNCTIONAL EXPERTISE
, SPECIALTY(candidateID, userid, specialtyIDList, SpecialtyID, name) as (
       select C.candidateID, C.userid, C.specialtyIDList, UC.SpecialtyID, UC.name
       FROM bullhorn1.Candidate C
       left join ( select US.userID, US.SpecialtyID, VS.name as name from BULLHORN1.View_UserSpecialty US left join bullhorn1.View_Specialty VS ON US.SpecialtyID = VS.specialtyID ) UC on UC.userid = C.userID
       where UC.name is not null and UC.name &lt;&gt; '' and C.isdeleted &lt;&gt; 1 and C.status &lt;&gt; 'Archive' --and C.userid in (165180)
       )
-- select distinct name from SPECIALTY
-- select * from SPECIALTY where userid in (155843,165184 ,165199, 161585)


-- SKILL
, SKILL (candidateID,userid, SkillName) as ( 
       SELECT candidateID, userid, STRING_AGG(name,', ' ) WITHIN GROUP (ORDER BY name) files 
       from (
              SELECT [BH_Candidate].candidateID, [BH_Candidate].userID, [BH_UserSkill].skillID, [BH_SkillList].name 
              FROM [bullhorn1].[BH_Candidate]
              LEFT JOIN [bullhorn1].BH_User on [BH_User].userID = [BH_Candidate].userID
              LEFT JOIN [bullhorn1].BH_UserSkill on [BH_Candidate].userID = [BH_UserSkill].userID
              LEFT JOIN [bullhorn1].BH_SkillList on [BH_UserSkill].skillID = [BH_SkillList].skillID
              WHERE [BH_SkillList].name is not null and [BH_SkillList].name &lt;&gt; '' and [BH_Candidate].isdeleted &lt;&gt; 1 and [BH_Candidate].status &lt;&gt; 'Archive' ) s
       GROUP BY candidateID,userid )
--select top 10 * from SKILL where userid in (165199)


-- ADMISSION
, AdmissionRows(userId, CombinedText, dateadded) as (select UCOI.userID, concat(text1,' ',text2) as CombinedText, COI.dateadded from bullhorn1.BH_UserCustomObjectInstance UCOI inner join bullhorn1.BH_CustomObjectInstance COI On UCOI.instanceID = COI.instanceID)
, admission(Userid, Admission) as (SELECT userid, STRING_AGG( CombinedText,'|| ' ) WITHIN GROUP (ORDER BY dateadded) name from AdmissionRows where CombinedText &lt;&gt; '' GROUP BY userid )
--select top 10 * from admission


-- Web Responses
, wr as (
        select jr.userid, jp.title,jr.status
        from bullhorn1.BH_JobResponse JR
        left join (select CA.userID as CandidateUserID, CA.candidateID, UC.userID, UC.name as CandidateName, UC.email as CandidateEmail from bullhorn1.BH_Candidate CA left join bullhorn1.BH_UserContact UC on CA.userID = UC.userID where CA.isdeleted &lt;&gt; 1 and CA.status &lt;&gt; 'Archive') CAI on JR.userID = CAI.CandidateUserID
        left join bullhorn1.BH_JobPosting  jp on jp.jobPostingID = jr.jobPostingID )
, wr1 as (SELECT userID, STRING_AGG( concat('Title: ',title,' - Status: ',status) ,char(10)) WITHIN GROUP (ORDER BY title) name from wr GROUP BY userID )
--select top 10 * from wr1


-- Latest Comment
, lc (userid,comments,dateAdded,rn) as ( SELECT userid, comments, dateAdded, r1 = ROW_NUMBER() OVER (PARTITION BY userid ORDER BY dateAdded desc) FROM bullhorn1.BH_UserComment )

/*-- OWNER
, owner as (select distinct CA.recruiterUserID, UC.email from bullhorn1.Candidate CA left join bullhorn1.BH_UserContact UC on CA.recruiterUserID = UC.userID where CA.isdeleted &lt;&gt; 1 and CA.status &lt;&gt; 'Archive')
-- Secondary OWNER
, owner2a as (SELECT userID, Split.a.value('.', 'VARCHAR(100)') AS String FROM (SELECT userID, CAST ('&lt;M>' + REPLACE(convert(varchar(20),ownerUserIDList),',','&lt;/M>&lt;M>') + '&lt;/M>' AS XML) AS Data FROM bullhorn1.BH_UserContact where ownerUserIDList like '%,%') AS A CROSS APPLY Data.nodes ('/M') AS Split(a))
, owner2b as (select owner2a.userid, UC.email, UC.name from owner2a left join (select userid, email, name from bullhorn1.BH_UserContact) UC on UC.userid = owner2a.String)
--, owner2c as (SELECT userID, STUFF((SELECT ', ' + name  from owner2b WHERE userID = a.userID FOR XML PATH (''), TYPE).value('.', 'nvarchar(MAX)'), 1, 1, '')  AS name FROM owner2b AS a GROUP BY a.userID )
, owner2c as (SELECT userID, STRING_AGG( email,',') WITHIN GROUP (ORDER BY email) email from owner2b where email like '%_@_%.__%' GROUP BY userID ) */

, owner as ( select ca.candidateid, ca.recruiterUserID, ca.owneruseridlist, concat(ca.recruiterUserID,',', ca.ownerUserIDList) as owners from bullhorn1.Candidate CA left join bullhorn1.BH_UserContact UC on CA.recruiterUserID = UC.userID where CA.isdeleted &lt;&gt; 1 and CA.status &lt;&gt; 'Archive')
--select ca.owneruseridlist from bullhorn1.Candidate CA where owneruseridlist like '%,%'
, owner2a as (SELECT candidateid, Split.a.value('.', 'VARCHAR(100)') AS String FROM (SELECT candidateid, CAST ('&lt;M>' + REPLACE(convert(nvarchar(max),owners),',','&lt;/M>&lt;M>') + '&lt;/M>' AS XML) AS Data FROM owner where owners is not null and owners &lt;&gt; '') AS A CROSS APPLY Data.nodes ('/M') AS Split(a))
--, owner2b as (select distinct owner2a.candidateid, UC.email, UC.name from owner2a left join (select ca.candidateid, uc.email, uc.name from bullhorn1.Candidate CA left join bullhorn1.BH_UserContact UC on CA.UserID = UC.userID ) UC on UC.candidateid = owner2a.String)
, owner2b as ( select distinct owner2a.candidateid, UC.email, UC.name from owner2a left join bullhorn1.BH_UserContact UC on UC.userid = owner2a.String)
--select top 10 * from owner2b where candidateid in (31595) and email &lt;&gt; '' and email is not null
, owner2c as (SELECT candidateid, STRING_AGG( email,',') WITHIN GROUP (ORDER BY email) email from owner2b where email like '%_@_%.__%' GROUP BY candidateid )
--select top 10 * from owner2c where candidateid in (31595) and email like '%,%' --candidateid in (39194)


--select top 100 * from bullhorn1.View_CandidateAllOwner;
, vcao1 as ( select VC.candidateid, VC.userid, vcao.recruiterUserID, UC.name, trim(UC.email) as email
       FROM bullhorn1.View_Candidate VC left join bullhorn1.Candidate C on C.candidateid = VC.candidateid
       left join bullhorn1.View_CandidateAllOwner vcao on vcao.candidateUserID = VC.userid
       left join bullhorn1.BH_UserContact UC on UC.userID = vcao.recruiterUserID
       where C.isdeleted &lt;&gt; 1)
, vcao2 as (SELECT candidateid, userid, STRING_AGG( email,',') WITHIN GROUP (ORDER BY email) email from vcao1 where email like '%_@_%.__%' GROUP BY candidateid, userid )
--select top 100 * from vcao2



-- COMMENT
--, comment(Userid, comment) as (SELECT Userid, STUFF((SELECT char(10) + 'Date Added: ' + convert(varchar(10), dateAdded, 120) + ' || ' + 'Action: ' + action + ' || ' + cast(comments as varchar(max)) from [bullhorn1].[BH_UserComment] WHERE Userid = a.Userid order by dateAdded desc FOR XML PATH (''), TYPE).value('.', 'nvarchar(MAX)'), 1, 1, '')  AS URLList FROM [bullhorn1].[BH_UserComment] AS a GROUP BY a.Userid )
--, summary(candidateID,summary) as (SELECT candidateID, STUFF((SELECT coalesce(char(10) + 'Date Added: ' + convert(varchar,dateAdded,120) + ' || ' + 'Candidate History: ' + nullif(convert(varchar(max),comments), ''), '') from bullhorn1.BH_CandidateHistory WHERE candidateID = b.candidateID order by dateAdded desc FOR XML PATH (''), TYPE).value('.', 'nvarchar(MAX)'), 1, 1, '')  AS summary FROM bullhorn1.BH_CandidateHistory as b GROUP BY b.candidateID)

-- DOCUMENT
, files(candidateUserID, files) as (SELECT candidateUserID, STRING_AGG( cast(replace(replace(concat(directory,candidateFileID,fileExtension),'/','_'),'\','_') as nvarchar(max)),',' ) WITHIN GROUP (ORDER BY candidateFileID) files from bullhorn1.View_CandidateFile GROUP BY candidateUserID)
--select top 10 * from files
, placementfiles(userID, files) as (SELECT userID, STRING_AGG( cast(replace(replace(concat(directory,placementFileID,fileExtension),'/','_'),'\','_') as nvarchar(max)),',' ) WITHIN GROUP (ORDER BY placementFileID) files from bullhorn1.View_PlacementFile GROUP BY userID)
--select top 10 * from placementfiles
, doc(Userid, files) as ( select f.candidateUserID, STRING_AGG( f.files,',' ) WITHIN GROUP (ORDER BY f.files) files from (SELECT * from files UNION ALL SELECT * from placementfiles) f GROUP BY f.candidateUserID )
--select top 10 * from doc



-- NOTE
, note as (
	SELECT CA.candidateid --, Stuff(
		 , concat_ws ('',
		            coalesce('BH Candidate ID: ' + nullif(cast(CA.userID as nvarchar(max)), '') + '&lt;br/>', '')
--                        , coalesce('Other email: ' + nullif(cast(e3.email as nvarchar(max)), '') + '&lt;br/>', '')
                        , coalesce('Available Until: ' + nullif(cast(CA.dateAvailableEnd as nvarchar(max)), '') + '&lt;br/>', '')
                        , coalesce('Bar admission: ' + nullif(cast(AD.Admission as nvarchar(max)), '') + '&lt;br/>', '')
                        , coalesce('Business Sector: ' + nullif(cast(INDUSTRY.BusinessSector as nvarchar(max)), '') + '&lt;br/>', '')
                        , coalesce('Current Hourly Rate: ' + nullif(cast(CA.hourlyRateLow as nvarchar(max)), '') + '&lt;br/>', '')
                        , coalesce('Date Available: ' + nullif(cast(CA.dateAvailable as nvarchar(max)), '') + '&lt;br/>', '')
                        , coalesce('Date Registered: ' + nullif(convert(nvarchar(10),CA.dateAdded,120), '') + '&lt;br/>', '')
--                        , coalesce('Description: ' + nullif(cast(UC.description as nvarchar(max)), '') + '&lt;br/>', '')
                        , coalesce('Desired Hourly Rate: ' + nullif(cast(CA.hourlyRate as nvarchar(max)), '') + '&lt;br/>', '')
                        , coalesce('Desired Locations: ' + nullif(cast(CA.desiredLocations as nvarchar(max)), '') + '&lt;br/>', '')
                        , coalesce('Employment Preference: ' + nullif(cast(CA.employmentPreference as nvarchar(max)), '') + '&lt;br/>', '')
                        , coalesce('General Comments: ' + nullif(convert(nvarchar(max),CA.comments), '') + '&lt;br/>', '')
                        , coalesce('ID Number: ' + nullif(cast(CA.ssn as nvarchar(max)), '') + '&lt;br/>', '')
                        , coalesce('Latest Comment: ' + nullif( replace( [bullhorn1].[fn_ConvertHTMLToText](lc.comments) ,char(10),'&lt;br/>') , '') + '&lt;br/>', '')
                        , coalesce('Opted In - SMS Messages: ' + nullif(cast(case ca.massmailoptout when 1 then 'No' when 0 then 'Yes' end as nvarchar(max)), '') + '&lt;br/>', '')
                        , coalesce('Other Phone: ' + nullif(convert(nvarchar(max),CA.phone2), '') + '&lt;br/>', '')
                        , coalesce('Placements: ' + nullif(convert(nvarchar(max),pm.status), '') + '&lt;br/>', '') --CA.activePlacements
                        , coalesce('Practice Area / Category: ' + nullif(cast(CATEGORY.Name as nvarchar(max)), '') + '&lt;br/>', '')
                        , coalesce('Referred By (Other): ' + nullif(convert(nvarchar(max),CA.referredBy), '') + '&lt;br/>', '')
                        , coalesce('Referred By UserID: ' + nullif(convert(nvarchar(max),CA.referredByUserID), '') + ' - ' + UC.firstname + ' ' + UC.lastname + '&lt;br/>', '')
                        , coalesce('Registered By: ' + nullif(convert(nvarchar(max),CA.recruiterUserID), '') + ' - ' + UC0.firstname + ' ' + UC0.lastname + '&lt;br/>', '')
                        , coalesce('Secondary Owners: ' + nullif(convert(nvarchar(max),owner2c.email), '') + '&lt;br/>', '') --CA.secondaryOwners
                        , coalesce('Singapore / PR Yes/No: ' + nullif(cast(ca.EmployeeType as nvarchar(max)), '') + '&lt;br/>', '')
                        , coalesce('Skills: ' + nullif(cast(SN.SkillName as nvarchar(max)), '') + '&lt;br/>', '')
                        , coalesce('Skype: ' + nullif(cast(CA.phone2 as nvarchar(max)), '') + '&lt;br/>', '')
                        , coalesce('Source: ' + nullif(cast(CA.source as nvarchar(max)), '') + '&lt;br/>', '')
                        , coalesce('Specialty: ' + nullif(cast(CA.specialtyIDList as nvarchar(max)), '') + '&lt;br/>', '')
                        , coalesce('Status: ' + nullif(convert(nvarchar(max),CA.Status), '') + '&lt;br/>', '')
                        , coalesce('Web Responses: ' + nullif(convert(nvarchar(max),wr1.name), '') + '&lt;br/>', '') --CA.jobResponseJobPostingID
                        , coalesce('Willing to Relocate: ' + nullif(cast(CA.willRelocate as nvarchar(max)), '') + '&lt;br/>', '')
                       
--                        , coalesce('LTD Company Address: ' + nullif(cast( concat(CA.secondaryaddress1,' ',CA.secondaryAddress2) as nvarchar(max)), '') + '&lt;br/>', '')
--                        , coalesce('LTD Company City: ' + nullif(cast(CA.secondaryCity as nvarchar(max)), '') + '&lt;br/>', '')
--                        , coalesce('LTD Company Country: ' + nullif(cast(tmp_country.country as nvarchar(max)), '') + '&lt;br/>', '')
--                        , coalesce('LTD Company County: ' + nullif(cast(CA.secondaryState as nvarchar(max)), '') + '&lt;br/>', '')
--                        , coalesce('LTD Company Post Code: ' + nullif(cast(CA.secondaryZip as nvarchar(max)), '') + '&lt;br/>', '')
                        , coalesce('CV: ' + nullif(UC1.description, '') + '&lt;br/>', '')
--                      + coalesce('CV: ' + nullif(UW.description, '') + '&lt;br/>', '')
                        --+ coalesce('Summary: ' + nullif(cast(summary.summary as nvarchar(max)), '') + '&lt;br/>', '')
                        ) as note --, 1, 0, '') as note
	-- select top 10 * -- select count(*) -- select referredBy, referredByUserID
	from bullhorn1.Candidate CA --where CA.isPrimaryOwner = 1 --where convert(varchar(max),CA.comments) &lt;&gt; ''
       --left join e3 on CA.userID = e3.ID
	left join (select userid, firstname, lastname from bullhorn1.BH_UserContact) UC0 ON UC0.userID = CA.recruiterUserID
	left join (select userid, firstname, lastname from bullhorn1.BH_UserContact) UC ON UC.userID = CA.referredByUserID
       left join (select userid, ltrim([bullhorn1].[fn_ConvertHTMLToText](description)) as description from bullhorn1.BH_UserContact) UC1 on CA.UserID = UC1.userID
	--left join tmp_country on cast(CA.desiredLocations as varchar(2)) = tmp_country.ABBREVIATION
	left join tmp_country on cast(CA.secondaryCountryID as varchar(2)) = tmp_country.code
       left join admission AD on CA.userID = AD.Userid
       left join INDUSTRY on INDUSTRY.userId = CA.userID --BusinessSector
       left join CATEGORY on CATEGORY.Userid = CA.userID
       left join owner2c on owner2c.candidateid = CA.candidateid
       left join (select * from lc where rn = 1) lc on lc.userid = CA.userid
       left join (select userid, status from bullhorn1.BH_Placement ) pm on pm.userid = ca.userid
       left join SKILL SN on CA.userID = SN.userId
       --left join SPECIALTY on SPECIALTY.candidateID = CA.userID
       left join wr1 on wr1.userid = CA.userid
       --left join summary on CA.userID = summary.CandidateID
       /*left join (SELECT userid, STUFF((
                        SELECT char(10) + nullif(description_truong, '') + char(10) + '--------------------------------------------------' + char(10)
                        from bullhorn1.BH_UserWork where userid = a.userid FOR XML PATH (''), TYPE).value('.', 'nvarchar(MAX)'), 1, 1, '')  AS description 
                        FROM (   select userid, description_truong
                                        from bullhorn1.BH_UserWork) AS a GROUP BY a.userid 
                        ) uw on uw.userid = ca.userid*/
	where ca.isdeleted &lt;&gt; 1 --and ca.status &lt;&gt; 'Archive' 
	)
--select count(*) from note --8545
--select * from note --where AddedNote like '%Business Sector%'
--select top 100 * from note


select --top 100
         convert(varchar(1000),C.candidateID) as 'candidate-externalId' , C.userID as '#userID'
	--, case C.gender when 'M' then 'MR' when 'F' then 'MISS' else '' end as 'candidate-title'
       , case 
              when C.nameprefix like 'Dr%' then 'Dr.' 
              when C.nameprefix like 'Mr%' then 'Mr.' 
              when C.nameprefix like 'Ms%' then 'Ms.' 
              when C.nameprefix like 'Miss%' then 'Miss.' 
              when C.nameprefix like 'Mrs%' then 'Mrs.' 
              else '' end as 'candidate-title'
	, case when C.gender like 'M%' then 1 when C.gender like 'F%' then 0 else null end as 'candidate-gender'
--       , case
--              when C.nameprefix in ('Mr','Mr.') then 'MALE' 
--              when C.nameprefix in ('Miss','Ms.','Mrs','Mrs.') then 'FEMALE' 
--              else '' end as 'candidate-gender'
--	, coalesce(nullif(replace(C.FirstName,'?',''), ''), 'No Firstname') as 'contact-firstName'
       , trim(stuff( coalesce(' ' + nullif(C.namesuffix, ''), '') + coalesce( nullif(replace(C.FirstName,'?',''), ''), 'No Firstname' ) , 1, 0, '')) as 'contact-firstName'
       , trim(coalesce(nullif(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID))) as 'contact-lastName'
--       , stuff( coalesce(nullif(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID)) + coalesce(' ' + nullif(C.namesuffix, ''), ''), 1, 0, '') as 'contact-lastName'
--       , case when c.status = 'Archive' then concat(coalesce(nullif(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID)) ,' (Archive)')
--              else coalesce(nullif(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID))
--              end as 'contact-lastName'
	, trim(C.middleName) as 'candidate-middleName'
	, C.dateOfBirth as 'candidate-dob' --, convert(varchar(10),C.dateOfBirth,120) as 'candidate-dob'
--	, iif(ed.rn > 1,concat(ed.email,'_',ed.rn), iif(ed.email = '' or ed.email is null, concat('candidate_',cast(C.userID as varchar(max)),'@noemailaddress.co'),ed.email) ) as 'candidate-email'
--	, iif(ed.email = '' or ed.email is null, concat('candidate_',cast(C.userID as varchar(max)),'@noemailaddress.co'),ed.email) as 'candidate-email'
	, ed.email as 'candidate-email'

	, trim(C.mobile) as 'candidate-phone'
	--, C. as 'candidate-mobile'
	, trim(C.phone) as 'candidate-homePhone'
	--, C.workPhone as 'candidate-workPhone'
	, trim(stuff( coalesce(' ' + nullif(trim(C.phone2), ''), '') + coalesce(' ' + nullif(trim(C.phone3), ''), '') + coalesce(', ' + nullif(trim(C.workphone), ''), ''), 1, 1, '')) as 'candidate-workPhone'
	
	, trim(stuff( coalesce(' ' + nullif(trim(C.address1), ''), '') + coalesce(', ' + nullif(trim(C.address2), ''), '') + coalesce(' ' + nullif(trim(C.city), ''), '') + coalesce(', ' + nullif(trim(C.state), ''), '') + coalesce(', ' + nullif(trim(C.zip), ''), '') + coalesce(', ' + nullif(tc.country, ''), ''), 1, 1, '')) as 'candidate-address'
	--, stuff( coalesce(' ' + nullif(C.city, ''), '') + coalesce(', ' + nullif(C.state, ''), '') + coalesce(', ' + nullif(C.zip, ''), '') + coalesce(', ' + nullif(tc.country, ''), ''), 1, 1, '') as 'candidate-LocationName' 
	, trim(C.city) as 'candidate-city'
	, trim(C.state) as 'candidate-state'
    , trim(C.zip) as 'candidate-zipCode'
	, tc.abbreviation as 'candidate-Country'
	--, tc.abbreviation as 'candidate-citizenship'
	
	, cast(C.salaryLow as bigint) as 'candidate-currentSalary'
	, cast(C.salary as bigint) as 'candidate-desiredSalary'

--	, 'PERMANENT' as 'candidate-jobTypes'

--	, C.companyName as 'candidate-company1'
--	, C.occupation as 'candidate-jobTitle1'
--	, C.companyName as 'candidate-employer1'
--	, '['+ CONCAT_WS(',',
--              (SELECT companyName as company FROM bullhorn1.Candidate t WHERE t.candidateID = c.candidateID FOR JSON PATH, WITHOUT_ARRAY_WRAPPER),
--              (SELECT occupation as jobTitle FROM bullhorn1.Candidate t WHERE t.candidateID = c.candidateID FOR JSON PATH, WITHOUT_ARRAY_WRAPPER),
--              (SELECT companyName as currentEmployer FROM bullhorn1.Candidate t WHERE t.candidateID = c.candidateID FOR JSON PATH, WITHOUT_ARRAY_WRAPPER)
--       )+ ']' as 'experience_details_json'
--	, '[{'+ CONCAT_WS(',',
--              concat('"company":"',replace(replace(companyName,'"',''),'\','\\'),'"')
--              , concat('"jobTitle":"',replace(replace(occupation,'"',''),'\','\\'),'"')
--              , concat('"currentEmployer":"',replace(replace(companyName,'"',''),'\','\\'),'"')
--              )+'}]' as experience_details_json
	, '[{'+ CONCAT_WS(',',
              concat('"company":"',replace(replace(replace(replace(companyName,'"','') ,'\','\\'), char(9),''), char(10),'') ,'"')
              , concat('"jobTitle":"',replace(replace(replace(replace(occupation,'"',''),'\','\\'), char(9),''), char(10),''),'"')
              , concat('"currentEmployer":"',replace(replace(replace(replace(companyName,'"',''),'\','\\'), char(9),''), char(10),''),'"')
              )+'}]' as experience_details_json

	, SKILL.SkillName as 'candidate-skills'
       /*, ltrim(Stuff( 
                   coalesce(nullif(SKILL.SkillName, '') + char(10), '')
                 + coalesce(nullif(convert(varchar(max),C.skillset), ''), '')
                 --+ coalesce(nullif(convert(varchar(max),C.customTextBlock1), '') + char(10), '')
                 , 1, 0, '') ) as 'candidate-skills'*/

--	, Education.school as 'candidate-schoolName'
--	, Education.graduationDate as 'candidate-graduationDate'
--	, Education.degree as 'candidate-degreeName'
--	, Education.major as '#candidate-major'
--     , stuff( coalesce(' ' + nullif(es.es, '') + char(10), '') + coalesce('REFERENCE: ' + char(10) + nullif(rs.reference, '') + char(10), ''), 1, 1, '') as 'candidate-education' --*** 
--	, eh.eh as 'candidate-workHistory' --***
--	, note.note as 'candidate-note' --***

, c.companyURL as 'Website'
, c.dateAdded as 'insert_timestamp'

, iif(c.dayRate > 0 or c.dayRateLow > 0, 'day', iif(c.hourlyRate > 0 or c.hourlyRateLow > 0,'hour','day') ) as 'contract_interval'
, iif(c.dayRate > 0 or c.dayRateLow > 0, c.dayRateLow, c.hourlyRateLow) as 'contract_rate'
, iif(c.dayRate > 0 or c.dayRateLow > 0, c.dayRate, c.hourlyRate) as 'desired_contract_rate'

--, c.dayRate as 'Contract Interval = Daily Desired contract rate'
--, c.dayRateLow as 'Contract Interval = Daily Current contract rate'
, trim(c.desiredLocations) as 'Desired Location Address - Desired Location Name'

, e2.email as 'work_email' --'candidate-PersonalEmail' --***
--, e3.email as 'Payslip Email'
, employmentPreference3.desired_job_type_json --, c.employmentPreference as 'candidate-jobTypes'
, 0 as employment_type -- FULL TIME
--, c.hourlyRate as 'Contract Interval = Hourly - Desired contract rate'
--, c.hourlyRateLow as 'Contract Interval = Hourly - Current contract rate'
, coalesce(nullif(maritalStatus.maritalStatus,''),0) as 'Marital Status'
, c.massMailOptOut as 'Mail Subscribed = No if opted out is yes.'
, c.nickName as 'Preferred Name'
, c.ssn as 'National Insurance Number - Country = UK'
--, c.userDateAdded as 'Reg Date'
, c.willRelocate as 'Willing to Relocate'

-- Candidate Company Address
--       , c.fullSecondaryAddress
--       , c.secondaryAddress1
--       , c.secondaryAddress2
--       , c.secondaryCity
--       , c.secondaryCountryID
--       , c.secondaryState
--       , c.secondaryZip
	, trim(stuff( coalesce(' ' + nullif(trim(C.secondaryAddress1), ''), '') + coalesce(', ' + nullif(trim(C.secondaryAddress1), ''), '') + coalesce(' ' + nullif(trim(C.secondaryCity), ''), '') + coalesce(', ' + nullif(trim(C.secondaryState), ''), '') + coalesce(', ' + nullif(trim(C.secondaryZip), ''), '') + coalesce(', ' + nullif(tc2.country, ''), ''), 1, 1, '')) as 'candidate-secondaryaddress'
	, trim(C.secondaryCity) as 'candidate-secondarycity'
	, trim(C.secondaryState) as 'candidate-secondarystate'
    , trim(C.secondaryZip) as 'candidate-secondaryzipCode'
	, tc2.abbreviation as 'candidate-secondaryCountry'

--OWNER
	,  vcao2.email as 'owners' --, C.recruiterUserID owner2c.email
, 0 as 'owners-super_user'
, getdate() as 'owners-insert_timestamp'
, 1 as 'owners-locked_user'
--, as 'owners-first_name'
, ' ' as 'owners-last_name'
, 'en' as 'owners-language'


--DOCUMENT
	, doc.files as 'document' --, stuff( coalesce(' ' + nullif(files.ResumeId, ''), '') + coalesce(', ' + nullif(p.placementfile, ''), ''), 1, 1, '') as 'candidate-resume'
, 'CANDIDATE' as entity_type
, 'resume' as document_type
, 0 as default_file

-- select count (*) -- select distinct nameSuffix --gender --employmentPreference -- select skillset, skillIDlist, customTextBlock1 -- select top 10 * -- select distinct convert(bigint, salarylow) -- select distinct cast(C.salarylow as int)
from bullhorn1.Candidate C --where C.isdeleted &lt;&gt; 1 --where C.isPrimaryOwner = 1
--left join owner2c on owner2c.candidateid = C.candidateid
left join vcao2 on vcao2.candidateid = C.candidateid
left join ed on ed.ID = C.candidateID -- candidate-email-deduplication
left join e2 on e2.ID = C.candidateID
--left join e3 on e3.ID = C.candidateID
left join doc on doc.UserID = C.userID
left join tmp_country tc ON tc.code =  c.countryID
left join tmp_country tc2 ON tc2.code =  c.secondaryCountryID
left join SKILL on SKILL.candidateID =  C.candidateID
left join (select candidateid, maritalStatus from bullhorn1.BH_Candidate) maritalStatus on maritalStatus.candidateid = c.candidateid
left join employmentPreference3 on employmentPreference3.candidateid = c.candidateid
--left join INDUSTRY on INDUSTRY.userid = C.userid
--left join note on C.candidateid = note.candidateid
--left join Education on C.userID = Education.userID
--left join ReferenceSummary rs on rs.userID = C.userID
--left join EducationSummary es on es.userID = C.userID
--left join EmploymentHistory eh on EH.userid = C.userid --WORK HISTORY
--left join comment on C.userID = comment.Userid
where C.isdeleted &lt;&gt; 1 --and C.status &lt;&gt; 'Archive' --where C.isPrimaryOwner = 1
--and rs.reference is not null
--and C.userID in (41985)
--and C.candidateID in (62819, 62821)
--and (C.FirstName like '%Partha%' or C.LastName like '%Partha%')
--and concat (C.FirstName,' ',C.LastName) like '%Partha%'
--and e1.email = '' or e1.email is null --e1.email &lt;&gt; ''
--inner join bullhorn1.BH_UserContact UC_2 on C.recruiterUserID = UC_2.userID
--left join bullhorn1.BH_ClientCorporation CC ON CC.clientCorporationID = C.clientCorporationID
--and (c.customtext1 is not null and c.customtext1 &lt;&gt; '') 
--or (c.customtext2 is not null and c.customtext2 &lt;&gt; '') 


/*
select --top 10
         C.candidateID as 'candidate-externalId' --, C.userID as '#userID'
	, coalesce(nullif(replace(C.FirstName,'?',''), ''), 'No Firstname') as 'contact-firstName'
       , coalesce(nullif(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID)) as 'contact-lastName'
	, case
              when c.employmentPreference = 'Contract' then '[{"desiredJobTypeId":"2"}]'
              when c.employmentPreference = 'Contract,Permanent' then '[{"desiredJobTypeId":"1"},{"desiredJobTypeId":"2"}]'
              when c.employmentPreference = 'Contract,Temporary' then '[{"desiredJobTypeId":"2"}]'
              when c.employmentPreference = 'Part Time' then '[{"desiredJobTypeId":"2"}]'
              when c.employmentPreference = 'Permanent' then '[{"desiredJobTypeId":"1"}]'
              when c.employmentPreference = 'Permanent,Contract' then '[{"desiredJobTypeId":"1"},{"desiredJobTypeId":"2"}]'
              when c.employmentPreference = 'Permanent,Contract,Temporary' then '[{"desiredJobTypeId":"1"},{"desiredJobTypeId":"2"}]'
              when c.employmentPreference = 'Temporary' then '[{"desiredJobTypeId":"2"}]'
              when c.employmentPreference = 'Temporary,Contract' then '[{"desiredJobTypeId":"2"}]'
              when c.employmentPreference = 'Temporary,Permanent' then '[{"desiredJobTypeId":"1"},{"desiredJobTypeId":"2"}]'
              when c.employmentPreference = '' then '[{"desiredJobTypeId":"1"}]'
              when c.employmentPreference is null then '[{"desiredJobTypeId":"1"}]'
	end as 'desired_job_type_json'
-- select count (*) -- select distinct employmentPreference -- nameprefix --gender -- -- select skillset, skillIDlist, customTextBlock1 --select top 10 *
from bullhorn1.Candidate C --where C.isPrimaryOwner = 1
where C.isdeleted &lt;&gt; 1 and C.status &lt;&gt; 'Archive'


select    C.candidateID as 'externalId'
	 , C.Nickname as 'PreferredName'
        , coalesce(nullif(replace(C.FirstName,'?',''), ''), 'No Firstname') as 'contact-firstName'
        , coalesce(nullif(replace(C.LastName,'?',''), ''), concat('Lastname-',C.candidateID)) as 'contact-lastName'
from bullhorn1.Candidate C
where Nickname &lt;&gt; '' and Nickname is not null


with t as (
select    C.candidateID as 'externalId'
        , coalesce(nullif(replace(C.FirstName,'?',''), ''), 'No Firstname') as 'contact-firstName'
        , coalesce(nullif(replace(C.LastName,'?',''), ''), concat('Lastname-',C.candidateID)) as 'contact-lastName'
        , C.source as original
        , case 
                when c.source like '%Inde%' then 29085
                when c.source like '%Volc%' then 29084
                when c.source like '%Dova%' then 29086
        else '' end as 'candidate_source_id'
from bullhorn1.Candidate C
where source &lt;&gt; '' and source is not null )
--select count(*) from t where source is not null
select * from t where candidate_source_id &lt;&gt; 0 and candidate_source_id &lt;&gt; '29093'
--where externalid = 13144

--CUSTOM FIELD
select distinct customText12 from bullhorn1.Candidate C where customText12 is not null and customText12 &lt;&gt; ''
select candidateID as 'additional_id'
       , 'add_can_info' as 'additional_type'
       , 1005 as 'form_id'
       , 11269 as 'field_id'
       , trim(convert(nvarchar(max),customText12))as field_value
       , 11269 as 'constraint_id'
from t group by candidateID
 where customText12 is not null and customText12 &lt;&gt; ''
*/



</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4880</xloc>
      <yloc>128</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate Info 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
with
mail1 (ID,userID,email,rn) as (
       select C.candidateID, C.userID
	      , replace(translate(value, '!'':"&lt;&gt;[]();,+/\&amp;?•*|‘','                     '),char(9),'') as email --translate special characters
	      , row_number() over(partition by C.candidateID order by C.candidateID) as rn
	from bullhorn1.BH_UserContact UC left join bullhorn1.Candidate C on C.userID = UC.UserID
	--cross apply string_split( concat_ws(' ',UC.email, UC.email2, UC.email3),' ')
	cross apply string_split( concat_ws(' ', nullif(convert(nvarchar(max),trim(UC.email)), '') , nullif(convert(nvarchar(max),trim(UC.email2)), ''), nullif(convert(nvarchar(max),trim(UC.email3)), '') ),' ')
	where (UC.email like '%_@_%.__%' or UC.email2 like '%_@_%.__%' or UC.email3 like '%_@_%.__%') and C.isdeleted &lt;&gt; 1 --and C.status &lt;&gt; 'Archive'
--       and C.userID in (115048)
--       and C.candidateID in (7232,180193)
	)
--select * from mail1 where email &lt;&gt; '' and ID in (7232,180193)


, mail1a (ID, userID, email, rn) as (
       select C.candidateID, C.userID
              , coalesce( nullif( mail1.email,''), concat('candidate_',cast(C.userID as varchar(max)),'@noemailaddress.co')) as email
              , rn
       from bullhorn1.View_Candidate C
       left join mail1 on mail1.ID = C.candidateID --email-deduplication
--       where C.userID in (115048)
--       where candidateID in (7232,180193)
	)
--select * from mail1a where ID in (7232,180193)
	
, mail2 (ID, userID, email, rn, ID_rn) as (
       select ID, userID
              , trim(' ' from email) as email
--              , row_number() over(partition by trim(' ' from email) order by ID asc) as rn --distinct email if emails exist more than once
--              , row_number() over(partition by ID order by trim(' ' from email)) as ID_rn --distinct if contacts may have more than 1 email
              , row_number() over(partition by trim(' ' from email) order by ID asc) as rn --distinct email if emails exist more than once
              , row_number() over(partition by ID order by rn asc) as ID_rn --distinct if contacts may have more than 1 email
              --, rn as ID_rn
	from mail1a
	)
--select * from mail2 where ID in (7232,180193)

, ed (ID, email) as (
       select  ID
	      , case when rn > 1 then concat(email,'_',rn) else email end as email
	from mail2
	where email is not NULL and email &lt;&gt; ''
	and ID_rn = 1
	)
--select * from ed where ID in (186063, 188424)
	
, e2 (ID, email) as (select ID, email from mail2 where ID_rn = 2)
, e3 (ID, email) as (select ID, email from mail2 where ID_rn = 3)	
--select * from mail1 where ID in (391, 2447) or email like '%lburlovich@challenger.com.au%'


, employmentPreference1 as (
       SELECT m.candidateID
       , m.userID
	, coalesce(nullif(replace(m.FirstName,'?',''), ''), 'No Firstname') as 'firstName'
       , coalesce(nullif(replace(m.LastName,'?',''), ''), concat('Lastname-',userID)) as 'lastName'
       , employmentPreference.value as employmentPreference
       FROM ( 
              SELECT m.candidateID, m.userID, m.firstName, m.lastName, trim( replace(replace(replace(employmentPreference.value,'  ',' '),' )',')'),'( ','(') ) as employmentPreference
              FROM bullhorn1.View_Candidate VC left join bullhorn1.Candidate m on m.candidateid = VC.candidateid CROSS APPLY STRING_SPLIT(m.employmentPreference,',') AS employmentPreference 
              where m.isdeleted &lt;&gt; 1 and m.employmentPreference &lt;&gt; '' --and status &lt;&gt; 'Archive'
              ) m
       CROSS APPLY STRING_SPLIT( trim( convert(varchar(500),m.employmentPreference) ), ',') AS employmentPreference
       --WHERE candidateID in (18550)
)
--select distinct employmentPreference from employmentPreference1
--select distinct employmentPreference, count(*) from employmentPreference where employmentPreference is not null group by employmentPreference

, employmentPreference2 as (
       select distinct candidateID, userID, firstName, lastname
              --, employmentPreference
              , case
                     -- CONTRACT
                     when employmentPreference like '%Contr%' then '{"desiredJobTypeId":"2"}'
                     when employmentPreference like '%Temp%' then '{"desiredJobTypeId":"2"}'
                     -- PERMANENT
                            when employmentPreference like '%Per%' then '{"desiredJobTypeId":"1"}' 
                            when employmentPreference like '%open%' then '{"desiredJobTypeId":"1"}' 
                            when employmentPreference like '%Please Select%' then '{"desiredJobTypeId":"1"}' 
                            when employmentPreference = 'full_time' then '{"desiredJobTypeId":"1"}' 
                            when employmentPreference = 'fulltime' then '{"desiredJobTypeId":"1"}'
                     when employmentPreference = '' then '{"desiredJobTypeId":"1"}'
                     when employmentPreference is null then '{"desiredJobTypeId":"1"}'
                     else '{"desiredJobTypeId":"2"}'
              end as 'desired_job_type_json'
       from employmentPreference1
)
--select distinct employmentPreference, desired_job_type_json from employmentPreference2 
--select top 100 candidateID, STRING_AGG(desired_job_type_json,',' ) WITHIN GROUP (ORDER BY candidateID) desired_job_type_json from employmentPreference2 GROUP BY candidateID

, employmentPreference3 as (
       SELECT candidateID, coalesce('[' + nullif( STRING_AGG( desired_job_type_json,',' ) WITHIN GROUP (ORDER BY desired_job_type_json) + ']', ''), '') as desired_job_type_json
       from employmentPreference2 
       WHERE desired_job_type_json &lt;&gt; '' GROUP BY candidateID
)
--select * from employmentPreference3


-- BusinessSector >>> INDUSTRY
--select distinct ltrim(rtrim(name)) from bullhorn1.BH_BusinessSectorList
, INDUSTRY0(userid, businessSectorID) as (SELECT userid, Split.a.value('.', 'VARCHAR(2000)') AS businessSectorID FROM (SELECT VC.userid, CAST('&lt;M>' + REPLACE(cast( ltrim(rtrim( convert(nvarchar(max),C.businessSectorIDList) )) as nvarchar(max)),',','&lt;/M>&lt;M>') + '&lt;/M>' AS XML) AS x FROM bullhorn1.View_Candidate VC left join bullhorn1.Candidate C on C.candidateid = VC.candidateid where VC.isdeleted &lt;&gt; 1) t CROSS APPLY x.nodes('/M') AS Split(a) )
, INDUSTRY(userId, BusinessSector) as (SELECT userid, STRING_AGG( ltrim(rtrim( convert(nvarchar(max),BSL.name) )),', ' ) WITHIN GROUP (ORDER BY BSL.name) name from INDUSTRY0 left join bullhorn1.BH_BusinessSectorList BSL ON INDUSTRY0.businessSectorID = BSL.businessSectorID WHERE INDUSTRY0.businessSectorID &lt;&gt; '' GROUP BY userid )
--select top 10 * from INDUSTRY


-- CATEGORY >>> FUNCTIONAL EXPERTISE
, CATEGORY(candidateID, userid, categoryIDList, categoryID, name) as (
       select C.candidateID, C.userid, C.categoryIDList, C.categoryID, UC.name
       FROM bullhorn1.View_Candidate VC left join bullhorn1.Candidate C on C.candidateid = VC.candidateid
       left join ( select UC.userID, UC.categoryID, replace(replace(replace(replace(replace(name,'4294:',''),'4295:',''),'4296:',''),'4297:',''),'850:','') as name from BULLHORN1.View_UserCategory UC left join bullhorn1.BH_CategoryList CL ON UC.categoryid = CL.categoryID ) UC on UC.userid = C.userID
       where UC.name is not null and UC.name &lt;&gt; '' and C.isdeleted &lt;&gt; 1 --and C.status &lt;&gt; 'Archive' --and C.userid in (165180)
       )
-- select distinct name from CATEGORY
-- select * from CATEGORY where userid in (165180,165184 ,165199, 161585)


-- SPECIALTY >>> SUB FUNCTIONAL EXPERTISE
, SPECIALTY(candidateID, userid, specialtyIDList, SpecialtyID, name) as (
       select C.candidateID, C.userid, C.specialtyIDList, UC.SpecialtyID, UC.name
       FROM bullhorn1.View_Candidate VC left join bullhorn1.Candidate C on C.candidateid = VC.candidateid
       left join ( select US.userID, US.SpecialtyID, VS.name as name from BULLHORN1.View_UserSpecialty US left join bullhorn1.View_Specialty VS ON US.SpecialtyID = VS.specialtyID ) UC on UC.userid = C.userID
       where UC.name is not null and UC.name &lt;&gt; '' and C.isdeleted &lt;&gt; 1 --and C.status &lt;&gt; 'Archive' --and C.userid in (165180)
       )
-- select distinct name from SPECIALTY
-- select * from SPECIALTY where userid in (155843,165184 ,165199, 161585)


-- SKILL
, SKILL (candidateID,userid, SkillName) as ( 
       SELECT candidateID, userid, STRING_AGG(name,', ' ) WITHIN GROUP (ORDER BY name) files 
       from (
              SELECT [BH_Candidate].candidateID, [BH_Candidate].userID, [BH_UserSkill].skillID, [BH_SkillList].name 
              FROM [bullhorn1].[BH_Candidate]
              LEFT JOIN [bullhorn1].BH_User on [BH_User].userID = [BH_Candidate].userID
              LEFT JOIN [bullhorn1].BH_UserSkill on [BH_Candidate].userID = [BH_UserSkill].userID
              LEFT JOIN [bullhorn1].BH_SkillList on [BH_UserSkill].skillID = [BH_SkillList].skillID
              WHERE [BH_SkillList].name is not null and [BH_SkillList].name &lt;&gt; '' and [BH_Candidate].isdeleted &lt;&gt; 1 ) s
       GROUP BY candidateID,userid )
--select top 10 * from SKILL where userid in (165199)


-- ADMISSION
, AdmissionRows(userId, CombinedText, dateadded) as (select UCOI.userID, concat(text1,' ',text2) as CombinedText, COI.dateadded from bullhorn1.BH_UserCustomObjectInstance UCOI inner join bullhorn1.BH_CustomObjectInstance COI On UCOI.instanceID = COI.instanceID)
, admission(Userid, Admission) as (SELECT userid, STRING_AGG( CombinedText,'|| ' ) WITHIN GROUP (ORDER BY dateadded) name from AdmissionRows where CombinedText &lt;&gt; '' GROUP BY userid )
--select top 10 * from admission


-- Web Responses
, wr as (
        select jr.userid, jp.title,jr.status
        from bullhorn1.BH_JobResponse JR
        left join (select C.userID as CandidateUserID, C.candidateID, UC.userID, UC.name as CandidateName, UC.email as CandidateEmail FROM bullhorn1.View_Candidate VC left join bullhorn1.Candidate C on C.candidateid = VC.candidateid left join bullhorn1.BH_UserContact UC on C.userID = UC.userID where C.isdeleted &lt;&gt; 1) CAI on JR.userID = CAI.CandidateUserID
        left join bullhorn1.BH_JobPosting  jp on jp.jobPostingID = jr.jobPostingID )
, wr1 as (SELECT userID, STRING_AGG( concat('Title: ',title,' - Status: ',status) ,char(10)) WITHIN GROUP (ORDER BY title) name from wr GROUP BY userID )
--select top 10 * from wr1


-- Latest Comment
, lc (userid, comments, dateAdded, rn) as ( SELECT userid, comments, dateAdded, r1 = ROW_NUMBER() OVER (PARTITION BY userid ORDER BY dateAdded desc) FROM bullhorn1.BH_UserComment )

/*-- OWNER
, owner as (select distinct C.recruiterUserID, UC.email from bullhorn1.View_Candidate CA left join bullhorn1.BH_UserContact UC on C.recruiterUserID = UC.userID where C.isdeleted &lt;&gt; 1 and C.status &lt;&gt; 'Archive')
-- Secondary OWNER
, owner2a as (SELECT userID, Split.a.value('.', 'VARCHAR(100)') AS String FROM (SELECT userID, CAST ('&lt;M>' + REPLACE(convert(varchar(20),ownerUserIDList),',','&lt;/M>&lt;M>') + '&lt;/M>' AS XML) AS Data FROM bullhorn1.BH_UserContact where ownerUserIDList like '%,%') AS A CROSS APPLY Data.nodes ('/M') AS Split(a))
, owner2b as (select owner2a.userid, UC.email, UC.name from owner2a left join (select userid, email, name from bullhorn1.BH_UserContact) UC on UC.userid = owner2a.String)
--, owner2c as (SELECT userID, STUFF((SELECT ', ' + name  from owner2b WHERE userID = a.userID FOR XML PATH (''), TYPE).value('.', 'nvarchar(MAX)'), 1, 1, '')  AS name FROM owner2b AS a GROUP BY a.userID )
, owner2c as (SELECT userID, STRING_AGG( email,',') WITHIN GROUP (ORDER BY email) email from owner2b where email like '%_@_%.__%' GROUP BY userID ) */

, owner as ( select C.candidateid, C.recruiterUserID, C.owneruseridlist, concat(C.recruiterUserID,',', C.ownerUserIDList) as owners FROM bullhorn1.View_Candidate VC left join bullhorn1.Candidate C on C.candidateid = VC.candidateid left join bullhorn1.BH_UserContact UC on C.recruiterUserID = UC.userID where C.isdeleted &lt;&gt; 1)
--select C.owneruseridlist from bullhorn1.View_Candidate VC where owneruseridlist like '%,%'
, owner2a as (SELECT candidateid, Split.a.value('.', 'VARCHAR(100)') AS String FROM (SELECT candidateid, CAST ('&lt;M>' + REPLACE(convert(nvarchar(max),owners),',','&lt;/M>&lt;M>') + '&lt;/M>' AS XML) AS Data FROM owner where owners is not null and owners &lt;&gt; '') AS A CROSS APPLY Data.nodes ('/M') AS Split(a))
--, owner2b as (select distinct owner2a.candidateid, UC.email, UC.name from owner2a left join (select C.candidateid, uc.email, uc.name from bullhorn1.View_Candidate CA left join bullhorn1.BH_UserContact UC on C.UserID = UC.userID ) UC on UC.candidateid = owner2a.String)
, owner2b as ( select distinct owner2a.candidateid, UC.email, UC.name from owner2a left join bullhorn1.BH_UserContact UC on UC.userid = owner2a.String)
--select top 10 * from owner2b where candidateid in (31595) and email &lt;&gt; '' and email is not null
, owner2c as (SELECT candidateid, STRING_AGG( email,',') WITHIN GROUP (ORDER BY email) email from owner2b where email like '%_@_%.__%' GROUP BY candidateid )
--select top 10 * from owner2c where candidateid in (31595) and email like '%,%' --candidateid in (39194)


--select top 100 * from bullhorn1.View_CandidateAllOwner;
, vcao1 as ( select VC.candidateid, VC.userid, vcao.recruiterUserID, UC.name, trim(UC.email) as email
       FROM bullhorn1.View_Candidate VC left join bullhorn1.Candidate C on C.candidateid = VC.candidateid
       left join bullhorn1.View_CandidateAllOwner vcao on vcao.candidateUserID = VC.userid
       left join bullhorn1.BH_UserContact UC on UC.userID = vcao.recruiterUserID
       where C.isdeleted &lt;&gt; 1)
, vcao2 as (SELECT candidateid, userid, STRING_AGG( email,',') WITHIN GROUP (ORDER BY email) email from vcao1 where email like '%_@_%.__%' GROUP BY candidateid, userid )
--select top 100 * from vcao2


-- COMMENT
--, comment(Userid, comment) as (SELECT Userid, STUFF((SELECT char(10) + 'Date Added: ' + convert(varchar(10), dateAdded, 120) + ' || ' + 'Action: ' + action + ' || ' + cast(comments as varchar(max)) from [bullhorn1].[BH_UserComment] WHERE Userid = a.Userid order by dateAdded desc FOR XML PATH (''), TYPE).value('.', 'nvarchar(MAX)'), 1, 1, '')  AS URLList FROM [bullhorn1].[BH_UserComment] AS a GROUP BY a.Userid )
--, summary(candidateID,summary) as (SELECT candidateID, STUFF((SELECT coalesce(char(10) + 'Date Added: ' + convert(varchar,dateAdded,120) + ' || ' + 'Candidate History: ' + nullif(convert(varchar(max),comments), ''), '') from bullhorn1.BH_CandidateHistory WHERE candidateID = b.candidateID order by dateAdded desc FOR XML PATH (''), TYPE).value('.', 'nvarchar(MAX)'), 1, 1, '')  AS summary FROM bullhorn1.BH_CandidateHistory as b GROUP BY b.candidateID)

-- DOCUMENT
, files(candidateUserID, files) as (SELECT candidateUserID, STRING_AGG( cast(replace(replace(concat(directory,candidateFileID,fileExtension),'/','_'),'\','_') as nvarchar(max)),',' ) WITHIN GROUP (ORDER BY candidateFileID) files from bullhorn1.View_CandidateFile GROUP BY candidateUserID)
--select top 10 * from files
, placementfiles(userID, files) as (SELECT userID, STRING_AGG( cast(replace(replace(concat(directory,placementFileID,fileExtension),'/','_'),'\','_') as nvarchar(max)),',' ) WITHIN GROUP (ORDER BY placementFileID) files from bullhorn1.View_PlacementFile GROUP BY userID)
--select top 10 * from placementfiles
, doc(Userid, files) as ( select f.candidateUserID, STRING_AGG( f.files,',' ) WITHIN GROUP (ORDER BY f.files) files from (SELECT * from files UNION ALL SELECT * from placementfiles) f GROUP BY f.candidateUserID )
--select top 10 * from doc


-- NOTE
, note as (
	SELECT C.candidateid --, Stuff(
		 , concat_ws ('',
		            coalesce('BH Candidate ID: ' + nullif(cast(C.userID as nvarchar(max)), '') + '&lt;br/>', '')
                        , coalesce('Status: ' + nullif(cast(C.status as nvarchar(max)), '') + '&lt;br/>', '')
                        ) as note --, 1, 0, '') as note
	-- select top 10 * -- select count(*) -- select referredBy, referredByUserID
	FROM bullhorn1.View_Candidate VC left join bullhorn1.Candidate C on C.candidateid = VC.candidateid --where C.isPrimaryOwner = 1 --where convert(varchar(max),C.comments) &lt;&gt; ''
--       left join e3 on C.userID = e3.ID
--       left join (select userid, firstname, lastname from bullhorn1.BH_UserContact) UC0 ON UC0.userID = C.recruiterUserID
--       left join (select userid, firstname, lastname from bullhorn1.BH_UserContact) UC ON UC.userID = C.referredByUserID
--       left join (select userid, ltrim([bullhorn1].[fn_ConvertHTMLToText](description)) as description from bullhorn1.BH_UserContact) UC1 on C.UserID = UC1.userID
--       left join tmp_country on cast(C.desiredLocations as varchar(2)) = tmp_country.ABBREVIATION
--       left join tmp_country on cast(C.secondaryCountryID as varchar(2)) = tmp_country.code
--       left join admission AD on C.userID = AD.Userid
--       left join INDUSTRY on INDUSTRY.userId = C.userID --BusinessSector
--       left join CATEGORY on CATEGORY.Userid = C.userID
--       left join owner2c on owner2c.candidateid = C.candidateid
--       left join (select * from lc where rn = 1) lc on lc.userid = C.userid
--       left join (select userid, status from bullhorn1.BH_Placement ) pm on pm.userid = C.userid
--       left join SKILL SN on C.userID = SN.userId
--       left join SPECIALTY on SPECIALTY.candidateID = C.userID
--       left join wr1 on wr1.userid = C.userid
--       left join summary on C.userID = summary.CandidateID
       /*left join (SELECT userid, STUFF((
                        SELECT char(10) + nullif(description_truong, '') + char(10) + '--------------------------------------------------' + char(10)
                        from bullhorn1.BH_UserWork where userid = a.userid FOR XML PATH (''), TYPE).value('.', 'nvarchar(MAX)'), 1, 1, '')  AS description 
                        FROM (   select userid, description_truong
                                        from bullhorn1.BH_UserWork) AS a GROUP BY a.userid 
                        ) uw on uw.userid = C.userid*/
	where C.isdeleted &lt;&gt; 1 --and C.status &lt;&gt; 'Archive' 
	)
--select count(*) from note --8545
--select * from note --where AddedNote like '%Business Sector%'
--select top 100 * from note



select --top 10
         convert(varchar(1000),C.candidateID) as 'candidate-externalId' , C.userID as '#userID'
	--, case C.gender when 'M' then 'MR' when 'F' then 'MISS' else '' end as 'candidate-title'
       , case 
              when C.nameprefix like '%Dr%' then 'Dr.' 
              when C.nameprefix like '%Mr%' then 'Mr.' 
              when C.nameprefix like '%Ms%' then 'Ms.' 
              when C.nameprefix like '%Miss%' then 'Miss.' 
              when C.nameprefix like '%Mrs%' then 'Mrs.' 
              else '' end as 'candidate-title'
	, case when C.gender like 'M%' then 1 when C.gender like 'F%' then 0 else null end as 'candidate-gender'
--       , case
--              when C.nameprefix in ('Mr','Mr.') then 'MALE' 
--              when C.nameprefix in ('Miss','Ms.','Mrs','Mrs.') then 'FEMALE' 
--              else '' end as 'candidate-gender'
--	, coalesce(nullif(replace(C.FirstName,'?',''), ''), 'No Firstname') as 'contact-firstName'
       , stuff( coalesce(' ' + nullif(C.namesuffix, ''), '') + coalesce( nullif(replace(C.FirstName,'?',''), ''), 'No Firstname' ) , 1, 0, '') as 'contact-firstName'
       , coalesce(nullif(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID)) as 'contact-lastName'
--       , stuff( coalesce(nullif(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID)) + coalesce(' ' + nullif(C.namesuffix, ''), ''), 1, 0, '') as 'contact-lastName'
--       , case when c.status = 'Archive' then concat(coalesce(nullif(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID)) ,' (Archive)')
--              else coalesce(nullif(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID))
--              end as 'contact-lastName'
	, trim(C.middleName) as 'candidate-middleName'
	
	, C.dateOfBirth as 'candidate-dob' --, convert(varchar(10),C.dateOfBirth,120) as 'candidate-dob'

--	, iif(ed.rn > 1,concat(ed.email,'_',ed.rn), iif(ed.email = '' or ed.email is null, concat('candidate_',cast(C.userID as varchar(max)),'@noemailaddress.co'),ed.email) ) as 'candidate-email'
--	, iif(ed.email = '' or ed.email is null, concat('candidate_',cast(C.userID as varchar(max)),'@noemailaddress.co'),ed.email) as 'candidate-email'
	, ed.email as 'candidate-email'

	, trim(C.mobile) as 'candidate-phone'
	--, C.mobile as 'candidate-mobile'
	, trim(C.phone) as 'candidate-homePhone'
	--, C.workPhone as 'candidate-workPhone'
	, trim(stuff( coalesce(' ' + nullif(trim(C.phone2), ''), '') + coalesce(' ' + nullif(trim(C.phone3), ''), '') + coalesce(', ' + nullif(trim(C.workphone), ''), ''), 1, 1, '')) as 'candidate-workPhone'
	
	, trim(stuff( coalesce(' ' + nullif(trim(C.address1), ''), '') + coalesce(', ' + nullif(trim(C.address2), ''), '') + coalesce(' ' + nullif(trim(C.city), ''), '') + coalesce(', ' + nullif(trim(C.state), ''), '') + coalesce(', ' + nullif(trim(C.zip), ''), '') + coalesce(', ' + nullif(tc.country, ''), ''), 1, 1, '')) as 'candidate-address'
	--, stuff( coalesce(' ' + nullif(C.city, ''), '') + coalesce(', ' + nullif(C.state, ''), '') + coalesce(', ' + nullif(C.zip, ''), '') + coalesce(', ' + nullif(tc.country, ''), ''), 1, 1, '') as 'candidate-LocationName' 
	, trim(C.city) as 'candidate-city'
	, trim(C.state) as 'candidate-state'
       , trim(C.zip) as 'candidate-zipCode'
	, tc.abbreviation as 'candidate-Country'
	--, tc.abbreviation as 'candidate-citizenship'
	
	, cast(C.salaryLow as bigint) as 'candidate-currentSalary'
	, cast(C.salary as bigint) as 'candidate-desiredSalary'

--	, 'PERMANENT' as 'candidate-jobTypes'

--	, C.companyName as 'candidate-company1'
--	, C.occupation as 'candidate-jobTitle1'
--	, C.companyName as 'candidate-employer1'
	, '[{'+ CONCAT_WS(',',
              concat('"company":"',replace(replace(replace(replace(companyName,'"','') ,'\','\\'), char(9),''), char(10),'') ,'"')
              , concat('"jobTitle":"',replace(replace(replace(replace(occupation,'"',''),'\','\\'), char(9),''), char(10),''),'"')
              , concat('"currentEmployer":"',replace(replace(replace(replace(companyName,'"',''),'\','\\'), char(9),''), char(10),''),'"')
              )+'}]' as experience_details_json

	, SKILL.SkillName as 'candidate-skills'
       /*, ltrim(Stuff( 
                   coalesce(nullif(SKILL.SkillName, '') + char(10), '')
                 + coalesce(nullif(convert(varchar(max),C.skillset), ''), '')
                 --+ coalesce(nullif(convert(varchar(max),C.customTextBlock1), '') + char(10), '')
                 , 1, 0, '') ) as 'candidate-skills'*/

--	, Education.school as 'candidate-schoolName'
--	, Education.graduationDate as 'candidate-graduationDate'
--	, Education.degree as 'candidate-degreeName'
--	, Education.major as '#candidate-major'
--     , stuff( coalesce(' ' + nullif(es.es, '') + char(10), '') + coalesce('REFERENCE: ' + char(10) + nullif(rs.reference, '') + char(10), ''), 1, 1, '') as 'candidate-education' --*** 
--	, eh.eh as 'candidate-workHistory' --***
--	, note.note as 'candidate-note' --***

, c.companyURL as 'Website'
, c.dateAdded as 'insert_timestamp'

, iif(c.dayRate > 0 or c.dayRateLow > 0, 'day', iif(c.hourlyRate > 0 or c.hourlyRateLow > 0,'hour','day') ) as 'contract_interval'
, iif(c.dayRate > 0 or c.dayRateLow > 0, c.dayRateLow, c.hourlyRateLow) as 'contract_rate'
, iif(c.dayRate > 0 or c.dayRateLow > 0, c.dayRate, c.hourlyRate) as 'desired_contract_rate'

--, c.dayRate as 'Contract Interval = Daily Desired contract rate'
--, c.dayRateLow as 'Contract Interval = Daily Current contract rate'
, trim(convert(nvarchar(max),c.desiredLocations)) as 'Desired Location Address - Desired Location Name'

, e2.email as 'work_email' --'candidate-PersonalEmail' --***
--, e3.email as 'Payslip Email'
, employmentPreference3.desired_job_type_json --, c.employmentPreference as 'candidate-jobTypes'
, 0 as employment_type --FULL_TIME
--, c.hourlyRate as 'Contract Interval = Hourly - Desired contract rate'
--, c.hourlyRateLow as 'Contract Interval = Hourly - Current contract rate'
, coalesce(nullif(maritalStatus.maritalStatus,''),0) as 'Marital Status'
, c.massMailOptOut as 'Mail Subscribed = No if opted out is yes.'
, c.nickName as 'Preferred Name'
, c.ssn as 'National Insurance Number - Country = UK'
--, c.userDateAdded as 'Reg Date'
, c.willRelocate as 'Willing to Relocate'

-- Candidate Company Address
--       , c.fullSecondaryAddress
--       , c.secondaryAddress1
--       , c.secondaryAddress2
--       , c.secondaryCity
--       , c.secondaryCountryID
--       , c.secondaryState
--       , c.secondaryZip
	, trim(stuff( coalesce(' ' + nullif(trim(C.secondaryAddress1), ''), '') + coalesce(', ' + nullif(trim(C.secondaryAddress1), ''), '') + coalesce(' ' + nullif(trim(C.secondaryCity), ''), '') + coalesce(', ' + nullif(trim(C.secondaryState), ''), '') + coalesce(', ' + nullif(trim(C.secondaryZip), ''), '') + coalesce(', ' + nullif(tc2.country, ''), ''), 1, 1, '')) as 'candidate-secondaryaddress'
	, trim(C.secondaryCity) as 'candidate-secondarycity'
	, trim(C.secondaryState) as 'candidate-secondarystate'
       , trim(C.secondaryZip) as 'candidate-secondaryzipCode'
	, tc2.abbreviation as 'candidate-secondaryCountry'

--OWNER
	, vcao2.email as 'owners' --owner2c.email  --C.recruiterUserID
       , 0 as 'owners-super_user'
       , getdate() as 'owners-insert_timestamp'
       , 1 as 'owners-locked_user'
       --, as 'owners-first_name'
       , ' ' as 'owners-last_name'
       , 'en' as 'owners-language'


--DOCUMENT
	, doc.files as 'document' --, stuff( coalesce(' ' + nullif(files.ResumeId, ''), '') + coalesce(', ' + nullif(p.placementfile, ''), ''), 1, 1, '') as 'candidate-resume'
       , 'CANDIDATE' as entity_type
       , 'resume' as document_type
       , 0 as default_file

--select count (*) -- select distinct gender --dateOfBirth --vc.status, c.status -- select distinct employmentPreference --nameSuffix -- select distinct willRelocate -- gender -- 
-- select skillset, skillIDlist, customTextBlock1 -- select top 1000 * -- select distinct customText4 --convert(bigint, salarylow) -- select distinct cast(C.salarylow as int)
from bullhorn1.View_Candidate VC left join bullhorn1.Candidate C on c.candidateid = VC.candidateid --where C.isdeleted &lt;&gt; 1 --where C.isPrimaryOwner = 1
--left join owner2c on owner2c.candidateid = C.candidateid
left join vcao2 on vcao2.candidateid = C.candidateid
left join ed on ed.ID = C.candidateID -- candidate-email-deduplication
left join e2 on e2.ID = C.candidateID
--left join e3 on e3.ID = C.candidateID
left join doc on doc.UserID = C.userID
left join tmp_country tc ON tc.code =  c.countryID
left join tmp_country tc2 ON tc2.code =  c.secondaryCountryID
left join SKILL on SKILL.candidateID =  C.candidateID
left join (select candidateid, maritalStatus from bullhorn1.BH_Candidate) maritalStatus on maritalStatus.candidateid = c.candidateid
left join employmentPreference3 on employmentPreference3.candidateid = c.candidateid
--left join INDUSTRY on INDUSTRY.userid = C.userid
--left join note on C.candidateid = note.candidateid
--left join Education on C.userID = Education.userID
--left join ReferenceSummary rs on rs.userID = C.userID
--left join EducationSummary es on es.userID = C.userID
--left join EmploymentHistory eh on EH.userid = C.userid --WORK HISTORY
--left join comment on C.userID = comment.Userid
where C.isdeleted &lt;&gt; 1 --and C.status &lt;&gt; 'Archive' --where C.isPrimaryOwner = 1
--and rs.reference is not null
--and C.userID in (41985)
--and C.candidateID in (62819, 62821)
--and (C.FirstName like '%Partha%' or C.LastName like '%Partha%')
--and concat (C.FirstName,' ',C.LastName) like '%Partha%'
--and e1.email = '' or e1.email is null --e1.email &lt;&gt; ''
--inner join bullhorn1.BH_UserContact UC_2 on C.recruiterUserID = UC_2.userID
--left join bullhorn1.BH_ClientCorporation CC ON CC.clientCorporationID = C.clientCorporationID
--and (c.customtext1 is not null and c.customtext1 &lt;&gt; '') 
--or (c.customtext2 is not null and c.customtext2 &lt;&gt; '') 

--select distinct customText4 , count(*) from bullhorn1.View_Candidate VC left join bullhorn1.Candidate C on c.candidateid = VC.candidateid group by customText4
--select * from bullhorn1.View_Candidate VC left join bullhorn1.Candidate C on c.candidateid = VC.candidateid where VC.userID = 55587
/*
--CUSTOM FIELD
select distinct customText12 from bullhorn1.View_Candidate C where customText12 is not null and customText12 &lt;&gt; ''
select candidateID as 'additional_id'
       , 'add_can_info' as 'additional_type'
       , 1005 as 'form_id'
       , 11269 as 'field_id'
       , trim(convert(nvarchar(max),customText12))as field_value
       , 11269 as 'constraint_id'
from t group by candidateID
 where customText12 is not null and customText12 &lt;&gt; ''
*/



</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4880</xloc>
      <yloc>96</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate Source DB</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select distinct value
from bullhorn1.Candidate
cross apply string_split(source, ',')
where source is not NULL
order by value</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>224</xloc>
      <yloc>1520</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate back office</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>--Candidate back office | bank name
select c.id as candidate_id
, c.limited_company_c
, a.ltdco_bank_name_c as field_value --bank name
, 'add_cand_info' as additional_type
, 1005 as form_id
, 11231 as field_id --Bank Name
, 11231 as constraint_id
, CURRENT_TIMESTAMP as insert_timestamp
from contact c
left join account a on a.id = c.limited_company_c
where c.recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')
and c.limited_company_c is not NULL --1123 rows
and a.ltdco_bank_name_c is not NULL --187

UNION ALL

--Candidate back office | account name
select c.id as candidate_id
, c.limited_company_c
, a.ltdco_bank_account_name_c as field_value
, 'add_cand_info' as additional_type
, 1005 as form_id
, 10063 as field_id --Account Name
, 10063 as constraint_id
, CURRENT_TIMESTAMP as insert_timestamp
from contact c
left join account a on a.id = c.limited_company_c
where c.recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')
and c.limited_company_c is not NULL --1123 rows
and a.ltdco_bank_account_name_c is not NULL --181

UNION ALL

--Candidate back office | account number
select c.id as candidate_id
, c.limited_company_c
, a.ltdco_bank_account_number_c
, 'add_cand_info' as additional_type
, 1005 as form_id
, 10062 as field_id --Account number
, 10062 as constraint_id
, CURRENT_TIMESTAMP as insert_timestamp
from contact c
left join account a on a.id = c.limited_company_c
where c.recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')
and c.limited_company_c is not NULL --1123 rows
and a.ltdco_bank_account_number_c is not NULL --162

--total: 530</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4288</xloc>
      <yloc>1712</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate document + type</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
with t as (
SELECT 'candidateUserID' as Category
		, c.candidateid as CandidateExtID
		, replace(replace(concat(directory,candidateFileID,fileExtension),'/','_'),'\','_') as UploadedName
		, case when right(F.name, charindex('.', reverse(F.name))) = F.fileExtension then F.Name else concat(F.name, F.fileExtension) end as RealName
		, F.dateadded as created
		, F.type
		--, 'resume' as 'document_type'
		, lower(
              case 
              when trim(F.type) like '%Formatted CV%' then 'BH Formatted CV'
              when trim(F.type) like '%CV%' then 'CV/Resume'
              when trim(F.type) like '%resume%' then 'CV/Resume'
              when trim(F.type) like '%other%' then 'Other docs'
			  when trim(F.type) like '' then 'CV/Resume'
			  when trim(F.type) is null then 'CV/Resume'
--			  when trim(F.type) like 'NA' then 'CV/Resume'
              else trim(F.type) end
       		  ) as tmp
		from bullhorn1.View_CandidateFile F 
		left join bullhorn1.Candidate C on C.userid = F.candidateuserid
		--WHERE F.fileExtension in ('.doc','.docx','.pdf','.xls','.xlsx','.rtf','.html')
		--where c.candidateid in (56611)
--select top 10 * from candidate 


UNION

SELECT 'placementUserID'
	, c.candidateid as CandidateExtID
	, replace(replace(concat(directory,placementFileID,fileExtension),'/','_'),'\','_') as UploadedName
	, case when right(F.name, charindex('.', reverse(F.name))) = F.fileExtension then F.Name else concat(F.name, F.fileExtension) end as RealName
	, F.dateadded as created
	, F.type
--, 'resume' as 'document_type'
	, lower(
              case 
              when trim(F.type) like '%Formatted CV%' then 'BH Formatted CV'
              when trim(F.type) like '%CV%' then 'CV/Resume'
              when trim(F.type) like '%resume%' then 'CV/Resume'
              when trim(F.type) like '%other%' then 'Other docs'
			  when trim(F.type) like '' then 'CV/Resume'
			  when trim(F.type) is null then 'CV/Resume'
--			  when trim(F.type) like 'NA' then 'CV/Resume'
              else trim(F.type) end
       ) as tmp
	from bullhorn1.View_PlacementFile F
	left join bullhorn1.Candidate C on C.userid = F.userid
	--WHERE fileExtension in ('.doc','.docx','.pdf','.xls','.xlsx','.rtf','.html')


)

select * from t
--where tmp like '%Formatted CV%'
--and CandidateExtID in (23172) --tmp is null
--where created >= '2020-01-01 00:00:00'
--where (C.isdeleted &lt;&gt; 1 and C.status &lt;&gt; 'Archive') and C.dateadded &lt;= '2020-01-01 00:00:00'




</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>224</xloc>
      <yloc>1200</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate language</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>--CANDIDATE LANGUAGE JSON
--CONTACT/ CANDIDATE 'Hires Contractor (IC)' as Industry
with candidatelang as (select ts2_contact_c as candidate_id
		, ts2_skill_name_c
		, case lower(ts2_skill_name_c)
				when lower('Chinese (IC)') then 'zh_CN'
				when lower('Czech (IC)') then 'cs'
				when lower('Dutch (IC)') then 'nl'
				when lower('French (IC)') then 'fr'
				when lower('German (IC)') then 'de'
				when lower('Italian (IC)') then 'it'
				when lower('Japanese (IC)') then 'ja'
				when lower('Korean (IC)') then 'ko'
				when lower('Malaysian (IC)') then 'ml'
				when lower('Portuguese (IC)') then 'pt'
				when lower('Spanish (IC)') then 'es'
				when lower('Swedish (IC)') then 'sv'
				when lower('English (IC)') then 'en'
				else NULL end as candlanguage
		, '' as level
		, now() as insert_timestamp
		from ts2_skill_c
		where lower(ts2_skill_name_c) in (lower('Chinese (IC)'), lower('Czech (IC)'), lower('Dutch (IC)'), lower('French (IC)'), lower('German (IC)')
																, lower('Italian (IC)'), lower('Japanese (IC)'), lower('Korean (IC)'), lower('Malaysian (IC)'), lower('Portuguese (IC)')
																, lower('Spanish (IC)'), lower('Swedish (IC)'), lower('English (IC)'))
)

/*
select candidate_id, count(*)
from candidatelang
group by candidate_id
having count(*) > 1 --0030Y00000j0tD7QAI

select *
from candidatelang
where candidate_id = '0030Y00000j0tD7QAI'
*/

select distinct candidate_id
, (select array_to_json(array_agg(row_to_json(value_json)))
					from (
							select candlanguage as "languageCode" --keep format by using ""
							, '' as "level"
							from candidatelang cl
							where c.candidate_id = cl.candidate_id
							) as value_json )::text as field_value_json
from candidatelang c
--where c.candidate_id = '0030Y00000j0tD7QAI'</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4928</xloc>
      <yloc>1376</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate language 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
with lang1 as (
              SELECT [BH_Candidate].candidateID, [BH_Candidate].userID ,[BH_UserSkill].skillID, [BH_SkillList].name 
              -- select distinct [BH_SkillList].name
              FROM [bullhorn1].[BH_Candidate]
              LEFT JOIN [bullhorn1].BH_User on [BH_User].userID = [BH_Candidate].userID
              LEFT JOIN [bullhorn1].BH_UserSkill on [BH_Candidate].userID = [BH_UserSkill].userID
              LEFT JOIN [bullhorn1].BH_SkillList on [BH_UserSkill].skillID = [BH_SkillList].skillID
              WHERE [BH_SkillList].name is not null and [BH_SkillList].name &lt;&gt; '' and [BH_Candidate].isdeleted &lt;&gt; 1 and [BH_UserSkill].rating = 1 --and [BH_Candidate].userid = 803726
              )
--select distinct name,count(*) from lang1 group by name
, lang2 as (
       select *
       , case
              when name = 'Account Management' then ''
              when name = 'Afrikaan - Native' then 'af'
              when name = 'Arabic - Basic' then 'ar'
              when name = 'Arabic - Conversational' then 'ar'
              when name = 'Arabic - Fluent / Business' then 'ar'
              when name = 'Arabic - Native' then 'ar'
              when name = 'Bahasa Indonesian - Native' then 'in'
              when name = 'Bulgarian - Fluent / Business' then 'bg'
              when name = 'Bulgarian - Native' then 'bg'
              when name = 'Cantonese - Conversational' then 'zh_TW'
              when name = 'Chinese – Basic' then 'zh_CN'
              when name = 'Chinese – Conversational' then 'zh_CN'
              when name = 'Chinese – Native' then 'zh_CN'
              when name = 'Czech - Native' then 'cs'
              when name = 'Danish - Native' then 'da'
              when name = 'Dutch - Basic' then 'nl'
              when name = 'Dutch - Conversational' then 'nl'
              when name = 'Dutch - Fluent / Business' then 'nl'
              when name = 'Dutch - Native' then 'nl'
              when name = 'English - Basic' then 'en'
              when name = 'English - Conversational' then 'en'
              when name = 'English - Fluent / Business' then 'en'
              when name = 'English - native' then 'en'
              when name = 'Europe - Croatia' then 'hr'
              when name = 'Europe - Germany' then 'de'
              when name = 'Europe - Russia' then 'ru'
              when name = 'Europe - Ukraine' then 'uk'
              when name = 'EZACCESS - CODES - LANGUAGES - FRENCH' then 'fr'
              when name = 'Finnish - Native' then 'fi'
              when name = 'French - Basic' then 'fr'
              when name = 'French - Conversational' then 'fr'
              when name = 'French - Fluent / Business' then 'fr'
              when name = 'French - Native' then 'fr'
              when name = 'German - Basic' then 'de'
              when name = 'German - Conversational' then 'de'
              when name = 'German - Fluent / Business' then 'de'
              when name = 'German - native' then 'de'
              when name = 'Greek - Fluent / Business' then 'el'
              when name = 'Greek - Native' then 'el'
              when name = 'Hebrew - Basic' then 'iw'
              when name = 'Hindi - Basic' then 'hi'
              when name = 'Hindi - Conversational' then 'hi'
              when name = 'Hindi - Fluent / Business' then 'hi'
              when name = 'Hindi - Native' then 'hi'
              when name = 'Hungarian - Fluent / Business' then 'hu'
              when name = 'Hungarian - Native' then 'hu'
              when name = 'Indian - Conversational' then 'hi'
              when name = 'Indian - Native' then 'hi'
              when name = 'Indonesian - Fluent / Business' then 'in'
              when name = 'Irish  - Native' then 'ga'
              when name = 'Italian - Basic' then 'it'
              when name = 'Italian - Conversational' then 'it'
              when name = 'Italian - Fluent / Business' then 'it'
              when name = 'Italian - Native' then 'it'
              when name = 'Japanese - Basic' then 'ja'
              when name = 'Japanese - Conversational' then 'ja'
              when name = 'Japanese - Fluent / Business' then 'ja'
              when name = 'Korean - Basic' then 'ko'
              when name = 'Lithuanian - Native' then 'lt'
              when name = 'Mandarin – Conversational' then 'zh'
              when name = 'Mandarin – Native' then 'zh'
              when name = 'Middle East and Africa - Lebanon' then ''
              when name = 'Middle East and Africa - Saudi Arabia' then ''
              when name = 'Middle East and Africa - Tunisia' then ''
              when name = 'Middle East and Africa - UAE' then ''
              when name = 'MSE:Philippines' then 'tl'
              when name = 'Polish - Basic' then 'pl'
              when name = 'Polish - Conversational' then 'pl'
              when name = 'Polish - Native' then 'pl'
              when name = 'Portuguese - Basic' then 'pt'
              when name = 'Portuguese - Conversational' then 'pt'
              when name = 'Portuguese - Fluent / Business' then 'pt'
              when name = 'Portuguese - Native' then 'pt'
              when name = 'Punjabi - Fluent / Business' then 'pa'
              when name = 'Punjabi - Native' then 'pa'
              when name = 'Romanian - Native' then 'ro'
              when name = 'Russian - Basic' then 'ru'
              when name = 'Russian - Conversational' then 'ru'
              when name = 'Russian - Fluent / Business' then 'ru'
              when name = 'Russian - Native' then 'ru'
              when name = 'Scandinavian - Conversational' then 'sv'
              when name = 'Slovakian - Native' then 'sl'
              when name = 'Spanish - Basic' then 'es'
              when name = 'Spanish - Conversational' then 'es'
              when name = 'Spanish - Fluent / Business' then 'es'
              when name = 'Spanish - Native' then 'es'
              when name = 'Sri Lankan - Native' then 'si'
              when name = 'Swedish - Basic' then 'sv'
              when name = 'Swedish - Conversational' then 'sv'
              when name = 'Swedish - Fluent / Business' then 'sv'
              when name = 'Swedish - Native' then 'sv'
              when name = 'Tagalog - Conversational' then 'tl'
              when name = 'Tagalog - Fluent / Business' then 'tl'
              when name = 'Tagalog - Native' then 'tl'
              when name = 'Turkish - Conversational' then 'tr'
              when name = 'Turkish - Fluent / Business' then 'tr'
              when name = 'Turkish - Native' then 'tr'
              when name = 'Ukrainian - Native' then 'uk'
              when name = 'Urdu - Conversational' then 'ur'
              when name = 'Urdu - Fluent / Business' then 'ur'
              when name = 'Urdu - Native' then 'ur'
              when name = 'v9 APAC - Languages - Portugese - Basic' then 'pt'
              when name = 'v9 APAC - Languages - Portugese - Conversational' then 'pt'
              when name = 'v9 APAC - Languages - Portugese - Fluent' then 'pt'
              else name end as langcode
       from lang1
)
--select distinct langcode from lang2
select
         C.candidateID as 'candidate-externalId' , C.userID as '#userID'
	, coalesce(nullif(replace(C.FirstName,'?',''), ''), 'No Firstname') as 'contact-firstName'
       , coalesce(nullif(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID)) as 'contact-lastName'
       , lang2.langcode as language --, lang2.*
-- select * -- select distinct status
from bullhorn1.Candidate C
left join lang2 on lang2.candidateID = c.candidateID
where lang2.candidateID is not null --and lang2.name&lt;&gt; ''
--and SKILL.skillname like 'MSE:Philippines'
--and c.userid in (803726)</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4928</xloc>
      <yloc>1456</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate lookup 2 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCCandidateID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4432</xloc>
      <yloc>1664</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate national insurance</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>--National insurance
select id as candidate_id
, ni_number_c as field_value
, 'add_cand_info' as additional_type 
, 1005 as form_id
, 10073 as field_id --National Insurance number
, 10073 as constraint_id
, CURRENT_TIMESTAMP as insert_timestamp
from contact
where ni_number_c is not NULL --337 rows</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4288</xloc>
      <yloc>1664</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Company 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>pd.company_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>name</name>
        <rename>company.client_company_name</rename>
        <default/>
        <type>String</type>
      </value>
      <value>
        <name>id</name>
        <rename>company.client_company_id</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>7264</xloc>
      <yloc>432</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Company Comment - br</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>-- OWNER, COMMENT
with t as (
       select 
                UC1.clientCorporationID
              , UC.dateAdded , author.name as 'authorname', author.email as 'authoremail' --author.userID, 
              , about.name as 'aboutname', about.email as 'aboutemail'--, about.userID 
              , UC.action, UC.comments
       from bullhorn1.BH_UserComment UC
       left join (select * from bullhorn1.BH_UserContact) author ON author.userID = UC.commentingUserID
       left join (select * from bullhorn1.BH_UserContact) about ON about.userID = UC.userID
       --left join bullhorn1.BH_ClientCorporation on Cl.userID = UC.userID
       --left join bullhorn1.BH_Client Cl on Cl.userID = UC.userID
       left join bullhorn1.BH_UserContact UC1 ON UC1.userID = UC.userID
--left join bullhorn1.BH_ClientCorporation CC on CC.clientCorporationID = UC1.clientCorporationID
       where UC1.clientCorporationID is not null
--and UC.dateadded >= '2020-01-01 00:00:00'
       --and UC.dateAdded between '2017-09-01' AND '2017-11-01'
       --and (UC.dateAdded &lt; '2017-09-01' or '2017-11-01' &lt; UC.dateAdded )
       --order by UC.dateAdded desc 
       --and UC1.clientCorporationID = 4666 
       --and UC.comments like 'Can you put%'  
       --or UC1.userid in (98297,180534) or U.userid in (98297,180534)
       )
--select count(*) from t


, owner as ( SELECT *, rn = ROW_NUMBER() OVER (PARTITION BY clientCorporationID ORDER BY dateAdded desc) FROM t )
--select count(*) from owner
--select * from owner where rn = 1 --and clientCorporationID in (663, 664, 665, 666, 667, 668, 669, 670)
--select distinct authoremail from owner where rn = 1  --&lt;&lt; GET THE LIST OF OWNER




select 
       clientCorporationID as external_id
       --, cast('-10' as int) as 'user_account_id'
, authoremail
       , 'comment' as category
       , 'company' as type	
       , dateAdded as insert_timestamp
       , [dbo].[RemoveNullCharacters]( 
			Stuff(
              + Coalesce('Date Added: ' + NULLIF(cast(dateAdded AT TIME ZONE 'Singapore Standard Time' as nvarchar(max)), '') + '&lt;br/>', '')
      
              + Coalesce('Author Name: ' + nullif(convert(nvarchar(max),authorname), '') + '&lt;br/>', '')
              + Coalesce('Author Email: ' + nullif(convert(nvarchar(max),authoremail), '') + '&lt;br/>', '')
              + Coalesce('Author Name: ' + nullif(convert(nvarchar(max),aboutname), '') + '&lt;br/>', '')
              + Coalesce('About Email: ' + nullif(convert(nvarchar(max),aboutemail), '') + '&lt;br/>', '')
              + Coalesce('Action: ' + nullif(convert(nvarchar(max),[action]), '') + '&lt;br/>', '')
              + Coalesce('Comments: ' + '&lt;br/>' + nullif( replace( convert(nvarchar(max),comments),char(10),'&lt;br/>'), '') + '&lt;br/>', '')
       , 1, 0, '')) as content
--, '20200202' as tmp
-- select  top 10 *
from t --owner
 
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>224</xloc>
      <yloc>736</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Company document + type</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>SELECT 
	'company' as category
	, clientCorporationID as CompanyExtID
	, replace(replace(concat(directory,clientCorporationFileID,fileExtension),'/','_'),'\','_') as UploadedName
	, case 
		when right(F.name, charindex('.', reverse(name))) = F.fileExtension then F.Name
		else concat(F.name, F.fileExtension) 
		end as RealName
	, F.dateadded as created
	--, 'legal_document' as 'document_type'
	, lower(
              case 
              when trim(F.type) like '%Formatted CV%' then 'BH Formatted CV'
              when trim(F.type) like '%CV%' then 'CV/Resume'
              when trim(F.type) like '%resume%' then 'CV/Resume'

              when trim(F.type) like '%other%' then 'Other docs'
			  when trim(F.type) like '' then 'Other docs'
			  when trim(F.type) is null then 'Other docs'
--			  when trim(F.type) like 'NA' then 'CV/Resume'
              else trim(F.type) end
       ) as tmp	, F.type
from bullhorn1.BH_ClientCorporationFile F
--where clientCorporationID in (96)
--where F.fileExtension in ('.doc','.docx','.pdf','.xls','.xlsx','.rtf','.html') --57 rows
--where f.dateAdded >= '2020-01-01 00:00:00'

</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>224</xloc>
      <yloc>928</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CompanyInfo</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
with 
  dup as (SELECT clientCorporationID,ltrim(rtrim(name)) as name,ROW_NUMBER() OVER(PARTITION BY ltrim(rtrim(CC.name)) ORDER BY CC.clientCorporationID ASC) AS rn FROM bullhorn1.BH_ClientCorporation CC ) --where name like 'Azurance'

-- FILES
/*, doc (clientCorporationID,ResumeId) as (
        SELECT clientCorporationID
                     , STUFF((SELECT DISTINCT ',' + concat(clientCorporationFileID,fileExtension) from bullhorn1.BH_ClientCorporationFile WHERE clientCorporationID = a.clientCorporationID and fileExtension in ('.doc','.docx','.pdf','.rtf','.xls','.xlsx','.htm', '.html', '.msg', '.txt') FOR XML PATH (''), TYPE).value('.', 'nvarchar(MAX)'), 1, 1, '') AS ResumeId 
        FROM (select clientCorporationID from bullhorn1.BH_ClientCorporationFile) as a GROUP BY a.clientCorporationID )*/
--, doc (clientCorporationID,ResumeId) as ( SELECT clientCorporationID, STRING_AGG(cast(concat(clientCorporationFileID,fileExtension) as nvarchar(max)),',' ) WITHIN GROUP (ORDER BY clientCorporationFileID) att from bullhorn1.BH_ClientCorporationFile where isdeleted &lt;&gt; 1 /*and fileExtension in ('.doc','.docx','.pdf','.rtf','.xls','.xlsx','.htm', '.html', '.msg', '.txt')*/ GROUP BY clientCorporationID )
, doc (clientCorporationID,ResumeId) as ( SELECT clientCorporationID, STRING_AGG(cast(replace(replace(concat(directory,clientCorporationFileID,fileExtension),'/','_'),'\','_') as nvarchar(max)),',' ) WITHIN GROUP (ORDER BY clientCorporationFileID) att from bullhorn1.BH_ClientCorporationFile where isdeleted &lt;&gt; 1 /*and fileExtension in ('.doc','.docx','.pdf','.rtf','.xls','.xlsx','.htm', '.html', '.msg', '.txt')*/ GROUP BY clientCorporationID )

--select CC.NAME, doc.ResumeId as 'company-document' from bullhorn1.BH_ClientCorporation CC left join doc on CC.clientCorporationID = doc.clientCorporationID where doc.ResumeId is not null
--select directory from bullhorn1.BH_ClientCorporationFile where directory &lt;&gt; ''
--select top 100 * from doc where clientCorporationID = 426

, -- with
businessSectorList (clientCorporationID,businessSectorList) as (
--       SELECT 
--              clientCorporationID
--              , trim( replace(replace(replace(businessSectorList.value,'  ',' '),' )',')'),'( ','(') ) as businessSectorList --, trim( ind.value ) as ind 
--       FROM (
              SELECT clientCorporationID, trim( businessSectorList.value ) as businessSectorList 
              FROM bullhorn1.BH_ClientCorporation m 
              CROSS APPLY STRING_SPLIT( trim( convert(varchar(500),m.businessSectorList) ), ',') AS businessSectorList
--              ) m
--       CROSS APPLY STRING_SPLIT( trim( convert(varchar(500),m.businessSectorList) ), ';') AS businessSectorList
--       where (businessSectorList is not null and convert(nvarchar(max),businessSectorList) &lt;&gt; '')
       )
--select distinct businessSectorList, count(*), current_timestamp as 'insert_timestamp',lower(businessSectorList) as 'tmp' from businessSectorList where businessSectorList &lt;&gt; '#N/A' group by businessSectorList
--select top 10 * from businessSectorList where businessSectorList &lt;&gt; '#N/A'


, headquarter as ( 
       select c.clientCorporationID, c.name, c.status, h.clientCorporationID as 'parent_companyid', h.name as 'parent_name', h.status as 'parent_status'
       from bullhorn1.BH_ClientCorporation c
       left join (select clientCorporationID, NAME, status from bullhorn1.BH_ClientCorporation ) h on h.clientCorporationID = c.parentClientCorporationID
       where parentClientCorporationID is not null and parentClientCorporationID &lt;&gt; '' --and c.clientCorporationID = 32
       )
--select clientCorporationID, name, status, parent_companyid, parent_name, parent_status from headquarter where clientCorporationID in (32)

, owner0 as (select distinct C.clientCorporationID, C.recruiterUserID, UC.firstName, UC.lastname, UC.email /*, UC.email2, UC.email3, UC.email_old*/ FROM bullhorn1.BH_Client C left join bullhorn1.BH_UserContact UC on UC.userid = C.recruiterUserID where  UC.email like '%_@_%.__%' /*UC.email is not null and UC.email &lt;&gt; ''*/ )
/*, owner as (
       SELECT clientCorporationID
                     , STUFF((SELECT ',' + email from owner0 WHERE clientCorporationID = a.clientCorporationID FOR XML PATH (''), TYPE).value('.', 'nvarchar(MAX)'), 1, 1, '')  AS owners
        FROM (select clientCorporationID from owner0) AS a GROUP BY a.clientCorporationID ) */
--, owner (clientCorporationID, owners) as (SELECT clientCorporationID, STRING_AGG( email,',' ) WITHIN GROUP (ORDER BY email) att from owner0 GROUP BY clientCorporationID)
--select * from owner where clientCorporationID in (3768, 2606, 2678, 3740, 1246, 747, 4687, 2605, 9228, 9227, 9229)

, VCAO1 as (select distinct VCAO.clientCorporationID, VCAO.ownerID, UC.firstName, UC.lastname, UC.name, UC.email
       -- select distinct VCAO.ownerID, r.researcher, UC.email, r.email
       from bullhorn1.View_ClientCorporationActiveOwner VCAO 
       left join bullhorn1.BH_UserContact UC on UC.userid = VCAO.ownerID 
       where UC.email like '%_@_%.__%'
       )
-- select distinct ownerID, firstName, lastname, name, email from VCAO1
, VCAO2 as (SELECT clientCorporationID, STRING_AGG( email,',' ) WITHIN GROUP (ORDER BY email) owners from VCAO1 GROUP BY clientCorporationID)
--select top 100 * from VCAO2


, note as (
	select CC.clientCorporationID
	       , [bullhorn1].[fn_ConvertHTMLToText](Stuff(
+ coalesce('BH Company ID: ' + nullif(convert(nvarchar(max),cc.ClientCorporationID), '') + '&lt;br/>', '')
--+ coalesce('Working Hours: ' + nullif(convert(nvarchar(max),cc.customText10), '') + '&lt;br/>', '')
--+ coalesce('Credit Limit: ' + nullif(convert(nvarchar(max),cc.customText17), '') + '&lt;br/>', '')


+ coalesce('Credit score: ' + nullif(convert(nvarchar(max),cc.billingFrequency), '') + '&lt;br/>', '')
       --+ coalesce('Company Description: ' + nullif(convert(nvarchar(max),cc.companyDescription), '') + '&lt;br/>', '')
+ coalesce('Competitors: ' + nullif(convert(nvarchar(max),cc.competitors), '') + '&lt;br/>', '')
+ coalesce('Culture / Perks: ' + nullif(convert(nvarchar(max),cc.culture), '') + '&lt;br/>', '')
--+ coalesce('Last Note: ' + nullif(convert(nvarchar(max),cc.dateLastComment), '') + '&lt;br/>', '')
+ coalesce('Date Last Modified: ' + nullif(convert(nvarchar(max),v.dateLastModified), '') + '&lt;br/>', '')
--+ coalesce('Last Visit: ' + nullif(convert(nvarchar(max),cc.dateLastVisit), '') + '&lt;br/>', '')
+ coalesce('Standard Fee Arrangement (%): ' + nullif(convert(nvarchar(max),cc.feeArrangement), '') + '&lt;br/>', '')
+ coalesce('Funding Status: ' + nullif(convert(nvarchar(max),cc.funding), '') + '&lt;br/>', '')
+ coalesce('Industry (Free text): ' + nullif(convert(nvarchar(max),cc.industryList), '') + '&lt;br/>', '')
+ coalesce('Invoice Format Information: ' + nullif(convert(nvarchar(max),cc.invoiceFormat), '') + '&lt;br/>', '')
       --+ coalesce('Company Notes: ' + nullif(convert(nvarchar(max),cc.notes), '') + '&lt;br/>', '')
--+ coalesce('# Contacts: ' + nullif(convert(nvarchar(max),cc.numContacts), '') + '&lt;br/>', '')
+ coalesce('# of Offices: ' + nullif(convert(nvarchar(max),cc.numOffices), '') + '&lt;br/>', '')
+ coalesce('Revenue: ' + nullif(convert(nvarchar(max),cc.revenue), '') + '&lt;br/>', '')
--+ coalesce('Credential Requirements: ' + nullif(convert(nvarchar(max),cc.requirementCertificationID), '') + '&lt;br/>', '') --select * from bullhorn1.BH_ClientCorporationRequirement;
+ coalesce('Status: ' + nullif(convert(nvarchar(max),cc.status), '') + '&lt;br/>', '')
+ coalesce('Tax %: ' + nullif(convert(nvarchar(max),cc.taxRate), '') + '&lt;br/>', '')
--+ coalesce('Territory: ' + nullif(convert(nvarchar(max),cc.territoryID), '') + '&lt;br/>', '')
+ coalesce('Ticker Symbol: ' + nullif(convert(nvarchar(max),cc.tickerSymbol), '') + '&lt;br/>', '')
+ coalesce('Track Title: ' + nullif(convert(nvarchar(max),cc.trackTitle), '') + '&lt;br/>', '')
+ coalesce('Twitter Handle: ' + nullif(convert(nvarchar(max),cc.twitterHandle), '') + '&lt;br/>', '')
--+ coalesce('Last Note: ' + nullif(convert(nvarchar(max),cc.userCommentID), '') + '&lt;br/>', '')
+ coalesce('Credit Check Completed: ' + nullif(convert(nvarchar(max),cc.workWeekStart), '') + '&lt;br/>', '')
+ coalesce('Year Founded: ' + nullif(convert(nvarchar(max),cc.dateFounded), '') + '&lt;br/>', '')


--	         coalesce('BH Company ID: ' + nullif(cast(CC.clientCorporationID as varchar(max)), '') + char(10), '')
--              + coalesce('Business Sector: ' + nullif(cast(CC.businessSectorList as nvarchar(max)), '') + char(10), '')
--              + coalesce('Competitors: ' + nullif(cast(CC.competitors as nvarchar(max)), '') + char(10), '')
--              + coalesce('Culture: ' + nullif(cast(CC.culture as nvarchar(max)), '') + char(10), '')
--              + coalesce('Date Added: ' + nullif(cast(CC.dateAdded as nvarchar(max)), '') + char(10), '')

--              + coalesce('Facebook: ' + nullif(cast(CC.facebookProfileName as nvarchar(max)), '') + char(10), '')
--              + coalesce('Fax: ' + nullif(cast(CC.fax as nvarchar(max)), '') + char(10), '')
--              + coalesce('Industry: ' + nullif(cast(CC.industryList as nvarchar(max)), '') + char(10), '')         
--              + coalesce('Invoice Format: ' + nullif(cast(CC.invoiceFormat as nvarchar(max)), '') + char(10), '')
--              + coalesce('LinkedIn: ' + nullif(cast(CC.linkedinProfileName as nvarchar(max)), '') + char(10), '')
--              + coalesce('No. of Employees: ' + nullif(cast(CC.numEmployees as nvarchar(max)), '') + char(10), '')
--              + coalesce('# of Offices: ' + nullif(cast(CC.numOffices as nvarchar(max)), '') + char(10), '')
----              + coalesce('Opportunities: ' + nullif(cast(CC.opportunityTable as nvarchar(max)), '') + char(10), '')
--              + coalesce('Ownership: ' + nullif(cast(CC.Ownership as nvarchar(max)), '') + char(10), '')
--              + coalesce('Parent Company: ' + nullif(cast(headquarter.name as nvarchar(max)), '') + char(10), '')            
--              + coalesce('Revenue: ' + nullif(cast(CC.revenue as nvarchar(max)), '') + char(10), '')
--              + coalesce('Standard Fee Arrangement %: ' + nullif(cast(CC.feeArrangement as nvarchar(max)), '') + char(10), '')
--              + coalesce('Status: ' + nullif(cast(CC.status as nvarchar(max)), '') + char(10), '')
--              + coalesce('System Date Added: ' + nullif(convert(nvarchar(10),CC.dateAdded,120), '') + char(10), '')
--              + coalesce('Twitter: ' + nullif(cast(CC.twitterHandle as nvarchar(max)), '') + char(10), '')
--              + coalesce('Year Founded: ' + nullif(convert(nvarchar(4),CC.dateFounded,120), '') + char(10), '')

--              + coalesce('Billing Contact: ' + nullif(cast(CC.billingContact as nvarchar(max)), '') + char(10), '')
--              + coalesce('Billing Address 1: ' + nullif(cast(CC.billingAddress1 as nvarchar(max)), '') + char(10), '')
--              + coalesce('Billing Address 2: ' + nullif(cast(CC.billingAddress2 as nvarchar(max)), '') + char(10), '')
--              + coalesce('Billing City: ' + nullif(cast(CC.billingCity as nvarchar(max)), '') + char(10), '')
--              + coalesce('Billing State: ' + nullif(cast(CC.billingState as nvarchar(max)), '') + char(10), '')
--              + coalesce('Billing Post Code: ' + nullif(cast(CC.billingZip as nvarchar(max)), '') + char(10), '')
----              + coalesce('Billing Country: ' + nullif(cast(tc.country as nvarchar(max)), '') + char(10), '')
--              + coalesce('Billing Frequency: ' + nullif(cast(CC.billingFrequency as nvarchar(max)), '') + char(10), '')
--              + coalesce('Billing Phone: ' + nullif(cast(CC.billingPhone as nvarchar(max)), '') + char(10), '')
              + coalesce('Company Description: ' + char(10) + nullif(cast(CC.companyDescription as nvarchar(max)), '') + char(10), '')
              + coalesce('Company Notes: ' + char(10) + nullif([bullhorn1].[fn_ConvertHTMLToText](CC.notes), '') + char(10), '') --Company Overview
              , 1, 0, '')
        ) as note
       -- select  top 10 * -- select companyDescription
        from bullhorn1.BH_ClientCorporation CC --where CC.clientCorporationID = 255
        --left join headquarter on headquarter.parentClientCorporationID =  CC.clientCorporationID
        left join headquarter on headquarter.clientCorporationID =  CC.clientCorporationID
        left join (select clientCorporationID, name from bullhorn1.BH_ClientCorporation) pc on pc.clientCorporationID = CC.clientCorporationID
        left join bullhorn1.View_ClientCorporationLastModified v on v.ClientCorporationID = CC.clientCorporationID
--        left join tmp_country tc ON CC.customText11 = tc.code
        ) --where CC.customText11 is not null )
--select top 10 * from note
--select clientCorporationID,[dbo].[fn_ConvertHTMLToText](note) from note where clientCorporationID = 255 --where note like '%&amp;%;%'
--select clientCorporationID, replace(replace(replace(replace(replace(note.note,'&amp;nbsp;',''),'&amp;amp;','&amp;'),'&amp;#39;',''''),'&amp;lsquo;','"'),'&amp;rsquo;','') as 'company-note' from note where note like '%Company Description%'



select --top 3
         convert(varchar(1000),CC.clientCorporationID) as 'company-externalId'
       , iif(dup.rn > 1,concat(dup.name,' ',dup.rn), iif(dup.name in (null,''),'No CompanyName',dup.name)) as 'company-name'
       , headquarter.parent_companyid --, headquarter.parent_name as 'company-headquarter'
       , trim(stuff( coalesce(' ' + nullif(trim(CC.address1), ''), '') + coalesce(', ' + nullif(trim(CC.address2), ''), '') + coalesce(', ' + nullif(trim(CC.city), ''), '') + coalesce(', ' + nullif(trim(CC.state), ''), '') + coalesce(', ' + nullif(trim(CC.zip), ''), '') + coalesce(', ' + nullif(tc.country, ''), '') , 1, 1, '')) as 'company-locationAddress'  --coalesce(nullif(CC.address1, ''), CC.name) + coalesce(', ' + nullif(CC.address2, ''), '') + coalesce(nullif(CC.address2, ''), CC.name)
--       , trim(stuff( coalesce(', ' + nullif(CC.city, ''), '') + coalesce(', ' + nullif(CC.state, ''), '') + coalesce(', ' + nullif(tc.country, ''), '') , 1, 1, '') ) as 'company-locationName'  --coalesce(nullif(CC.address1, ''), CC.name) + coalesce(' ' + nullif(CC.address1, ''), '') + coalesce(', ' + nullif(CC.address2, ''), '')
       , trim(CC.city) as 'company-locationCity'
       , trim(CC.state) as 'company-locationState'
       , trim(CC.zip) as 'company-locationZipCode'
       , tc.abbreviation as 'company-locationCountry'
       , trim(CC.phone) as 'company-phone'
       , trim(CC.phone) as 'company-switchboard'
       , trim(CC.fax) as 'company-fax'
       , LEFT(CC.companyURL, 100) as 'company-website' --[limitted by 100 characters]

       , note.note as 'company-note'

       , CC.dateadded as 'registration date'       
       , trim(CC.facebookProfileName) as 'Facebook'
       , trim(CC.linkedinProfileName) as 'LinkedIn'
       , CC.numEmployees as 'No. of Employees'
       , CC.businessSectorList as 'Industry' --, businessSectorList.

-- owner
, VCAO2.owners --, owner.owners as 'owners'
, 0 as 'owners-super_user'
, getdate() as 'owners-insert_timestamp'
, 1 as 'owners-locked_user'
, 'en' as 'owners-language'

-- document
       , doc.ResumeId as 'company-document'
, 'COMPANY' as entity_type
, 'legal_document' as document_type
, 0 as default_file
--, as 'owners-first_name'
, ' ' as 'owners-last_name'
-- billing location
       , trim(CC.billingAddress1) as billingAddress1
       , trim(CC.billingAddress1) as billingAddress1
       , trim(CC.billingAddress1) as billingAddress1
       , trim(CC.billingContact) as billingContact
       , CC.billingCountryID as billingCountryID
       , trim(CC.billingFrequency) as billingFrequency
, stuff( 
	  coalesce('Contact: ' + nullif(trim(CC.billingContact) + char(10), ''), '') 
	+ coalesce('Frequency: ' + nullif(trim(CC.billingFrequency), ''), '')
	, 1, 0, '') as 'billing_note'
       , trim(CC.billingPhone) as billing_phone_number
       , trim(CC.billingState) as billingState
       , trim(CC.billingZip) as billingZip
      , trim(left(concat_ws(', ', nullif(trim(billingAddress1),''), nullif(trim(billingAddress2),''), nullif(trim(cc.billingCity),''), nullif(trim(cc.billingState),''), nullif(trim(cc.billingZip),''), nullif(tc.COUNTRY,'')),300)) as billing_locationName
      , trim(left(concat_ws(', ', nullif(trim(billingAddress1),''), nullif(trim(billingAddress2),''), nullif(trim(cc.billingCity),''), nullif(trim(cc.billingState),''), nullif(trim(cc.billingZip),''), nullif(tc.COUNTRY,'')),300)) as billing_locationAddress
      , trim(cc.billingCity) as billing_City
      , trim(cc.billingState) as billing_State
      , trim(cc.billingZip) as billing_post_code
      , trim(cc.billingPhone) as billing_Phone
      , tc.ABBREVIATION as billing_country_code
      , 'BILLING_ADDRESS' as billing_location_type
      , getdate() as billing_insert_timestamp


--select count (*) --560 -- select top 10 * -- select distinct CC.ownership
from bullhorn1.BH_ClientCorporation CC
--left join owner on owner.clientCorporationID = CC.clientCorporationID
left join VCAO2 on VCAO2.clientCorporationID = CC.clientCorporationID
left join tmp_country tc ON CC.countryID = tc.code
left join note on CC.clientCorporationID = note.clientCorporationID
left join doc on CC.clientCorporationID = doc.clientCorporationID
left join dup on CC.clientCorporationID = dup.clientCorporationID
left join headquarter on headquarter.clientCorporationID =  CC.clientCorporationID
--left join businessSectorList on businessSectorList.clientCorporationID =  CC.clientCorporationID
--where CC.status &lt;&gt; 'Archive'
--and headquarter.clientCorporationID is not null 
--and CC.ClientCorporationID in (32)
--where CC.NAME like '%THEQA%'

/*
select --top 100 
         CC.clientCorporationID as 'company-externalId'
        , CC.name as 'company-name'
        , CC.numEmployees
       ,  CC.industryList as 'Industry'
from bullhorn1.BH_ClientCorporation CC
where CC.numEmployees &lt;&gt; 0


select
         cc.clientCorporationID as CompanyExtId
       , left(concat_ws(', ', nullif(billingAddress1,''), nullif(billingAddress2,''), nullif(cc.billingCity,''), nullif(cc.billingState,''), nullif(cc.billingZip,''), nullif(tc.COUNTRY,'')),300) as locationName
       , left(concat_ws(', ', nullif(billingAddress1,''), nullif(billingAddress2,''), nullif(cc.billingCity,''), nullif(cc.billingState,''), nullif(cc.billingZip,''), nullif(tc.COUNTRY,'')),300) as locationAddress
       , cc.billingCity as city
       , cc.billingState as [state]
       , cc.billingZip as post_code
       , cc.billingPhone as phone_number
       , tc.ABBREVIATION as country_code
       , 'BILLING_ADDRESS' as location_type
       , getdate() as insert_timestamp
from bullhorn1.BH_ClientCorporation cc
left join tmp_country tc ON tc.code = CC.billingCountryID
where billingAddress1 &lt;&gt; '' or billingAddress2 &lt;&gt; '' or billingCountryID &lt;&gt; ''

*/
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>80</xloc>
      <yloc>64</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Concat Fields</name>
    <type>ConcatFields</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <separator> </separator>
    <enclosure/>
    <enclosure_forced>N</enclosure_forced>
    <enclosure_fix_disabled>N</enclosure_fix_disabled>
    <header>N</header>
    <footer>N</footer>
    <format>DOS</format>
    <compression>None</compression>
    <encoding/>
    <endedLine/>
    <fileNameInField>N</fileNameInField>
    <fileNameField/>
    <create_parent_folder>Y</create_parent_folder>
    <file>
      <name>file</name>
      <servlet_output>N</servlet_output>
      <do_not_open_new_file_init>N</do_not_open_new_file_init>
      <extention>txt</extention>
      <append>N</append>
      <split>N</split>
      <haspartno>N</haspartno>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <SpecifyFormat>N</SpecifyFormat>
      <date_time_format/>
      <add_to_result_filenames>Y</add_to_result_filenames>
      <pad>N</pad>
      <fast_dump>N</fast_dump>
      <splitevery>0</splitevery>
    </file>
    <fields>
      <field>
        <name>contact.client_first_name</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>contact.client_last_name</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
    </fields>
    <ConcatFields>
      <targetFieldName>contact.client_contact_name</targetFieldName>
      <targetFieldLength>0</targetFieldLength>
      <removeSelectedFields>N</removeSelectedFields>
    </ConcatFields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>7360</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact - STAGE</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select Cl.clientID as 'contact-externalId', Cl.userID as '#UserID'
       , iif(UC.clientCorporationID in (select clientCorporationID from bullhorn1.BH_ClientCorporation /*where status &lt;&gt; 'Archive'*/), convert(varchar(max),UC.clientCorporationID), 'default' ) as 'contact-companyId' --, UC.clientCorporationID as 'contact-companyId'
       , case when (trim(replace(UC.firstName,'?','')) = '' or  UC.firstName is null) then 'Firstname'
              else stuff( coalesce('' + NULLIF( trim(UC.nameSuffix), ''), '') + coalesce('' + NULLIF( replace(trim(UC.firstName),'?',''), '') , '') , 1, 0, '')
              end as 'contact-firstName', UC.nameSuffix
       , UC.middleName as 'contact-middleName'
       , case when (ltrim(replace(UC.lastName,'?','')) = '' or  UC.lastName is null) then concat('Lastname-',Cl.clientID) else ltrim(replace(UC.lastName,'?','')) end as 'contact-Lastname'
       , case 
              when cc.status = 'Prospect' then 1      -- = PROSPECT COMPANIES CHEVRON > Pending stage
              when cc.status = 'DNC' then 1           -- = PROSPECT COMPANIES CHEVRON > Negative stage (RED)
              when cc.status = 'Archive' then 1       -- = PROSPECT COMPANIES CHEVRON > Negative stage (RED)
              when cc.status = 'Passive Account' then 2      -- = QUALIFIED COMPANIES CHEVRON > Pending stage
              when cc.status = 'Qualifying' then 2           -- = QUALIFIED COMPANIES CHEVRON > Pending stage
              when cc.status = 'Active Account' then 4       -- = CUSTOMER COMPANIES CHEVRON
              end as board
       , case 
              when cc.status = 'Prospect' then 1      -- = PROSPECT COMPANIES CHEVRON > Pending stage
              when cc.status = 'DNC' then 2           -- = PROSPECT COMPANIES CHEVRON > Negative stage (RED)
              when cc.status = 'Archive' then 2       -- = PROSPECT COMPANIES CHEVRON > Negative stage (RED)
              when cc.status = 'Passive Account' then 1      -- = QUALIFIED COMPANIES CHEVRON > Pending stage
              when cc.status = 'Qualifying' then 1           -- = QUALIFIED COMPANIES CHEVRON > Pending stage
              when cc.status = 'Active Account' then 0       -- = CUSTOMER COMPANIES CHEVRON                     
              end as status
from bullhorn1.BH_Client Cl --where isPrimaryOwner = 1
left join bullhorn1.BH_UserContact UC ON Cl.userID = UC.userID --UC.clientCorporationID = CC.clientCorporationID
left join bullhorn1.BH_ClientCorporation CC on CC.clientCorporationID = UC.clientCorporationID
where cc.status is not null and cc.status &lt;&gt; ''
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1424</xloc>
      <yloc>928</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact - deleted_timestamp</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
select cl.clientID as 'contact-externalId', cl.dateadded from bullhorn1.BH_Client cl left join  bullhorn1.View_ClientContact vcc on cl.clientid = vcc.clientid where vcc.clientid is null</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1424</xloc>
      <yloc>1056</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>pd.client_contact_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>first_name</name>
        <rename>contact.client_first_name</rename>
        <default/>
        <type>String</type>
      </value>
      <value>
        <name>last_name</name>
        <rename>contact.client_last_name</rename>
        <default/>
        <type>String</type>
      </value>
      <value>
        <name>department</name>
        <rename>contact.client_department</rename>
        <default/>
        <type>String</type>
      </value>
      <value>
        <name>id</name>
        <rename>contact.client_contact_id</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>7264</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact Comment</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <schema>public</schema>
    <table>activity</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>N</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field>contactid</partitioning_field>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
      <field>
        <column_name>contact_id</column_name>
        <stream_name>actual_contactid</stream_name>
      </field>
      <field>
        <column_name>user_account_id</column_name>
        <stream_name>final_user_account_id</stream_name>
      </field>
      <field>
        <column_name>insert_timestamp</column_name>
        <stream_name>insert_timestamp</stream_name>
      </field>
      <field>
        <column_name>content</column_name>
        <stream_name>content</stream_name>
      </field>
      <field>
        <column_name>type</column_name>
        <stream_name>type</stream_name>
      </field>
      <field>
        <column_name>category</column_name>
        <stream_name>category</stream_name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1232</xloc>
      <yloc>656</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact Comment - br</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
with comments as (
       select 
                 Cl.clientID as 'contact_id' --, UC.userID, concat(UC1.firstName,' ',UC1.lastName) as fullname
               , UC.dateAdded
               , UC1.email as user_account_id
               , Stuff('COMMENT: ' + '&lt;br/>'
                     + Coalesce('Created Date: ' + NULLIF(convert(varchar,UC.dateAdded,120), '') + '&lt;br/>', '')
                     + Coalesce('Author: ' + NULLIF(U.name, '') + '&lt;br/>', '')
                     + Coalesce('Action: ' + NULLIF(UC.action, '') + '&lt;br/>', '')
                     + Coalesce('Comments: ' + NULLIF(cast(UC.comments as nvarchar(max)), '') + '&lt;br/>', '')
               , 1, 0, '') as 'content'
       -- select top 100 *
       from bullhorn1.BH_UserComment UC
       left join bullhorn1.BH_Client Cl on Cl.userID = UC.userID
       left join bullhorn1.BH_UserContact UC1 ON Cl.userID = UC1.userID
       left join bullhorn1.BH_User U on U.userID = UC.commentingUserID
       where Cl.clientID is not null and (Cl.isdeleted &lt;&gt; 1) -- and Cl.status &lt;&gt; 'Archive')

UNION ALL

       SELECT --top 20 
                Cl.clientID as 'contact_id' --,concat(UC1.firstName,' ',UC1.lastName) as fullname
              , a.dateAdded
              , UC3.email as user_account_id
              , Stuff('APPOINTMENT: ' + '&lt;br/>'
                    + Coalesce('Contact: ' + NULLIF(cast(concat(UC1.FirstName,' ',UC1.LastName,'     ',UC1.email) as nvarchar(max)), '') + '&lt;br/>', '') --a.clientUserID 
                    + Coalesce('Candidate: ' + NULLIF(cast( concat(UC2.FirstName,' ',UC2.LastName,'     ',UC2.email) as nvarchar(max)), '') + '&lt;br/>', '') --a.candidateUserID 
                    + Coalesce('Job: ' + NULLIF(cast(j.title as nvarchar(max)), '') + '&lt;br/>', '') --jobPostingID
                    + coalesce('Communication Method: ' + NULLIF(convert(nvarchar(max),a.communicationMethod), '') + '&lt;br/>', '')
                    + Coalesce('Date Begin: ' + NULLIF(cast(a.dateBegin as nvarchar(max)), '') + '&lt;br/>', '')
                    + coalesce('Date End: ' + NULLIF(convert(nvarchar(max),a.dateEnd), '') + '&lt;br/>', '')
                    + coalesce('Type: ' + NULLIF(convert(nvarchar(max),a.type), '') + '&lt;br/>', '') --CA.activePlacements
                    + coalesce('Subject: ' + NULLIF(convert(nvarchar(max),a.subject), '') + '&lt;br/>', '')
                    + coalesce('Reminder: ' + NULLIF(convert(nvarchar(max),a.notificationMinutes), '') + '&lt;br/>', '')
                    + coalesce('Opportunity: ' + NULLIF(convert(nvarchar(max),j2.title), '') + '&lt;br/>', '')
                    + coalesce('Location: ' + NULLIF(convert(nvarchar(max),a.location), '') + '&lt;br/>', '')
                    + coalesce('Description: ' + NULLIF( convert(nvarchar(max),a.description), '') + '&lt;br/>', '')
                    + coalesce('File Name: ' + NULLIF(convert(nvarchar(max),af.name), '') + '&lt;br/>', '')
                    + coalesce('Owner: ' + NULLIF(cast( concat(UC3.FirstName,' ',UC3.LastName,'     ',UC3.email) as nvarchar(max)), '') + '&lt;br/>', '')
                    + coalesce('Lead: ' + NULLIF(cast( concat(UC4.FirstName,' ',UC4.LastName,'     ',UC4.email) as nvarchar(max)), '') + '&lt;br/>', '')
              , 1, 0, '') as 'content' 
       -- select top 100 * -- select count(*) --2062
       from bullhorn1.View_Appointment a
       left join bullhorn1.View_AppointmentFile af on af.appointmentID = a.appointmentID
       left join bullhorn1.BH_Client Cl on Cl.userID = a.ClientUserID
       left join bullhorn1.BH_UserContact UC1 ON UC1.userID = Cl.userID
       left join bullhorn1.BH_UserContact UC2 ON UC2.userID = a.candidateUserID
       left join bullhorn1.BH_UserContact UC3 ON UC3.userID = a.userID
       left join bullhorn1.BH_UserContact UC4 ON UC4.userID = a.LeaduserID
       left join bullhorn1.BH_JobPosting j on j.jobPostingID = a.jobPostingID
       left join bullhorn1.BH_JobPosting j2 on j.jobPostingID = a.opportunityJobPostingID
       where Cl.clientID is not null and (Cl.isdeleted &lt;&gt; 1) -- and Cl.status &lt;&gt; 'Archive')

UNION ALL

       SELECT ---top 20 
                Cl.clientID as 'contact_id' --,concat(UC1.firstName,' ',UC1.lastName) as fullname
              , a.dateAdded
              , UC4.email as user_account_id
              , Stuff('TASK: ' + '&lt;br/>'
                     + Coalesce('Candidate: ' + NULLIF(cast( concat(UC2.FirstName,' ',UC2.LastName,'     ',UC2.email) as nvarchar(max)), '') + '&lt;br/>', '') --a.candidateUserID 
                     --+ Coalesce('Assigned To: ' + NULLIF(cast(a.childTaskOwners as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Contact: ' + NULLIF(cast(concat(UC1.FirstName,' ',UC1.LastName,'     ',UC1.email) as nvarchar(max)), '') + '&lt;br/>', '') --a.clientUserID 
                     + Coalesce('Due Date And Time: ' + NULLIF(cast(a.dateBegin as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Date End: ' + NULLIF(cast(a.dateEnd as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Description: ' + NULLIF(cast( a.description as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Job: ' + NULLIF(cast(j.title as nvarchar(max)), '') + '&lt;br/>', '') --jobPostingID
                     + Coalesce('Lead: ' + NULLIF(cast( concat(UC3.FirstName,' ',UC3.LastName,'     ',UC3.email) as nvarchar(max)), '') + '&lt;br/>', '') --a.leadUserID
                     + Coalesce('Reminder: ' + NULLIF(cast(a.notificationMinutes as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Opportunity: ' + NULLIF(cast(a.opportunityJobPostingID as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Placement: ' + NULLIF(cast(a.placementID as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Priority: ' + NULLIF(cast(a.priority as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Subject: ' + NULLIF(cast(a.subject as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Type: ' + NULLIF(cast(a.type as nvarchar(max)), '') + '&lt;br/>', '')
                     + Coalesce('Owner: ' + NULLIF(cast( concat(UC4.FirstName,' ',UC4.LastName,'     ',UC4.email) as nvarchar(max)), '') + '&lt;br/>', '') --a.userID
                        , 1, 0, '') as 'content' 
        -- select top 100 * -- select count(*) --24
        from bullhorn1.View_Task a
        left join bullhorn1.BH_Client Cl on Cl.userID = a.ClientUserID
        left join bullhorn1.BH_UserContact UC1 ON Cl.userID = UC1.userID
        left join bullhorn1.BH_UserContact UC2 ON a.candidateUserID = UC2.userID
        left join bullhorn1.BH_JobPosting j on j.jobPostingID = a.jobPostingID
        left join bullhorn1.BH_UserContact UC3 ON a.leadUserID = UC3.userID
        left join bullhorn1.BH_UserContact UC4 ON a.userID = UC4.userID
        where Cl.clientID is not null and (Cl.isdeleted &lt;&gt; 1) -- and Cl.status &lt;&gt; 'Archive')
)
--select count(*) from comments where content &lt;&gt; '' --12428
--select top 10 * from bullhorn1.BH_Client 
--select count(*) from comments where contact_id is not null
--select * from comments where contact_id is not null and contact_id in (4054,7102) --538216 > 563579


select --top 100
         contact_id
       , user_account_id --, cast('-10' as int) as 'user_account_id'
       , 'comment' as 'category'
       , 'contact' as 'type'
       , dateAdded as 'insert_timestamp'
       --, [dbo].[udf_StripHTML](content) as 'content'
       , [dbo].[RemoveNullCharacters]( 
            replace(replace(replace(replace(replace(replace(
			replace(
			[bullhorn1].[fn_ConvertHTMLToText](content)
			,'Â',''),'Â·',''),'v\:* {behavior:url(#default#VML);}',''),'o\:* {behavior:url(#default#VML);}',''),'w\:* {behavior:url(#default#VML);}',''),'.shape {behavior:url(#default#VML);}','')
			,char(10),'&lt;br/>')
			) as 'content'
       --, '20200202' as tmp
from comments --where 'content' &lt;&gt; '' 
--and contact_id = 326 
--or fullname like '%Philip%'
--where dateAdded >= '2020-01-01 00:00:00'
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1696</xloc>
      <yloc>656</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact Default</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
with
--JOB DUPLICATION REGCONITION
job0 as (
       select
                a.jobPostingID
              , a.dateadded
              , iif(a.title is not null and a.title &lt;&gt; '', trim(a.title), 'No JobTitle') as title
              , convert(varchar(10),a.startDate,120) as startDate
              , iif(a.clientcorporationid is null or a.clientcorporationid = '', 'default', a.clientcorporationid) as 'Company_externalID', cc.name as 'CompanyName' --COMPANY
              , iif(company.contact_externalId is null or convert(varchar(500),company.contact_externalId) = '', 'default', convert(varchar(500),company.contact_externalId)) as 'contact_externalId', a.clientUserID as 'ContactUserID', uc.firstname as 'Contact_firstname', uc.lastname as 'Contact_lastname'--, uc.isdeleted as '#Contact_isdeleted', uc.status as '#Contact_status'              

              , company.[contact_companyId] as 'Company_externalID_of_ContactUserID'
              , company.company_name as 'CompanyName_of_ContactUserID'
       -- select count(*)                            
       from bullhorn1.BH_JobPosting a
       left join bullhorn1.BH_UserContact UC on a.clientUserID = UC.userID
       left JOIN ( select clientCorporationID, name, status from bullhorn1.BH_ClientCorporation CC /*where CC.status &lt;&gt; 'Archive'*/) cc ON cc.clientCorporationID = a.clientcorporationid
       left join (
              select * 
              from (
                     select
                              Cl.clientID as 'contact_externalId', Cl.userID as 'UserID'
                            , UC.clientCorporationID as 'contact_companyId'
                            , com.name as 'company_name'
                            , ROW_NUMBER() OVER(PARTITION BY Cl.UserID, UC.clientCorporationID, com.name ORDER BY Cl.clientID desc) AS rn 
                     -- select *
                     from bullhorn1.BH_Client Cl
                     left join (select distinct userID,clientCorporationID from bullhorn1.BH_UserContact) UC ON Cl.userID = UC.userID
                     left join (select clientCorporationID, name from bullhorn1.BH_ClientCorporation /*where status &lt;&gt; 'Archive'*/) com on com.clientCorporationID = UC.clientCorporationID
                     where (Cl.isdeleted &lt;&gt; 1 /*and Cl.status &lt;&gt; 'Archive'*/) --and Cl.userID in (579,605)
              ) n where rn = 1
              ) company on company.userID = a.clientUserID
       where (a.isdeleted &lt;&gt; 1 /*and a.status &lt;&gt; 'Archive'*/) --and company.rn = 1
       --and a.clientcorporationid in (51)       
       --and a.jobPostingID in (18,19,20)
)
, job (jobPostingID, dateadded, title, starDate, final_company_externalID, CompanyName, contact_externalId, final_contact_externalId, ContactUserID, Contact_firstname, Contact_lastname, Company_externalID_of_ContactUserID, CompanyName_of_ContactUserID, rn) as (
	SELECT  jobPostingID
	       , dateadded
		, title
		, startDate
       --COMPANY
		, Company_externalID as 'final_company_externalID', CompanyName
       --CONTACT
		, contact_externalId
		, case
		     when Company_externalID = Company_externalID_of_ContactUserID  then iif(contact_externalId is null or contact_externalId = '', concat('default',convert(varchar(5000),Company_externalID)), convert(varchar(5000),contact_externalId) )
		     when Company_externalID &lt;&gt; Company_externalID_of_ContactUserID then concat('default',convert(varchar(5000),Company_externalID)) -- NEW
		     --when Company_externalID &lt;&gt; Company_externalID_of_ContactUserID then iif(contact_externalId is null or contact_externalId = '', concat('default',convert(varchar(5000),Company_externalID)), concat('default',convert(varchar(5000),Company_externalID),'.',convert(varchar(5000),contact_externalId)) ) -- OLD
		     end as 'final_contact_externalId'
		, ContactUserID, Contact_firstname, Contact_lastname
              , Company_externalID_of_ContactUserID
              , CompanyName_of_ContactUserID
		, ROW_NUMBER() OVER(PARTITION BY contact_externalId,title,startDate ORDER BY jobPostingID) AS rn 
	from job0
	--where Company_externalID = Company_externalID_of_ContactUserID
	)
--select * from job where jobPostingID in (36)


-- >>> CREATE DEFAULT CONTACT LIST FOR JOB &lt;&lt;&lt; ---
--select distinct final_company_externalID as 'contact-companyId', final_contact_externalId as 'contact-externalId'
--	, 'Default' as 'contact-firstname', 'Contact' as 'contact-lastname', convert(datetime,'1900-01-01 00:00:00') as 'insert_timestamp'
--from job where final_contact_externalId like 'default%' order by final_company_externalID desc

select distinct final_company_externalID as 'contact-companyId', iif(final_contact_externalId is null, concat('default',final_company_externalID), convert(varchar(5000),final_contact_externalId)) as 'contact-externalId'
	, 'Default' as 'contact-firstname', 'Contact' as 'contact-lastname', convert(datetime,'1900-01-01 00:00:00') as 'insert_timestamp'
from job where final_contact_externalId is null or final_contact_externalId like 'default%' order by final_company_externalID desc

--select distinct final_company_externalID as 'contact-companyId', final_contact_externalId as 'contact-externalId', Contact_firstname as 'contact-firstname', Contact_lastname as 'contact-lastname' from job where final_contact_externalId like 'default%' order by final_company_externalID desc
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1712</xloc>
      <yloc>80</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact Distribution</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
select --concat('PR',c.clientID) as contactExtId
	  c.clientID as contactExtId
	, c.userID
	, d.groupname
	, d.name
	, getdate() as insert_timestamp

from bullhorn1.BH_Client c
left join bullhorn1.BH_DistributionListMember dm on dm.userID = c.userID
left join bullhorn1.BH_DistributionList d on d.distributionListID = dm.distributionListID
where d.name is not NULL
order by c.clientID

</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2112</xloc>
      <yloc>784</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact Distribution + TearSheet</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
with t as (
select 
	distinct name as GROUP_NAME
	, -10 as owner_id
	, 1 as share_permission
	, getdate() as insert_timestamp
	, lower(name) as tmp
from bullhorn1.[BH_DistributionList]

UNION

select 
	distinct name as GROUP_NAME
	, -10 as owner_id
	, 1 as share_permission
	, getdate() as insert_timestamp
	, lower(name) as tmp
from bullhorn1.BH_ShortList
)

select * from t order by GROUP_NAME
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4880</xloc>
      <yloc>208</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact Distribution 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
with
mail1 (ID,userID,email) as (
       select Cl.clientID, cl.userID
	, replace(translate(value, '!'':"&lt;&gt;[]();,+/\&amp;?•*|‘','                     '),char(9),'') as email --to translate special characters
	--from bullhorn1.BH_UserContact UC left join bullhorn1.Candidate C on C.userID = UC.UserID
	from bullhorn1.BH_Client Cl left join bullhorn1.BH_UserContact UC ON Cl.userID = UC.userID
	cross apply string_split( concat(UC.email,' ',UC.email2,' ',UC.email3) ,' ')
	where (UC.email like '%_@_%.__%' or UC.email2 like '%_@_%.__%' or UC.email3 like '%_@_%.__%') and Cl.isdeleted &lt;&gt; 1 --and Cl.status &lt;&gt; 'Archive'
	)
--select * from mail1 where userid = 2135
--select * from mail1 where email like 'lisa.webb@arcussearch.com'


, t2 as ( select email from mail1 where email &lt;&gt; '' group by email having count(*) > 1 )
--select * from t2 where email like 'lisa.webb@arcussearch.com'

, t3 as (
       select t1.*
       from mail1 t1
       inner join t2 on t1.email = t2.email
       where t2.email is not null
)
--select * from t3

select --concat('PR',c.clientID) as contactExtId
      c.clientID as contactExtId, UC.firstname, UC.lastname
    , c.userID
    , 'Duplicated' as name
    , getdate() as insert_timestamp
from bullhorn1.BH_Client c
left join bullhorn1.BH_UserContact UC ON C.userID = UC.userID
left join t3 on t3.ID = c.clientID
where t3.ID is not NULL

</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1696</xloc>
      <yloc>848</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact Distribution DB</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
select distinct 
	  name as GROUP_NAME
	, -10 as owner_id
	, 1 as share_permission
	, getdate() as insert_timestamp
from bullhorn1.[BH_DistributionList]
order by name

--total: 9</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2112</xloc>
      <yloc>720</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact Distribution DB 3</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
select
	  'Duplicated' as GROUP_NAME
	, -10 as owner_id
	, 1 as share_permission
	, getdate() as insert_timestamp
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1696</xloc>
      <yloc>784</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact Email Body - br</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
-- EMAIL BODY

 ---CREATE INSERT CANDIDATE_COMMENTS
with EmailBody as (
        --EMAIL OF CANDIDATE - RECEIVER
        select --top 100
                  ca.clientID, ca.userid
                , um.userMessageID,um.sendingUserID,um.subject, um.externalFrom
                , um.comments
                , um.email_content as email_content
                , convert(nvarchar(max),um.externalTo) as externalTo, convert(nvarchar(max),um.externalCC) as externalCC, convert(nvarchar(max),um.externalBCC) as externalBCC, um.SMTPSendDate
                --mr.userID,mr.folder,mr.recipientType, mr.email, mr.sendingUserID, mr.subjectSort
                --,mr.userID,mr.folder,mr.recipientType, mr.email, mr.externalFrom
                ,umf.att --,umf.name, umf.directory
        -- select count(*) -- select top 300 *
        from bullhorn1.BH_UserMessage um
        left join bullhorn1.BH_MessageRecipient mr on mr.userMessageID = um.userMessageID
        --left join bullhorn1.BH_UserMessageFile umf on umf.userMessageID = um.userMessageID
        left join (SELECT userMessageID, STRING_AGG(cast(name as nvarchar(max)),',' ) WITHIN GROUP (ORDER BY name) att from bullhorn1.BH_UserMessageFile GROUP BY userMessageID) umf on umf.userMessageID = um.userMessageID
        left join bullhorn1.BH_Client ca on ca.userid = mr.userid
        where mr.isDeleted = 0 and mr.isSpam = 0 and ca.userid is not null and ca.isdeleted &lt;&gt; 1 --and ca.status &lt;&gt; 'Archive'
        --and um.comments is not null and convert(varchar(max),um.comments) &lt;&gt; '' 
        --and ca.clientID in (4054)     
        --and convert(nvarchar(max),um.externalCC) != '' and um.externalCC is not null and convert(nvarchar(max),um.externalBCC) != '' and um.externalBCC is not null
UNION ALL
        --EMAIL OF CANDIDATE - SENDER
        select --top 100
                  ca.clientID, ca.userid
                , um.userMessageID,um.sendingUserID,um.subject,um.externalFrom
                , um.comments
                , um.email_content as email_content
                ,convert(nvarchar(max),um.externalTo) as externalTo, convert(nvarchar(max),um.externalCC) as externalCC, convert(nvarchar(max),um.externalBCC) as externalBCC, um.SMTPSendDate
                --mr.userID,mr.folder,mr.recipientType, mr.email, mr.sendingUserID, mr.subjectSort
                --,mr.userID,mr.folder,mr.recipientType, mr.email, mr.externalFrom
                ,umf.att --,umf.name, umf.directory
        -- select count(*)
        from bullhorn1.BH_UserMessage um
        left join bullhorn1.BH_MessageRecipient mr on mr.userMessageID = um.userMessageID
        --left join bullhorn1.BH_UserMessageFile umf on umf.userMessageID = um.userMessageID
        --left join (SELECT userMessageID, STUFF((SELECT ', ' + name from bullhorn1.BH_UserMessageFile WHERE userMessageID = a.userMessageID order by name asc FOR XML PATH (''), TYPE).value('.', 'nvarchar(MAX)'), 1, 1, '') AS att FROM bullhorn1.BH_UserMessageFile AS a GROUP BY a.userMessageID ) umf on umf.userMessageID = um.userMessageID
        left join (SELECT userMessageID, STRING_AGG(cast(name as nvarchar(max)),',' ) WITHIN GROUP (ORDER BY name) att from bullhorn1.BH_UserMessageFile GROUP BY userMessageID) umf on umf.userMessageID = um.userMessageID
        left join bullhorn1.BH_Client ca on ca.userid = um.sendingUserID
        where um.isSenderDeleted = 0 and ca.userid is not null and ca.isdeleted &lt;&gt; 1 --and ca.status &lt;&gt; 'Archive'
        --and convert(nvarchar(max),um.comments) &lt;&gt; ''
        --and ca.clientID in (4054)
)
/*
select top 10 clientID, smtpsenddate, count(*)
from EmailBody
group by clientID, smtpsenddate
having count(*) > 5
*/

/*, dup (clientID,SMTPSendDate,rn) as ( SELECT clientID, SMTPSendDate, rn = ROW_NUMBER() OVER (PARTITION BY clientID,SMTPSendDate ORDER BY clientID desc) FROM EmailBody )
select * from dup where clientID = 1074 and rn > 1--and cast(SMTPSendDate as varchar(max)) like '%28/01/2016%'*/

/* select * from EmailBody where candidateid = 33
candidateid between 124602 and 128601 
candidateid between 5 and 90000 -> 13388
candidateid between 90001 and 12000 -> 0
candidateid between 12000 and 122601 -> 45813
candidateid between 122602 and 124601 -> 21439
candidateid between 124602 and 128601 -> 25914

select candidateid, concat('insert into position_candidate_feedback (candidate_id, user_account_id, feedback_timestamp, comment_body, feedback_score, insert_timestamp, contact_method, json_relate_info, related_status) values ( 
        (select id from candidate where external_id = ''',candidateid,'''), ',-10,', now(), ''',replace(concat('Date Created: ',convert(varchar,SMTPSendDate,120),char(10),'From: ',externalFrom,char(10),'To: ',externalTo,char(10),'CC: ',externalCC,char(10),'Subject: ',subject,char(10),char(10),'Content: ',comments),'''',''''''),''', 0, now(), 4, ''[]'', 1);') as EmailSQL
from EmailBody --where candidateid = 33
order by SMTPSendDate desc
*/

--select userMessageID from EmailBody
--select count(*) from EmailBody where userMessageID not in (select userMessageID from bullhorn1.email_m_ID) --747716 
--select userMessageID into bullhorn1.email_m_ID_import from EmailBody where userMessageID not in (select userMessageID from bullhorn1.email_m_ID)

--select top 100 * from EmailBody --where candidateid = 33

select --top 20
          userMessageID
        --, userid
        , clientID as 'contact_id'
        , cast('-10' as int) as 'user_account_id'
        , cast('4' as int) as 'contact_method'
        --, cast('1' as int) as 'related_status'
        , 'comment' as 'category'
        , 'contact' as 'type'
        , coalesce(NULLIF(convert(varchar(19), SMTPSendDate, 120),''), CURRENT_TIMESTAMP) as 'insert_timestamp'
        , [dbo].[RemoveNullCharacters]( --dbo.F_ReplaceNullChar(
              [dbo].[udf_StripHTML]( --[dbo].[fn_ConvertHTMLToText](
              replace(replace(replace(replace(replace(replace(
              Stuff('EMAIL: ' + '&lt;br/>'
                + Coalesce('From: ' + NULLIF(convert(nvarchar(max),externalFrom), '') + '&lt;br/>', '')
                + Coalesce('To: ' + NULLIF(convert(nvarchar(max),externalTo), '') + '&lt;br/>', '')
                + Coalesce('CC: ' + NULLIF(convert(nvarchar(max),externalCC), '') + '&lt;br/>', '')
                + Coalesce('BCC: ' + NULLIF(convert(nvarchar(max),externalBCC), '') + '&lt;br/>', '')
                + Coalesce('Subject: ' + NULLIF(convert(nvarchar(max),subject), '') + '&lt;br/>', '')
                + Coalesce('Body: ' + NULLIF( replace( convert(nvarchar(max),email_content) ,char(10),'&lt;br/>'), '') + '&lt;br/>', 'Body: ' + '&lt;br/>')
                + Coalesce('Comments: ' + NULLIF( replace( convert(nvarchar(max),comments) ,char(10),'&lt;br/>'), '') + '&lt;br/>', '')
                + Coalesce('Attachments: ' + NULLIF(convert(nvarchar(max),att), '') + '&lt;br/>', '')
              , 1, 0, '')
              ,'Â',''),'Â·',''),'v\:* {behavior:url(#default#VML);}',''),'o\:* {behavior:url(#default#VML);}',''),'w\:* {behavior:url(#default#VML);}',''),'.shape {behavior:url(#default#VML);}','')
              )
         )
         as 'content'
        --, email_content
        --, umf.name             --ATTACHMENTS
        --, umf.directory        --PATHS STORE ATTACHMENTS
from EmailBody
--where userMessageID not in (select userMessageID from bullhorn1.email_m_ID)
--where userMessageID in (3052313,3052246,3050605) --3050605
--where userMessageID > 3052233 --3052313 --3052246--3050605
--and userMessageID &lt; 3652959 --3652966 --3652969
--order by userMessageID desc
--order by userMessageID desc
--where comments &lt;&gt; ''
--where candidateID = 2001
--where userid in (5487)
--where clientID in (5332)


-- select top 100 userMessageID, email_content from bullhorn1.bh_usermessage where userMessageID in (3054420)
    
/*
SELECT SYSDATETIME()  
    ,SYSDATETIMEOFFSET()  
    ,SYSUTCDATETIME()  
    ,CURRENT_TIMESTAMP  
    ,GETDATE()  
    ,GETUTCDATE();  

--CREATE DUPLICATE TABLE
CREATE TABLE EmailSQL2
(
  candidate_id integer,
  user_account_id integer,
  feedback_timestamp timestamp without time zone,
  comment_body character varying NOT NULL,
  feedback_score double precision,
  insert_timestamp timestamp without time zone,
  contact_method integer,
  json_relate_info text,
  related_status smallint);
  
CREATE TABLE EMAILSQL (
candidateid int,
EmailSQL text);
*/</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1696</xloc>
      <yloc>720</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact Emails Comment</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <schema>public</schema>
    <table>activity</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>N</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field>contactid</partitioning_field>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
      <field>
        <column_name>contact_id</column_name>
        <stream_name>actual_contactid</stream_name>
      </field>
      <field>
        <column_name>user_account_id</column_name>
        <stream_name>user_account_id</stream_name>
      </field>
      <field>
        <column_name>insert_timestamp</column_name>
        <stream_name>insert_timestamp</stream_name>
      </field>
      <field>
        <column_name>content</column_name>
        <stream_name>content</stream_name>
      </field>
      <field>
        <column_name>type</column_name>
        <stream_name>type</stream_name>
      </field>
      <field>
        <column_name>category</column_name>
        <stream_name>category</stream_name>
      </field>
      <field>
        <column_name>userMessageID</column_name>
        <stream_name>userMessageID</stream_name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1360</xloc>
      <yloc>720</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact Info</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
--ALTER DATABASE [DatabaseName] SET COMPATIBILITY_LEVEL = 130

/*
with
  mail1 (ID,email) as (select Cl.clientID, replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(concat(ltrim(rtrim(UC.email)),',',ltrim(rtrim(UC.email2)),',',ltrim(rtrim(UC.email3))),'/',' '),'&lt;',' '),'>',' '),'(',' '),')',' '),':',' '),'.@','@'),'@.','@'),'+',' '),'&amp;',' '),'[',' '),']',' '),'?',' '),'''',' '),';',' ') as email 
         from bullhorn1.View_ClientContact Cl --where isPrimaryOwner = 1
         left join bullhorn1.BH_UserContact UC ON Cl.userID = UC.userID
         where (Cl.isdeleted &lt;&gt; 1 and Cl.status &lt;&gt; 'Archive') )
, mail2 (ID,email) as (SELECT ID, email.value as email FROM mail1 m CROSS APPLY STRING_SPLIT(m.email,',') AS email)
, mail3 (ID,email) as (SELECT ID, case when RIGHT(email, 1) = '.' then LEFT(email, LEN(email) - 1) when LEFT(email, 1) = '.' then RIGHT(email, LEN(email) - 1) else email end as email from mail2 WHERE email like '%_@_%.__%')
, mail4 (ID,email,rn) as ( SELECT ID, email = ltrim(rtrim(CONVERT(NVARCHAR(MAX), email))), r1 = ROW_NUMBER() OVER (PARTITION BY ID ORDER BY ID desc) FROM mail3 )
, e1 (ID,email) as (select ID, email from mail4 where rn = 1)
, ed  (ID,email,rn) as (SELECT ID,email,ROW_NUMBER() OVER(PARTITION BY email ORDER BY ID DESC) AS rn FROM e1 )
, e2 (ID,email) as (select ID, email from mail4 where rn = 2)
, e3 (ID,email) as (select ID, email from mail4 where rn = 3)
--select * from ed
*/

with
mail1 (ID,email) as (
       select Cl.clientID --C.candidateID
	, replace(translate(value, '!'':"&lt;&gt;[]();,+/\&amp;?•*|‘','                     '),char(9),'') as email --to translate special characters
	--from bullhorn1.BH_UserContact UC left join bullhorn1.Candidate C on C.userID = UC.UserID
	from bullhorn1.View_ClientContact Cl left join bullhorn1.BH_UserContact UC ON Cl.userID = UC.userID
	cross apply string_split( concat(UC.email,' ',UC.email2,' ',UC.email3) ,' ')
	--where (UC.email like '%_@_%.__%' or UC.email2 like '%_@_%.__%' or UC.email3 like '%_@_%.__%') and C.isdeleted &lt;&gt; 1 and C.status &lt;&gt; 'Archive'
	where (UC.email like '%_@_%.__%' or UC.email2 like '%_@_%.__%' or UC.email3 like '%_@_%.__%') and Cl.isdeleted &lt;&gt; 1 --and Cl.status &lt;&gt; 'Archive'
--       select REFERENCE
--	, replace(translate(value, '!'':"&lt;&gt;[]();,+/\&amp;?•*|‘','                     '),char(9),'') as email --to translate special characters
--	from PROP_EMAIL
--	cross apply string_split(EMAIL_ADD,' ')
--	where EMAIL_ADD like '%_@_%.__%' and REFERENCE in (61065,43945)
	)
--select * from mail1 where email &lt;&gt; ''

, mail2 (ID,email,rn,ID_rn) as (
       select distinct ID
              , trim(' ' from email) as email
              , row_number() over(partition by trim(' ' from email) order by ID asc) as rn --distinct email if emails exist more than once
              , row_number() over(partition by ID order by trim(' ' from email)) as ID_rn --distinct if contacts may have more than 1 email
	from mail1
	where email like '%_@_%.__%'
	)
--select * from mail2

, ed (ID,email) as (
       select ID, email
--	      , case when rn > 1 then concat(email,'_',rn)	else email end as email
	from mail2
	where email is not NULL and email &lt;&gt; ''
	and ID_rn = 1
	)
, e2 (ID,email) as (select ID, email from mail2 where ID_rn = 2)
, e3 (ID,email) as (select ID, email from mail2 where ID_rn = 3)	
--select * from mail2 where email like '%lburlovich@challenger.com.au%'


/*
-- Secondary OWNER
-- select userID, ownerUserIDList FROM bullhorn1.BH_UserContact where ownerUserIDList is not null and ownerUserIDList like '%,%'
, owner2a as (SELECT userID, Split.a.value('.', 'VARCHAR(100)') AS String FROM (SELECT userID, CAST ('&lt;M>' + REPLACE(convert(varchar(20),ownerUserIDList),',','&lt;/M>&lt;M>') + '&lt;/M>' AS XML) AS Data FROM bullhorn1.BH_UserContact where ownerUserIDList like '%,%') AS A CROSS APPLY Data.nodes ('/M') AS Split(a))
, owner2b as (select owner2a.userid, UC.name from owner2a left join (select userid, name from bullhorn1.BH_UserContact) UC on UC.userid = owner2a.String)
--, owner2c as (SELECT userID, STUFF((SELECT ', ' + name  from owner2b WHERE userID = a.userID FOR XML PATH (''), TYPE).value('.', 'nvarchar(MAX)'), 1, 1, '')  AS name FROM owner2b AS a GROUP BY a.userID )
, owner2c (userID,name) as (SELECT userID, STRING_AGG( name,',' ) WITHIN GROUP (ORDER BY name) name from owner2b GROUP BY userID)
--select * from owner2c where userid in (20983,13255)


-- ALL OWNER
, owners0 (userid, name) as (
       select Cl.userid,  STRING_AGG( concat(Cl.recruiterUserID,',',UC.ownerUserIDList),',' ) WITHIN GROUP (ORDER BY recruiterUserID) name 
       from bullhorn1.View_ClientContact Cl 
       left join bullhorn1.BH_UserContact UC ON Cl.userID = UC.userID left join bullhorn1.BH_UserContact UC2 on Cl.recruiterUserID = UC2.userID
       where Cl.recruiterUserID is not null or UC.ownerUserIDList is not null --and UC.ownerUserIDList like '%,%'
       GROUP BY Cl.userID )
, owners1 as (SELECT userID, Split.a.value('.', 'VARCHAR(200)') AS name FROM (SELECT userID, CAST ('&lt;M>' + REPLACE(convert(varchar(20),name),',','&lt;/M>&lt;M>') + '&lt;/M>' AS XML) AS Data FROM owners0) AS A CROSS APPLY Data.nodes ('/M') AS Split(a))
, owners2 as (select distinct owners1.userid, UC.email, UC.name from owners1 left join (select userid, email, name from bullhorn1.BH_UserContact) UC on UC.userid = owners1.name where owners1.name &lt;&gt; '')
--select * from owners2
, owners3 (userID,email) as (SELECT userID, STRING_AGG( email,',' ) WITHIN GROUP (ORDER BY email) email from owners2 where email like '%_@_%.__%' GROUP BY userID)
--select * from owners3 where userid in (20983,13255)
*/

, -- with
  View_UserSpecialty as (
       select distinct C.clientID, C.userid /*C.specialtyIDList, UC.SpecialtyID,*/ , trim(UC.name) as name, UC.enabled
       FROM bullhorn1.View_ClientContact C
       left join ( select US.userID, US.SpecialtyID, VS.name as name, enabled from BULLHORN1.View_UserSpecialty US left join bullhorn1.View_Specialty VS ON US.SpecialtyID = VS.specialtyID ) UC on UC.userid = C.userID
       where (C.isdeleted &lt;&gt; 1 ) and UC.userid is not null --and C.status &lt;&gt; 'Archive'
       --where UC.name is not null and UC.name &lt;&gt; '' and C.isdeleted &lt;&gt; 1 and C.status &lt;&gt; 'Archive' 
       --where C.userid in (63774,61671 ,65415, 65303)
       )
       
--select SPECIALTY, count(*) from View_UserSpecialty group by SPECIALTY;
--select distinct trim(SPECIALTY), trim(SPECIALTY) as 'tmp' from View_UserSpecialty where SPECIALTY is not null and SPECIALTY &lt;&gt; '' and name not in ('.SKILLS_AC')
--select distinct trim(SPECIALTY), enabled from View_UserSpecialty;      
--select candidateID from (select * from View_UserSpecialty where name = 'design') t group by candidateID having count(*) > 1
--select * from bullhorn1.View_UserSpecialty where name = 'design' and candidateid not in (10049,10198)
--select * from bullhorn1.View_UserSpecialty where SPECIALTY is not null and userid in (8771)
--select * from bullhorn1.View_Specialty; select enabled, count(*) as amount from bullhorn1.View_Specialty group by enabled

------------
-- DOCUMENT
------------
/*, doc(clientContactUserID, files) as (
        SELECT    clientContactUserID
                , STUFF((SELECT DISTINCT ',' + concat(clientContactFileID,fileExtension) from bullhorn1.View_ClientContactFile WHERE clientContactUserID = a.clientContactUserID and fileExtension in ('.doc','.docx','.pdf','.xls','.xlsx','.rtf','.html','.txt') FOR XML PATH (''), TYPE).value('.', 'nvarchar(MAX)'), 1, 1, '')  AS files
        FROM (select clientContactUserID from bullhorn1.View_ClientContactFile) AS a GROUP BY a.clientContactUserID ) */
, doc (clientContactUserID,files) as ( SELECT clientContactUserID, STRING_AGG(cast(replace(replace(concat(directory,clientContactFileID,fileExtension),'/','_'),'\','_') as nvarchar(max)),',' ) WITHIN GROUP (ORDER BY clientContactFileID) att from bullhorn1.View_ClientContactFile where isdeleted &lt;&gt; 1 /*and fileExtension in ('.doc','.docx','.pdf','.rtf','.xls','.xlsx','.htm', '.html', '.msg', '.txt')*/ GROUP BY clientContactUserID )
--select * from doc where clientContactUserID in (63,86)


------------
-- NOTE
------------
, note as (
	select Cl.clientID
	, Stuff(
	  coalesce('BH Contact ID: ' + NULLIF(cast(UC.userID as varchar(max)), '') + char(10), '')
--       + coalesce('Email 2: ' + NULLIF(cast(e2.email as nvarchar(max)), '') + char(10), '')
--       + coalesce('Email 3: ' + NULLIF(e3.email, '') + char(10), '')
+ coalesce('Certifications: ' + nullif(trim(convert(nvarchar(max),uc.certifications)), '') + char(10), '')

+ coalesce('Date Available: ' + nullif(trim(convert(nvarchar(max),uc.dateAvailable)), '') + char(10), '')
+ coalesce('Available Until: ' + nullif(trim(convert(nvarchar(max),uc.dateAvailableEnd)), '') + char(10), '')
+ coalesce('Last Note: ' + nullif(trim(convert(nvarchar(max),uc.dateLastComment)), '') + char(10), '')
+ coalesce('Date Last Modified: ' + nullif(trim(convert(nvarchar(max),vccl.dateLastModified)), '') + char(10), '')
+ coalesce('Last Visit: ' + nullif(trim(convert(nvarchar(max),cl.dateLastVisit)), '') + char(10), '')
+ coalesce('Day Rate: ' + nullif(trim(convert(nvarchar(max),uc.dayRate)), '') + char(10), '')
+ coalesce('DayRateLow: ' + nullif(trim(convert(nvarchar(max),uc.dayRateLow)), '') + char(10), '')
+ coalesce('Professional Overview/CV: ' + nullif(trim(convert(nvarchar(max),uc.description)), '') + char(10), '')
+ coalesce('Desired Job Types: ' + nullif(trim(convert(nvarchar(max),cl.desiredCategories)), '') + char(10), '')
+ coalesce('Desired Locations: ' + nullif(trim(convert(nvarchar(max),uc.desiredLocations)), '') + char(10), '')
+ coalesce('Type: ' + nullif(trim(convert(nvarchar(max),cl.division)), '') + char(10), '')
+ coalesce('Employment Preference: ' + nullif(trim(convert(nvarchar(max),uc.employmentPreference)), '') + char(10), '')
+ coalesce('Years Experience: ' + nullif(trim(convert(nvarchar(max),case uc.experience when 1 then 'Yes' when 0 then 'No' end)), '') + char(10), '')
+ coalesce('Fax: ' + nullif(trim(convert(nvarchar(max),uc.fax)), '') + char(10), '')
+ coalesce('Fax 2: ' + nullif(trim(convert(nvarchar(max),uc.fax2)), '') + char(10), '')
+ coalesce('Fax 3: ' + nullif(trim(convert(nvarchar(max),uc.fax3)), '') + char(10), '')
+ coalesce('Hourly Rate: ' + nullif(trim(convert(nvarchar(max),uc.hourlyRate)), '') + char(10), '')
+ coalesce('HourlyRateLow: ' + nullif(trim(convert(nvarchar(max),uc.hourlyRateLow)), '') + char(10), '')
+ coalesce('Office: ' + nullif(trim(convert(nvarchar(max),cl.office)), '') + char(10), '')
+ coalesce('Preferred Contact Method: ' + nullif(trim(convert(nvarchar(max),cl.preferredContact)), '') + char(10), '')
+ coalesce('Referred By: ' + NULLIF(cast(ref.name as nvarchar(max)), '') + char(10), '') --+ coalesce('Referred By: ' + nullif(trim(convert(nvarchar(max),uc.referredByUserID)), '') + char(10), '')
--+ coalesce('revenue: ' + nullif(trim(convert(nvarchar(max),uc.revenue)), '') + char(10), '')
+ coalesce('Salary: ' + nullif(trim(convert(nvarchar(max),uc.salary)), '') + char(10), '')
+ coalesce('SalaryLow: ' + nullif(trim(convert(nvarchar(max),uc.salaryLow)), '') + char(10), '')
--+ coalesce('Secondary Skills: ' + nullif(trim(convert(nvarchar(max),uc.secondarySkillID)), '') + char(10), '')
+ coalesce('Additional Skills: ' + nullif(trim(convert(nvarchar(max),uc.skillSet)), '') + char(10), '')
+ coalesce('Opted In - SMS Messages: ' + nullif(trim(convert(nvarchar(max),case uc.smsOptIn when 1 then 'Yes' when 0 then 'No' end)), '') + char(10), '')
+ coalesce('Social Security Number: ' + nullif(trim(convert(nvarchar(max),uc.ssn)), '') + char(10), '')
+ coalesce('Status: ' + nullif(trim(convert(nvarchar(max),cl.status)), '') + char(10), '')
+ coalesce('Tax ID: ' + nullif(trim(convert(nvarchar(max),uc.taxID)), '') + char(10), '')
+ coalesce('Type: ' + nullif(trim(convert(nvarchar(max),cl.type)), '') + char(10), '')
+ coalesce('Willing to Relocate: ' + nullif(trim(convert(nvarchar(max),case uc.willRelocate when 1 then 'Yes' when 0 then 'No' end)), '') + char(10), '')
+ coalesce('Authorized to work in the EU: ' + nullif(trim(convert(nvarchar(max),case uc.workAuthorized when 1 then 'Yes' when 0 then 'No' end)), '') + char(10), '')
--       + case when CL.isDeleted = 1 then concat('Contact is deleted: ',char(10)) else '' end
--       + coalesce('BH Contact Owners: ' + NULLIF(cast(UC2.name as nvarchar(max)), '') + char(10), '')
--       + coalesce('Contact Middle Name: ' + NULLIF(cast(UC.middlename as nvarchar(max)), '') + char(10), '')
--       + coalesce('Created By: ' + NULLIF(cast(UC2.name as nvarchar(max)), '') + char(10), '')    
--       + coalesce('Date Last Visit: ' + NULLIF(cast(cl.datelastvisit as nvarchar(max)), '') + char(10), '')
--       + coalesce('Department: ' + NULLIF(cast(Cl.division as nvarchar(max)), '') + char(10), '')
--       + coalesce('Designed Categories: ' + NULLIF(cast(Cl.desiredCategories as nvarchar(max)), '') + char(10), '')
--       + coalesce('Desired Skills: ' + NULLIF(cast(Cl.desiredSkills as nvarchar(max)), '') + char(10), '')
--       + coalesce('Desired Specialties: ' + NULLIF(cast(Cl.desiredSpecialties as nvarchar(max)), '') + char(10), '')
--       + coalesce('Employment Preference: ' + NULLIF(cast(employmentPreference as nvarchar(max)), '') + char(10), '')
--       + coalesce('Fax: ' + NULLIF(cast(UC.Fax as nvarchar(max)), '') + char(10), '')
--       + coalesce('Preferred Communication Method: ' + NULLIF(cast(cl.preferredcontact as nvarchar(max)), '') + char(10), '')
--       + coalesce('Referred By: ' + NULLIF(cast(referredBy as nvarchar(max)), '') + char(10), '')
--       
--       + coalesce('Reports To: ' + NULLIF(cast(UC.reportToUserID as nvarchar(max)), '') + ' - ' + UC1.name + char(10), '')
----       + coalesce('Revenue: ' + NULLIF(cast(UC.revenue as nvarchar(max)), '') + char(10), '')
--       + coalesce('Secondary Owners: ' + NULLIF(cast(owner2c.name as nvarchar(max)), '') + char(10), '')
--       + coalesce('Source: ' + NULLIF(cast(UC.source as nvarchar(max)), '') + char(10), '')
--       + coalesce('StaffTrak Person ID: ' + NULLIF(cast(cl.externalid as nvarchar(max)), '') + char(10), '')
--       + coalesce('Status: ' + NULLIF(cast(Cl.status as nvarchar(max)), '') + char(10), '')
--       + coalesce('Status: ' + NULLIF(cast(UC.status as nvarchar(max)), '') + char(10), '')
--       + coalesce('Type: ' + NULLIF(cast(Cl.type as nvarchar(max)), '') + char(10), '')
----       + coalesce('Type: ' + NULLIF(cast(UC.Type as nvarchar(max)), '') + char(10), '')
--       + coalesce('Work Phone: ' + NULLIF(cast(UC.WorkPhone as nvarchar(max)), '') + char(10), '')

--       + coalesce('Address 1: ' + NULLIF(cast(address1 as nvarchar(max)), '') + char(10), '')
--       + coalesce('City: ' + NULLIF(cast(city as nvarchar(max)), '') + char(10), '')
--       + coalesce('State: ' + NULLIF(cast(state as nvarchar(max)), '') + char(10), '')
--       + coalesce('ZIP Code: ' + NULLIF(cast(zip as nvarchar(max)), '') + char(10), '')
--       + coalesce('Country: ' + NULLIF(tmp_country.COUNTRY, '') + char(10), '')

--       + coalesce('Last Note: ' + NULLIF( replace(replace(replace(replace(replace(replace([dbo].[udf_StripHTML](UC.lastNote_denormalized),'&amp;nbsp;',''),'&amp;amp;','&amp;'),'&amp;#39;',''''),'&amp;ldquo;','"'),'&amp;rdquo;','"'),'&amp;gt;','') , '') + char(10), '') --cast(UC.lastNote_denormalized as varchar(max))
--       + coalesce('Last Note: ' + NULLIF(ltrim(rtrim([dbo].[udf_StripHTML]( 
--               replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(
--                          cast(UC.lastNote_denormalized as varchar(max))
--              ,'&amp;nbsp;','') ,'&amp;ndash;','') ,'&amp;amp;',''), '&amp;hellip;','') ,'&amp;#39;','') ,'&amp;gt;','') ,'&amp;lt;','') ,'&amp;quot;','') ,'&amp;rsquo;',''), '&amp;ldquo;',''), '&amp;rdquo;','') ,'&amp;reg;','') ,'&amp;euro;','')  ) )), '') + char(10), '') */
       + coalesce('General Contact Comments: ' + char(10) + nullif(trim([bullhorn1].[fn_ConvertHTMLToText](cl.comments)), '') + char(10), '') --General Comments
       , 1, 0, '') as note 
        -- select top 10 * -- select *
        from bullhorn1.BH_UserContact UC --where name like '%Andy Teng%'
--        left join tmp_country on UC.countryID = tmp_country.CODE
        left join bullhorn1.View_ClientContact Cl on Cl.Userid = UC.UserID
--        left join (select userID,name from bullhorn1.BH_UserContact) UC1 on UC.reportToUserID = UC1.userID               
--        left join (select userID,name from bullhorn1.BH_UserContact) UC2 on Cl.recruiterUserID = UC2.userID
        --left join e2 on Cl.userID = e2.ID
--        left join e3 on Cl.userID = e3.ID
        left join (select userid, name from bullhorn1.BH_UserContact) ref on ref.userid = UC.referredByUserID
--        left join owner2c on owner2c.userid = UC.userid
        left join bullhorn1.View_ClientContactLastModified vccl on vccl.userID = UC.userID
--        where cl.userid = 70048 --Cl.isPrimaryOwner = 1 and Cl.isDeleted = 0
        )
--select type,recruiterUserID from bullhorn1.View_ClientContact
--select count(*) from note --10011
--select * from note


-----MAIN SCRIPT------
select --top 10
         convert(varchar(5000),Cl.clientID) as 'contact-externalId', Cl.userID as '#UserID'
       , iif(UC.clientCorporationID in (select clientCorporationID from bullhorn1.BH_ClientCorporation /*where status &lt;&gt; 'Archive'*/), convert(varchar(max),UC.clientCorporationID), 'default' ) as 'contact-companyId' --, UC.clientCorporationID as 'contact-companyId'
--       , case when (trim(replace(UC.firstName,'?','')) = '' or  UC.firstName is null) then 'Firstname' else trim(replace(UC.firstName,'?','')) end as 'contact-firstName'
       , case when (trim(replace(UC.firstName,'?','')) = '' or  UC.firstName is null) then 'Firstname'
              else stuff( coalesce('' + NULLIF( trim(UC.nameSuffix), ''), '') + coalesce('' + NULLIF( replace(trim(UC.firstName),'?',''), '') , '') , 1, 0, '')
              end as 'contact-firstName'
       , trim(UC.middleName) as 'contact-middleName'
       , case when (trim(replace(UC.lastName,'?','')) = '' or  UC.lastName is null) then concat('Lastname-',Cl.clientID) else trim(replace(UC.lastName,'?','')) end as 'contact-Lastname'

       , ltrim(Stuff( coalesce(' ' + NULLIF(UC.Phone, ''), '') , 1, 1, '') ) as 'contact-phone' --+ coalesce(', ' + NULLIF(UC.Phone2, ''), '') + coalesce(', ' + NULLIF(UC.Phone3, ''), '') + coalesce('' + NULLIF(UC.Mobile, ''), '') + coalesce(', ' + NULLIF(UC.WorkPhone, ''), '')
       --, UC.fax as 'contact-skype'
       , ed.email as 'contact-email'
       , UC.occupation as 'contact-jobTitle'
       
       , note.note as 'contact-note'

--CUSTOM
       , Cl.dateadded as 'registration date'
       , e2.email as 'Personal Email'
       , case 
              when UC.nameprefix in ('Dr','Dr.') then 'Dr.' 
              when UC.nameprefix in ('Mr','Mr.') then 'Mr.' 
              when UC.nameprefix in ('Ms','Ms.') then 'Ms.' 
              when UC.nameprefix in ('Miss','Miss.') then 'Miss.' 
              when UC.nameprefix in ('Mrs','Mrs.') then 'Mrs.' 
              else '' end as 'Title'
       
       , UC.NickName as 'PreferredName'
       
       , UC.Mobile as 'mobile_phone'
       , trim(Stuff( coalesce(' ' + NULLIF(UC.Phone2, ''), '') + coalesce(', ' + NULLIF(UC.Phone3, ''), '') , 1, 1, '') ) as 'contact-home_phone' --, UC.Phone2 as 'home_phone' --, ltrim(Stuff( coalesce(' ' + NULLIF(UC.Phone2, ''), '') , 1, 0, '') ) as 'contact-home_phone'
       , trim(Cl.division) as 'Department', trim(lower(Cl.division)) as 'department_tmp', getdate() as 'department_insert_timestamp'
       , uc.reportToUserID as 'Report To', report.report_userID, report.report_name, report.report_email, report.report_clienID
       , Cl.desiredSkills as 'Desired Skills -SUB FUNCTIONAL EXPERTISE'
       , uc.source as 'Source'
--       , vus.name as 'Specialties - FUNCTIONAL EXPERTISE' --cl.specialtyCategoryID 

-- owner
-- owner
--, UC2.email as 'owners' --, UC2.name as '#Owners Name'
       --, owners3.email as 'owners'
       , trim(stuff(
                                 Coalesce(' ' + NULLIF(po1.email, ''), '')
                               + Coalesce(', ' + NULLIF(so1.email, ''), '')
                       , 1, 1, '')) as 'owners'  
, 0 as 'owners-super_user'
, getdate() as 'owners-insert_timestamp'
, 1 as 'owners-locked_user'
--, as 'owners-first_name'
, ' ' as 'owners-last_name'
, 'en' as 'owners-language'

-- document
, doc.files as 'document'
, 'CONTACT' as entity_type
, 'documents' as document_type
, 0 as default_file


--WORK LOCATION
       , UC.address1
       , UC.address2
       , UC.city
       , UC.state
       , UC.zip
       , UC.countryID
       
--Personal Location Address
       , UC.secondaryAddress1
       , UC.secondaryAddress2
       , UC.secondaryCity
       , UC.secondaryCountryID
       , UC.secondaryState
       , UC.secondaryZip
       , Stuff(
                                 Coalesce(' ' + NULLIF(UC.secondaryAddress1, ''), '')
                               + Coalesce(', ' + NULLIF(UC.secondaryAddress2, ''), '')
                               + Coalesce(', ' + NULLIF(UC.secondaryCity, ''), '')
                               + Coalesce(', ' + NULLIF(UC.secondaryState, ''), '')
                               + Coalesce(', ' + NULLIF(UC.secondaryZip, ''), '')
                               + Coalesce(', ' + NULLIF(tc2.country, ''), '')
                       , 1, 1, '') as 'contact-personal-address'
       , UC.secondaryCity as 'contact-personal-city'
       , UC.secondaryState as 'contact-personal-state'
       , UC.secondaryZip as 'contact-personal-post_code'
       , tc2.ABBREVIATION as 'contact-personal-country_code' --UC.countryID


-- select count(*) --7487 -- select distinct convert(varchar(max),desiredSkills) as skills -- select top 10 *
from bullhorn1.View_ClientContact Cl --where isPrimaryOwner = 1
left join bullhorn1.BH_UserContact UC ON Cl.userID = UC.userID
left join bullhorn1.BH_UserContact UC2 on Cl.recruiterUserID = UC2.userID
       --left join owners3 on owners3.userid = cl.userid
       left join bullhorn1.View_PersonPrimaryOwners po on po.userid = uc.userid left join bullhorn1.BH_UserContact po1 ON po1.userID = po.recruiterUserID
       left join bullhorn1.View_PersonSecondaryOwners so on so.userid = uc.userid left join bullhorn1.BH_UserContact so1 ON so1.userID = so.recruiterUserID     
left join ed ON Cl.clientID = ed.ID -- candidate-email-DUPLICATION
left join e2 ON Cl.clientID = e2.ID -- candidate-email
--left join e3 ON Cl.clientID = e3.ID -- candidate-email
--left join e4 ON Cl.clientID = e4.ID -- candidate-email
left join note on Cl.clientID = note.clientID
left join doc on Cl.userID = doc.clientContactUserID
left join tmp_country tc2 ON UC.countryID = tc2.code
left join (
       select distinct UC.userID as 'userID', UC.name as 'name', UC.email as 'email', UC.reportToUserID as 'reportToUserID'
              , UC1.userID as 'report_userID', UC1.name as 'report_name', UC1.email as 'report_email', Cl.clientID as 'report_clienID'
       -- select count(*) -- select *
       from bullhorn1.BH_UserContact UC
       left join (select userid, name, email from bullhorn1.BH_UserContact /*where userID = 34*/) UC1 on UC1.userID = UC.reportToUserID
       left join (select clientid, userid from bullhorn1.View_ClientContact /*where userID = 34*/) Cl on Cl.Userid = UC1.UserID
       where UC.reportToUserID > 0 --UC.reportToUserID is not null and UC.reportToUserID &lt;&gt; '' and UC.reportToUserID &lt;&gt; 0 --where UC.reportToUserID is null or UC.reportToUserID = '' or UC.reportToUserID = 0
--       and UC.userID = 12
       ) report on report.userID = UC.userID
--left join View_UserSpecialty vus on vus.clientID = cl.userID
where Cl.isdeleted &lt;&gt; 1 --and Cl.status &lt;&gt; 'Archive' --where isPrimaryOwner = 1 --and UC.clientCorporationID = 1284
--and UC.nameSuffix &lt;&gt; ''
--and concat (UC.FirstName,' ',UC.LastName) like '%Partha%'
--and Cl.clientID in (3007,8,7,123,76,163)
--and cl.userID in (5456)
--order by Cl.clientID desc
--and report.userID is not null


/*
with t as (
select    UC.clientCorporationID as 'contact-companyId'
	, Cl.clientID as 'contact-externalId'
	, concat(
	       case when (ltrim(replace(UC.firstName,'?','')) = '' or  UC.firstName is null) then 'Firstname' else ltrim(replace(UC.firstName,'?','')) end --as 'contact-firstName'
	   ,' '  , case when (ltrim(replace(UC.lastName,'?','')) = '' or  UC.lastName is null) then concat('Lastname-',Cl.clientID) else ltrim(replace(UC.lastName,'?','')) end --as 'contact-Lastname'
	) as fullname
	, UC.NickName as 'PreferredName'
        --, UC.Phone as 'Contact-WorkPhone'
	, ltrim(Stuff(  coalesce(' ' + NULLIF(UC.Phone, '') + ' (Main)', '')
	               + coalesce(', ' + NULLIF(UC.Phone2, '') + ' (Direct)', '')
                , 1, 1, '') ) as 'contact-phone' 
	,UC.Mobile as 'Contact-MobilePhone'
from bullhorn1.View_ClientContact Cl --where isPrimaryOwner = 1
left join bullhorn1.BH_UserContact UC ON Cl.userID = UC.userID
left join bullhorn1.BH_UserContact UC2 on Cl.recruiterUserID = UC2.userID
where isPrimaryOwner = 1 )
select count(*) from t





with
-- desiredSkills
 s1 (clientID,desiredSkills) as ( SELECT clientID, trim(desiredSkills.value) as skills FROM bullhorn1.View_ClientContact m CROSS APPLY STRING_SPLIT( convert(varchar(max),m.desiredSkills),';') AS desiredSkills where convert(varchar(max),m.desiredSkills) &lt;&gt; '' )
--select distinct desiredSkills from s

-- desiredSpecialties
, s2 (clientID,desiredSpecialties) as ( SELECT clientID, trim(desiredSpecialties.value) as skills FROM bullhorn1.View_ClientContact m CROSS APPLY STRING_SPLIT( convert(varchar(max),m.desiredSpecialties),';') AS desiredSpecialties where convert(varchar(max),m.desiredSpecialties) &lt;&gt; '' )
--select distinct desiredSpecialties from s where desiredSpecialties not in ('.NET','3D','ActionScript','Activation','After Effects','APPS','Automotive','B2B','Branding','Business Services','C#','Cinema 4D','Consumer','Content','CSS','Financial','Flash','FREELANCE','HR','HTML','Javascript','-JUNIOR','-MIDWEIGHT','MySQL','Not For Profit','Online PR','PHP','PowerPoint','PPC','Professional Services','project management','Public Affairs','Public Sector','Retail','Personal Care','Brand','Digital','innovation chef','MS&amp;P','OOH','Shopper Marketing','Field Sales','-SENIOR','SEO','Services','social','SQL Server','Utilities','Ambient','Cosmetics','Dairy','Drinks - Alcoholic','Drinks - Non Alcoholic','Fresh &amp; Chilled','Frozen','Household','Buying','Ecommerce','Insights','Own label','National Accounts - Sales','Trade Marketing','Regional Sales','Snacking &amp; Confectionary','Category','EMEA','Food service','International','NPD','Packaging','Travel/leisure','Consumer Marketing','Highstreet','Major Mulitples','Off-trade','Premium Multiples','Wholesale','Sales','Convenience/Discounters','Pharma/Heathcare2','Innovation','Marketing','On-trade','R&amp;D','Business Development','Online')

, s3 as (
select
         Cl.clientID as 'contact-externalId' --, Cl.userID as '#UserID'
       , case when (ltrim(replace(UC.firstName,'?','')) = '' or  UC.firstName is null) then 'Firstname' else ltrim(replace(UC.firstName,'?','')) end as 'contact-firstName'
       , case when (ltrim(replace(UC.lastName,'?','')) = '' or  UC.lastName is null) then concat('Lastname-',Cl.clientID) else ltrim(replace(UC.lastName,'?','')) end as 'contact-Lastname'
       , s1.desiredSkills as 'skill'
-- select top 10 *
from bullhorn1.View_ClientContact Cl
left join bullhorn1.BH_UserContact UC ON Cl.userID = UC.userID
left join s1 on s1.clientID = Cl.clientID
where (s1.desiredSkills &lt;&gt; '' and s1.desiredSkills is not null)
--and Cl.clientID = 3617

UNION

select
         Cl.clientID as 'contact-externalId' --, Cl.userID as '#UserID'
       , case when (ltrim(replace(UC.firstName,'?','')) = '' or  UC.firstName is null) then 'Firstname' else ltrim(replace(UC.firstName,'?','')) end as 'contact-firstName'
       , case when (ltrim(replace(UC.lastName,'?','')) = '' or  UC.lastName is null) then concat('Lastname-',Cl.clientID) else ltrim(replace(UC.lastName,'?','')) end as 'contact-Lastname'
       , s2.desiredSpecialties as 'skill'
-- select distinct convert(varchar(max),cl.desiredSpecialties)
from bullhorn1.View_ClientContact Cl
left join bullhorn1.BH_UserContact UC ON Cl.userID = UC.userID
left join s2 on s2.clientID = Cl.clientID
where ( convert(varchar(max),cl.desiredSpecialties) &lt;&gt; '' and Cl.desiredSpecialties is not null)
--and Cl.clientID = 3617
)

select distinct skill, count(*) from s3 group by skill
*/
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1712</xloc>
      <yloc>160</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact Info  - Lead</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
--ALTER DATABASE [DatabaseName] SET COMPATIBILITY_LEVEL = 130

/*
with
  mail1 (ID,email) as (select Cl.clientID, replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(concat(ltrim(rtrim(UC.email)),',',ltrim(rtrim(UC.email2)),',',ltrim(rtrim(UC.email3))),'/',' '),'&lt;',' '),'>',' '),'(',' '),')',' '),':',' '),'.@','@'),'@.','@'),'+',' '),'&amp;',' '),'[',' '),']',' '),'?',' '),'''',' '),';',' ') as email 
         from bullhorn1.BH_Client Cl --where isPrimaryOwner = 1
         left join bullhorn1.BH_UserContact UC ON Cl.userID = UC.userID
         where (Cl.isdeleted &lt;&gt; 1 and Cl.status &lt;&gt; 'Archive') )
, mail2 (ID,email) as (SELECT ID, email.value as email FROM mail1 m CROSS APPLY STRING_SPLIT(m.email,',') AS email)
, mail3 (ID,email) as (SELECT ID, case when RIGHT(email, 1) = '.' then LEFT(email, LEN(email) - 1) when LEFT(email, 1) = '.' then RIGHT(email, LEN(email) - 1) else email end as email from mail2 WHERE email like '%_@_%.__%')
, mail4 (ID,email,rn) as ( SELECT ID, email = ltrim(rtrim(CONVERT(NVARCHAR(MAX), email))), r1 = ROW_NUMBER() OVER (PARTITION BY ID ORDER BY ID desc) FROM mail3 )
, e1 (ID,email) as (select ID, email from mail4 where rn = 1)
, ed  (ID,email,rn) as (SELECT ID,email,ROW_NUMBER() OVER(PARTITION BY email ORDER BY ID DESC) AS rn FROM e1 )
, e2 (ID,email) as (select ID, email from mail4 where rn = 2)
, e3 (ID,email) as (select ID, email from mail4 where rn = 3)
--select * from ed
*/

with
mail1 (ID,email) as (
       select Cl.clientID --C.candidateID
	, replace(translate(value, '!'':"&lt;&gt;[]();,+/\&amp;?•*|‘','                     '),char(9),'') as email --to translate special characters
	--from bullhorn1.BH_UserContact UC left join bullhorn1.Candidate C on C.userID = UC.UserID
	from bullhorn1.View_ClientContact Cl left join bullhorn1.BH_UserContact UC ON Cl.userID = UC.userID
	cross apply string_split( concat(UC.email,' ',UC.email2,' ',UC.email3) ,' ')
	--where (UC.email like '%_@_%.__%' or UC.email2 like '%_@_%.__%' or UC.email3 like '%_@_%.__%') and C.isdeleted &lt;&gt; 1 and C.status &lt;&gt; 'Archive'
	where (UC.email like '%_@_%.__%' or UC.email2 like '%_@_%.__%' or UC.email3 like '%_@_%.__%') and Cl.isdeleted &lt;&gt; 1 and Cl.status &lt;&gt; 'Archive'
--       select REFERENCE
--	, replace(translate(value, '!'':"&lt;&gt;[]();,+/\&amp;?•*|‘','                     '),char(9),'') as email --to translate special characters
--	from PROP_EMAIL
--	cross apply string_split(EMAIL_ADD,' ')
--	where EMAIL_ADD like '%_@_%.__%' and REFERENCE in (61065,43945)
	)
--select * from mail1 where email &lt;&gt; ''

, mail2 (ID,email,rn,ID_rn) as (
       select distinct ID
              , trim(' ' from email) as email
              , row_number() over(partition by trim(' ' from email) order by ID asc) as rn --distinct email if emails exist more than once
              , row_number() over(partition by ID order by trim(' ' from email)) as ID_rn --distinct if contacts may have more than 1 email
	from mail1
	where email like '%_@_%.__%'
	)
--select * from mail2

, ed (ID,email) as (
       select ID, email
--	      , case when rn > 1 then concat(email,'_',rn)	else email end as email
	from mail2
	where email is not NULL and email &lt;&gt; ''
	and ID_rn = 1
	)
, e2 (ID,email) as (select ID, email from mail2 where ID_rn = 2)
, e3 (ID,email) as (select ID, email from mail2 where ID_rn = 3)	
--select * from mail2 where email like '%lburlovich@challenger.com.au%'



-- Secondary OWNER
-- select userID, ownerUserIDList FROM bullhorn1.BH_UserContact where ownerUserIDList is not null and ownerUserIDList like '%,%'
, owner2a as (SELECT userID, Split.a.value('.', 'VARCHAR(100)') AS String FROM (SELECT userID, CAST ('&lt;M>' + REPLACE(convert(varchar(20),ownerUserIDList),',','&lt;/M>&lt;M>') + '&lt;/M>' AS XML) AS Data FROM bullhorn1.BH_UserContact where ownerUserIDList like '%,%') AS A CROSS APPLY Data.nodes ('/M') AS Split(a))
, owner2b as (select owner2a.userid, UC.name from owner2a left join (select userid, name from bullhorn1.BH_UserContact) UC on UC.userid = owner2a.String)
--, owner2c as (SELECT userID, STUFF((SELECT ', ' + name  from owner2b WHERE userID = a.userID FOR XML PATH (''), TYPE).value('.', 'nvarchar(MAX)'), 1, 1, '')  AS name FROM owner2b AS a GROUP BY a.userID )
, owner2c (userID,name) as (SELECT userID, STRING_AGG( name,',' ) WITHIN GROUP (ORDER BY name) name from owner2b GROUP BY userID)
--select * from owner2c where userid in (20983,13255)

-- ALL OWNER
/*with 
owners0 (userid, name) as (
       select Cl.userid,  STRING_AGG( concat(Cl.recruiterUserID,',',UC.ownerUserIDList),',' ) WITHIN GROUP (ORDER BY recruiterUserID) name 
       from bullhorn1.View_ClientContact Cl 
       left join bullhorn1.BH_UserContact UC ON Cl.userID = UC.userID left join bullhorn1.BH_UserContact UC2 on Cl.recruiterUserID = UC2.userID
       where Cl.recruiterUserID is not null and UC.ownerUserIDList is not null and UC.ownerUserIDList like '%,%'
       GROUP BY Cl.userID )
, owners1 as (SELECT userID, Split.a.value('.', 'VARCHAR(200)') AS name FROM (SELECT userID, CAST ('&lt;M>' + REPLACE(convert(varchar(20),name),',','&lt;/M>&lt;M>') + '&lt;/M>' AS XML) AS Data FROM owners0) AS A CROSS APPLY Data.nodes ('/M') AS Split(a))
, owners2 as (select owners1.userid, UC.email, UC.name from owners1 left join (select userid, email, name from bullhorn1.BH_UserContact) UC on UC.userid = owners1.name where owners1.name &lt;&gt; '')
, owners3 (userID,name) as (SELECT userID, STRING_AGG( email,',' ) WITHIN GROUP (ORDER BY email) email from owners2 where email like '%_@_%.__%' GROUP BY userID)
select * from owners3 where userid in (20983,13255)
*/

, -- with
  View_UserSpecialty as (
       select distinct C.clientID, C.userid /*C.specialtyIDList, UC.SpecialtyID,*/ , trim(UC.name) as name, UC.enabled
       FROM bullhorn1.View_ClientContact C
       left join ( select US.userID, US.SpecialtyID, VS.name as name, enabled from BULLHORN1.View_UserSpecialty US left join bullhorn1.View_Specialty VS ON US.SpecialtyID = VS.specialtyID ) UC on UC.userid = C.userID
       where (C.isdeleted &lt;&gt; 1 ) and UC.userid is not null --and C.status &lt;&gt; 'Archive'
       --where UC.name is not null and UC.name &lt;&gt; '' and C.isdeleted &lt;&gt; 1 and C.status &lt;&gt; 'Archive' 
       --where C.userid in (63774,61671 ,65415, 65303)
       )
       
--select SPECIALTY, count(*) from View_UserSpecialty group by SPECIALTY;
--select distinct trim(SPECIALTY), trim(SPECIALTY) as 'tmp' from View_UserSpecialty where SPECIALTY is not null and SPECIALTY &lt;&gt; '' and name not in ('.SKILLS_AC')
--select distinct trim(SPECIALTY), enabled from View_UserSpecialty;      
--select candidateID from (select * from View_UserSpecialty where name = 'design') t group by candidateID having count(*) > 1
--select * from bullhorn1.View_UserSpecialty where name = 'design' and candidateid not in (10049,10198)
--select * from bullhorn1.View_UserSpecialty where SPECIALTY is not null and userid in (8771)
--select * from bullhorn1.View_Specialty; select enabled, count(*) as amount from bullhorn1.View_Specialty group by enabled

------------
-- DOCUMENT
------------
/*, doc(clientContactUserID, files) as (
        SELECT    clientContactUserID
                , STUFF((SELECT DISTINCT ',' + concat(clientContactFileID,fileExtension) from bullhorn1.View_ClientContactFile WHERE clientContactUserID = a.clientContactUserID and fileExtension in ('.doc','.docx','.pdf','.xls','.xlsx','.rtf','.html','.txt') FOR XML PATH (''), TYPE).value('.', 'nvarchar(MAX)'), 1, 1, '')  AS files
        FROM (select clientContactUserID from bullhorn1.View_ClientContactFile) AS a GROUP BY a.clientContactUserID ) */
, doc (clientContactUserID,files) as ( SELECT clientContactUserID, STRING_AGG(cast(concat(clientContactFileID,fileExtension) as nvarchar(max)),',' ) WITHIN GROUP (ORDER BY clientContactFileID) att from bullhorn1.View_ClientContactFile where isdeleted &lt;&gt; 1 /*and fileExtension in ('.doc','.docx','.pdf','.rtf','.xls','.xlsx','.htm', '.html', '.msg', '.txt')*/ GROUP BY clientContactUserID )
--select * from doc where clientContactUserID in (63,86)

, note as (
	select UC.userID
	, Stuff(  
	  Coalesce('BH Contact ID: ' + NULLIF(cast(UC.userID as varchar(max)), '') + char(10), '')
	+ Coalesce('Status: ' + NULLIF(cast(UC.Status as varchar(max)), '') + char(10), '')
       + Coalesce('General Comments: ' + NULLIF(cast(l.comments as nvarchar(max)), '') + char(10), '') --General Comments
       , 1, 0, '') as note 
        from bullhorn1.BH_UserContact UC --where name like '%Andy Teng%'
        left join bullhorn1.BH_Lead l on l.Userid = UC.UserID
        where l.Userid is not null
        )
--select type,recruiterUserID from bullhorn1.View_ClientContact
--select count(*) from note --10011
--select * from note
--select * from bullhorn1.View_ClientContact where userid in (10795, 11999,12317,12392,12445)
--select * from bullhorn1.BH_Lead


-----MAIN SCRIPT------
select --top 3
         --Cl.clientID as 'contact-externalId', Cl.userID as '#UserID'
         convert(varchar(5000),UC.userid) as 'contact-externalId', UC.userID as '#UserID', UC.status
--       , L.clientCorporationID as 'contact-companyId'
       , iif(UC.clientCorporationID in (select clientCorporationID from bullhorn1.BH_ClientCorporation), convert(varchar(max),UC.clientCorporationID), 'default' ) as 'contact-companyId', CC.name as 'company-name'
       , case when (ltrim(replace(UC.firstName,'?','')) = '' or  UC.firstName is null) then 'Firstname' else ltrim(replace(UC.firstName,'?','')) end as 'contact-firstName'
       --, UC.middleName as 'contact-middleName'
       , case when (trim(replace(UC.lastName,'?','')) = '' or  UC.lastName is null) then concat('Lastname-',UC.userid) else trim(replace(UC.lastName,'?','')) end as 'contact-Lastname'
       , trim(Stuff( Coalesce(' ' + NULLIF(UC.Phone, ''), '') , 1, 1, '') ) as 'contact-phone' --+ Coalesce(', ' + NULLIF(UC.Phone2, ''), '') + Coalesce(', ' + NULLIF(UC.Phone3, ''), '') + Coalesce('' + NULLIF(UC.Mobile, ''), '') + Coalesce(', ' + NULLIF(UC.WorkPhone, ''), '')
       --, UC.fax as 'contact-skype'
       , UC.email as 'contact-email' --, UC.email2, UC.email3   --, ed.email as 'contact-email' --iif(ed.rn > 1, concat(ed.email,'_',ed.rn), ed.email) --***
       , UC.occupation as 'contact-jobTitle'

       , note.note as 'contact-note' --***

-- owner
, UC2.email as 'owners'
, 0 as 'owners-super_user'
, getdate() as 'owners-insert_timestamp'
, 1 as 'owners-locked_user'
--, as 'owners-first_name'
, ' ' as 'owners-last_name'

-- document
, doc.files as 'document'
, 'CONTACT' as entity_type
, 'documents' as document_type
, 0 as default_file


       , trim(L.leadsource) as 'source' --, lower(concat('Lead Source - ',trim(L.leadsource))) as 'source'
       , UC.dateadded as 'registration date'
--       , e2.email as 'Personal Email'
       , case 
              when UC.nameprefix in ('Dr','Dr.') then 'Dr.' 
              when UC.nameprefix in ('Mr','Mr.') then 'Mr.' 
              when UC.nameprefix in ('Ms','Ms.') then 'Ms.' 
              when UC.nameprefix in ('Miss','Miss.') then 'Miss.' 
              when UC.nameprefix in ('Mrs','Mrs.') then 'Mrs.' 
              else '' end as 'Title'
       , UC.Mobile as 'mobile_phone'
       , ltrim(Stuff( Coalesce(' ' + NULLIF(UC.Phone2, ''), '') + Coalesce(', ' + NULLIF(UC.Phone3, ''), '') , 1, 1, '') ) as 'home_phone' --, UC.Phone2 as 'home_phone' --, ltrim(Stuff( Coalesce(' ' + NULLIF(UC.Phone2, ''), '') , 1, 0, '') ) as 'contact-home_phone'
--       , Cl.division as 'Department'
       , UC.NickName as 'PreferredName'
--       , Cl.desiredSkills as 'Skills'

--WORK LOCATION
       , UC.address1
       , UC.address2
       , UC.city
       , UC.state
       , UC.zip
       , UC.countryID

-- DISTRIBUTION LIST
       , d.groupname
       , d.name
       , getdate() as DistributionList_insert_timestamp
       
-- select count(*) --7487 -- select distinct status --convert(varchar(max),desiredSkills) as skills -- select top 100 L.*
--from bullhorn1.View_ClientContact Cl --where isPrimaryOwner = 1
--left join bullhorn1.BH_UserContact UC ON Cl.userID = UC.userID
from bullhorn1.BH_UserContact UC
left join bullhorn1.BH_lead L on L.userid = UC.userid
left join bullhorn1.BH_ClientCorporation CC on CC.clientCorporationID = UC.clientCorporationID
left join bullhorn1.BH_UserContact UC2 on UC2.userID = L.recruiterUserID
left join note on note.userID = UC.userID
left join doc on doc.clientContactUserID = UC.userID

left join bullhorn1.BH_DistributionListMember dm on dm.userID = uc.userID
left join bullhorn1.BH_DistributionList d on d.distributionListID = dm.distributionListID

where L.userid is not null --and L.leadsource &lt;&gt; ''
--left join ed ON Cl.clientID = ed.ID -- candidate-email-DUPLICATION
--left join e2 ON Cl.clientID = e2.ID -- candidate-email
--left join e3 ON Cl.clientID = e3.ID -- candidate-email
--left join e4 ON Cl.clientID = e4.ID -- candidate-email
--where (Cl.isdeleted &lt;&gt; 1 and Cl.status &lt;&gt; 'Archive') --where isPrimaryOwner = 1 --and UC.clientCorporationID = 1284
--where UC.userID in (98833)

</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1824</xloc>
      <yloc>1216</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact STAGE</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>Y</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <key>
        <name>actual_contactid</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>board</name>
        <rename>board</rename>
      </value>
      <value>
        <name>status</name>
        <rename>status</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1696</xloc>
      <yloc>928</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact document + type</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>

SELECT
	'contact' as Category
	, Cl.clientid as ContactExtID
	, replace(replace(concat(directory,clientContactFileID,fileExtension),'/','_'),'\','_') as UploadedName
	, case 
		when right(F.name, charindex('.', reverse(name))) = F.fileExtension then F.Name
		else concat(F.name, F.fileExtension) 
		end as RealName
	, F.dateadded as created
	--, 'document' as document_type
	, lower(
              case 
              when trim(F.type) like '%Formatted CV%' then 'BH Formatted CV'
              when trim(F.type) like '%CV%' then 'CV/Resume'
              when trim(F.type) like '%resume%' then 'CV/Resume'

              when trim(F.type) like '%other%' then 'Other docs'
			  when trim(F.type) like '' then 'Other docs'
			  when trim(F.type) is null then 'Other docs'
--			  when trim(F.type) like 'NA' then 'CV/Resume'

              else trim(F.type) end
       ) as tmp
	--, 'documents' as Sirius_document_type
	--, 0 as Sirius_default_file

from bullhorn1.View_ClientContactFile F
left join bullhorn1.BH_Client Cl on Cl.userid = F.clientcontactuserid 
--where F.fileExtension in ('.doc','.docx','.pdf','.xls','.xlsx','.rtf','.html') --18 rows</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>224</xloc>
      <yloc>1024</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact location 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>with contactloc as (
	select clientID, Cl.dateadded
        , case when (ltrim(replace(UC.firstName,'?','')) = '' or  UC.firstName is null) then 'Firstname' else ltrim(replace(UC.firstName,'?','')) end as 'contact-firstName'
        , UC.middleName as 'contact-middleName'
        , case when (ltrim(replace(UC.lastName,'?','')) = '' or  UC.lastName is null) then concat('Lastname-',Cl.clientID) else ltrim(replace(UC.lastName,'?','')) end as 'contact-Lastname'
		, cl.clientCorporationID
		, trim(uc.address1) as address1
		, trim(uc.address2) as address2
		, trim(uc.city) as city
		, trim(uc.state) as state
		, trim(uc.zip) as zip
		, uc.countryID
		, tc.COUNTRY
		, tc.ABBREVIATION
		, row_number() over(partition by cl.clientID order by lower(concat(uc.address1, uc.address2, city, state, zip, tc.COUNTRY))) as rn
	from bullhorn1.BH_Client cl
	left join bullhorn1.BH_UserContact uc ON cl.userID = uc.userID
	left join tmp_country tc on tc.CODE = uc.countryID
	where 1=1
	--and (uc.address1 is not NULL or uc.address1 &lt;&gt; '' or uc.address2 is not NULL or uc.address2 &lt;&gt; '')
	and Cl.isdeleted &lt;&gt; 1 -- and Cl.status &lt;&gt; 'Archive'
       --and Cl.dateAdded >= '2020-01-01 00:00:00' 
)
--select * from contactloc


--CONTACT LOCATION AS COMPANY LOCATION
select distinct
	  clientCorporationID as CompanyExtId
	, trim(left(concat_ws(', ', nullif(address1,''), nullif(address2,''), nullif(city,''), nullif(state,''), nullif(zip,''), nullif(COUNTRY,'')),300)) as locationName
	, trim(left(concat_ws(', ', nullif(address1,''), nullif(address2,''), nullif(city,''), nullif(state,''), nullif(zip,''), nullif(COUNTRY,'')),300)) as locationAddress
	, trim(coalesce(NULLIF(cast(city as nvarchar(max)), ''), '')) as city
	, trim(coalesce(NULLIF(cast(state as nvarchar(max)), ''), '')) as state
	, trim(coalesce(NULLIF(cast(zip as nvarchar(max)), ''), '')) as post_code
	, ABBREVIATION as country_code
	, 'PERSONAL_ADDRESS' as location_type
	, getdate() as insert_timestamp
	, concat_ws('-', clientID, clientCorporationID) as tmp --combination of contact-company IDs
    , clientID as ContactExtId
--select count(*)
from contactloc
where 1=1
and rn = 1 --249 rows
--and lower(concat(address1, address2, city, state, zip, countryID)) not in (select lower(concat(address1, address2, city, state, zip, countryID)) from bullhorn1.BH_ClientCorporation) --70 rows
--and clientCorporationID in (230)
--and clientCorporationID not in (81)
--and clientID not in (6984,19110,2320)
--and UC.userID in (23365)
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2112</xloc>
      <yloc>656</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact location 2 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>with contactloc as (
	select cl.userID, Cl.dateadded
        , case when (ltrim(replace(UC.firstName,'?','')) = '' or  UC.firstName is null) then 'Firstname' else ltrim(replace(UC.firstName,'?','')) end as 'contact-firstName'
        , UC.middleName as 'contact-middleName'
        , case when (ltrim(replace(UC.lastName,'?','')) = '' or  UC.lastName is null) then concat('Lastname-',Cl.userID) else ltrim(replace(UC.lastName,'?','')) end as 'contact-Lastname'
		, cl.clientCorporationID
		, trim(uc.address1) as address1
		, trim(uc.address2) as address2
		, trim(uc.city) as city
		, trim(uc.state) as state
		, trim(uc.zip) as zip
		, uc.countryID
		, tc.COUNTRY
		, tc.ABBREVIATION
		, row_number() over(partition by cl.userID order by lower(concat(uc.address1, uc.address2, city, state, zip, tc.COUNTRY))) as rn
	from bullhorn1.BH_lead cl
	left join bullhorn1.BH_UserContact uc ON cl.userID = uc.userID
	left join tmp_country tc on tc.CODE = uc.countryID
	where 1=1
	--and (uc.address1 is not NULL or uc.address1 &lt;&gt; '' or uc.address2 is not NULL or uc.address2 &lt;&gt; '')
	and Cl.isdeleted &lt;&gt; 1 -- and Cl.status &lt;&gt; 'Archive'
       --and Cl.dateAdded >= '2020-01-01 00:00:00' 
)
--select * from contactloc


--CONTACT LOCATION AS COMPANY LOCATION
select distinct
	  coalesce(NULLIF(cast(clientCorporationID as nvarchar(max)), ''), 'default') as CompanyExtId
	, left(concat_ws(', ', nullif(address1,''), nullif(address2,''), nullif(city,''), nullif(state,''), nullif(zip,''), nullif(COUNTRY,'')),300) as locationName
	, left(concat_ws(', ', nullif(address1,''), nullif(address2,''), nullif(city,''), nullif(state,''), nullif(zip,''), nullif(COUNTRY,'')),300) as locationAddress
	, coalesce(NULLIF(cast(city as nvarchar(max)), ''), '') as city
	, coalesce(NULLIF(cast(state as nvarchar(max)), ''), '') as state
	, coalesce(NULLIF(cast(zip as nvarchar(max)), ''), '') as post_code
	, ABBREVIATION as country_code
	, 'PERSONAL_ADDRESS' as location_type
	, getdate() as insert_timestamp
	, concat_ws('-', userID, clientCorporationID) as tmp --combination of contact-company IDs
    , userID as ContactExtId
--select count(*)
from contactloc
where 1=1
and rn = 1 --249 rows
--and lower(concat(address1, address2, city, state, zip, countryID)) not in (select lower(concat(address1, address2, city, state, zip, countryID)) from bullhorn1.BH_ClientCorporation) --70 rows
--and clientCorporationID in (230)
--and clientCorporationID not in (81)
--and clientID not in (6984,19110,2320)
--and UC.userID in (23365)
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2112</xloc>
      <yloc>1632</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact location 2 3</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
with contactloc as (
	select clientID, Cl.dateadded
        , case when (ltrim(replace(UC.firstName,'?','')) = '' or  UC.firstName is null) then 'Firstname' else ltrim(replace(UC.firstName,'?','')) end as 'contact-firstName'
        , UC.middleName as 'contact-middleName'
        , case when (ltrim(replace(UC.lastName,'?','')) = '' or  UC.lastName is null) then concat('Lastname-',Cl.clientID) else ltrim(replace(UC.lastName,'?','')) end as 'contact-Lastname'
		, cl.clientCorporationID
		, trim(uc.address1) as address1
		, trim(uc.address2) as address2
		, trim(uc.city) as city
		, trim(uc.state) as state
		, trim(uc.zip) as zip
		, uc.countryID
		, tc.COUNTRY
		, tc.ABBREVIATION
		, row_number() over(partition by cl.clientID order by lower(concat(uc.address1, uc.address2, city, state, zip, tc.COUNTRY))) as rn
	from bullhorn1.BH_Client cl
	left join bullhorn1.BH_UserContact uc ON cl.userID = uc.userID
	left join tmp_country tc on tc.CODE = uc.countryID
	where 1=1
	--and (uc.address1 is not NULL or uc.address1 &lt;&gt; '' or uc.address2 is not NULL or uc.address2 &lt;&gt; '')
	and Cl.isdeleted &lt;&gt; 1 -- and Cl.status &lt;&gt; 'Archive'
       --and Cl.dateAdded >= '2020-01-01 00:00:00' 
)
--select * from contactloc


--CONTACT LOCATION AS COMPANY LOCATION
select distinct
	  clientCorporationID as CompanyExtId
	, trim(left(concat_ws(', ', nullif(address1,''), nullif(address2,''), nullif(city,''), nullif(state,''), nullif(zip,''), nullif(COUNTRY,'')),300)) as locationName
	, trim(left(concat_ws(', ', nullif(address1,''), nullif(address2,''), nullif(city,''), nullif(state,''), nullif(zip,''), nullif(COUNTRY,'')),300)) as locationAddress
	, trim(coalesce(NULLIF(cast(city as nvarchar(max)), ''), '')) as city
	, trim(coalesce(NULLIF(cast(state as nvarchar(max)), ''), '')) as state
	, trim(coalesce(NULLIF(cast(zip as nvarchar(max)), ''), '')) as post_code
	, ABBREVIATION as country_code
	, 'PERSONAL_ADDRESS' as location_type
	, getdate() as insert_timestamp
	, convert(varchar(1000),clientCorporationID) as tmp
-- IMPORT CONTACT LOCATION
	--, concat_ws('-', clientID, clientCorporationID) as tmp --combination of contact-company IDs
    --, clientID as ContactExtId
--select count(*)
from contactloc
where 1=1
and rn = 1
--and lower(concat(address1, address2, city, state, zip, countryID)) not in (select lower(concat(address1, address2, city, state, zip, countryID)) from bullhorn1.BH_ClientCorporation) --70 rows
--and clientCorporationID in (230)
--and clientCorporationID not in (81)
--and clientID not in (6984,19110,2320)
--and UC.userID in (23365)
 
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2112</xloc>
      <yloc>592</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact location 2 3 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
with contactloc as (
	select cl.userID, Cl.dateadded
        , case when (ltrim(replace(UC.firstName,'?','')) = '' or  UC.firstName is null) then 'Firstname' else ltrim(replace(UC.firstName,'?','')) end as 'contact-firstName'
        , UC.middleName as 'contact-middleName'
        , case when (ltrim(replace(UC.lastName,'?','')) = '' or  UC.lastName is null) then concat('Lastname-',Cl.userID) else ltrim(replace(UC.lastName,'?','')) end as 'contact-Lastname'
		, cl.clientCorporationID
		, trim(uc.address1) as address1
		, trim(uc.address2) as address2
		, trim(uc.city) as city
		, trim(uc.state) as state
		, trim(uc.zip) as zip
		, uc.countryID
		, tc.COUNTRY
		, tc.ABBREVIATION
		, row_number() over(partition by cl.userID order by lower(concat(uc.address1, uc.address2, city, state, zip, tc.COUNTRY))) as rn
	from bullhorn1.BH_lead cl
	left join bullhorn1.BH_UserContact uc ON cl.userID = uc.userID
	left join tmp_country tc on tc.CODE = uc.countryID
	where 1=1
	--and (uc.address1 is not NULL or uc.address1 &lt;&gt; '' or uc.address2 is not NULL or uc.address2 &lt;&gt; '')
	and cl.isdeleted &lt;&gt; 1 -- and Cl.status &lt;&gt; 'Archive'
       --and Cl.dateAdded >= '2020-01-01 00:00:00' 
)
--select * from contactloc


--CONTACT LOCATION AS COMPANY LOCATION
select distinct
	  coalesce(NULLIF(cast(clientCorporationID as nvarchar(max)), ''), 'default') as CompanyExtId
	, left(concat_ws(', ', nullif(address1,''), nullif(address2,''), nullif(city,''), nullif(state,''), nullif(zip,''), nullif(COUNTRY,'')),300) as locationName
	, left(concat_ws(', ', nullif(address1,''), nullif(address2,''), nullif(city,''), nullif(state,''), nullif(zip,''), nullif(COUNTRY,'')),300) as locationAddress
	, coalesce(NULLIF(cast(city as nvarchar(max)), ''), '') as city
	, coalesce(NULLIF(cast(state as nvarchar(max)), ''), '') as state
	, coalesce(NULLIF(cast(zip as nvarchar(max)), ''), '') as post_code
	, ABBREVIATION as country_code
	, 'PERSONAL_ADDRESS' as location_type
	, getdate() as insert_timestamp
	, coalesce(NULLIF(cast(clientCorporationID as nvarchar(max)), ''), 'default') as tmp 
-- IMPORT CONTACT LOCATION
	--, concat_ws('-', clientID, clientCorporationID) as tmp --combination of contact-company IDs
    --, clientID as ContactExtId
--select count(*)
from contactloc
where 1=1
and rn = 1
--and lower(concat(address1, address2, city, state, zip, countryID)) not in (select lower(concat(address1, address2, city, state, zip, countryID)) from bullhorn1.BH_ClientCorporation) --70 rows
--and clientCorporationID in (230)
--and clientCorporationID not in (81)
--and clientID not in (6984,19110,2320)
--and UC.userID in (23365)
 
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2112</xloc>
      <yloc>1568</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact lookup 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contactExtId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCContactID</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2352</xloc>
      <yloc>784</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact lookup 3 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contactExtId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCContactID</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1472</xloc>
      <yloc>848</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>DB industry</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>/* OLD SCRIPT
with
ind (clientCorporationID,ind) as (SELECT clientCorporationID
	, ind.value as ind 
	FROM bullhorn1.BH_ClientCorporation m 
	CROSS APPLY STRING_SPLIT( ltrim(rtrim(convert(varchar(max), m.businessSectorList) )), ';') AS ind)

select
       distinct ind as 'company-industry'
       , getdate() as insert_timestamp
from ind
where ind &lt;&gt; ''
order by 'company-industry' */

select distinct name as industry
, getdate() as insert_timestamp
from bullhorn1.BH_BusinessSectorList
order by name</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>224</xloc>
      <yloc>1328</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>DISTRIBUTION LIST</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>contact_group_contact</table>
      <key>
        <name>VCContactID</name>
        <field>contact_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCContactGroupID</name>
        <field>contact_group_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>contact_id</name>
        <rename>VCContactID</rename>
        <update>N</update>
      </value>
      <value>
        <name>contact_group_id</name>
        <rename>VCContactGroupID</rename>
        <update>N</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>N</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2608</xloc>
      <yloc>784</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database join</name>
    <type>DBJoin</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <rowlimit>0</rowlimit>
    <sql>select case when id is NULL then -10
        else id end as final_user_account_id
, name as user_name
, email as apis_user_email
from user_account
where 1=1
--and deleted_timestamp is NULL
--and locked_user = 0
and lower(email) = ?</sql>
    <outer_join>Y</outer_join>
    <replace_vars>N</replace_vars>
    <parameter>
      <field>
        <name>authoremail</name>
        <type>String</type>
      </field>
    </parameter>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>592</xloc>
      <yloc>736</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database join 2</name>
    <type>DBJoin</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <rowlimit>0</rowlimit>
    <sql>select case when id is NULL then -10
        else id end as final_user_account_id
, name as user_name
, email as apis_user_email
from user_account
where 1=1
--and deleted_timestamp is NULL
--and locked_user = 0
and lower(email) = ?</sql>
    <outer_join>Y</outer_join>
    <replace_vars>N</replace_vars>
    <parameter>
      <field>
        <name>user_account_id</name>
        <type>String</type>
      </field>
    </parameter>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3744</xloc>
      <yloc>1040</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database join 2 2</name>
    <type>DBJoin</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <rowlimit>0</rowlimit>
    <sql>select
	case when id is NULL then -10
        else id end as final_user_account_id
	, name as user_name
	, email as apis_user_email
from user_account
where 1=1
--and deleted_timestamp is NULL
--and locked_user = 0
and lower(email) = ?</sql>
    <outer_join>Y</outer_join>
    <replace_vars>N</replace_vars>
    <parameter>
      <field>
        <name>user_account_id</name>
        <type>Integer</type>
      </field>
    </parameter>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1360</xloc>
      <yloc>656</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database join 2 2 2</name>
    <type>DBJoin</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <rowlimit>0</rowlimit>
    <sql>select case when id is NULL then -10
        else id end as final_user_account_id
, name as user_name
, email as apis_user_email
from user_account
where 1=1
--and deleted_timestamp is NULL
--and locked_user = 0
and lower(email) = ?</sql>
    <outer_join>Y</outer_join>
    <replace_vars>N</replace_vars>
    <parameter>
      <field>
        <name>user_account_id</name>
        <type>String</type>
      </field>
    </parameter>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4512</xloc>
      <yloc>864</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 16</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>candidate_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5088</xloc>
      <yloc>1296</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 2 3 2 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contact_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>actual_contactid</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1472</xloc>
      <yloc>720</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 4 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>actual_candidate_id</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5392</xloc>
      <yloc>1104</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 4 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate_source</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>vc_source_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2480</xloc>
      <yloc>464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 4 3 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate_source</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>vc_source_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2480</xloc>
      <yloc>1376</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 5</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contact-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>vc_contact_id</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2352</xloc>
      <yloc>464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 5 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contact-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>vc_contact_id</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2352</xloc>
      <yloc>1376</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Desired Location</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>

select
      C.candidateID as 'candidate-externalId', C.userID as '#userID'
    , coalesce(nullif(replace(C.FirstName,'?',''), ''), 'No Firstname') as 'contact-firstName'
    , coalesce(nullif(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID)) as 'contact-lastName'
    , convert(nvarchar(max),c.desiredlocations) as 'Desired Location'
    , concat('desired_',C.candidateID) as 'tmp'

from bullhorn1.Candidate C
where C.isdeleted &lt;&gt; 1 --and C.status &lt;&gt; 'Archive' 
and (c.desiredlocations is not null and convert(nvarchar(max),c.desiredlocations) &lt;&gt; '' )</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4928</xloc>
      <yloc>1600</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Distribution List 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>

with
mail1 (ID,userID,email,rn) as (
       select C.candidateID, C.userID
	      , replace(translate(value, '!'':"&lt;&gt;[]();,+/\&amp;?•*|‘','                     '),char(9),'') as email --translate special characters
	      , row_number() over(partition by C.candidateID order by C.candidateID) as rn
	from bullhorn1.BH_UserContact UC left join bullhorn1.View_Candidate C on C.userID = UC.UserID
	--cross apply string_split( concat_ws(' ',UC.email, UC.email2, UC.email3),' ')
	cross apply string_split( concat_ws(' ', nullif(convert(nvarchar(max),trim(UC.email)), '') , nullif(convert(nvarchar(max),trim(UC.email2)), ''), nullif(convert(nvarchar(max),trim(UC.email3)), '') ),' ')
	where (UC.email like '%_@_%.__%' or UC.email2 like '%_@_%.__%' or UC.email3 like '%_@_%.__%') and C.isdeleted &lt;&gt; 1 --and C.status &lt;&gt; 'Archive'
--       and C.userID in (115048)
--       and C.candidateID in (7232,180193)
	)
--select * from mail1 where email &lt;&gt; '' and ID in (7232,180193)


, mail1a (ID,userID,email,rn) as (
       select C.candidateID, C.userID
              , coalesce( nullif( mail1.email,''), concat('candidate_',cast(C.userID as varchar(max)),'@noemailaddress.co')) as email
              , rn
       from bullhorn1.View_Candidate C
       left join mail1 on mail1.ID = C.candidateID --email-deduplication
--       where C.userID in (115048)
--       where candidateID in (7232,180193)
	)
--select * from mail1a where ID in (7232,180193)
--, t2 as ( select userID, email from mail1a group by userID, email having count(*) > 1 )
, t2 as ( select email from mail1a group by email having count(*) > 1 )



select convert(varchar(max),t1.ID) as ID, t1.userID, t1.email, t1.rn
	, 'Duplicated' as name
	, getdate() as insert_timestamp
from mail1a t1
--inner join t2 on t1.userID = t2.userID and t1.email = t2.email
inner join t2 on t1.email = t2.email
--and t1.userID in (1130, 1147)

</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4880</xloc>
      <yloc>400</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Distribution List 3</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select 
	'Duplicated' as GROUP_NAME
	, -10 as owner_id
	, 1 as share_permission
	, getdate() as insert_timestamp_ind
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4880</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Distribution lookup</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact_group</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>name</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCContactGroupID</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2480</xloc>
      <yloc>784</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Distribution lookup 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate_group</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCContactGroupID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4512</xloc>
      <yloc>272</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Distribution lookup 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact_group</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>name</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCContactGroupID</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1360</xloc>
      <yloc>848</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>EMAIL SUBSCRIPTION 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema/>
      <table>email_subscription</table>
      <key>
        <name>email</name>
        <field>email</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>email</name>
        <rename>email</rename>
        <update>Y</update>
      </value>
      <value>
        <name>subscribed</name>
        <rename>subcribed</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2352</xloc>
      <yloc>976</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Email Subscription + contact</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>with
-- EMAIL
  mail1 (ID,email) as (select UC.userid, replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(concat(UC.email,',',UC.email2,',',UC.email3),'/',' '),'&lt;',' '),'>',' '),'(',' '),')',' '),':',' '),'.@','@'),'@.','@'),'+',' '),'&amp;',' '),'[',' '),']',' '),'?',' '),'''',' '),';',' '),'•',' '),'*',' '),'|',' '),'‘',' '),CHAR(9),' ') as mail from bullhorn1.BH_UserContact UC /*left join bullhorn1.Candidate C on C.userID = UC.UserID*/ where UC.email like '%_@_%.__%' or UC.email2 like '%_@_%.__%' or UC.email3 like '%_@_%.__%')
, mail2 (ID,email) as (SELECT ID, email.value as email FROM mail1 m CROSS APPLY STRING_SPLIT(m.email,',') AS email)
, mail3 (ID,email) as (SELECT ID, case when RIGHT(email, 1) = '.' then LEFT(email, LEN(email) - 1) when LEFT(email, 1) = '.' then RIGHT(email, LEN(email) - 1) else email end as email from mail2 WHERE email like '%_@_%.__%')
--select * from mail3


-- Email Subscribed for (CONTACT &amp; CANDIDATE)
, t as (
       select
                Cl.clientID as 'contact-externalId' --, Cl.userID as '#UserID'
              , case when (ltrim(replace(UC.firstName,'?','')) = '' or  UC.firstName is null) then 'Firstname' else ltrim(replace(UC.firstName,'?','')) end as 'contact-firstName'
              , case when (ltrim(replace(UC.lastName,'?','')) = '' or  UC.lastName is null) then concat('Lastname-',Cl.clientID) else ltrim(replace(UC.lastName,'?','')) end as 'contact-Lastname'
              , mail3.email as "email"
       from bullhorn1.BH_Client Cl --where isPrimaryOwner = 1
       left join bullhorn1.BH_UserContact UC ON Cl.userID = UC.userid
       left join mail3 on mail3.ID = Cl.userid 
       where Cl.isdeleted &lt;&gt; 1  and uc.massmailoptout = 1 and mail3.ID is not null
)

select distinct email, 0 as "subcribed" from t</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2112</xloc>
      <yloc>976</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Email Subscription - Candidate </name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>with
-- EMAIL
  mail1 (ID,email) as (select UC.userid, replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(concat(UC.email,',',UC.email2,',',UC.email3),'/',' '),'&lt;',' '),'>',' '),'(',' '),')',' '),':',' '),'.@','@'),'@.','@'),'+',' '),'&amp;',' '),'[',' '),']',' '),'?',' '),'''',' '),';',' '),'•',' '),'*',' '),'|',' '),'‘',' '),CHAR(9),' ') as mail from bullhorn1.BH_UserContact UC /*left join bullhorn1.Candidate C on C.userID = UC.UserID*/ where UC.email like '%_@_%.__%' or UC.email2 like '%_@_%.__%' or UC.email3 like '%_@_%.__%')
, mail2 (ID,email) as (SELECT ID, email.value as email FROM mail1 m CROSS APPLY STRING_SPLIT(m.email,',') AS email)
, mail3 (ID,email) as (SELECT ID, case when RIGHT(email, 1) = '.' then LEFT(email, LEN(email) - 1) when LEFT(email, 1) = '.' then RIGHT(email, LEN(email) - 1) else email end as email from mail2 WHERE email like '%_@_%.__%')
--select * from mail3

-- Email Subscribed for (CONTACT &amp; CANDIDATE)
, t as (
/*       select
                Cl.clientID as 'contact-externalId' --, Cl.userID as '#UserID'
              , case when (ltrim(replace(UC.firstName,'?','')) = '' or  UC.firstName is null) then 'Firstname' else ltrim(replace(UC.firstName,'?','')) end as 'contact-firstName'
              , case when (ltrim(replace(UC.lastName,'?','')) = '' or  UC.lastName is null) then concat('Lastname-',Cl.clientID) else ltrim(replace(UC.lastName,'?','')) end as 'contact-Lastname'
              , mail3.email as "email"
       from bullhorn1.BH_Client Cl --where isPrimaryOwner = 1
       left join bullhorn1.BH_UserContact UC ON Cl.userID = UC.userid
       left join mail3 on mail3.ID = Cl.userid 
       where Cl.isdeleted &lt;&gt; 1 and Cl.status &lt;&gt; 'Archive' and uc.massmailoptout = 1 and mail3.ID is not null
UNION*/
       select
                C.candidateID as 'externalId'
              , coalesce(nullif(replace(C.FirstName,'?',''), ''), 'No Firstname') as 'contact-firstName'
              , coalesce(nullif(replace(C.LastName,'?',''), ''), concat('Lastname-',C.candidateID)) as 'contact-lastName'
              , mail3.email as "email"
              --, C.mobile as 'candidate-phone'
       -- select distinct C.massmailoptout, count(*)
       from bullhorn1.Candidate C
       left join mail3 on mail3.ID = C.userid        
       where C.isdeleted &lt;&gt; 1 and mail3.ID is not null and C.massmailoptout = 1 --and C.status &lt;&gt; 'Archive' 
       --and c.mobile like '%+44%'
       --group by C.massmailoptout
)
select distinct email, 0 as 'subcribed', -10 as last_modified_by from t</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5248</xloc>
      <yloc>976</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Employment history + Reference+ Education</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
with
-- Reference Summary
-- select referenceTitle,* from bullhorn1.BH_UserReference where referenceTitle is not null;
  ReferenceSummary(userId, reference) as (
       SELECT r.userId
       , STRING_AGG(
                     REPLACE( REPLACE( REPLACE( REPLACE( REPLACE(REPLACE( REPLACE( REPLACE( REPLACE( REPLACE( 
                     REPLACE( REPLACE( REPLACE( REPLACE( REPLACE(REPLACE( REPLACE( REPLACE( REPLACE( REPLACE( 
                     REPLACE( REPLACE( REPLACE( REPLACE( REPLACE(REPLACE( REPLACE( REPLACE( REPLACE( 
                            concat_ws (''
                                   , Coalesce('Date Added: ' + NULLIF(convert(nvarchar(max),r.dateAdded), '') + '&lt;br/>', '')
                                   , Coalesce('Candidate Title: ' + NULLIF(convert(nvarchar(max),r.candidateTitle), '') + '&lt;br/>', '')
                                   , Coalesce('Client Corporation: ' + NULLIF(convert(nvarchar(max),r.clientCorporationID), '') + '&lt;br/>', '')
                                   , Coalesce('Company: ' + NULLIF(convert(nvarchar(max),r.companyName), '') + '&lt;br/>', '')
                                   , Coalesce('Job Posting: ' + NULLIF(convert(nvarchar(max),j.title), '') + '&lt;br/>', '') --r.jobPostingID
                                   , Coalesce('Employment Start: ' + NULLIF(convert(nvarchar(max),r.employmentStart), '') + '&lt;br/>', '')
                                   , Coalesce('Employment End: ' + NULLIF(convert(nvarchar(max),r.employmentEnd), '') + '&lt;br/>', '')
                                   , Coalesce('Reference ID: ' + NULLIF(convert(nvarchar(max),r.userReferenceID), '') + '&lt;br/>', '')
                                   , Coalesce('Reference: ' + NULLIF(convert(nvarchar(max),r.referenceUserID), '') + '&lt;br/>', '')
                                   , Coalesce('Reference Title: ' + NULLIF(convert(nvarchar(max),r.referenceTitle), '') + '&lt;br/>', '')
                                   , Coalesce('Reference First Name: ' + NULLIF(convert(nvarchar(max),r.referenceFirstName), '') + '&lt;br/>', '')
                                   , Coalesce('Reference Last Name: ' + NULLIF(convert(nvarchar(max),r.referenceLastName), '') + '&lt;br/>', '')
                                   , Coalesce('Reference Email: ' + NULLIF(convert(nvarchar(max),r.referenceEmail), '') + '&lt;br/>', '')
                                   , Coalesce('Reference Phone: ' + NULLIF(convert(nvarchar(max),r.referencePhone), '') + '&lt;br/>', '')
                                   , Coalesce('Status: ' + NULLIF(convert(nvarchar(max),r.status), '') + '&lt;br/>', '')
                                   , Coalesce('Years Known: ' + NULLIF(convert(nvarchar(max),r.yearsKnown), '') + '&lt;br/>', '')
                            )
                     ,char(0x0000),'') ,char(0x0001),'') ,char(0x0002),'') ,char(0x0003),'') ,char(0x0004),'') 
                     ,char(0x0005),'') ,char(0x0006),'') ,char(0x0007),'') ,char(0x0008),'') ,char(0x000B),'') 
                     ,char(0x000C),'') ,char(0x000E),'') ,char(0x000F),'') ,char(0x0010),'') ,char(0x0011),'') 
                     ,char(0x0012),'') ,char(0x0013),'') ,char(0x0014),'') ,char(0x0015),'') ,char(0x0016),'') 
                     ,char(0x0017),'') ,char(0x0018),'') ,char(0x0019),'') ,char(0x001A),'') ,char(0x001B),'') 
                     ,char(0x001C),'') ,char(0x001D),'') ,char(0x001E),'') ,char(0x001F),'') --as es
       ,'&lt;br/>&lt;br/>' ) WITHIN GROUP (ORDER BY r.dateadded) reference
       FROM bullhorn1.BH_UserReference r
       left join bullhorn1.BH_JobPosting j on j.jobPostingID = r.jobPostingID
       where r.isdeleted &lt;&gt; 1
       GROUP BY r.userId        
       )
--select top 10 * from referenceSummary where userid in (163454);



-- Employment History -- select top 100 * from bullhorn1.BH_userWorkHistory
, EmploymentHistory(userId, eh) as (
       SELECT userId
         , STRING_AGG(
--       , STUFF(( 
--                     select char(10) + 
                     REPLACE( REPLACE( REPLACE( REPLACE( REPLACE(REPLACE( REPLACE( REPLACE( REPLACE( REPLACE( 
                     REPLACE( REPLACE( REPLACE( REPLACE( REPLACE(REPLACE( REPLACE( REPLACE( REPLACE( REPLACE( 
                     REPLACE( REPLACE( REPLACE( REPLACE( REPLACE(REPLACE( REPLACE( REPLACE( REPLACE( 
                            concat_ws ('',
                              coalesce('Client Corporation: ' + nullif(cast(clientCorporationID as nvarchar(max)), '') + '&lt;br/>', '')
                            , coalesce('Company Name: ' + nullif(cast(companyName as nvarchar(max)) + '&lt;br/>', ''), '')
                            , coalesce('Job Posting: ' + nullif(cast(title as nvarchar(max)), '')  + '&lt;br/>', '') --jobPostingID
                            , coalesce('Title: ' + nullif(cast(title as nvarchar(max)), '') + '&lt;br/>', '')
                            , coalesce('Is Last Job: ' + nullif(convert(nvarchar(max), case when isLastJob = 1 then 'Yes' when isLastJob = 0 then 'No' end ), '') + '&lt;br/>', '')
                            , coalesce('Placement: ' + nullif(cast(placementID as nvarchar(max)), '') + '&lt;br/>', '')
                            , coalesce('Salary Low: ' + nullif(cast(salary1 as nvarchar(max)), '')  + '&lt;br/>', '')
                            , coalesce('Salary High: ' + nullif(cast(salary2 as nvarchar(max)), '') + '&lt;br/>', '')
                            , coalesce('Salary Type: ' + nullif(cast(salaryType as nvarchar(max)), '') + '&lt;br/>', '')
                            , coalesce('Bonus: ' + nullif(cast(bonus as nvarchar(max)), '') + '&lt;br/>', '')
                            , coalesce('Start Date: ' + nullif(cast(startDate as nvarchar(max)), '') + '&lt;br/>' , '')
                            , coalesce('End Date: ' + nullif(cast(endDate as nvarchar(max)), '')  + '&lt;br/>', '')
                            , coalesce('Date Added: ' + nullif(cast(dateAdded as nvarchar(max)) + '&lt;br/>', ''), '')
                            , coalesce('Termination Reason: ' + nullif(cast(terminationReason as nvarchar(max)), '') + '&lt;br/>', '')
                            , coalesce('Commission: ' + nullif(cast(commission as nvarchar(max)), '') + '&lt;br/>', '')
                            --, coalesce('Comments: ' + nullif(cast(comments as nvarchar(max)), '') + '&lt;br/>' + '&lt;br/>', '')
                            , coalesce('Comments:&lt;br/>' + nullif( trim(replace(replace(cast(comments as nvarchar(max)),char(10),'&lt;br/>'),'p.std   { margin-top: 0; margin-bottom: 0; border: 0 0 0 0; }','')), '') + '&lt;br/>' + '&lt;br/>', '')
                            --+ coalesce('User Work History ID: ' + nullif(cast(userWorkHistoryID as nvarchar(max)), '') + '&lt;br/>', '')
                            --+ coalesce('Comments: ' + nullif(replace([dbo].[udf_StripHTML](comments),'Â ',''), '') + '&lt;br/>', '')
                            --+ coalesce('Comments: ' + nullif(replace([dbo].[fn_ConvertHTMLToText](comments),'Â ',''), '') + '&lt;br/>', '')
                            )
                     ,char(0x0000),'') ,char(0x0001),'') ,char(0x0002),'') ,char(0x0003),'') ,char(0x0004),'') 
                     ,char(0x0005),'') ,char(0x0006),'') ,char(0x0007),'') ,char(0x0008),'') ,char(0x000B),'') 
                     ,char(0x000C),'') ,char(0x000E),'') ,char(0x000F),'') ,char(0x0010),'') ,char(0x0011),'') 
                     ,char(0x0012),'') ,char(0x0013),'') ,char(0x0014),'') ,char(0x0015),'') ,char(0x0016),'') 
                     ,char(0x0017),'') ,char(0x0018),'') ,char(0x0019),'') ,char(0x001A),'') ,char(0x001B),'') 
                     ,char(0x001C),'') ,char(0x001D),'') ,char(0x001E),'') ,char(0x001F),'') --as eh
--                     from bullhorn1.BH_userWorkHistory
--       WHERE userId = a.userId order by startDate desc
--       FOR XML PATH (''), TYPE).value('.', 'nvarchar(MAX)'), 1, 1, '') AS es 
--       FROM bullhorn1.BH_userWorkHistory as a
--       left join bullhorn1.BH_JobPosting j on j.jobPostingID = a.jobPostingID
--       --where userid in (164043)
--       GROUP BY a.userId 
       ,'&lt;br/>&lt;br/>' ) WITHIN GROUP (ORDER BY startDate desc) eh
       FROM bullhorn1.BH_userWorkHistory
       WHERE isdeleted &lt;&gt; 1
       GROUP BY userId
       )
--select top 10 * from EmploymentHistory --where userid in (164043);




------------------------------------------------------------------------------------------------------------------------------------------------------------
-- NEWEST Education
-- select * from bullhorn1.BH_UserEducation 
, EducationGroup as (select userID, max(userEducationID) as userEducationID from bullhorn1.BH_UserEducation group by userID)
, Education as (
       select EG.userID
              , UE.certification
              , UE.city
              , UE.comments
              --, UE.customText1
              , UE.dateAdded
              , UE.degree
              , UE.endDate
              , UE.expirationDate
              , UE.gpa
              , convert(varchar(10),UE.graduationDate,110) as graduationDate
              , UE.major
              , UE.school
              , UE.startDate
              , UE.state
              , UE.userEducationID       
       from EducationGroup EG left join bullhorn1.BH_UserEducation UE on EG.userEducationID = UE.userEducationID)



-- Education Summary
, EducationSummary(userId, es) as (
       SELECT e.userId
       , STRING_AGG(
                     REPLACE( REPLACE( REPLACE( REPLACE( REPLACE(REPLACE( REPLACE( REPLACE( REPLACE( REPLACE( 
                     REPLACE( REPLACE( REPLACE( REPLACE( REPLACE(REPLACE( REPLACE( REPLACE( REPLACE( REPLACE( 
                     REPLACE( REPLACE( REPLACE( REPLACE( REPLACE(REPLACE( REPLACE( REPLACE( REPLACE( 
                            stuff(
                                     coalesce('Date Added: ' + nullif(cast(e.dateAdded as nvarchar(max)), '') + char(10), '')                   
                                   + coalesce('Certification: ' + nullif(cast(e.certification as nvarchar(max)), '') + char(10), '')
                                   + coalesce('City: ' + nullif(cast(e.city as nvarchar(max)), '') + char(10), '')
                                   + coalesce('Comments: ' + nullif(cast(e.comments as nvarchar(max)), '') + char(10), '')
                                   --+ coalesce('Country: ' + nullif(cast(e.customText1 as nvarchar(max)), '') + char(10), '')
                                   + coalesce('Degree: ' + nullif(cast(e.degree as nvarchar(max)), '') + char(10), '')
                                   + coalesce('End Date: ' + nullif(cast(e.endDate as nvarchar(max)), '') + char(10), '')
                                   + coalesce('Expiration Date: ' + nullif(cast(e.expirationDate as nvarchar(max)), '') + char(10), '')
                                   + coalesce('GPA: ' + nullif(cast(e.gpa as nvarchar(max)), '') + char(10), '')
                                   + coalesce('Graduation Date: ' + nullif(cast(e.graduationDate as nvarchar(max)), '') + char(10), '')
                                   + coalesce('Major: ' + nullif(cast(e.major as nvarchar(max)), '') + char(10), '')
                                   + coalesce('School: ' + nullif(cast(e.school as nvarchar(max)), '') + char(10), '')
                                   + coalesce('Start Date: ' + nullif(cast(e.startDate as nvarchar(max)), '') + char(10), '')
                                   + coalesce('State: ' + nullif(cast(e.state as nvarchar(max)), '') + char(10), '')
                                   --+ coalesce('Education ID: ' + nullif(cast(e.userEducationID as nvarchar(max)), '') + char(10), '')
                            , 1, 0, '')
                     ,char(0x0000),'') ,char(0x0001),'') ,char(0x0002),'') ,char(0x0003),'') ,char(0x0004),'') 
                     ,char(0x0005),'') ,char(0x0006),'') ,char(0x0007),'') ,char(0x0008),'') ,char(0x000B),'') 
                     ,char(0x000C),'') ,char(0x000E),'') ,char(0x000F),'') ,char(0x0010),'') ,char(0x0011),'') 
                     ,char(0x0012),'') ,char(0x0013),'') ,char(0x0014),'') ,char(0x0015),'') ,char(0x0016),'') 
                     ,char(0x0017),'') ,char(0x0018),'') ,char(0x0019),'') ,char(0x001A),'') ,char(0x001B),'') 
                     ,char(0x001C),'') ,char(0x001D),'') ,char(0x001E),'') ,char(0x001F),'') --as es
       ,char(10) ) WITHIN GROUP (ORDER BY dateadded) es
       FROM bullhorn1.BH_UserEducation e
       WHERE isdeleted &lt;&gt; 1
       GROUP BY e.userId        
       )
--select top 10 * from EducationSummary where userid in (163454);
-- select * from bullhorn1.BH_UserEducation where customText1 is not null


--select * from bullhorn1.View_UserCertification;
--select * from bullhorn1.BH_UserCertification;
--select * from bullhorn1.BH_Certification;
--select * from bullhorn1.BH_CertificationList;
--select * from bullhorn1.BH_CertificationGroup;
--select * from bullhorn1.BH_CertificationGroupCertification;

-- BH_Certification
, -- with
  BH_Certification(CertificationID, CandidateCertification) as (
       SELECT CertificationId
       , STRING_AGG(
                     REPLACE( REPLACE( REPLACE( REPLACE( REPLACE(REPLACE( REPLACE( REPLACE( REPLACE( REPLACE( 
                     REPLACE( REPLACE( REPLACE( REPLACE( REPLACE(REPLACE( REPLACE( REPLACE( REPLACE( REPLACE( 
                     REPLACE( REPLACE( REPLACE( REPLACE( REPLACE(REPLACE( REPLACE( REPLACE( REPLACE( 
                            stuff(
                            + coalesce('CategoryID: ' + nullif(trim(convert(nvarchar(max),c.categoryID)), '') + char(10), '')
                            --+ coalesce('Certification Groups: ' + nullif(trim(convert(nvarchar(max),c.certificationGroups)), '') + char(10), '')
                            + coalesce('Country: ' + nullif(trim(convert(nvarchar(max),c.countryID)), '') + char(10), '')
                            + coalesce('Description: ' + nullif(trim(convert(nvarchar(max),c.description)), '') + char(10), '')
                            + coalesce('Expiration Date - Optional: ' + nullif(trim(convert(nvarchar(max),c.expirationDateOptional)), '') + char(10), '')
                            + coalesce('Name: ' + nullif(trim(convert(nvarchar(max),c.name)), '') + char(10), '')
                            --+ coalesce('Private Labels: ' + nullif(trim(convert(nvarchar(max),c.privateLabels)), '') + char(10), '')
                            + coalesce('SpecialtyID: ' + nullif(trim(convert(nvarchar(max),c.specialtyID)), '') + char(10), '')
                            + coalesce('State: ' + nullif(trim(convert(nvarchar(max),c.state)), '') + char(10), '')
                            , 1, 0, '')
                     ,char(0x0000),'') ,char(0x0001),'') ,char(0x0002),'') ,char(0x0003),'') ,char(0x0004),'') 
                     ,char(0x0005),'') ,char(0x0006),'') ,char(0x0007),'') ,char(0x0008),'') ,char(0x000B),'') 
                     ,char(0x000C),'') ,char(0x000E),'') ,char(0x000F),'') ,char(0x0010),'') ,char(0x0011),'') 
                     ,char(0x0012),'') ,char(0x0013),'') ,char(0x0014),'') ,char(0x0015),'') ,char(0x0016),'') 
                     ,char(0x0017),'') ,char(0x0018),'') ,char(0x0019),'') ,char(0x001A),'') ,char(0x001B),'') 
                     ,char(0x001C),'') ,char(0x001D),'') ,char(0x001E),'') ,char(0x001F),'') --as es
       ,char(10) ) WITHIN GROUP (ORDER BY expirationDateOptional) Certification
       FROM bullhorn1.BH_Certification c GROUP BY CertificationId        
       )
--select * from BH_Certification

--BH_UserCertification
, CandidateCertification(userId, CandidateCertification) as (
       SELECT userId
       , STRING_AGG(
                     REPLACE( REPLACE( REPLACE( REPLACE( REPLACE(REPLACE( REPLACE( REPLACE( REPLACE( REPLACE( 
                     REPLACE( REPLACE( REPLACE( REPLACE( REPLACE(REPLACE( REPLACE( REPLACE( REPLACE( REPLACE( 
                     REPLACE( REPLACE( REPLACE( REPLACE( REPLACE(REPLACE( REPLACE( REPLACE( REPLACE( 
                            stuff(
                            + coalesce('Board Certification: ' + nullif(trim(convert(nvarchar(max),c.boardCertification)), '') + char(10), '')
                            --+ coalesce('Comments: ' + nullif(trim(convert(nvarchar(max),c.candidateCredentialNote)), '') + char(10), '')
                            + coalesce('Requirement Type: ' + nullif(trim(convert(nvarchar(max),c.certificationID)), '') + char(10), '')
                            + coalesce('Compact: ' + nullif(trim(convert(nvarchar(max),c.compact)), '') + char(10), '')
                            + coalesce('Date Certified: ' + nullif(trim(convert(nvarchar(max),c.dateCertified)), '') + char(10), '')
                            + coalesce('Expiration Date: ' + nullif(trim(convert(nvarchar(max),c.dateExpiration)), '') + char(10), '')
                            + coalesce('Date Last Modified: ' + nullif(trim(convert(nvarchar(max),c.dateLastModified)), '') + char(10), '')
                            + coalesce('isDeleted: ' + nullif(trim(convert(nvarchar(max),c.isDeleted)), '') + char(10), '')
                            --+ coalesce('Issuing Authority: ' + nullif(trim(convert(nvarchar(max),c.issuingAuthority)), '') + char(10), '')
                            + coalesce('License Number: ' + nullif(trim(convert(nvarchar(max),c.licenseNumber)), '') + char(10), '')
                            + coalesce('License Type: ' + nullif(trim(convert(nvarchar(max),c.licenseType)), '') + char(10), '')
                            + coalesce('Credential: ' + nullif(trim(convert(nvarchar(max),c.name)), '') + char(10), '')
                            + coalesce('Certification Issuing Authority: ' + nullif(trim(convert(nvarchar(max),c.issuedBy)), '') + char(10), '')
                            --+ coalesce('On File: ' + nullif(trim(convert(nvarchar(max),c.onFile)), '') + char(10), '')
                            + coalesce('Results: ' + nullif(trim(convert(nvarchar(max),c.results)), '') + char(10), '')
                            + coalesce('Status: ' + nullif(trim(convert(nvarchar(max),c.status)), '') + char(10), '')
                            --+ coalesce(' Locations: ' + nullif(trim(convert(nvarchar(max),c.Locations)), '') + char(10), '') --c.validLocations
                            , 1, 0, '')
                     ,char(0x0000),'') ,char(0x0001),'') ,char(0x0002),'') ,char(0x0003),'') ,char(0x0004),'') 
                     ,char(0x0005),'') ,char(0x0006),'') ,char(0x0007),'') ,char(0x0008),'') ,char(0x000B),'') 
                     ,char(0x000C),'') ,char(0x000E),'') ,char(0x000F),'') ,char(0x0010),'') ,char(0x0011),'') 
                     ,char(0x0012),'') ,char(0x0013),'') ,char(0x0014),'') ,char(0x0015),'') ,char(0x0016),'') 
                     ,char(0x0017),'') ,char(0x0018),'') ,char(0x0019),'') ,char(0x001A),'') ,char(0x001B),'') 
                     ,char(0x001C),'') ,char(0x001D),'') ,char(0x001E),'') ,char(0x001F),'') --as es
       ,char(10) ) WITHIN GROUP (ORDER BY dateCertified) CandidateCertification
       FROM bullhorn1.BH_UserCertification c GROUP BY userId        
       )
--select top 10 * from CandidateCertification where userid in (163454);






select --top 10
         C.candidateID as 'candidate-externalid-eh-es' , C.userID as '#userID'
       , coalesce(nullif(replace(C.FirstName,'?',''), ''), 'No Firstname') as 'contact-firstName'
       , coalesce(nullif(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID)) as 'contact-lastName'

       --, eh.eh as 'candidate-workHistory'
	, stuff(
                coalesce('Years Experience: ' + nullif(convert(nvarchar(max),experience), '') + '&lt;br/>' + '&lt;br/>', '')
              + coalesce('Employment Work History Summary: ' + '&lt;br/>' + nullif(eh.eh, '') + '&lt;br/>', '')
              + coalesce('&lt;br/>' + '&lt;br/>' + 'REFERENCE: ' + '&lt;br/>' + nullif(rs.reference, '') + '&lt;br/>', '') 
              , 1, 0, '') as 'candidate-workHistory'
--	, rs.reference as 'candidate-reference'

        , Stuff(
                coalesce( 'Degree: ' + nullif( replace(convert(nvarchar(max),educationDegree),'Please Select',''), '') + char(10) + char(10) , '') --Highest Education Level
              + coalesce( nullif(es.es, '') + char(10) , '')
              --+ coalesce(char(10) + 'Reference: ' + char(10) + nullif(rs.Reference, '') + char(10), '')
              , 1, 0, '') as 'education_summary'

from bullhorn1.Candidate C --where C.isPrimaryOwner = 1
left join EmploymentHistory eh on EH.userid = C.userid --WORK HISTORY
left join ReferenceSummary rs on rs.userid = C.userid -- REFERENCE
left join EducationSummary es on es.userID = C.userID -- EDUCATION
where C.isdeleted &lt;&gt; 1 --and C.status &lt;&gt; 'Archive'
--and rs.userid is not null
--and C.userid in (165180)
--and C.candidateID in (60022, 17490, 92078)
--and (C.FirstName like '%Partha%' or C.LastName like '%Partha%')
--and concat (C.FirstName,' ',C.LastName) like '%Partha%'
--and e1.email = '' or e1.email is null --e1.email &lt;&gt; ''
--inner join bullhorn1.BH_UserContact UC_2 on C.recruiterUserID = UC_2.userID
--left join bullhorn1.BH_ClientCorporation CC ON CC.clientCorporationID = C.clientCorporationID


</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5248</xloc>
      <yloc>480</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>FE IMPORT</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>functional_expertise</table>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>name</name>
        <rename>fe</rename>
        <update>Y</update>
      </value>
      <value>
        <name>tmp</name>
        <rename>tmp</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4752</xloc>
      <yloc>592</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>FE lookup 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection/>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>functional_expertise</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>Functional_Expertise</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCFE_ID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>384</xloc>
      <yloc>1456</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>FE lookup 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>functional_expertise</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>tmp_fe</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCFEID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1344</xloc>
      <yloc>1168</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>FE lookup 3 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>functional_expertise</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>tmp_fe</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCFEID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1472</xloc>
      <yloc>528</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>FE lookup 3 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>functional_expertise</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>tmp_fe</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCFEID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4656</xloc>
      <yloc>720</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Filter rows</name>
    <type>FilterRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <send_true_to>user_account_import</send_true_to>
    <send_false_to/>
    <compare>
      <condition>
        <negated>N</negated>
        <leftvalue>owners-email</leftvalue>
        <function>IS NOT NULL</function>
        <rightvalue/>
      </condition>
    </compare>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>688</xloc>
      <yloc>432</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Filter rows 10</name>
    <type>FilterRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <send_true_to>company_department</send_true_to>
    <send_false_to/>
    <compare>
      <condition>
        <negated>N</negated>
        <leftvalue>Department</leftvalue>
        <function>IS NOT NULL</function>
        <rightvalue/>
      </condition>
    </compare>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2480</xloc>
      <yloc>1040</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Filter rows 10 2</name>
    <type>FilterRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <send_true_to>[OFFER] PERMANENT</send_true_to>
    <send_false_to/>
    <compare>
      <condition>
        <negated>N</negated>
        <leftvalue>position_type</leftvalue>
        <function>=</function>
        <rightvalue/>
        <value>
          <name>constant</name>
          <type>Integer</type>
          <text>1</text>
          <length>-1</length>
          <precision>0</precision>
          <isnull>N</isnull>
          <mask>#;-#</mask>
        </value>
      </condition>
    </compare>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6832</xloc>
      <yloc>432</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Filter rows 11</name>
    <type>FilterRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <send_true_to>block 21</send_true_to>
    <send_false_to/>
    <compare>
      <condition>
        <negated>N</negated>
        <leftvalue>sub_status</leftvalue>
        <function>IS NOT NULL</function>
        <rightvalue/>
      </condition>
    </compare>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>7328</xloc>
      <yloc>144</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Filter rows 11 2</name>
    <type>FilterRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <send_true_to>[OFFER] CONTRACT</send_true_to>
    <send_false_to/>
    <compare>
      <condition>
        <negated>N</negated>
        <leftvalue>position_type</leftvalue>
        <function>=</function>
        <rightvalue/>
        <value>
          <name>constant</name>
          <type>Integer</type>
          <text>2</text>
          <length>-1</length>
          <precision>0</precision>
          <isnull>N</isnull>
          <mask>#;-#</mask>
        </value>
      </condition>
    </compare>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6944</xloc>
      <yloc>432</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Filter rows 12</name>
    <type>FilterRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <send_true_to>company_department 2</send_true_to>
    <send_false_to/>
    <compare>
      <condition>
        <negated>N</negated>
        <leftvalue>Department</leftvalue>
        <function>IS NOT NULL</function>
        <rightvalue/>
      </condition>
    </compare>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2240</xloc>
      <yloc>1104</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Filter rows 2</name>
    <type>FilterRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <send_true_to>user_account</send_true_to>
    <send_false_to/>
    <compare>
      <condition>
        <negated>N</negated>
        <leftvalue>owners-email</leftvalue>
        <function>IS NOT NULL</function>
        <rightvalue/>
      </condition>
    </compare>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>480</xloc>
      <yloc>512</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Filter rows 2 2 2</name>
    <type>FilterRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <send_true_to>user_account 3 2</send_true_to>
    <send_false_to/>
    <compare>
      <condition>
        <negated>N</negated>
        <leftvalue>owners-email</leftvalue>
        <function>IS NOT NULL</function>
        <rightvalue/>
      </condition>
    </compare>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2352</xloc>
      <yloc>912</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Filter rows 2 2 2 2</name>
    <type>FilterRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <send_true_to>user_account 4</send_true_to>
    <send_false_to/>
    <compare>
      <condition>
        <negated>N</negated>
        <leftvalue>owners-email</leftvalue>
        <function>IS NOT NULL</function>
        <rightvalue/>
      </condition>
    </compare>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3632</xloc>
      <yloc>272</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Filter rows 2 2 2 3</name>
    <type>FilterRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <send_true_to>user_account 3 2 2</send_true_to>
    <send_false_to/>
    <compare>
      <condition>
        <negated>N</negated>
        <leftvalue>owners-email</leftvalue>
        <function>IS NOT NULL</function>
        <rightvalue/>
      </condition>
    </compare>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2352</xloc>
      <yloc>1504</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Filter rows 2 3</name>
    <type>FilterRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <send_true_to>user_account 6</send_true_to>
    <send_false_to/>
    <compare>
      <condition>
        <negated>N</negated>
        <leftvalue>owners-email</leftvalue>
        <function>IS NOT NULL</function>
        <rightvalue/>
      </condition>
    </compare>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5536</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Filter rows 3</name>
    <type>FilterRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <send_true_to>COMPANY DOCUMENT</send_true_to>
    <send_false_to/>
    <compare>
      <condition>
        <negated>N</negated>
        <leftvalue>company-document-filename</leftvalue>
        <function>IS NOT NULL</function>
        <rightvalue/>
      </condition>
    </compare>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>464</xloc>
      <yloc>192</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Filter rows 4</name>
    <type>FilterRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <send_true_to>user_account_import 2</send_true_to>
    <send_false_to/>
    <compare>
      <condition>
        <negated>N</negated>
        <leftvalue>owners-email</leftvalue>
        <function>IS NOT NULL</function>
        <rightvalue/>
      </condition>
    </compare>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2608</xloc>
      <yloc>848</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Filter rows 4 2</name>
    <type>FilterRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <send_true_to>user_account_import 2 2</send_true_to>
    <send_false_to/>
    <compare>
      <condition>
        <negated>N</negated>
        <leftvalue>owners-email</leftvalue>
        <function>IS NOT NULL</function>
        <rightvalue/>
      </condition>
    </compare>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3888</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Filter rows 4 2 2</name>
    <type>FilterRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <send_true_to>compensation - permanent</send_true_to>
    <send_false_to/>
    <compare>
      <condition>
        <negated>N</negated>
        <leftvalue>position-type</leftvalue>
        <function>=</function>
        <rightvalue/>
        <value>
          <name>constant</name>
          <type>Integer</type>
          <text>1</text>
          <length>-1</length>
          <precision>0</precision>
          <isnull>N</isnull>
          <mask>#;-#</mask>
        </value>
      </condition>
    </compare>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3504</xloc>
      <yloc>400</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Filter rows 4 2 2 2</name>
    <type>FilterRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <send_true_to>compensation - contract</send_true_to>
    <send_false_to/>
    <compare>
      <condition>
        <negated>N</negated>
        <leftvalue>position-type</leftvalue>
        <function>=</function>
        <rightvalue/>
        <value>
          <name>constant</name>
          <type>Integer</type>
          <text>2</text>
          <length>-1</length>
          <precision>0</precision>
          <isnull>N</isnull>
          <mask>#;-#</mask>
        </value>
      </condition>
    </compare>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3504</xloc>
      <yloc>464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Filter rows 4 3</name>
    <type>FilterRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <send_true_to>user_account_import 2 3</send_true_to>
    <send_false_to/>
    <compare>
      <condition>
        <negated>N</negated>
        <leftvalue>owners-email</leftvalue>
        <function>IS NOT NULL</function>
        <rightvalue/>
      </condition>
    </compare>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2608</xloc>
      <yloc>1440</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Filter rows 5</name>
    <type>FilterRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <send_true_to>block 50</send_true_to>
    <send_false_to/>
    <compare>
      <condition>
        <negated>N</negated>
        <leftvalue>owners-email</leftvalue>
        <function>IS NOT NULL</function>
        <rightvalue/>
      </condition>
    </compare>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5824</xloc>
      <yloc>256</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Filter rows 6</name>
    <type>FilterRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <send_true_to>CONTACT DOCUMENT</send_true_to>
    <send_false_to/>
    <compare>
      <condition>
        <negated>N</negated>
        <leftvalue>document-filename</leftvalue>
        <function>IS NOT NULL</function>
        <rightvalue/>
      </condition>
    </compare>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2352</xloc>
      <yloc>272</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Filter rows 7</name>
    <type>FilterRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <send_true_to>Update Job Documents</send_true_to>
    <send_false_to/>
    <compare>
      <condition>
        <negated>N</negated>
        <leftvalue>document-filename</leftvalue>
        <function>IS NOT NULL</function>
        <rightvalue/>
      </condition>
    </compare>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3632</xloc>
      <yloc>208</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Filter rows 8</name>
    <type>FilterRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <send_true_to>CANDIDATE DOCUMENT</send_true_to>
    <send_false_to/>
    <compare>
      <condition>
        <negated>N</negated>
        <leftvalue>document-filename</leftvalue>
        <function>IS NOT NULL</function>
        <rightvalue/>
      </condition>
    </compare>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5536</xloc>
      <yloc>192</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Filter rows 9</name>
    <type>FilterRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <send_true_to>common_location 3</send_true_to>
    <send_false_to/>
    <compare>
      <condition>
        <negated>N</negated>
        <leftvalue>candidate-secondaryaddress</leftvalue>
        <function>IS NOT NULL</function>
        <rightvalue/>
      </condition>
    </compare>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5392</xloc>
      <yloc>832</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Filter rows 9 2</name>
    <type>FilterRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <send_true_to>common_location 4</send_true_to>
    <send_false_to/>
    <compare>
      <condition>
        <negated>N</negated>
        <leftvalue>Desired Location Address - Desired Location Name</leftvalue>
        <function>IS NOT NULL</function>
        <rightvalue/>
      </condition>
    </compare>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5392</xloc>
      <yloc>768</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Filter rows 9 3</name>
    <type>FilterRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <send_true_to>common_location 5</send_true_to>
    <send_false_to/>
    <compare>
      <condition>
        <negated>N</negated>
        <leftvalue>candidate-address</leftvalue>
        <function>IS NOT NULL</function>
        <rightvalue/>
      </condition>
    </compare>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5392</xloc>
      <yloc>688</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Filter rows 9 4</name>
    <type>FilterRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <send_true_to>common_location 2</send_true_to>
    <send_false_to/>
    <compare>
      <condition>
        <negated>N</negated>
        <leftvalue>candidate-secondaryaddress</leftvalue>
        <function>IS NOT NULL</function>
        <rightvalue/>
      </condition>
    </compare>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5392</xloc>
      <yloc>912</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Filter rows 9 5</name>
    <type>FilterRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <send_true_to>common_location 3 2</send_true_to>
    <send_false_to/>
    <compare>
      <condition>
        <negated>N</negated>
        <leftvalue>contact-personal-address</leftvalue>
        <function>IS NOT NULL</function>
        <rightvalue/>
      </condition>
    </compare>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2240</xloc>
      <yloc>528</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Functional Exp</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection/>
    <sql>/* Create FE sequence before running */

select listvalue as Functional_Expertise
, getdate() as insert_timestamp 
from common.Lists 
where listkey = 'tblVacancyJobFunctions'
order by listvalue</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>224</xloc>
      <yloc>1392</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Group by</name>
    <type>GroupBy</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <all_rows>N</all_rows>
    <ignore_aggregate>N</ignore_aggregate>
    <field_ignore/>
    <directory>%%java.io.tmpdir%%</directory>
    <prefix>grp</prefix>
    <add_linenr>N</add_linenr>
    <linenr_fieldname/>
    <give_back_row>N</give_back_row>
    <group>
      <field>
        <name>final_company_id</name>
      </field>
    </group>
    <fields>
      <field>
        <aggregate>final_user_account_id</aggregate>
        <subject>final_user_account_id</subject>
        <type>CONCAT_STRING</type>
        <valuefield>,</valuefield>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>768</xloc>
      <yloc>512</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Group by 2</name>
    <type>GroupBy</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <all_rows>N</all_rows>
    <ignore_aggregate>N</ignore_aggregate>
    <field_ignore/>
    <directory>%%java.io.tmpdir%%</directory>
    <prefix>grp</prefix>
    <add_linenr>N</add_linenr>
    <linenr_fieldname/>
    <give_back_row>N</give_back_row>
    <group>
      <field>
        <name>final_candidate_id</name>
      </field>
    </group>
    <fields>
      <field>
        <aggregate>candidate_owner_json</aggregate>
        <subject>candidate_owner_json</subject>
        <type>CONCAT_COMMA</type>
        <valuefield/>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5920</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Group by 2 2</name>
    <type>GroupBy</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <all_rows>N</all_rows>
    <ignore_aggregate>N</ignore_aggregate>
    <field_ignore/>
    <directory>%%java.io.tmpdir%%</directory>
    <prefix>grp</prefix>
    <add_linenr>N</add_linenr>
    <linenr_fieldname/>
    <give_back_row>N</give_back_row>
    <group>
      <field>
        <name>final_contact_id</name>
      </field>
    </group>
    <fields>
      <field>
        <aggregate>contact_group_owners</aggregate>
        <subject>contact_owners</subject>
        <type>CONCAT_STRING</type>
        <valuefield>,</valuefield>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2736</xloc>
      <yloc>912</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Group by 2 2 2</name>
    <type>GroupBy</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <all_rows>N</all_rows>
    <ignore_aggregate>N</ignore_aggregate>
    <field_ignore/>
    <directory>%%java.io.tmpdir%%</directory>
    <prefix>grp</prefix>
    <add_linenr>N</add_linenr>
    <linenr_fieldname/>
    <give_back_row>N</give_back_row>
    <group>
      <field>
        <name>final_contact_id</name>
      </field>
    </group>
    <fields>
      <field>
        <aggregate>contact_group_owners</aggregate>
        <subject>contact_owners</subject>
        <type>CONCAT_STRING</type>
        <valuefield>,</valuefield>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2736</xloc>
      <yloc>1504</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>INDUSTRY 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>candidate_industry</table>
      <key>
        <name>final_industry_id</name>
        <field>vertical_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_candidate_id</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>vertical_id</name>
        <rename>final_industry_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>candidate_id</name>
        <rename>final_candidate_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4368</xloc>
      <yloc>528</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>INSERT COMPANY LOCATION 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>200</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>company_location</table>
      <key>
        <name>VCCompanyID</name>
        <field>company_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>location_type</name>
        <field>location_type</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>locationAddress</name>
        <field>address</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>company_id</name>
        <rename>VCCompanyID</rename>
        <update>N</update>
      </value>
      <value>
        <name>tmp</name>
        <rename>tmp</rename>
        <update>N</update>
      </value>
      <value>
        <name>address</name>
        <rename>locationAddress</rename>
        <update>Y</update>
      </value>
      <value>
        <name>country_code</name>
        <rename>country_code</rename>
        <update>Y</update>
      </value>
      <value>
        <name>location_name</name>
        <rename>locationName</rename>
        <update>Y</update>
      </value>
      <value>
        <name>location_type</name>
        <rename>location_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>post_code</name>
        <rename>post_code</rename>
        <update>Y</update>
      </value>
      <value>
        <name>state</name>
        <rename>state</rename>
        <update>Y</update>
      </value>
      <value>
        <name>city</name>
        <rename>city</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2480</xloc>
      <yloc>1568</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>INSERT NEW INDUSTRY</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>vertical</table>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>name</name>
        <rename>company-industry</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>N</update>
      </value>
      <value>
        <name>tmp</name>
        <rename>tmp</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>480</xloc>
      <yloc>576</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection/>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema/>
      <table>lookup table</table>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>384</xloc>
      <yloc>1520</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update common loc 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>common_location</table>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>address</name>
        <rename>Desired Location</rename>
        <update>Y</update>
      </value>
      <value>
        <name>location_name</name>
        <rename>Desired Location</rename>
        <update>Y</update>
      </value>
      <value>
        <name>tmp</name>
        <rename>tmp</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5168</xloc>
      <yloc>1600</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert new industry 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>vertical</table>
      <key>
        <name>industry</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>name</name>
        <rename>industry</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>384</xloc>
      <yloc>1328</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>JOB DOCUMENT</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>Y</skip_lookup>
    <commit>200</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema/>
      <table>candidate_document</table>
      <key>
        <name>jobid</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>UploadedName</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>uploaded_filename</name>
        <rename>RealName</rename>
      </value>
      <value>
        <name>created</name>
        <rename>created</rename>
      </value>
      <value>
        <name>document_types_id</name>
        <rename>document_types_id</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>768</xloc>
      <yloc>1120</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>JOB IMPORT</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <key>
        <name>position-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>external_id</name>
        <rename>position-externalId</rename>
        <update>Y</update>
      </value>
      <value>
        <name>contact_id</name>
        <rename>final_contact_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>name</name>
        <rename>position-title</rename>
        <update>Y</update>
      </value>
      <value>
        <name>head_count</name>
        <rename>position-headcount</rename>
        <update>Y</update>
      </value>
      <value>
        <name>position_type</name>
        <rename>position-type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>full_description</name>
        <rename>position-internalDescription</rename>
        <update>Y</update>
      </value>
      <value>
        <name>public_description</name>
        <rename>position-publicDescription</rename>
        <update>Y</update>
      </value>
      <value>
        <name>head_count_open_date</name>
        <rename>position-startDate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>head_count_close_date</name>
        <rename>position-endDate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>note</name>
        <rename>position-note</rename>
        <update>Y</update>
      </value>
      <value>
        <name>key_words</name>
        <rename>key_words</rename>
        <update>Y</update>
      </value>
      <value>
        <name>company_id</name>
        <rename>final_company_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>creator_account_id</name>
        <rename>creator_account_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>employment_type</name>
        <rename>employment_type</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3584</xloc>
      <yloc>112</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>JOB INDUSTRY 2</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema/>
      <table>position_description</table>
      <key>
        <name>final_job_id_ind</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>vertical_id</name>
        <rename>final_industry_id</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3888</xloc>
      <yloc>720</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>JOB LOCATION 3</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>500</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema/>
      <table>position_description</table>
      <key>
        <name>job_actual_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCCompanyID</name>
        <field>company_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>company_location_id</name>
        <rename>VCAddressID</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4000</xloc>
      <yloc>592</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Java Script</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>var owners = '"' + final_user_account_id + '"'
</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>owners</name>
        <rename>contact_owners</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2608</xloc>
      <yloc>912</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Java Script 2</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>
var final_contact_owner = '[' + contact_group_owners + ']'
</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>final_contact_owner</name>
        <rename>final_contact_owner</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2848</xloc>
      <yloc>912</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Java Script 2 2</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>
var final_contact_owner = '[' + contact_group_owners + ']'
</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>final_contact_owner</name>
        <rename>final_contact_owner</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2848</xloc>
      <yloc>1504</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Java Script 3</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>//Script here

candidate_owner = {
ownerId:final_user_account_id,
ownership:0
}

var candidate_owner_json=JSON.stringify(candidate_owner)
</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>candidate_owner_json</name>
        <rename>candidate_owner_json</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5824</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Java Script 4</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>
var final_candidate_owner = '[' + candidate_owner_json + ']'
</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>final_candidate_owner</name>
        <rename>final_candidate_owner</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6016</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Java Script 5</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>var owners = '"' + final_user_account_id + '"'
</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>owners</name>
        <rename>contact_owners</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2608</xloc>
      <yloc>1504</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Job</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>position-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_job_id</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3136</xloc>
      <yloc>208</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Job Application</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>/*
'SHORTLISTED'then 102
'SENT'then 103
'FIRST_INTERVIEW'then 104
'SECOND_INTERVIEW'then 105
'THIRD_INTERVIEW'then 106
'FOURTH_INTERVIEW'then 107
'FIFTH_INTERVIEW'then 108
'LAST_INTERVIEW_ROUND' then 123
'OFFERED'then 200
'PLACED'then 300
'PLACEMENT_PERMANENT'then 301
'PLACEMENT_CONTRACT'then 302
'PLACEMENT_TEMP'then 303
'ONBOARDING'then 310
*/

with
  JPInfo as (
  	select JP.jobPostingID as JobID
  		, JP.title as JobTitle
              , case when JP.employmentType is null then 301
                     when JP.employmentType like '%Perm%' then 301
                     when JP.employmentType like '%Opportunity%' then 301
			when JP.employmentType in ('Full-time','General Posting','INTERN FEE','Internal Recruitment') then 301
                     when JP.employmentType like '%Contract%' then 302
                     when JP.employmentType like '%Fixed%' then 302
                     when JP.employmentType like '%Part%' then 302
                     when JP.employmentType like '%Temp%' then 302
		       when JP.employmentType in ('Transactional Opportunity') then 302
                     --when JP.employmentType in ('Temporary','Temp to Perm') then 303
                     else null end as JobType
		, Cl.clientID as ContactID
		, Cl.userID as ClientUserID
		, UC.name as ContactName
		, UC.email as ContactEmail
		, CC.clientCorporationID as CompanyID
		, CC.name as CompanyName
	-- select distinct JP.employmentType
	from bullhorn1.BH_JobPosting JP
	left join bullhorn1.BH_Client Cl on JP.clientUserID = Cl.userID
	left join bullhorn1.BH_UserContact UC on JP.clientUserID = UC.userID
	left join bullhorn1.BH_ClientCorporation CC on JP.clientCorporationID = CC.clientCorporationID
	where 1=1 and JP.title &lt;&gt; '' and (JP.isdeleted &lt;&gt; 1)
)
--select * from JPInfo order by JobID


, ja0 as (
       select
                JR.jobPostingID as 'application-positionExternalId', JPI.JobType
               , JPI.CompanyID, JPI.CompanyName,  JPI.ContactID, JPI.ContactName, JPI.ContactEmail, JPI.JobID,  JPI.JobTitle, CAI.CandidateName as '#Candidate Name' --, JR.userID, JPI.ClientUserID, 
               , CAI.candidateID as 'application-candidateExternalId'
               , convert(varchar(10),JR.dateAdded,120) as 'dateAdded'
               , coalesce(nullif(case
when JR.status like '%Placed%' then 'OFFERED'

when JR.status like '%Offer%' then 'OFFERED'
when JR.status = 'Accepted' then 'OFFERED'
when JR.status = 'New Lead' then 'OFFERED'
       
when JR.status like '%2%int%' then 'SECOND_INTERVIEW'
when JR.status like '%nd%int%' then 'SECOND_INTERVIEW'
when JR.status like '%int%2%' then 'SECOND_INTERVIEW'
when JR.status like '%3%int%' then 'SECOND_INTERVIEW'
when JR.status like '%rd%int%' then 'SECOND_INTERVIEW'
when JR.status like '%int%3%' then 'SECOND_INTERVIEW'
when JR.status like '%4%int%' then 'SECOND_INTERVIEW'
when JR.status like '%5%int%' then 'SECOND_INTERVIEW'
when JR.status like '%6%int%' then 'SECOND_INTERVIEW'
when JR.status like '%7%int%' then 'SECOND_INTERVIEW'
when JR.status like '%8%int%' then 'SECOND_INTERVIEW'
when JR.status like '%9%int%' then 'SECOND_INTERVIEW'
when JR.status like '%10%int%' then 'SECOND_INTERVIEW'
when JR.status like '%Final%int%' then 'SECOND_INTERVIEW'
when JR.status = 'Final' then 'SECOND_INTERVIEW'

when JR.status like '%1%int%' then 'FIRST_INTERVIEW'
when JR.status like '%st%int%' then 'FIRST_INTERVIEW'
when JR.status like '%int%1%' then 'FIRST_INTERVIEW'
when JR.status like '%Int%Feedbk%' then 'FIRST_INTERVIEW'
when JR.status like '%Int%F/Up%' then 'FIRST_INTERVIEW'
when JR.status like '%Interview%' then 'FIRST_INTERVIEW'

when JR.status like '%Sent%' then 'SENT'
when JR.status like '%Send%' then 'SENT'
when JR.status like '%Submitted%' then 'SENT'
when JR.status like '%Submission%' then 'SENT'
when JR.status = 'Filled by Client' then 'SENT'-- > Rejected'
when JR.status like '%Candidate%Feedback%' then 'SENT'
when JR.status like '%Client%Feedback%' then 'SENT'
when JR.status like '%Client%Mailouts%' then 'SENT'
when JR.status like '%Client%Rejected%' then 'SENT'
when JR.status = 'Offer Rejected' then 'SENT'
when JR.status = 'Previously submitted' then 'SENT'
when JR.status = 'Rejected by client' then 'SENT' -- > REJECTED'
when JR.status = 'Rejected Client' then 'SENT'-- > Rejected'
when JR.status = 'Reject' then 'SENT'
when JR.status = 'Sales Rep Rejected' then 'SENT'

when JR.status like '%Candidate%Accepted' then 'SHORTLISTED'
when JR.status like '%Candidate%Rejected' then 'SHORTLISTED' -- > REJECTED'
when JR.status like '%Client%Rejected%' then 'SHORTLISTED' -- > REJECTED'
when JR.status like '%Shortlist%' then 'SHORTLISTED'
when JR.status like '%Interested%' then 'SHORTLISTED'
when JR.status like '%Screen%' then 'SHORTLISTED'
when JR.status like '%Suitable%' then 'SHORTLISTED'
when JR.status like '%Rejected' then 'SHORTLISTED' -- > REJECTED'
when JR.status like '%Review%' then 'SHORTLISTED'
when JR.status = 'Active' then 'SHORTLISTED'
when JR.status = 'Left Message' then 'SHORTLISTED'

                            else '' end, ''), '') as 'application-stage'  --, JR.status as '#Original-status' -- SHORTLISTED, SENT, FIRST_INTERVIEW, SECOND_INTERVIEW, OFFERED, PLACEMENT_PERMANENT, PLACEMENT_CONTRACT, PLACEMENT_TEMP, ONBOARDING.
        -- select count(*) --5995 -- select distinct JR.status -- select top 100 *
        from bullhorn1.BH_JobResponse JR
        left join ( select CA.userID as CandidateUserID, CA.candidateID, UC.userID, UC.name as CandidateName, UC.email as CandidateEmail from bullhorn1.BH_Candidate CA left join bullhorn1.BH_UserContact UC on CA.userID = UC.userID ) CAI on JR.userID = CAI.CandidateUserID
        left join JPInfo JPI on JR.jobPostingID = JPI.JobID
        where CAI.candidateID is not null 
UNION
       select 
                PL.jobPostingID as 'application-positionExternalId', JPI.JobType
              , JPI.CompanyID, JPI.CompanyName,  JPI.ContactID, JPI.ContactName, JPI.ContactEmail, JPI.JobID,  JPI.JobTitle, CAI.CandidateName as '#Candidate Name' --, JR.userID, JPI.ClientUserID, 
              , CAI.candidateID as 'application-candidateExternalId'
              , convert(varchar(10),PL.dateAdded,120) as 'dateAdded'
              , 'OFFERED' as 'application-stage'
        -- select count(*)
        from bullhorn1.BH_Placement PL
        left join ( select CA.userID as CandidateUserID, CA.candidateID, UC.userID, UC.name as CandidateName, UC.email as CandidateEmail from bullhorn1.BH_Candidate CA left join bullhorn1.BH_UserContact UC on CA.userID = UC.userID ) CAI on PL.userID = CAI.CandidateUserID 
        left join JPInfo JPI on PL.jobPostingID = JPI.JobID
)
--select top 2000 * from ja0
--where ( [application-positionExternalId] = 6744 and [application-candidateExternalId] = 64995) or ([application-positionExternalId] = 5343 and [application-candidateExternalId] = 193508)
--where CompanyName like 'Nuance%' or CompanyID = 6

, ja1 ("application-positionExternalId","application-candidateExternalId", JobType, status,"dateAdded", rn) as (
       SELECT 
               "application-positionExternalId"
              ,"application-candidateExternalId"
              , JobType
              , case 
                     when "application-Stage" = 'SHORTLISTED' then 102
                     when "application-Stage" = 'SENT' then 103
                     when "application-Stage" = 'FIRST_INTERVIEW' then 104
                     when "application-Stage" = 'SECOND_INTERVIEW' then 105
                     when "application-Stage" = 'THIRD_INTERVIEW' then 106
                     when "application-Stage" = 'FOURTH_INTERVIEW' then 107
                     when "application-Stage" = 'FIFTH_INTERVIEW' then 108
                     when "application-Stage" = 'LAST_INTERVIEW_ROUND' then 123
                     when "application-Stage" = 'OFFERED' then 200
                     when "application-Stage" = 'PLACED' then 300
                     when "application-Stage" = 'PLACEMENT_PERMANENT' then 301
                     when "application-Stage" = 'PLACEMENT_CONTRACT' then 302
                     when "application-Stage" = 'PLACEMENT_TEMP' then 303
                     when "application-Stage" = 'ONBOARDING' then 310
                     else null end as "application-Stage"
              , convert(datetime,"dateAdded") as "dateAdded"
              , rn = ROW_NUMBER() OVER (PARTITION BY "application-positionExternalId","application-candidateExternalId"/*,"application-Stage" */
                     ORDER BY "application-positionExternalId" desc,
                            CASE [application-stage]
                            WHEN 'PLACED' THEN 1
                            WHEN 'OFFERED' THEN 2
                            WHEN 'SECOND_INTERVIEW' THEN 3
                            WHEN 'FIRST_INTERVIEW' THEN 4
                            WHEN 'SENT' THEN 5
                            WHEN 'SHORTLISTED' THEN 6
                            END asc )
       FROM ja0 
       left join (select jobPostingID from bullhorn1.BH_JobPosting where isdeleted &lt;&gt; 1) job on job.jobPostingID = ja0.[application-positionExternalId]
       left join (select candidateid from bullhorn1.Candidate where isdeleted &lt;&gt; 1) candidate on candidate.candidateid = ja0.[application-candidateExternalId]
       where "application-Stage" not like 'CANDIDATE%' and "application-Stage" &lt;&gt; '' and (job.jobPostingID is not null and candidate.candidateid is not null)
       )

--associated_date	last_stage_date	sent_date	interview1_date	interview2_date	offer_date

--select status, count(*) from ja1 where rn = 1 group by status

select "application-positionExternalId","application-candidateExternalId", status, current_timestamp as insert_timestamp
       , case when status >= 102 then dateAdded end as associated_date
       , case when status >= 103 then dateAdded end as sent_date
       , case when status >= 104 then dateAdded end as interview1_date
       , case when status >= 105 then dateAdded end as interview2_date
       , case when status = 200 then dateAdded end as offer_date
       , convert(datetime,"dateAdded") as 'rejected_date'
       , 1 as active
--    , JobType as POSITIONCANDIDATE_status
--    , 3 as OFFER_draft_offer --used to move OFFERED to PLACED in VC [offer]
--    , 2 as INVOICE_status --used to update invoice status in VC [invoice] as 'active'
--    , 1 as INVOICE_renewal_index --default value in VC [invoice]
--    , 1 as INVOICE_renewal_flow_status --used to update flow status in VC [invoice] as 'placement_active'
--    , 1 as INVOICE_valid
from ja1
where rn = 1 --and [application-stage] = 'PLACED' --and [#Candidate Name] like '%Freeman%'
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6400</xloc>
      <yloc>1344</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Job Application - Rejected</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>/*
'SHORTLISTED'then 102
'SENT'then 103
'FIRST_INTERVIEW'then 104
'SECOND_INTERVIEW'then 105
'THIRD_INTERVIEW'then 106
'FOURTH_INTERVIEW'then 107
'FIFTH_INTERVIEW'then 108
'LAST_INTERVIEW_ROUND' then 123
'OFFERED'then 200
'PLACED'then 300
'PLACEMENT_PERMANENT'then 301
'PLACEMENT_CONTRACT'then 302
'PLACEMENT_TEMP'then 303
'ONBOARDING'then 310
*/

with
  JPInfo as (
  	select JP.jobPostingID as JobID
  		, JP.title as JobTitle
              , case when JP.employmentType is null then 301
                     when JP.employmentType in ('Document Service','Permanent- Salary') then 301


                     else 302 end as JobType
		, Cl.clientID as ContactID
		, Cl.userID as ClientUserID
		, UC.name as ContactName
		, UC.email as ContactEmail
		, CC.clientCorporationID as CompanyID
		, CC.name as CompanyName
	-- select distinct jp.employmentType
	from bullhorn1.BH_JobPosting JP
	left join bullhorn1.BH_Client Cl on JP.clientUserID = Cl.userID
	left join bullhorn1.BH_UserContact UC on JP.clientUserID = UC.userID
	left join bullhorn1.BH_ClientCorporation CC on JP.clientCorporationID = CC.clientCorporationID
	where 1=1 and JP.title &lt;&gt; '' and (JP.isdeleted &lt;&gt; 1)-- and JP.status &lt;&gt; 'Archive')
)
--select * from JPInfo order by JobID


, ja0 as (
       select
                JR.jobPostingID as 'application-positionExternalId', JPI.JobType
               , JPI.CompanyID, JPI.CompanyName,  JPI.ContactID, JPI.ContactName, JPI.ContactEmail, JPI.JobID,  JPI.JobTitle, CAI.CandidateName as '#Candidate Name' --, JR.userID, JPI.ClientUserID, 
               , CAI.candidateID as 'application-candidateExternalId'
               , convert(varchar(10),JR.dateAdded,120) as 'dateAdded'
               , coalesce(nullif(case
when trim(JR.status) = 'Candidate Not Interested' then 'SHORTLISTED'-- > Rejected'
when trim(JR.status) = 'Sales Rep Rejected' then 'SHORTLISTED'-- > Rejected'
                            else '' end, ''), '') as 'application-stage'  --, JR.status as '#Original-status' -- SHORTLISTED, SENT, FIRST_INTERVIEW, SECOND_INTERVIEW, OFFERED, PLACEMENT_PERMANENT, PLACEMENT_CONTRACT, PLACEMENT_TEMP, ONBOARDING.
        -- select count(*) --5995 -- select distinct JR.status -- select top 100 *
        from bullhorn1.BH_JobResponse JR
        left join ( select CA.userID as CandidateUserID, CA.candidateID, UC.userID, UC.name as CandidateName, UC.email as CandidateEmail from bullhorn1.BH_Candidate CA left join bullhorn1.BH_UserContact UC on CA.userID = UC.userID ) CAI on JR.userID = CAI.CandidateUserID
        left join JPInfo JPI on JR.jobPostingID = JPI.JobID
        where CAI.candidateID is not null 
UNION
       select 
                PL.jobPostingID as 'application-positionExternalId', JPI.JobType
              , JPI.CompanyID, JPI.CompanyName,  JPI.ContactID, JPI.ContactName, JPI.ContactEmail, JPI.JobID,  JPI.JobTitle, CAI.CandidateName as '#Candidate Name' --, JR.userID, JPI.ClientUserID, 
              , CAI.candidateID as 'application-candidateExternalId'
              , convert(varchar(10),PL.dateAdded,120) as 'dateAdded'
              , 'OFFERED' as 'application-stage'
        -- select count(*)
        from bullhorn1.BH_Placement PL
        left join ( select CA.userID as CandidateUserID, CA.candidateID, UC.userID, UC.name as CandidateName, UC.email as CandidateEmail from bullhorn1.BH_Candidate CA left join bullhorn1.BH_UserContact UC on CA.userID = UC.userID ) CAI on PL.userID = CAI.CandidateUserID 
        left join JPInfo JPI on PL.jobPostingID = JPI.JobID
)
--select top 2000 * from ja0
--where ( [application-positionExternalId] = 6744 and [application-candidateExternalId] = 64995) or ([application-positionExternalId] = 5343 and [application-candidateExternalId] = 193508)
--where CompanyName like 'Nuance%' or CompanyID = 6

, ja1 ("application-positionExternalId","application-candidateExternalId", JobType, status,"dateAdded", rn) as (
       SELECT 
               "application-positionExternalId"
              ,"application-candidateExternalId"
              , JobType
              , case 
                     when "application-Stage" = 'SHORTLISTED' then 102
                     when "application-Stage" = 'SENT' then 103
                     when "application-Stage" = 'FIRST_INTERVIEW' then 104
                     when "application-Stage" = 'SECOND_INTERVIEW' then 105
                     when "application-Stage" = 'THIRD_INTERVIEW' then 106
                     when "application-Stage" = 'FOURTH_INTERVIEW' then 107
                     when "application-Stage" = 'FIFTH_INTERVIEW' then 108
                     when "application-Stage" = 'LAST_INTERVIEW_ROUND' then 123
                     when "application-Stage" = 'OFFERED' then 200
                     when "application-Stage" = 'PLACED' then 300
                     when "application-Stage" = 'PLACEMENT_PERMANENT' then 301
                     when "application-Stage" = 'PLACEMENT_CONTRACT' then 302
                     when "application-Stage" = 'PLACEMENT_TEMP' then 303
                     when "application-Stage" = 'ONBOARDING' then 310
                     else null end as "application-Stage"
              , convert(datetime,"dateAdded") as "dateAdded"
              , rn = ROW_NUMBER() OVER (PARTITION BY "application-positionExternalId","application-candidateExternalId"/*,"application-Stage" */
                     ORDER BY "application-positionExternalId" desc,
                            CASE [application-stage]
                            WHEN 'PLACED' THEN 1
                            WHEN 'OFFERED' THEN 2
                            WHEN 'SECOND_INTERVIEW' THEN 3
                            WHEN 'FIRST_INTERVIEW' THEN 4
                            WHEN 'SENT' THEN 5
                            WHEN 'SHORTLISTED' THEN 6
                            END asc )
       FROM ja0 
       left join (select jobPostingID from bullhorn1.BH_JobPosting where isdeleted &lt;&gt; 1) job on job.jobPostingID = ja0.[application-positionExternalId]
       left join (select candidateid from bullhorn1.Candidate where isdeleted &lt;&gt; 1) candidate on candidate.candidateid = ja0.[application-candidateExternalId]
       where "application-Stage" not like 'CANDIDATE%' and "application-Stage" &lt;&gt; '' and (job.jobPostingID is not null and candidate.candidateid is not null)
       )

--associated_date	last_stage_date	sent_date	interview1_date	interview2_date	offer_date

--select [application-stage], count(*) from ja1 where rn = 1 group by [application-stage] 
select "application-positionExternalId","application-candidateExternalId", status, current_timestamp as insert_timestamp
       , case when status >= 102 then dateAdded end as associated_date
       , case when status >= 103 then dateAdded end as sent_date
       , case when status >= 104 then dateAdded end as interview1_date
       , case when status >= 105 then dateAdded end as interview2_date
       , case when status = 200 then dateAdded end as offer_date
       , convert(datetime,"dateAdded") as 'rejected_date'
       , 1 as active
--    , JobType as POSITIONCANDIDATE_status
--    , 3 as OFFER_draft_offer --used to move OFFERED to PLACED in VC [offer]
--    , 2 as INVOICE_status --used to update invoice status in VC [invoice] as 'active'
--    , 1 as INVOICE_renewal_index --default value in VC [invoice]
--    , 1 as INVOICE_renewal_flow_status --used to update flow status in VC [invoice] as 'placement_active'
--    , 1 as INVOICE_valid
from ja1
where rn = 1 --and [application-stage] = 'PLACED' --and [#Candidate Name] like '%Freeman%'
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6400</xloc>
      <yloc>1408</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Job Application - Sub Status</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>/*
'SHORTLISTED'then 102
'SENT'then 103
'FIRST_INTERVIEW'then 104
'SECOND_INTERVIEW'then 105
'THIRD_INTERVIEW'then 106
'FOURTH_INTERVIEW'then 107
'FIFTH_INTERVIEW'then 108
'LAST_INTERVIEW_ROUND' then 123
'OFFERED'then 200
'PLACED'then 300
'PLACEMENT_PERMANENT'then 301
'PLACEMENT_CONTRACT'then 302
'PLACEMENT_TEMP'then 303
'ONBOARDING'then 310
*/

with
  JPInfo as (
  	select JP.jobPostingID as JobID
  		, JP.title as JobTitle
              , case when JP.employmentType is null then 301
                     when JP.employmentType in ('Document Service','Permanent- Salary') then 301


                     else 302 end as JobType
		, Cl.clientID as ContactID
		, Cl.userID as ClientUserID
		, UC.name as ContactName
		, UC.email as ContactEmail
		, CC.clientCorporationID as CompanyID
		, CC.name as CompanyName
	-- select distinct jp.employmentType
	from bullhorn1.BH_JobPosting JP
	left join bullhorn1.BH_Client Cl on JP.clientUserID = Cl.userID
	left join bullhorn1.BH_UserContact UC on JP.clientUserID = UC.userID
	left join bullhorn1.BH_ClientCorporation CC on JP.clientCorporationID = CC.clientCorporationID
	where 1=1 and JP.title &lt;&gt; '' and (JP.isdeleted &lt;&gt; 1)-- and JP.status &lt;&gt; 'Archive')
)
--select * from JPInfo order by JobID


, ja0 as (
       select
                JR.jobPostingID as 'application-positionExternalId', JPI.JobType
               , JPI.CompanyID, JPI.CompanyName,  JPI.ContactID, JPI.ContactName, JPI.ContactEmail, JPI.JobID,  JPI.JobTitle, CAI.CandidateName as '#Candidate Name' --, JR.userID, JPI.ClientUserID, 
               , CAI.candidateID as 'application-candidateExternalId'
               , convert(varchar(10),JR.dateAdded,120) as 'dateAdded'
               , trim(JR.status) as 'application-stage'  --, JR.status as '#Original-status' -- SHORTLISTED, SENT, FIRST_INTERVIEW, SECOND_INTERVIEW, OFFERED, PLACEMENT_PERMANENT, PLACEMENT_CONTRACT, PLACEMENT_TEMP, ONBOARDING.
        -- select count(*) --5995 -- select distinct JR.status -- select top 100 *
        from bullhorn1.BH_JobResponse JR
        left join ( select CA.userID as CandidateUserID, CA.candidateID, UC.userID, UC.name as CandidateName, UC.email as CandidateEmail from bullhorn1.BH_Candidate CA left join bullhorn1.BH_UserContact UC on CA.userID = UC.userID ) CAI on JR.userID = CAI.CandidateUserID
        left join JPInfo JPI on JR.jobPostingID = JPI.JobID
        where CAI.candidateID is not null 
UNION
       select 
                PL.jobPostingID as 'application-positionExternalId', JPI.JobType
              , JPI.CompanyID, JPI.CompanyName,  JPI.ContactID, JPI.ContactName, JPI.ContactEmail, JPI.JobID,  JPI.JobTitle, CAI.CandidateName as '#Candidate Name' --, JR.userID, JPI.ClientUserID, 
              , CAI.candidateID as 'application-candidateExternalId'
              , convert(varchar(10),PL.dateAdded,120) as 'dateAdded'
              , 'OFFERED' as 'application-stage'
        -- select count(*)
        from bullhorn1.BH_Placement PL
        left join ( select CA.userID as CandidateUserID, CA.candidateID, UC.userID, UC.name as CandidateName, UC.email as CandidateEmail from bullhorn1.BH_Candidate CA left join bullhorn1.BH_UserContact UC on CA.userID = UC.userID ) CAI on PL.userID = CAI.CandidateUserID 
        left join JPInfo JPI on PL.jobPostingID = JPI.JobID
)
--select top 2000 * from ja0
--where ( [application-positionExternalId] = 6744 and [application-candidateExternalId] = 64995) or ([application-positionExternalId] = 5343 and [application-candidateExternalId] = 193508)
--where CompanyName like 'Nuance%' or CompanyID = 6

, ja1 ("application-positionExternalId","application-candidateExternalId", JobType, status,"dateAdded", rn) as (
       SELECT 
               "application-positionExternalId"
              ,"application-candidateExternalId"
              , JobType
              , "application-Stage" as "application-Stage"
              , convert(datetime,"dateAdded") as "dateAdded"
              , rn = ROW_NUMBER() OVER (PARTITION BY "application-positionExternalId","application-candidateExternalId"/*,"application-Stage" */
                     ORDER BY "application-positionExternalId" desc,
                            CASE [application-stage]
                            WHEN 'PLACED' THEN 1
                            WHEN 'OFFERED' THEN 2
                            WHEN 'SECOND_INTERVIEW' THEN 3
                            WHEN 'FIRST_INTERVIEW' THEN 4
                            WHEN 'SENT' THEN 5
                            WHEN 'SHORTLISTED' THEN 6
                            END asc )
       FROM ja0 
       left join (select jobPostingID from bullhorn1.BH_JobPosting where isdeleted &lt;&gt; 1) job on job.jobPostingID = ja0.[application-positionExternalId]
       left join (select candidateid from bullhorn1.Candidate where isdeleted &lt;&gt; 1) candidate on candidate.candidateid = ja0.[application-candidateExternalId]
       where "application-Stage" not like 'CANDIDATE%' and "application-Stage" &lt;&gt; '' and (job.jobPostingID is not null and candidate.candidateid is not null)
       )

--associated_date	last_stage_date	sent_date	interview1_date	interview2_date	offer_date

--select [application-stage], count(*) from ja1 where rn = 1 group by [application-stage] 
select "application-positionExternalId","application-candidateExternalId", status
from ja1
where rn = 1
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6400</xloc>
      <yloc>1472</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Job Application - Sub Status 2 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>/*
'SHORTLISTED'then 102
'SENT'then 103
'FIRST_INTERVIEW'then 104
'SECOND_INTERVIEW'then 105
'THIRD_INTERVIEW'then 106
'FOURTH_INTERVIEW'then 107
'FIFTH_INTERVIEW'then 108
'LAST_INTERVIEW_ROUND' then 123
'OFFERED'then 200
'PLACED'then 300
'PLACEMENT_PERMANENT'then 301
'PLACEMENT_CONTRACT'then 302
'PLACEMENT_TEMP'then 303
'ONBOARDING'then 310
*/

with
  JPInfo as (
  	select JP.jobPostingID as JobID
  		, JP.title as JobTitle
              , case when JP.employmentType is null then 301
                     when JP.employmentType in ('Document Service','Permanent- Salary') then 301


                     else 302 end as JobType
		, Cl.clientID as ContactID
		, Cl.userID as ClientUserID
		, UC.name as ContactName
		, UC.email as ContactEmail
		, CC.clientCorporationID as CompanyID
		, CC.name as CompanyName
	-- select distinct jp.employmentType
	from bullhorn1.BH_JobPosting JP
	left join bullhorn1.BH_Client Cl on JP.clientUserID = Cl.userID
	left join bullhorn1.BH_UserContact UC on JP.clientUserID = UC.userID
	left join bullhorn1.BH_ClientCorporation CC on JP.clientCorporationID = CC.clientCorporationID
	where 1=1 and JP.title &lt;&gt; '' and (JP.isdeleted &lt;&gt; 1)-- and JP.status &lt;&gt; 'Archive')
)
--select * from JPInfo order by JobID


, ja0 as (
       select
                JR.jobPostingID as 'application-positionExternalId', JPI.JobType
               , JPI.CompanyID, JPI.CompanyName,  JPI.ContactID, JPI.ContactName, JPI.ContactEmail, JPI.JobID,  JPI.JobTitle, CAI.CandidateName as '#Candidate Name' --, JR.userID, JPI.ClientUserID, 
               , CAI.candidateID as 'application-candidateExternalId'
               , convert(varchar(10),JR.dateAdded,120) as 'dateAdded'
               , JR.status as 'sub_status'
        -- select count(*) --5995 -- select distinct JR.status -- select top 100 *
        from bullhorn1.BH_JobResponse JR
        left join ( select CA.userID as CandidateUserID, CA.candidateID, UC.userID, UC.name as CandidateName, UC.email as CandidateEmail from bullhorn1.BH_Candidate CA left join bullhorn1.BH_UserContact UC on CA.userID = UC.userID ) CAI on JR.userID = CAI.CandidateUserID
        left join JPInfo JPI on JR.jobPostingID = JPI.JobID
        where CAI.candidateID is not null and JR.status not in ('1st Interview','2nd Interview','CV Sent')

)
--select top 2000 * from ja0
--where ( [application-positionExternalId] = 6744 and [application-candidateExternalId] = 64995) or ([application-positionExternalId] = 5343 and [application-candidateExternalId] = 193508)
--where CompanyName like 'Nuance%' or CompanyID = 6

, ja1 ("application-positionExternalId","application-candidateExternalId", JobType, sub_status,"dateAdded", rn) as (
       SELECT 
               "application-positionExternalId"
              ,"application-candidateExternalId"
              , JobType
              , sub_status
              , convert(datetime,"dateAdded") as "dateAdded"
              , rn = ROW_NUMBER() OVER (PARTITION BY "application-positionExternalId","application-candidateExternalId"
                     ORDER BY "application-positionExternalId" desc)
       FROM ja0 
       left join (select jobPostingID from bullhorn1.BH_JobPosting where isdeleted &lt;&gt; 1) job on job.jobPostingID = ja0.[application-positionExternalId]
       left join (select candidateid from bullhorn1.Candidate where isdeleted &lt;&gt; 1) candidate on candidate.candidateid = ja0.[application-candidateExternalId]
       where (job.jobPostingID is not null and candidate.candidateid is not null)
       )

--associated_date	last_stage_date	sent_date	interview1_date	interview2_date	offer_date

--select [application-stage], count(*) from ja1 where rn = 1 group by [application-stage] 
select "application-positionExternalId","application-candidateExternalId", sub_status
from ja1
where rn = 1 --and [application-stage] = 'PLACED' --and [#Candidate Name] like '%Freeman%']

</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6400</xloc>
      <yloc>1232</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Job Application 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
/*
'SHORTLISTED'then 102
'SENT'then 103
'FIRST_INTERVIEW'then 104
'SECOND_INTERVIEW'then 105
'THIRD_INTERVIEW'then 106
'FOURTH_INTERVIEW'then 107
'FIFTH_INTERVIEW'then 108
'LAST_INTERVIEW_ROUND' then 123
'OFFERED'then 200
'PLACED'then 300
'PLACEMENT_PERMANENT'then 301
'PLACEMENT_CONTRACT'then 302
'PLACEMENT_TEMP'then 303
'ONBOARDING'then 310
*/
--select distinct JR.status, count(*) from bullhorn1.BH_JobResponse JR group by JR.status

with
  JPInfo as (
  	select JP.jobPostingID as JobID
  		, JP.title as JobTitle
              , case when JP.employmentType is null then 301
                     when JP.employmentType like '%Perm%' then 301
                     when JP.employmentType like '%Opportunity%' then 301
			when JP.employmentType in ('Full-time','General Posting','INTERN FEE','Internal Recruitment') then 301
                     when JP.employmentType like '%Contract%' then 302
                     when JP.employmentType like '%Fixed%' then 302
                     when JP.employmentType like '%Part%' then 302
                     when JP.employmentType like '%Temp%' then 302
		       when JP.employmentType in ('Transactional Opportunity') then 302
                     --when JP.employmentType in ('Temporary','Temp to Perm') then 303
                     else null end as JobType
		, Cl.clientID as ContactID
		, Cl.userID as ClientUserID
		, UC.name as ContactName
		, UC.email as ContactEmail
		, CC.clientCorporationID as CompanyID
		, CC.name as CompanyName
	-- select distinct JP.employmentType
	from bullhorn1.BH_JobPosting JP
	left join bullhorn1.View_ClientContact Cl on JP.clientUserID = Cl.userID
	left join bullhorn1.BH_UserContact UC on JP.clientUserID = UC.userID
	left join bullhorn1.BH_ClientCorporation CC on JP.clientCorporationID = CC.clientCorporationID
	where 1=1 and JP.title &lt;&gt; '' and (JP.isdeleted &lt;&gt; 1)
)
--select * from JPInfo order by JobID


, ja0 as (
       select
                 JPI.JobID as "application-positionExternalId", JPI.JobType, JPI.JobTitle
               , JPI.CompanyID, JPI.CompanyName
               , JPI.ContactID, JPI.ClientUserID, JPI.ContactName, JPI.ContactEmail
               , CAI.CandidateID as "application-candidateExternalId", CAI.CandidateUserID, CAI.CandidateName
               , convert(varchar(10),JR.dateAdded,120) as 'dateAdded'
-- select distinct JR.status
               , JR.status as "original-stage" -- SHORTLISTED, SENT, FIRST_INTERVIEW, SECOND_INTERVIEW, OFFERED, PLACEMENT_PERMANENT, PLACEMENT_CONTRACT, PLACEMENT_TEMP, ONBOARDING.
               , coalesce(nullif(case
                     when JR.status = 'Accepted' then 'OFFERED'
--                     when JR.status = 'New Lead' then 'SHORTLISTED'
                     when JR.status = 'Active' then 'SHORTLISTED'
                     when JR.status = 'Left Message' then 'SHORTLISTED'
                     when JR.status = 'Reference Checking' then 'OFFERED'
                     
                     when JR.status like '%Placed%' then 'PLACED'
                     
                     when JR.status like '%Offer%' then 'OFFERED'
                     

                     
                     when JR.status like '%Sent%' then 'SENT'
                     when JR.status like '%Send%' then 'SENT'
                     when JR.status like '%Submitted%' then 'SENT'
                     when JR.status like 'Client%Submission%' then 'SENT'

                     when JR.status like '%Submission%' then 'SHORTLISTED'
                     when JR.status = 'Filled by Client' then 'SENT'-- > Rejected'
                     when JR.status like '%Candidate%Feedback%' then 'SENT'
                     when JR.status like '%Client%Feedback%' then 'SENT'
                     when JR.status like '%Client%Mailouts%' then 'SENT'
                     when JR.status = 'Offer Rejected' then 'SENT'
                     when JR.status = 'Previously submitted' then 'SENT'
                     when JR.status = 'Rejected by client' then 'SENT' -- > REJECTED'
                     when JR.status = 'Rejected Client' then 'SENT'-- > Rejected'
                     when JR.status = 'Reject' then 'SENT'
                     when JR.status = 'Sales Rep Rejected' then 'SHORTLISTED' --> Rejected
                     
                     when JR.status like '%Candidate%Accepted' then 'SHORTLISTED'
                     when JR.status like '%Candidate%Interested' then 'SHORTLISTED'
                     when JR.status like '%Candidate%Not%Interested' then 'SHORTLISTED'  -- > REJECTED'
                     when JR.status like '%Candidate%Rejected' then 'SHORTLISTED' -- > REJECTED'
                     when JR.status like '%Client%Rejected%' then 'SENT' -- > REJECTED'
                     when JR.status like '%Shortlist%' then 'SHORTLISTED'
                     when JR.status like '%Interested%' then 'SHORTLISTED'
                     when JR.status like '%Screen%' then 'SHORTLISTED'
                     when JR.status like '%Suitable%' then 'SHORTLISTED'
                     when JR.status like '%Rejected' then 'SHORTLISTED' -- > REJECTED'
                     when JR.status like '%Review%' then 'SHORTLISTED'
                     when JR.status like '%Unsuccessful%' then 'SHORTLISTED'
                     when JR.status like '%Withdrew%' then 'SHORTLISTED'

                     when JR.status like '%2%int%' then 'SECOND_INTERVIEW'
                     when JR.status like '%nd%int%' then 'SECOND_INTERVIEW'
                     when JR.status like '%int%2%' then 'SECOND_INTERVIEW'
                     when JR.status like '%3%int%' then 'SECOND_INTERVIEW'
                     when JR.status like '%rd%int%' then 'SECOND_INTERVIEW'
                     when JR.status like '%int%3%' then 'SECOND_INTERVIEW'
                     when JR.status like '%4%int%' then 'SECOND_INTERVIEW'
                     when JR.status like '%5%int%' then 'SECOND_INTERVIEW'
                     when JR.status like '%6%int%' then 'SECOND_INTERVIEW'
                     when JR.status like '%7%int%' then 'SECOND_INTERVIEW'
                     when JR.status like '%8%int%' then 'SECOND_INTERVIEW'
                     when JR.status like '%9%int%' then 'SECOND_INTERVIEW'
                     when JR.status like '%10%int%' then 'SECOND_INTERVIEW'
                     when JR.status like '%Final%int%' then 'SECOND_INTERVIEW'
                     when JR.status = 'Final' then 'SECOND_INTERVIEW'
                     
                     when JR.status like '%1%int%' then 'FIRST_INTERVIEW'
                     when JR.status like '%st%int%' then 'FIRST_INTERVIEW'
                     when JR.status like '%int%1%' then 'FIRST_INTERVIEW'
                     when JR.status like '%Int%Feedbk%' then 'FIRST_INTERVIEW'
                     when JR.status like '%Int%F/Up%' then 'FIRST_INTERVIEW'
                     when JR.status like '%Interview%' then 'FIRST_INTERVIEW'
                     else '' end, ''), '') as "application-stage"

-- rejected_date               
               , case
                     when JR.status = 'Filled by Client' then convert(datetime,"dateAdded")
                     when JR.status = 'Drop-Out' then convert(datetime,"dateAdded")
                     when JR.status = 'Not quite right but a good can' then convert(datetime,"dateAdded")
                     when JR.status like '%Candidate%Rejected' then convert(datetime,"dateAdded")
                     when JR.status like '%Client%Rejected%' then convert(datetime,"dateAdded")
                     when JR.status like '%Candidate%Not%Interested' then convert(datetime,"dateAdded")
                     when JR.status like 'Sales Rep Rejected' then convert(datetime,"dateAdded")

                     when JR.status like '%Reject%' then convert(datetime,"dateAdded")
                     when JR.status like '%Review%' then convert(datetime,"dateAdded")
                     when JR.status like '%Unsuccessful%' then convert(datetime,"dateAdded")
                     when JR.status like '%Withdrew%' then convert(datetime,"dateAdded")
                     else null end "rejected_date"
/*               , case
                     when JR.status = '1st interview booked' then JR.status
                     when JR.status = '2nd interview booked' then JR.status
                     when JR.status = '3rd Interview' then JR.status
                     when JR.status = 'Candidate Rejected' then JR.status
                     when JR.status = 'Client Rejected' then JR.status
                     when JR.status = 'final' then 'Final Interview'
                     when JR.status = 'Final Interview' then 'Final Interview'
                     when JR.status = 'New Lead' then JR.status
                     when JR.status = 'New Submission' then 'Submission'
                     when JR.status = 'Submission' then JR.status
                     when JR.status = 'Tech Test' then 'Tech Test'
                     end as "sub_status" */
                     , trim(JR.status) as "sub_status"
        -- select count(*) -- select top 100 * -- select distinct JR.status
        from bullhorn1.BH_JobResponse JR
        left join ( select CA.userID as CandidateUserID, CA.candidateID, UC.userID, UC.name as CandidateName, UC.email as CandidateEmail from bullhorn1.View_Candidate CA left join bullhorn1.BH_UserContact UC on CA.userID = UC.userID ) CAI on CAI.CandidateUserID = JR.userID
        left join JPInfo JPI on JPI.JobID = JR.jobPostingID
        where CAI.candidateID is not null
--        and JR.status = 'Placed'
UNION
       select 
                JPI.JobID as "application-positionExternalId", JPI.JobType, JPI.JobTitle
              , JPI.CompanyID, JPI.CompanyName
              , JPI.ContactID, JPI.ClientUserID, JPI.ContactName, JPI.ContactEmail
              , CAI.CandidateID as "application-candidateExternalId", CAI.CandidateUserID, CAI.CandidateName
              , convert(varchar(10),PL.dateAdded,120) as 'dateAdded'
              , 'Placed' as "original-stage"
              , 'PLACED' as "application-stage"
              , null as "rejected_date"
              , 'Placed' as "sub_status"
        -- select count(*) -- select top 10 *
        from bullhorn1.BH_Placement PL
        left join ( select CA.userID as CandidateUserID, CA.candidateID, UC.userID, UC.name as CandidateName, UC.email as CandidateEmail from bullhorn1.View_Candidate CA left join bullhorn1.BH_UserContact UC on CA.userID = UC.userID ) CAI on CAI.CandidateUserID = PL.userID
        left join JPInfo JPI on JPI.JobID = PL.jobPostingID
)
--select distinct [application-stage], count(*) from ja0 group by [application-stage];
--select distinct [application-stage], count(*) from ja0 where [rejected_date] is not null group by [application-stage];
--select top 100 * from ja0
--where [application-positionExternalId] = 4997
--where ( [application-positionExternalId] = 6744 and [application-candidateExternalId] = 64995) or ([application-positionExternalId] = 5343 and [application-candidateExternalId] = 193508)
--where CompanyName like 'Nuance%' or CompanyID = 6


, ja1 as (
       select
                "application-positionExternalId", JobType, JobTitle
              , CompanyID, CompanyName
              , ContactID, ClientUserID, ContactName, ContactEmail
              , "application-candidateExternalId", CandidateUserID, CandidateName
              , convert(datetime,"dateAdded") as "dateAdded"             
              , "original-stage"
              , "application-stage"
              , case 
                     when "application-Stage" = 'SHORTLISTED' then 102
                     when "application-Stage" = 'SENT' then 103
                     when "application-Stage" = 'FIRST_INTERVIEW' then 104
                     when "application-Stage" = 'SECOND_INTERVIEW' then 105
--                     when "application-Stage" = 'THIRD_INTERVIEW' then 106
--                     when "application-Stage" = 'FOURTH_INTERVIEW' then 107
--                     when "application-Stage" = 'FIFTH_INTERVIEW' then 108
--                     when "application-Stage" = 'LAST_INTERVIEW_ROUND' then 123
                     when "application-Stage" = 'OFFERED' then 200
                     when "application-Stage" = 'PLACED' then 300
--                     when "application-Stage" = 'PLACEMENT_PERMANENT' then 301
--                     when "application-Stage" = 'PLACEMENT_CONTRACT' then 302
--                     when "application-Stage" = 'PLACEMENT_TEMP' then 303
--                     when "application-Stage" = 'ONBOARDING' then 310
                     else null end as "status"
              , rejected_date
              , sub_status
              , rn = ROW_NUMBER() OVER (PARTITION BY "application-positionExternalId","application-candidateExternalId"/*,"application-Stage" */
                     ORDER BY "application-positionExternalId" desc,
                            CASE "application-stage"
                            WHEN 'PLACED' THEN 1
                            WHEN 'OFFERED' THEN 2
                            WHEN 'SECOND_INTERVIEW' THEN 3
                            WHEN 'FIRST_INTERVIEW' THEN 4
                            WHEN 'SENT' THEN 5
                            WHEN 'SHORTLISTED' THEN 6
                            END asc )
       FROM ja0 
       left join (select jobPostingID from bullhorn1.BH_JobPosting where isdeleted &lt;&gt; 1) job on job.jobPostingID = ja0.[application-positionExternalId]
       left join (select candidateid from bullhorn1.View_Candidate where isdeleted &lt;&gt; 1) candidate on candidate.candidateid = ja0.[application-candidateExternalId]
       where ("application-stage" not like 'CANDIDATE%' and "application-Stage" &lt;&gt; '') and (job.jobPostingID is not null and candidate.candidateid is not null)
       )
--select top 10 * from ja1
--select "application-positionExternalId", "application-candidateExternalId", count(*) from ja1 where rn = 5 group by "application-positionExternalId", "application-candidateExternalId"

--select "original-stage", "application-stage", sub_status, rejected_date, count(*) as amount from ja1 group by "original-stage", "application-stage", sub_status, rejected_date order by "original-stage" asc

--select status, rejected_date, count(*) from ja1 where rn = 1 group by status, rejected_date
--select "original-stage", sub_status from ja1 order by "original-stage" asc


select --top 10
                "application-positionExternalId", JobType, JobTitle
              , CompanyID, CompanyName
              , ContactID, ClientUserID, ContactName, ContactEmail
              , "application-candidateExternalId", CandidateUserID, CandidateName
              , "original-stage"
              , "application-stage"
			  --, dateAdded as insert_timestamp
              , case when status &lt; 300 then status else JobType end as status
              , case when status >= 102 then dateAdded end as associated_date
              , case when status >= 103 then dateAdded end as sent_date
              , case when status >= 104 then dateAdded end as interview1_date
              , case when status >= 105 then dateAdded end as interview2_date
              , case when status >= 200 then dateAdded end as offer_date
              , case when status >= 300 then dateAdded end as placed_date
              , case when status >= 300 then dateAdded end as hire_date
       , rejected_date --convert(datetime,"dateAdded") as 'rejected_date'
       , sub_status 
	   , -10 as creator_id      
--       , rn
       , 1 as active
--    , case when status >= 300 then JobType else null end as POSITIONCANDIDATE_status
--    , 3 as OFFER_draft_offer --used to move OFFERED to PLACED in VC [offer]
--    , 2 as INVOICE_status --used to update invoice status in VC [invoice] as 'active'
--    , 1 as INVOICE_renewal_index --default value in VC [invoice]
--    , 1 as INVOICE_renewal_flow_status --used to update flow status in VC [invoice] as 'placement_active'
--    , 1 as INVOICE_valid
from ja1
where rn = 1
--and status &lt; 300
--and status >= 300
--and [application-stage] = 'PLACED' 
--and [#Candidate Name] like '%Freeman%'
--and "application-candidateExternalId" = 42630
--and (
--("application-positionExternalId" = 4740 and "application-candidateExternalId" = 42170)
--or ("application-positionExternalId" = 7542 and "application-candidateExternalId" = 60969)
--or ("application-positionExternalId" = 5983 and "application-candidateExternalId" = 6364)
--or ("application-positionExternalId" = 5782 and "application-candidateExternalId" = 16535)
--or ("application-positionExternalId" = 4988 and "application-candidateExternalId" = 38286)
--or ("application-positionExternalId" = 3380 and "application-candidateExternalId" = 34104)
--)
--and sub_status is not null
--and "original-stage" = '3rd Interview'

</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6576</xloc>
      <yloc>64</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Job FE</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
with
-- CATEGORY
--  View_JobCategory (jobPostingID, categoryID) as ( 
--       SELECT m.jobPostingID, trim( replace(replace(categoryID.value,'•',''),'"','') ) as categoryID 
--       FROM bullhorn1.View_JobCategory m CROSS APPLY STRING_SPLIT(convert(nvarchar(max),m.categoryID),';') AS categoryID 
--       where (categoryID is not null and convert(nvarchar(max),categoryID) &lt;&gt; '')  -- and (isdeleted &lt;&gt; 1 and status &lt;&gt; 'Archive') 
--       )
--m.jobpostingidselect distinct(categoryID), count(*) from View_JobCategory group by categoryID;
--select * from bullhorn1.View_JobCategory


  View_JobDelimitedCategories (jobPostingID, fe, rn) as ( 
       SELECT m.jobPostingID, trim( replace(replace(Categories.value,'•',''),'"','') ) as Categories
              , rn = ROW_NUMBER() OVER (PARTITION BY m.jobPostingID ORDER BY m.jobPostingID desc)
       --FROM bullhorn1.View_JobDelimitedCategories m
       FROM (
              SELECT m.jobPostingID, trim( replace(replace(Categories.value,'•',''),'"','') ) as Categories
              FROM bullhorn1.View_JobDelimitedCategories m
              CROSS APPLY STRING_SPLIT(convert(nvarchar(max),m.Categories),',') AS Categories
              ) m
       CROSS APPLY STRING_SPLIT(convert(nvarchar(max),m.Categories),';') AS Categories
       where (Categories is not null and convert(nvarchar(max),Categories) &lt;&gt; '')  -- and (isdeleted &lt;&gt; 1 and status &lt;&gt; 'Archive') 
       )
--select distinct(Categories), count(*) from View_JobDelimitedCategories group by Categories;
--select * from View_JobDelimitedCategories where rn = 1
--select * from bullhorn1.View_JobDelimitedCategories;
--select distinct cast(JDC.categories as varchar(max)) from bullhorn1.View_JobDelimitedCategories JDC --where cast(skills as varchar(max)) &lt;&gt; ''


--select * from bullhorn1.View_JobDelimitedSpecialties;
, View_JobDelimitedSpecialties (jobPostingID, Specialties, rn) as ( 
       SELECT m.jobPostingID, trim( replace(replace(Specialties.value,'•',''),'"','') ) as Specialties
              , rn = ROW_NUMBER() OVER (PARTITION BY m.jobPostingID ORDER BY m.jobPostingID desc)
       --FROM bullhorn1.View_JobDelimitedCategories m
       FROM (
              SELECT m.jobPostingID, trim( replace(replace(Specialties.value,'•',''),'"','') ) as Specialties
              FROM bullhorn1.View_JobDelimitedSpecialties m
              CROSS APPLY STRING_SPLIT(convert(nvarchar(max),m.Specialties),',') AS Specialties
              ) m
       CROSS APPLY STRING_SPLIT(convert(nvarchar(max),m.Specialties),';') AS Specialties
       where (Specialties is not null and convert(nvarchar(max),Specialties) &lt;&gt; '')  -- and (isdeleted &lt;&gt; 1 and status &lt;&gt; 'Archive') 
       )
--select distinct(Specialties), count(*) from View_JobDelimitedSpecialties group by Specialties;
--select * from View_JobDelimitedSpecialties


, all_fe as (
       select * from View_JobDelimitedCategories UNION
       select * from View_JobDelimitedSpecialties
       )


--select distinct(fe) as fe, count(*) as amount, lower(fe) as tmp from all_fe group by fe;
select jobPostingID, fe, lower(fe) as tmp from all_fe where fe is not null and fe &lt;&gt; ''





</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3360</xloc>
      <yloc>848</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Job document + type</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>SELECT 
	'job' as Category
	--, concat('PR',jobPostingID) as JobExtID
	, jobPostingID as JobExtID
	, replace(replace(concat(directory,jobPostingFileID,fileExtension),'/','_'),'\','_') as UploadedName
	, case 
		when right(F.name, charindex('.', reverse(name))) = F.fileExtension then F.Name
		else concat(F.name, F.fileExtension) end as RealName
	, F.dateadded as created
	--, 'job_description' as document_type 
, lower(
              case 
              when trim(F.type) like '%Formatted CV%' then 'BH Formatted CV'
              when trim(F.type) like '%CV%' then 'CV/Resume'
              when trim(F.type) like '%resume%' then 'CV/Resume'

              when trim(F.type) like '%other%' then 'Other docs'
			  when trim(F.type) like '' then 'Other docs'
			  when trim(F.type) is null then 'CV/Resume'
--			  when trim(F.type) like 'NA' then 'Other docs'
              else trim(F.type) end
       ) as tmp
from bullhorn1.View_JobPostingFile F
--where fileExtension in ('.doc','.docx','.pdf','.xls','.xlsx','.rtf','.html') --0 rows
--where F.dateAdded >= '2020-01-01 00:00:00'</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>224</xloc>
      <yloc>1120</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Job info</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
with
--JOB DUPLICATION REGCONITION
job0 as (
       select
                a.jobPostingID
              , a.dateadded
              , iif(a.title is not null and a.title &lt;&gt; '', trim(a.title), 'No JobTitle') as title
              , convert(varchar(10),a.startDate,120) as startDate
              , iif(a.clientcorporationid is null or a.clientcorporationid = '', 'default', a.clientcorporationid) as 'Company_externalID', cc.name as 'CompanyName' --COMPANY
              , iif(company.contact_externalId is null or convert(varchar(500),company.contact_externalId) = '', 'default', convert(varchar(500),company.contact_externalId)) as 'contact_externalId', a.clientUserID as 'ContactUserID', uc.firstname as 'Contact_firstname', uc.lastname as 'Contact_lastname'--, uc.isdeleted as '#Contact_isdeleted', uc.status as '#Contact_status'              

              , company.[contact_companyId] as 'Company_externalID_of_ContactUserID'
              , company.company_name as 'CompanyName_of_ContactUserID'
       -- select count(*)                            
       from bullhorn1.BH_JobPosting a
       left join bullhorn1.BH_UserContact UC on a.clientUserID = UC.userID
       left JOIN ( select clientCorporationID, name, status from bullhorn1.BH_ClientCorporation CC /*where CC.status &lt;&gt; 'Archive'*/) cc ON cc.clientCorporationID = a.clientcorporationid
       left join (
              select * 
              from (
                     select
                              Cl.clientID as 'contact_externalId', Cl.userID as 'UserID'
                            , UC.clientCorporationID as 'contact_companyId'
                            , com.name as 'company_name'
                            , ROW_NUMBER() OVER(PARTITION BY Cl.UserID, UC.clientCorporationID, com.name ORDER BY Cl.clientID desc) AS rn 
                     -- select *
                     from bullhorn1.View_ClientContact Cl
                     left join (select distinct userID,clientCorporationID from bullhorn1.BH_UserContact) UC ON Cl.userID = UC.userID
                     left join (select clientCorporationID, name from bullhorn1.BH_ClientCorporation /*where status &lt;&gt; 'Archive'*/) com on com.clientCorporationID = UC.clientCorporationID
                     where (Cl.isdeleted &lt;&gt; 1 /*and Cl.status &lt;&gt; 'Archive'*/) --and Cl.userID in (579,605)
              ) n where rn = 1
              ) company on company.userID = a.clientUserID
       where (a.isdeleted &lt;&gt; 1 /*and a.status &lt;&gt; 'Archive'*/) --and company.rn = 1
       --and a.clientcorporationid in (51)       
       --and a.jobPostingID in (18,19,20)
)
, job (jobPostingID, dateadded, title, starDate, final_company_externalID, CompanyName, contact_externalId, final_contact_externalId, ContactUserID, Contact_firstname, Contact_lastname, Company_externalID_of_ContactUserID, CompanyName_of_ContactUserID, rn) as (
	SELECT  jobPostingID
	       , dateadded
		, title
		, startDate
       --COMPANY
		, Company_externalID as 'final_company_externalID', CompanyName
       --CONTACT
		, contact_externalId
		, case
		     when Company_externalID = Company_externalID_of_ContactUserID  then iif(contact_externalId is null or contact_externalId = '', concat('default',convert(varchar(5000),Company_externalID)), convert(varchar(5000),contact_externalId) )
		     when Company_externalID &lt;&gt; Company_externalID_of_ContactUserID then concat('default',convert(varchar(5000),Company_externalID)) -- NEW
		     --when Company_externalID &lt;&gt; Company_externalID_of_ContactUserID then iif(contact_externalId is null or contact_externalId = '', concat('default',convert(varchar(5000),Company_externalID)), concat('default',convert(varchar(5000),Company_externalID),'.',convert(varchar(5000),contact_externalId)) ) -- OLD
		     end as 'final_contact_externalId'
		, ContactUserID, Contact_firstname, Contact_lastname
              , Company_externalID_of_ContactUserID
              , CompanyName_of_ContactUserID
		, ROW_NUMBER() OVER(PARTITION BY contact_externalId,title,startDate ORDER BY jobPostingID) AS rn 
	from job0
	--where Company_externalID = Company_externalID_of_ContactUserID
	)
--select * from job where jobPostingID in (36)


-- >>> CREATE DEFAULT CONTACT LIST FOR JOB &lt;&lt;&lt; ---
--select distinct final_company_externalID as 'contact-companyId', final_contact_externalId as 'contact-externalId', 'Default' as 'contact-firstname', 'Contact' as 'contact-lastname' from job where final_contact_externalId like 'default%' order by final_company_externalID desc
--select distinct final_company_externalID as 'contact-companyId', final_contact_externalId as 'contact-externalId', Contact_firstname as 'contact-firstname', Contact_lastname as 'contact-lastname' from job where final_contact_externalId like 'default%' order by final_company_externalID desc



-- MAIL
, mail1 (ID,email) as (select userID, replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(concat(ltrim(rtrim(email)),',',ltrim(rtrim(email2)),',',ltrim(rtrim(email3))),'/',' '),'&lt;',' '),'>',' '),'(',' '),')',' '),':',' '),'.@','@'),'+',' '),'&amp;',' '),'[',' '),']',' '),'?',' '),'''',' ') as email from bullhorn1.BH_UserContact )
, mail2 (ID,email) as (SELECT ID, email.value as email FROM mail1 m CROSS APPLY STRING_SPLIT(m.email,',') AS email)
, mail3 (ID,email) as (SELECT ID, case when RIGHT(email, 1) = '.' then LEFT(email, LEN(email) - 1) when LEFT(email, 1) = '.' then RIGHT(email, LEN(email) - 1) else email end as email from mail2 WHERE email like '%_@_%.__%')
--, mail5 (ID,email) as (SELECT ID, STUFF((SELECT DISTINCT ', ' + email from mail3 WHERE ID = a.ID FOR XML PATH (''), TYPE).value('.', 'nvarchar(MAX)'), 1, 2, '')  AS email FROM mail3 as a GROUP BY a.ID)
, mail5 (ID,email) as ( SELECT ID, STRING_AGG(email,',' ) WITHIN GROUP (ORDER BY email) att from mail3 GROUP BY ID )
--select * from mail5 where id in (39188,14248,30223)

, usersassigned (jobpostingid,usersassigned) as (
       SELECT 
              jobpostingid
              , trim( replace(replace(replace(usersassigned.value,'  ',' '),' )',')'),'( ','(') ) as usersassigned --, trim( ind.value ) as ind 
       FROM (
              SELECT jobpostingid, trim( usersassigned.value ) as usersassigned 
              FROM bullhorn1.View_JobOrderUsersAssigned m 
              CROSS APPLY STRING_SPLIT( trim( convert(varchar(500),m.usersassigned) ), ',') AS usersassigned
              ) m
       CROSS APPLY STRING_SPLIT( trim( convert(varchar(500),m.usersassigned) ), ';') AS usersassigned
       where (usersassigned is not null and convert(nvarchar(max),usersassigned) &lt;&gt; '') -- and usersassigned &lt;&gt; 'Please Select')
       )
--select distinct usersassigned from bullhorn1.View_JobOrderUsersAssigned vjoua;
--select distinct usersassigned from usersassigned where usersassigned &lt;&gt; '#N/A'
--select distinct UC.name, vjoua.usersassigned, UC.email
--from usersassigned vjoua
--left join ( select userid, firstname, lastname, name, email from bullhorn1.BH_UserContact ) UC ON UC.name = vjoua.usersassigned
--where vjoua.jobpostingid in (14152,14149)
--order by UC.name

, owners1 as (
       select
                a.jobPostingID
              , a.title
              , a.dateadded
              , mail5.email as 'owner'
       from bullhorn1.BH_JobPosting a
       left join mail5 ON a.userID = mail5.ID
       
UNION
       
       select
                a.jobPostingID
              , a.title
              , a.dateadded
              , t.usersassigned as 'owner'
       from bullhorn1.BH_JobPosting a
       left join (
              select jobpostingid
                     , coalesce( nullif( concat(lower(replace(trim(usersassigned),' ','')),'@noemailaddress.co') ,''), 'email@noemailaddress.co') as usersassigned
              from usersassigned
              ) t on t.jobpostingid = a.jobpostingid
       where t.jobpostingid is not null
)

, owners2 as (
       SELECT
              jobpostingid
              , STRING_AGG(owner,',' ) WITHIN GROUP (ORDER BY jobpostingid) owners 
       from owners1
       --where isdeleted &lt;&gt; 1
       GROUP BY jobpostingid
)


-- NOTE
, note as (
        select JP.jobPostingID
	, Stuff(  
                Coalesce('BH Job ID: ' + NULLIF(cast(JP.jobPostingID as varchar(max)), '') + char(10), '')
--+ coalesce('Margin: ' + nullif(trim(convert(nvarchar(max),jp.customFloat1)), '') + char(10), '')

--+ coalesce('Author of Last Note: ' + nullif(trim(convert(nvarchar(max),jp.authorLastNote)), '') + char(10), '')
+ coalesce('Branch: ' + nullif(trim(convert(nvarchar(max),jp.branchCode)), '') + char(10), '')
+ coalesce('Branch ID: ' + nullif(trim(convert(nvarchar(max),jp.branchID)), '') + char(10), '')
+ coalesce('Client Cost Center: ' + nullif(trim(convert(nvarchar(max),jp.costCenter)), '') + char(10), '')
+ coalesce('Date Last Exported: ' + nullif(trim(convert(nvarchar(max),jp.dateLastExported)), '') + char(10), '')
+ coalesce('Last Updated: ' + nullif(trim(convert(nvarchar(max),vjlm.DateLastModified)), '') + char(10), '') --jp.dateLastModified
--+ coalesce('Date Last Note: ' + nullif(trim(convert(nvarchar(max),jp.dateLastNote)), '') + char(10), '')
+ coalesce('Date Last Published: ' + nullif(trim(convert(nvarchar(max),jp.dateLastPublished)), '') + char(10), '')
+ coalesce('Job Duration: ' + nullif(trim(convert(nvarchar(max),jp.durationWeeks)), '') + char(10), '')
+ coalesce('Effective Date: ' + nullif(trim(convert(nvarchar(max),JO.effectiveDate)), '') + char(10), '')
+ coalesce('Hours of Operation: ' + nullif(trim(convert(nvarchar(max),jp.hoursOfOperation)), '') + char(10), '')
+ coalesce('Hourly Committment: ' + nullif(trim(convert(nvarchar(max),jp.hoursPerWeek)), '') + char(10), '')
+ coalesce('Publishing Status: ' + nullif(trim(convert(nvarchar(max),jp.isPublic)), '') + char(10), '')
+ coalesce('Premium Job Boards: ' + nullif(trim(convert(nvarchar(max),jp.jobBoardList)), '') + char(10), '')
+ coalesce('Linked Job Posting ID: ' + nullif(trim(convert(nvarchar(max),jp.linkedJobPostingID)), '') + char(10), '')
+ coalesce('Location Requirements: ' + nullif(trim(convert(nvarchar(max),jp.onSite)), '') + char(10), '')
+ coalesce('Options Package: ' + nullif(trim(convert(nvarchar(max),jp.optionsPackage)), '') + char(10), '')
+ coalesce('Reason Closed: ' + nullif(trim(convert(nvarchar(max),jp.reasonClosed)), '') + char(10), '')
+ coalesce('Reporting Billing (other): ' + nullif(trim(convert(nvarchar(max),jp.reportTo)), '') + char(10), '')
+ coalesce('Report To: ' + nullif(trim(convert(nvarchar(max),jp.reportToUserID)), '') + ' - ' + reportToUserID.name + char(10), '')
+ coalesce('Published Contact Info: ' + nullif(trim(convert(nvarchar(max),jp.responseUserID)), '') + ' - ' + responseUserID.name + char(10), '')
+ coalesce('Source: ' + nullif(trim(convert(nvarchar(max),jp.source)), '') + char(10), '')
+ coalesce('Status: ' + nullif(trim(convert(nvarchar(max),jp.status)), '') + char(10), '')
+ coalesce('Tax %: ' + nullif(trim(convert(nvarchar(max),jp.taxRate)), '') + char(10), '')
+ coalesce('Tax Preference: ' + nullif(trim(convert(nvarchar(max),jp.taxStatus)), '') + char(10), '')
+ coalesce('Type: ' + nullif(trim(convert(nvarchar(max),case when jp.type = 1 then 'A' when jp.type = 2 then 'B' when jp.type = 3 then 'C' else '' end)), '') + char(10), '')

--              + Coalesce('Assigned to: ' + NULLIF(cast(ass.name as varchar(max)), '') + char(10), '')
--              + Coalesce('Benefits: ' + NULLIF(cast(JP.Benefits as varchar(max)), '') + char(10), '')
--              + Coalesce('Certifications: ' + NULLIF(cast(JP.certifications as varchar(max)), '') + char(10), '')
--              + Coalesce('Client Charge Rate: ' + NULLIF(cast(JP.clientBillRate as varchar(max)), '') + char(10), '')
--              + Coalesce('Client Corporation ID: ' + NULLIF(cast(CC.clientCorporationID as varchar(max)), '') + char(10), '')
--              + Coalesce('Company address: ' + NULLIF(CC.address1, '') + char(10), '')
--              + Coalesce('Degree Requirements: ' + NULLIF(cast(JP.degreeList as varchar(max)), '') + char(10), '')
--              + Coalesce('Employment Type: ' + NULLIF(cast(JP.employmentType as varchar(max)), '') + char(10), '')
--              + Coalesce('Fee arrangement: ' + NULLIF(cast(JP.feeArrangement as varchar(max)), '') + char(10), '')
----              + Coalesce('Job Location: ' + NULLIF(cast(JP.locationInfoHeader as varchar(max)), '') + char(10), '')
--              + Coalesce('Keyword: ' + NULLIF(cast(JP.skills as varchar(max)), '') + char(10), '')
--              + Coalesce('Linked Job Posting ID: ' + NULLIF(cast(JP.linkedJobPostingID as varchar(max)), '') + char(10), '')
--              + Coalesce('NumOpenings: ' + NULLIF(cast(JP.numOpenings as varchar(max)), '') + char(10), '')
--              + Coalesce('Open / Closed: ' + NULLIF( cast( iif(JP.isOpen in (null,0),'Closed','Open') as varchar(max)), '') + char(10), '') 
--              + Coalesce('Pay Rate: ' + NULLIF(cast(JP.payRate as varchar(max)), '') + char(10), '')
--              + Coalesce('Perm Fee (%): ' + NULLIF(cast(JP.feeArrangement as varchar(max)), '') + char(10), '')
--              + Coalesce('Position type: ' + NULLIF(cast(JP.type as varchar(max)), '') + char(10), '')
--              + Coalesce('Priority: ' + NULLIF(cast(JP.type as varchar(max)), '') + char(10), '')
--              + Coalesce('Publish Category: ' + NULLIF(cast(JP.publishedCategoryID as varchar(max)), '') + char(10), '')
--              + Coalesce('Reason Closed: ' + NULLIF(cast(JP.reasonClosed as varchar(max)), '') + char(10), '')
--              + Coalesce('Reports to: ' + NULLIF(cast(UC.name as varchar(max)), '') + char(10), '') --JP.reportToUserID
--              + Coalesce('Required skills: ' + NULLIF(cast(JP.skills as varchar(max)), '') + char(10), '')
--              + Coalesce('Salary: ' + NULLIF(cast(JP.salary as varchar(max)), '') + char(10), '')
----              + Coalesce('Skills / Experience: ' + NULLIF(cast(JP.skillsInfoHeader as varchar(max)), '') + char(10), '')
--              + Coalesce('Start Date: ' + NULLIF(convert(varchar(10),JP.startdate,120), '') + char(10), '')
--              + Coalesce('Status: ' + NULLIF(cast(JP.status as varchar(max)), '') + char(10), '')
--              + Coalesce('Years required: ' + NULLIF(cast(JP.yearsRequired as varchar(max)), '') + char(10), '')
--
--              + Coalesce('Address: ' + NULLIF(cast(JP.address as varchar(max)), '') + char(10), '')
--              + Coalesce('Suburb: ' + NULLIF(cast(JP.city as varchar(max)), '') + char(10), '')
--              + Coalesce('State: ' + NULLIF(cast(JP.state as varchar(max)), '') + char(10), '')
--              + Coalesce('Zip: ' + NULLIF(cast(JP.zip as varchar(max)), '') + char(10), '')
--              + Coalesce('Country: ' + NULLIF(cast(tmp_country.COUNTRY as varchar(max)) + char(10), ''), '')
	        , 1, 0, '') as note
        -- select count(*) -- select top 50 *
        from bullhorn1.BH_JobPosting JP --where cast(skills as varchar(max)) &lt;&gt; ''
        left join bullhorn1.BH_CategoryList CL on JP.publishedCategoryID = CL.categoryID
        left join bullhorn1.BH_ClientCorporation CC on JP.clientCorporationID = CC.clientCorporationID
        left join (select userID,name from bullhorn1.BH_UserContact) UC on UC.userID = JP.reportToUserID
        left join tmp_country on JP.countryID = tmp_country.CODE
        left join ( SELECT jobPostingID, STUFF((SELECT ',' + uc.name from bullhorn1.BH_JobAssignment ja left join bullhorn1.BH_UserContact UC on UC.userID = ja.userID where ja.jobPostingID = a.jobPostingID FOR XML PATH (''), TYPE).value('.', 'nvarchar(MAX)'), 1, 1, '')  AS name FROM ( select ja.jobPostingID,uc.name  from bullhorn1.BH_JobAssignment ja left join bullhorn1.BH_UserContact UC on UC.userID = ja.userID ) AS a GROUP BY a.jobPostingID ) ass on ass.jobPostingID = JP.jobPostingID
        left join bullhorn1.View_JobLastModified vjlm on vjlm.jobpostingID = JP.jobpostingID
        left join (select userid, name from bullhorn1.BH_UserContact) reportToUserID on reportToUserID.userid = jp.reportToUserID
        left join (select userid, name from bullhorn1.BH_UserContact) responseUserID on responseUserID.userid = jp.responseUserID
        left join bullhorn1.BH_JobOpportunity JO on JO.jobPostingID = JP.jobPostingID
        )
--select count(*) from note --918 > 1103
--select * from note

-- Add placement information under job posting
, placementnote as (
        select jobPostingID
	, Stuff((select  --Add placement information under job posting
	        --+ Coalesce('Placement Status: ' + NULLIF(PL.status, '') + char(10), '')
	        + Coalesce('Report to: ' + NULLIF(cast(PL.reportTo as varchar(max)), '') + char(10), '')
	        --+ Coalesce('Cost Center: ' + NULLIF(cast(PL.costCenter as varchar(max)), '') + char(10), '')
	        + Coalesce('Billing User: ' + NULLIF(cast(PL.billingUserID as varchar(max)), '') + char(10), '')
	        --+ Coalesce('Start Date: ' + NULLIF(convert(varchar(10),PL.Datebegin,120), '') + char(10), '')
	        + Coalesce('Scheduled End: ' + NULLIF(convert(varchar(10),PL.dateEnd,120), '') + char(10), '')
	        + Coalesce('Employee type: ' + NULLIF(cast(PL.employeeType as varchar(max)), '') + char(10), '')
	        + Coalesce('Placement Fee(%): ' + NULLIF(cast(PL.fee as varchar(max)), '') + char(10), '')
	        /*+ Coalesce('Days Guaranteed: ' + NULLIF(cast(PL.daysGuaranteed as varchar(max)), '') + char(10), '')
	        + Coalesce('Days Pro-Rated: ' + NULLIF(cast(PL.daysProRated as varchar(max)), '') + char(10), '')
	        + Coalesce('Date Effective Date: ' + NULLIF(cast(PL.dateClientEffective as varchar(max)), '') + char(10), '')
	        + Coalesce('Bill Rate: ' + NULLIF(cast(PL.clientBillRate as varchar(max)), '') + char(10), '')
	        + Coalesce('Pay Rate: ' + NULLIF(cast(PL.payRate as varchar(max)), '') + char(10), '')
	        + Coalesce('Salary Unit: ' + NULLIF(cast(PL.salaryUnit as varchar(max)), '') + char(10), '')
	        + Coalesce('Overtime Bill Rate: ' + NULLIF(cast(PL.salaryUnit as varchar(max)), '') + char(10), '')
	        + Coalesce('Effective Date (pay rate info): ' + NULLIF(cast(PL.dateEffective as varchar(max)), '') + char(10), '')
	        + Coalesce('Overtime Pay Rate: ' + NULLIF(cast(PL.overtimeRate as varchar(max)), '') + char(10), '')
	        + Coalesce('Date Added: ' + NULLIF(cast(PL.dateAdded as varchar(max)), '') + char(10), '')
	        + Coalesce('Comments: ' + NULLIF(cast(PL.comments as varchar(max)), '') + char(10), '') */
	        + Coalesce('Date Added: ' + cast(PL.dateAdded as varchar(max)) + char(10), '')
	        --+ Coalesce('Date Added: ' + cast(PL.dateAdded as varchar(max)) + char(10) + 'Comments: ' + NULLIF(cast(PL.comments as varchar(max)), '') + char(10), '')
	        --+ Coalesce('BE: ' + NULLIF(cast(PL.userid as varchar(max)), '') + char(10), '')
	        -- select top 50 *
	        from bullhorn1.BH_Placement PL --where PL.reportTo &lt;&gt; ''
                left join bullhorn1.BH_UserContact UC on PL.billingUserID = UC.userID
                WHERE PL.jobPostingID = a.jobPostingID FOR XML PATH (''), TYPE).value('.', 'nvarchar(MAX)'), 1, 0, '') as note
        from bullhorn1.BH_Placement a group by a.jobPostingID )
--select count(*) from placementnote
--select * from placementnote where jobPostingID in (17,28,30,50,92,115)
--select jobPostingID from placementnote group by jobPostingID having count(*) > 1


--DOCUMENT
/*, doc as (SELECT jobPostingID
                 , STUFF((SELECT DISTINCT ',' + concat(jobPostingFileID,fileExtension) from bullhorn1.View_JobPostingFile WHERE jobPostingID = a.jobPostingID and fileExtension in ('.doc','.docx','.pdf','.xls','.xlsx','.rtf','.html','.txt') FOR XML PATH (''), TYPE).value('.', 'nvarchar(MAX)'), 1, 1, '') AS files 
                 FROM (select jobPostingID from bullhorn1.View_JobPostingFile) AS a GROUP BY a.jobPostingID)*/

, placementfiles(jobPostingID, files) as (SELECT jobPostingID, STRING_AGG( cast(replace(replace(concat(directory,placementFileID,fileExtension),'/','_'),'\','_') as nvarchar(max)),',' ) WITHIN GROUP (ORDER BY placementFileID) files from bullhorn1.View_PlacementFile GROUP BY jobPostingID)
, files (jobPostingID,files) as ( SELECT jobPostingID, STRING_AGG(cast(replace(replace(concat(directory,jobPostingFileID,fileExtension),'/','_'),'\','_') as nvarchar(max)),',' ) WITHIN GROUP (ORDER BY jobPostingFileID) files from bullhorn1.View_JobPostingFile where isdeleted &lt;&gt; 1 GROUP BY jobPostingID )

--, doc(jobPostingID, files) as ( select f.jobPostingID, STRING_AGG( f.files,',' ) WITHIN GROUP (ORDER BY f.files) files from (SELECT * from files) f GROUP BY f.jobPostingID )
, doc(jobPostingID, files) as ( select f.jobPostingID, STRING_AGG( f.files,',' ) WITHIN GROUP (ORDER BY f.files) files from (SELECT * from files UNION ALL SELECT * from placementfiles) f GROUP BY f.jobPostingID )


select --top 10
         convert(varchar(1000),jp.jobPostingID) as 'position-externalId'
--	, iif(job.final_contact_externalId is null, 'default',job.final_contact_externalId) as 'position-contactId'
	, iif(job.final_contact_externalId is null, concat('default',final_company_externalID), convert(varchar(1000),job.final_contact_externalId)) as 'position-contactId'
    , job.final_company_externalID as '#CompanyId', job.CompanyName as '#CompanyName', job.ContactUserID as '#ContactUserID', job.Contact_firstname as '#Contact_firstname', job.Contact_lastname as '#Contact_lastname'
	--, case when job.rn > 1 then concat(job.title,' ',rn) else job.title end as 'position-title'
	, job.title as 'position-title'
	, jp.numOpenings as 'position-headcount'
--	, mail5.email as 'position-owners'

	--, jp.type as 'position-employmentType#' --[FULL_TIME, PART_TIME, CASUAL]
	, case when jp.employmentType is null or jp.employmentType in ('Permanent','Perm','Opportunity','Full-time','General Posting','INTERN FEE','Internal Recruitment','Strategic Opportunity') then 1 --'PERMANENT'
	       when jp.employmentType in ('Contract','Contract Flat Fee', 'Fixed Term', 'Fixed Contract','Temp','Temporary','Temp to Perm','Temporary - Contractor','Temporary - Employee','Transactional Opportunity') then 2 --'CONTRACT'
	       else 2 --'CONTRACT' 
			end as 'position-type' --[PERMANENT, INTERIM_PROJECT_CONSULTING,TEMPORARY,CONTRACT, TEMPORARY_TO_PERMANENT]
	, 1 as position_sub_type
	, 0 as employment_type

	, jp.salary as 'position-actualSalary'
	--, jp.customtext1 as 'position-currency'

	, coalesce(nullif(concat_ws ('',
                coalesce('Benefits: ' + nullif(trim(convert(nvarchar(max),jp.benefits)), '') + '&lt;br/>', '')
              , coalesce('Bonus Package: ' + nullif(trim(convert(nvarchar(max),jp.bonusPackage)), '') + '&lt;br/>', '')
              , coalesce('Certification Requirements: ' + nullif(trim(convert(nvarchar(max),jp.certifications)), '') + '&lt;br/>', '')
              , coalesce('Internal Description: ' + nullif(trim(convert(nvarchar(max),jp.description)), '') + '&lt;br/>', '')
              , coalesce('Travel Requirements: ' + nullif(trim(convert(nvarchar(max),jp.travelRequirements)), '') + '&lt;br/>', '')
              , coalesce('Will Relocate?: ' + nullif(trim(convert(nvarchar(max),case when jp.willRelocate = 1 then 'Yes' when jp.willRelocate = 0 then 'No' end)), '') + '&lt;br/>', '')
--              , coalesce('Will Relocate Boolean: ' + nullif(trim(convert(nvarchar(max),jp.willRelocateBool)), '') + '&lt;br/>', '')
              , coalesce('Visa Sponsorship Provided: ' + nullif(trim(convert(nvarchar(max),case when jp.willSponsor = -1 then 'Not Applicable' when jp.willSponsor = 1 then 'Yes' when jp.willSponsor = 0 then 'No' end)), '') + '&lt;br/>', '')
              , coalesce('Minimum Experience: ' + nullif(trim(convert(nvarchar(max),jp.yearsRequired)), '') + '&lt;br/>', '')    
              ) , ''), '') as 'position-internalDescription'

	 , coalesce(nullif(concat_ws ('',
                coalesce('Degree Requirements: ' + nullif(trim(convert(nvarchar(max),jp.degreeList)), '') + '&lt;br/>', '')
              , coalesce('Education Requirements: ' + nullif(trim(convert(nvarchar(max),jp.educationDegree)), '') + '&lt;br/>', '')
              , coalesce('Published Description: ' + nullif(trim(convert(nvarchar(max),jp.publicDescription)), '') + '&lt;br/>', '')
		) , ''), ' ') as 'position-publicDescription'
	      
	, jp.startDate as 'position-startDate' --convert(varchar(10),jp.startDate,120) 
	, iif(jp.isOpen in (null,0),getdate()-1,iif(dateend is null,dateadd(year,1,jp.startDate),dateend)) as 'position-endDate'  --convert(varchar(10),iif(jp.isOpen in (null,0),getdate()-1,dateend),120) as 'position-endDate' --, convert(varchar(10),iif(jp.status in ('Archive','Cancelled','Filled by Client','Lost to Competitor'),getdate()-2,dateClosed),120) as 'position-endDate'

	, left(note.note,32000) as 'position-note' -- concat(note.note,placementnote.note) 

       , ltrim(Stuff(
                Coalesce(' ' + NULLIF(convert(nvarchar(max),jds.skills), ''), '')
              + Coalesce(', ' + NULLIF(convert(nvarchar(max),jp.skills), ''), '')
              , 1, 1, '') ) as 'key_words'
       
       , jp.dateadded as 'insert_timestamp'

-- owner
       , owners2.owners as 'owners'
, 0 as 'owners-super_user'
, getdate() as 'owners-insert_timestamp'
, 1 as 'owners-locked_user'
--, as 'owners-first_name'
, ' ' as 'owners-last_name'
, 'en' as 'owners-language'

-- document
	, doc.files as 'document'
, 'POSITION' as entity_type
, 'job_description' as  document_type
, 0 as default_file

-- WORK LOCATION
       , jp.address
       , jp.address2
       , jp.city
       , jp.countryID
--       , jp.fullAddress
       , jp.locationID
       , jp.state
       , jp.zip

--PERMANENT JOB
      , 1 as 'use_quick_fee_forecast'
      , jp.feeArrangement * 100 as 'percentage_of_annual_salary'
-- CONTRACT JOB
      , 0 as 'on_cost'
      , 0 as 'on_cost_percentage'
      , jp.payRate as 'pay_rate' --**
      , jp.payRate as 'total_pay_rate'
      , 'chargeRate' as 'charge_rate_type'
      , iif(jp.clientBillRate = 0, 0, (jp.clientBillRate-jp.payRate)*100/jp.clientBillRate) as 'margin_percent'
      --, iif(a.payRate = 0, 0, (a.clientBillRate-a.payRate)*100/a.payRate) as 'markup_percent'
	  , jp.markupPercentage as 'markup_percent'
      , jp.clientBillRate-jp.payRate as 'profit'
      , jp.clientBillRate as 'charge_rate' --**
      , jp.clientBillRate as 'charge_rate' --**
      --, jp.salaryUnit as 'Payment Type' --**
      , case
             when salaryUnit = 'Per Hour' then 1
             when salaryUnit = 'Per Day' then 2
             when salaryUnit = 'Per Week' then 3
             when salaryUnit = 'Per Month' then 4
             else NULL
             end as 'contract_rate_type'
	, -10 as 'creator_account_id'
       
-- select distinct employmentType -- select distinct Type -- select distinct status -- select distinct customtext1 -- select count(*) --2574 -- select top 100 startDate, dateend, dateClosed -- select top *
-- select clientBillRate, feeArrangement, payRate,salaryUnit
from bullhorn1.BH_JobPosting jp --where jp.jobPostingID = 2539
/*left join ( select userID, clientcorporationid, isdeleted, status, max(clientID) as clientID from bullhorn1.BH_Client where (isdeleted &lt;&gt; 1 and status &lt;&gt; 'Archive') group by userID, clientcorporationid, isdeleted, status ) b on jp.clientUserID = b.userID
left JOIN bullhorn1.BH_ClientCorporation CC ON b.clientCorporationID = CC.clientCorporationID
left join bullhorn1.BH_UserContact UC on jp.clientUserID = UC.userID*/
--left join (select * from job where rn = 1) job on jp.jobPostingID = job.jobPostingID
left join job on jp.jobPostingID = job.jobPostingID
left join bullhorn1.View_JobDelimitedSkills jds on jds.jobpostingid = jp.jobpostingid
--left join mail5 ON jp.userID = mail5.ID --
left join owners2 on owners2.jobpostingID = jp.jobPostingID
left join note on jp.jobPostingID = note.jobPostingID
left join placementnote  on jp.jobPostingID = placementnote.jobPostingID
left join doc on jp.jobPostingID = doc.jobPostingID
where jp.isdeleted &lt;&gt; 1 --and jp.status &lt;&gt; 'Archive')
--and jp.employmentType in ('Contract','Fixed Contract','Temp','Temporary','Temp to Perm')
--and job.Company_externalID in (939)
--and jp.jobpostingid in (939)
--where b.isPrimaryOwner = 1 --> add isPrimaryOwner = 1 to remove 1 userID having more than 1 clientID
--and job.clientID like '%default%'
--and jp.jobPostingID in (1847,3,2,33,80,27,130)
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3136</xloc>
      <yloc>112</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Job location</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>/*
with
--JOB DUPLICATION REGCONITION
job0 as (
       select
                a.jobPostingID
              , a.dateadded
              , iif(a.title is not null and a.title &lt;&gt; '', trim(a.title), 'No JobTitle') as title
              , convert(varchar(10),a.startDate,120) as startDate
              , iif(a.clientcorporationid is null or a.clientcorporationid = '', 'default', a.clientcorporationid) as 'Company_externalID', cc.name as 'CompanyName' --COMPANY
              , iif(company.contact_externalId is null or convert(varchar(500),company.contact_externalId) = '', 'default', convert(varchar(500),company.contact_externalId)) as 'contact_externalId', a.clientUserID as 'ContactUserID', uc.firstname as 'Contact_firstname', uc.lastname as 'Contact_lastname'--, uc.isdeleted as '#Contact_isdeleted', uc.status as '#Contact_status'              

              , company.[contact_companyId] as 'Company_externalID_of_ContactUserID'
              , company.company_name as 'CompanyName_of_ContactUserID'
       -- select count(*)                            
       from bullhorn1.BH_JobPosting a
       left join bullhorn1.BH_UserContact UC on a.clientUserID = UC.userID
       left JOIN ( select clientCorporationID, name, status from bullhorn1.BH_ClientCorporation CC where CC.status &lt;&gt; 'Archive') cc ON cc.clientCorporationID = a.clientcorporationid
       left join (
              select * 
              from (
                     select
                              Cl.clientID as 'contact_externalId', Cl.userID as 'UserID'
                            , UC.clientCorporationID as 'contact_companyId'
                            , com.name as 'company_name'
                            , ROW_NUMBER() OVER(PARTITION BY Cl.UserID, UC.clientCorporationID, com.name ORDER BY Cl.clientID desc) AS rn 
                     -- select *
                     from bullhorn1.BH_Client Cl --where Cl.userID = 41471
                     left join (select distinct userID,clientCorporationID from bullhorn1.BH_UserContact) UC ON Cl.userID = UC.userID
                     left join (select clientCorporationID, name from bullhorn1.BH_ClientCorporation where status &lt;&gt; 'Archive') com on com.clientCorporationID = UC.clientCorporationID
                     where (Cl.isdeleted &lt;&gt; 1 and Cl.status &lt;&gt; 'Archive') --and Cl.userID in (579,605)
              ) n where rn = 1
              ) company on company.userID = a.clientUserID
       where (a.isdeleted &lt;&gt; 1 and a.status &lt;&gt; 'Archive') --and company.rn = 1
       --and a.clientcorporationid in (51)       
       --and a.jobPostingID in (18,19,20)
)
, job (jobPostingID, dateadded, title, starDate, Company_externalID, CompanyName, contact_externalId, final_contact_externalId, ContactUserID, Contact_firstname, Contact_lastname, Company_externalID_of_ContactUserID, CompanyName_of_ContactUserID, rn) as (
	SELECT  jobPostingID
	       , dateadded
		, title
		, startDate
       --COMPANY
		, Company_externalID, CompanyName
       --CONTACT
		, contact_externalId
		, case
		     when Company_externalID = Company_externalID_of_ContactUserID  then iif(contact_externalId is null or contact_externalId = '', concat('default',convert(varchar(5000),Company_externalID)), convert(varchar(5000),contact_externalId) )
		     --when Company_externalID &lt;&gt; Company_externalID_of_ContactUserID then iif(contact_externalId is null or contact_externalId = '', concat('default',convert(varchar(5000),Company_externalID)), concat('default',convert(varchar(5000),contact_externalId)) )
		     when Company_externalID &lt;&gt; Company_externalID_of_ContactUserID then iif(contact_externalId is null or contact_externalId = '', concat('default',convert(varchar(5000),Company_externalID)), concat('default',convert(varchar(5000),Company_externalID),'.',convert(varchar(5000),contact_externalId)) )
		     end as 'final_contact'
		, ContactUserID, Contact_firstname, Contact_lastname
              , Company_externalID_of_ContactUserID
              , CompanyName_of_ContactUserID
		, ROW_NUMBER() OVER(PARTITION BY contact_externalId,title,startDate ORDER BY jobPostingID) AS rn 
	from job0 
	)
--select * from job where jobPostingID in (952)

*/




with
--JOB DUPLICATION REGCONITION
job0 as (
       select
                a.jobPostingID
              , a.dateadded
              , iif(a.title is not null and a.title &lt;&gt; '', trim(a.title), 'No JobTitle') as title
              , convert(varchar(10),a.startDate,120) as startDate
              , iif(a.clientcorporationid is null or a.clientcorporationid = '', 'default', a.clientcorporationid) as 'Company_externalID', cc.name as 'CompanyName' --COMPANY
              , iif(company.contact_externalId is null or convert(varchar(500),company.contact_externalId) = '', 'default', convert(varchar(500),company.contact_externalId)) as 'contact_externalId', a.clientUserID as 'ContactUserID', uc.firstname as 'Contact_firstname', uc.lastname as 'Contact_lastname'--, uc.isdeleted as '#Contact_isdeleted', uc.status as '#Contact_status'              

              , company.[contact_companyId] as 'Company_externalID_of_ContactUserID'
              , company.company_name as 'CompanyName_of_ContactUserID'
       -- select count(*)                            
       from bullhorn1.BH_JobPosting a
       left join bullhorn1.BH_UserContact UC on a.clientUserID = UC.userID
       left JOIN (select clientCorporationID, name, status from bullhorn1.BH_ClientCorporation CC) cc ON cc.clientCorporationID = a.clientcorporationid --where CC.status &lt;&gt; 'Archive'
       left join (
              select * 
              from (
                     select
                              Cl.clientID as 'contact_externalId', Cl.userID as 'UserID'
                            , UC.clientCorporationID as 'contact_companyId'
                            , com.name as 'company_name'
                            , ROW_NUMBER() OVER(PARTITION BY Cl.UserID, UC.clientCorporationID, com.name ORDER BY Cl.clientID desc) AS rn 
                     -- select *
                     from bullhorn1.View_ClientContact Cl --where Cl.userID = 41471
                     left join (select distinct userID,clientCorporationID from bullhorn1.BH_UserContact) UC ON Cl.userID = UC.userID
                     left join (select clientCorporationID, name from bullhorn1.BH_ClientCorporation) com on com.clientCorporationID = UC.clientCorporationID -- where status &lt;&gt; 'Archive'
                     where Cl.isdeleted &lt;&gt; 1 --and Cl.status &lt;&gt; 'Archive' --and Cl.userID in (579,605)
              ) n where rn = 1
              ) company on company.userID = a.clientUserID
       where a.isdeleted &lt;&gt; 1 --and a.status &lt;&gt; 'Archive' --and company.rn = 1
       --and a.clientcorporationid in (51)       
       --and a.jobPostingID in (18,19,20)
)
, job (jobPostingID, dateadded, title, starDate, Company_externalID, CompanyName, contact_externalId, final_contact_externalId, ContactUserID, Contact_firstname, Contact_lastname, Company_externalID_of_ContactUserID, CompanyName_of_ContactUserID, rn) as (
	SELECT  jobPostingID
	       , dateadded
		, title
		, startDate
       --COMPANY
		, Company_externalID, CompanyName
       --CONTACT
		, contact_externalId
		, case
		     when Company_externalID = Company_externalID_of_ContactUserID  then iif(contact_externalId is null or contact_externalId = '', concat('default',convert(varchar(5000),Company_externalID)), convert(varchar(5000),contact_externalId) )
		     when Company_externalID &lt;&gt; Company_externalID_of_ContactUserID then iif(contact_externalId is null or contact_externalId = '', concat('default',convert(varchar(5000),Company_externalID)), concat('default',convert(varchar(5000),contact_externalId)) )
		     end as 'final_contact'
		, ContactUserID, Contact_firstname, Contact_lastname
              , Company_externalID_of_ContactUserID
              , CompanyName_of_ContactUserID
		, ROW_NUMBER() OVER(PARTITION BY contact_externalId,title,startDate ORDER BY jobPostingID) AS rn 
	from job0 
	)
--select * from job where jobPostingID in (952)

, location as (
       select --top 100
                a.jobPostingID as 'position-externalId'
              , iif(job.final_contact_externalId is null, 'default',job.final_contact_externalId) as 'position-contactId'
              , job.Company_externalID as 'CompanyExtId' --, job.CompanyName as '#CompanyName', job.ContactUserID as '#ContactUserID', job.Contact_firstname as '#Contact_firstname', job.Contact_lastname as '#Contact_lastname'
              , case when job.rn > 1 then concat(job.title,' ',rn) else job.title end as 'position-title'
              , left(concat_ws(', ', nullif(trim(address),''), nullif(trim(city),''), nullif(trim(state),''), nullif(trim(zip),''), nullif(trim(COUNTRY),'')),300) as locationName
              , left(concat_ws(', ', nullif(trim(address),''), nullif(trim(city),''), nullif(trim(state),''), nullif(trim(zip),''), nullif(trim(COUNTRY),'')),300) as locationAddress              
              , nullif(trim(address),'') as 'address'
              , coalesce(nullif(cast(trim(city) as nvarchar(max)), ''), '') as city
              , coalesce(nullif(cast(trim(state) as nvarchar(max)), ''), '') as state
              , coalesce(nullif(cast(trim(zip) as nvarchar(max)), ''), '') as post_code
              , tmp_country.ABBREVIATION as 'country_code'
              , row_number() over(partition by a.jobPostingID order by lower(concat( trim(a.address), trim(a.city), trim(a.state), trim(a.zip), tmp_country.COUNTRY))) as rn
       from bullhorn1.BH_JobPosting a --where a.jobPostingID = 2539
       left join job on a.jobPostingID = job.jobPostingID
       left join tmp_country on tmp_country.CODE = a.countryID 
       where a.isdeleted &lt;&gt; 1 --and a.status &lt;&gt; 'Archive'
       and 1 = 1 --and a.jobPostingID in (6382, 6583, 6343, 7248)
)
--select jobPostingID, trim(a.address), trim(a.city), trim(a.state), trim(a.zip), countryID from bullhorn1.BH_JobPosting a where a.jobPostingID in (6382, 6583, 6343, 7248)
--select distinct locationAddress from location where CompanyExtId in (32)
--select * from location where CompanyExtId in (32)
--select * from location where [position-externalId] in (6382, 6583, 6343, 7248)


       select
                distinct convert(varchar(max),[CompanyExtId]) as CompanyExtId
              , locationName
              , locationAddress
              , address as address
              , city as city
              , state as state
              , [post_code]
              , [country_code]
              , getdate() as insert_timestamp
              , CompanyExtId as tmp
-- IMPORT JOB LOCATION
              , [position-externalId]
--              , [position-title]
--              , concat_ws('-', a.jobPostingID, job.Company_externalID) as tmp
       from location
       where 1 = 1 and rn = 1
--       (a.isdeleted &lt;&gt; 1 and a.status &lt;&gt; 'Archive')
--       and [position-externalId] in  (4)
--       and CompanyExtId = 32
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3360</xloc>
      <yloc>592</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Job location 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>/*
with
--JOB DUPLICATION REGCONITION
job0 as (
       select
                a.jobPostingID
              , a.dateadded
              , iif(a.title is not null and a.title &lt;&gt; '', trim(a.title), 'No JobTitle') as title
              , convert(varchar(10),a.startDate,120) as startDate
              , iif(a.clientcorporationid is null or a.clientcorporationid = '', 'default', a.clientcorporationid) as 'Company_externalID', cc.name as 'CompanyName' --COMPANY
              , iif(company.contact_externalId is null or convert(varchar(500),company.contact_externalId) = '', 'default', convert(varchar(500),company.contact_externalId)) as 'contact_externalId', a.clientUserID as 'ContactUserID', uc.firstname as 'Contact_firstname', uc.lastname as 'Contact_lastname'--, uc.isdeleted as '#Contact_isdeleted', uc.status as '#Contact_status'              

              , company.[contact_companyId] as 'Company_externalID_of_ContactUserID'
              , company.company_name as 'CompanyName_of_ContactUserID'
       -- select count(*)                            
       from bullhorn1.BH_JobPosting a
       left join bullhorn1.BH_UserContact UC on a.clientUserID = UC.userID
       left JOIN ( select clientCorporationID, name, status from bullhorn1.BH_ClientCorporation CC where CC.status &lt;&gt; 'Archive') cc ON cc.clientCorporationID = a.clientcorporationid
       left join (
              select * 
              from (
                     select
                              Cl.clientID as 'contact_externalId', Cl.userID as 'UserID'
                            , UC.clientCorporationID as 'contact_companyId'
                            , com.name as 'company_name'
                            , ROW_NUMBER() OVER(PARTITION BY Cl.UserID, UC.clientCorporationID, com.name ORDER BY Cl.clientID desc) AS rn 
                     -- select *
                     from bullhorn1.BH_Client Cl --where Cl.userID = 41471
                     left join (select distinct userID,clientCorporationID from bullhorn1.BH_UserContact) UC ON Cl.userID = UC.userID
                     left join (select clientCorporationID, name from bullhorn1.BH_ClientCorporation where status &lt;&gt; 'Archive') com on com.clientCorporationID = UC.clientCorporationID
                     where (Cl.isdeleted &lt;&gt; 1 and Cl.status &lt;&gt; 'Archive') --and Cl.userID in (579,605)
              ) n where rn = 1
              ) company on company.userID = a.clientUserID
       where (a.isdeleted &lt;&gt; 1 and a.status &lt;&gt; 'Archive') --and company.rn = 1
       --and a.clientcorporationid in (51)       
       --and a.jobPostingID in (18,19,20)
)
, job (jobPostingID, dateadded, title, starDate, Company_externalID, CompanyName, contact_externalId, final_contact_externalId, ContactUserID, Contact_firstname, Contact_lastname, Company_externalID_of_ContactUserID, CompanyName_of_ContactUserID, rn) as (
	SELECT  jobPostingID
	       , dateadded
		, title
		, startDate
       --COMPANY
		, Company_externalID, CompanyName
       --CONTACT
		, contact_externalId
		, case
		     when Company_externalID = Company_externalID_of_ContactUserID  then iif(contact_externalId is null or contact_externalId = '', concat('default',convert(varchar(5000),Company_externalID)), convert(varchar(5000),contact_externalId) )
		     --when Company_externalID &lt;&gt; Company_externalID_of_ContactUserID then iif(contact_externalId is null or contact_externalId = '', concat('default',convert(varchar(5000),Company_externalID)), concat('default',convert(varchar(5000),contact_externalId)) )
		     when Company_externalID &lt;&gt; Company_externalID_of_ContactUserID then iif(contact_externalId is null or contact_externalId = '', concat('default',convert(varchar(5000),Company_externalID)), concat('default',convert(varchar(5000),Company_externalID),'.',convert(varchar(5000),contact_externalId)) )
		     end as 'final_contact'
		, ContactUserID, Contact_firstname, Contact_lastname
              , Company_externalID_of_ContactUserID
              , CompanyName_of_ContactUserID
		, ROW_NUMBER() OVER(PARTITION BY contact_externalId,title,startDate ORDER BY jobPostingID) AS rn 
	from job0 
	)
--select * from job where jobPostingID in (952)

*/




with
--JOB DUPLICATION REGCONITION
job0 as (
       select
                a.jobPostingID
              , a.dateadded
              , iif(a.title is not null and a.title &lt;&gt; '', trim(a.title), 'No JobTitle') as title
              , convert(varchar(10),a.startDate,120) as startDate
              , iif(a.clientcorporationid is null or a.clientcorporationid = '', 'default', a.clientcorporationid) as 'Company_externalID', cc.name as 'CompanyName' --COMPANY
              , iif(company.contact_externalId is null or convert(varchar(500),company.contact_externalId) = '', 'default', convert(varchar(500),company.contact_externalId)) as 'contact_externalId', a.clientUserID as 'ContactUserID', uc.firstname as 'Contact_firstname', uc.lastname as 'Contact_lastname'--, uc.isdeleted as '#Contact_isdeleted', uc.status as '#Contact_status'              

              , company.[contact_companyId] as 'Company_externalID_of_ContactUserID'
              , company.company_name as 'CompanyName_of_ContactUserID'
       -- select count(*)                            
       from bullhorn1.BH_JobPosting a
       left join bullhorn1.BH_UserContact UC on a.clientUserID = UC.userID
       left JOIN (select clientCorporationID, name, status from bullhorn1.BH_ClientCorporation CC) cc ON cc.clientCorporationID = a.clientcorporationid --where CC.status &lt;&gt; 'Archive'
       left join (
              select * 
              from (
                     select
                              Cl.clientID as 'contact_externalId', Cl.userID as 'UserID'
                            , UC.clientCorporationID as 'contact_companyId'
                            , com.name as 'company_name'
                            , ROW_NUMBER() OVER(PARTITION BY Cl.UserID, UC.clientCorporationID, com.name ORDER BY Cl.clientID desc) AS rn 
                     -- select *
                     from bullhorn1.View_ClientContact Cl --where Cl.userID = 41471
                     left join (select distinct userID,clientCorporationID from bullhorn1.BH_UserContact) UC ON Cl.userID = UC.userID
                     left join (select clientCorporationID, name from bullhorn1.BH_ClientCorporation) com on com.clientCorporationID = UC.clientCorporationID -- where status &lt;&gt; 'Archive'
                     where Cl.isdeleted &lt;&gt; 1 --and Cl.status &lt;&gt; 'Archive' --and Cl.userID in (579,605)
              ) n where rn = 1
              ) company on company.userID = a.clientUserID
       where a.isdeleted &lt;&gt; 1 --and a.status &lt;&gt; 'Archive' --and company.rn = 1
       --and a.clientcorporationid in (51)       
       --and a.jobPostingID in (18,19,20)
)
, job (jobPostingID, dateadded, title, starDate, Company_externalID, CompanyName, contact_externalId, final_contact_externalId, ContactUserID, Contact_firstname, Contact_lastname, Company_externalID_of_ContactUserID, CompanyName_of_ContactUserID, rn) as (
	SELECT  jobPostingID
	       , dateadded
		, title
		, startDate
       --COMPANY
		, Company_externalID, CompanyName
       --CONTACT
		, contact_externalId
		, case
		     when Company_externalID = Company_externalID_of_ContactUserID  then iif(contact_externalId is null or contact_externalId = '', concat('default',convert(varchar(5000),Company_externalID)), convert(varchar(5000),contact_externalId) )
		     when Company_externalID &lt;&gt; Company_externalID_of_ContactUserID then iif(contact_externalId is null or contact_externalId = '', concat('default',convert(varchar(5000),Company_externalID)), concat('default',convert(varchar(5000),contact_externalId)) )
		     end as 'final_contact'
		, ContactUserID, Contact_firstname, Contact_lastname
              , Company_externalID_of_ContactUserID
              , CompanyName_of_ContactUserID
		, ROW_NUMBER() OVER(PARTITION BY contact_externalId,title,startDate ORDER BY jobPostingID) AS rn 
	from job0 
	)
--select * from job where jobPostingID in (952)

, location as (
       select --top 100
                a.jobPostingID as 'position-externalId'
              , iif(job.final_contact_externalId is null, 'default',job.final_contact_externalId) as 'position-contactId'
              , job.Company_externalID as 'CompanyExtId' --, job.CompanyName as '#CompanyName', job.ContactUserID as '#ContactUserID', job.Contact_firstname as '#Contact_firstname', job.Contact_lastname as '#Contact_lastname'
              , case when job.rn > 1 then concat(job.title,' ',rn) else job.title end as 'position-title'
              , left(concat_ws(', ', nullif(trim(address),''), nullif(trim(city),''), nullif(trim(state),''), nullif(trim(zip),''), nullif(trim(COUNTRY),'')),300) as locationName
              , left(concat_ws(', ', nullif(trim(address),''), nullif(trim(city),''), nullif(trim(state),''), nullif(trim(zip),''), nullif(trim(COUNTRY),'')),300) as locationAddress              
              , nullif(trim(address),'') as 'address'
              , coalesce(nullif(cast(trim(city) as nvarchar(max)), ''), '') as city
              , coalesce(nullif(cast(trim(state) as nvarchar(max)), ''), '') as state
              , coalesce(nullif(cast(trim(zip) as nvarchar(max)), ''), '') as post_code
              , tmp_country.ABBREVIATION as 'country_code'
              , row_number() over(partition by a.jobPostingID order by lower(concat( trim(a.address), trim(a.city), trim(a.state), trim(a.zip), tmp_country.COUNTRY))) as rn
       from bullhorn1.BH_JobPosting a --where a.jobPostingID = 2539
       left join job on a.jobPostingID = job.jobPostingID
       left join tmp_country on tmp_country.CODE = a.countryID 
       where a.isdeleted &lt;&gt; 1 --and a.status &lt;&gt; 'Archive'
       and 1 = 1 --and a.jobPostingID in (6382, 6583, 6343, 7248)
)
--select jobPostingID, trim(a.address), trim(a.city), trim(a.state), trim(a.zip), countryID from bullhorn1.BH_JobPosting a where a.jobPostingID in (6382, 6583, 6343, 7248)
--select distinct locationAddress from location where CompanyExtId in (32)
--select * from location where CompanyExtId in (32)
--select * from location where [position-externalId] in (6382, 6583, 6343, 7248)


       select
                distinct convert(varchar(max),[CompanyExtId]) as CompanyExtId
              , locationName
              , locationAddress
              , address as address
              , city as city
              , state as state
              , [post_code]
              , [country_code]
              , getdate() as insert_timestamp
              , convert(varchar(max),CompanyExtId) as tmp
-- IMPORT JOB LOCATION
--              , [position-externalId]
--              , [position-title]
--              , concat_ws('-', a.jobPostingID, job.Company_externalID) as tmp
       from location
       where 1 = 1 and rn = 1
--       (a.isdeleted &lt;&gt; 1 and a.status &lt;&gt; 'Archive')
--       and [position-externalId] in  (4)
--       and CompanyExtId = 32
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3360</xloc>
      <yloc>528</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>LINK_CONTACT_CANDIDATE</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
with l as (
       select
                UC.userID, UC.linkedUserID
              , Cl.clientID
       --       , iif(UC.clientCorporationID in (select clientCorporationID from bullhorn1.BH_ClientCorporation /*where status &lt;&gt; 'Archive'*/), convert(varchar(max),UC.clientCorporationID), 'default' ) as 'contact-companyId' --, UC.clientCorporationID as 'contact-companyId'
              , UC.firstName as 'contact-firstName'
              , UC.lastName as 'contact-Lastname'
              
              , C.candidateid
              , C.FirstName as 'candidate-firstName'
              , C.LastName as 'candidate-lastName'
       -- select top 10 *
       from bullhorn1.BH_UserContact_View UC
       left join bullhorn1.View_ClientContact Cl ON Cl.userID = UC.userID
       left join bullhorn1.View_Candidate VC on VC.userID = UC.userID left join bullhorn1.Candidate C on C.candidateid = VC.candidateid
       where convert(nvarchar(max),UC.linkedUserID) &lt;&gt; '' and UC.linkedUserID is not null
       )
--select * from l where userid in (29622, 11846)

select l.candidateid as 'candidate-externalId', l.userID as "candidate_userID"
       , l.linkedUserID, l1.clientID as 'contact-externalId'
from l
left join l l1 on l1.userID = l.linkedUserID 
where l.candidateid is not null
--and l.userid in (29622, 11846)
--convert(varchar(1000),C.candidateID)</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5248</xloc>
      <yloc>1040</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>LINK_CONTACT_CANDIDATE 2</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>Y</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>actual_candidate_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>contact_id</name>
        <rename>actual_contactid</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5776</xloc>
      <yloc>1040</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Note</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
-- NOTE
with 
-- Latest Comment
  lc (userid,comments,dateAdded,rn) as ( SELECT userid, comments, dateAdded, r1 = ROW_NUMBER() OVER (PARTITION BY userid ORDER BY dateAdded desc) FROM bullhorn1.BH_UserComment )

, note as (
	SELECT CA.candidateid --, Stuff(
		 , concat_ws ('',
		            coalesce('BH Candidate ID: ' + nullif(cast(CA.userID as nvarchar(max)), '') + '&lt;br/>', '')
+ coalesce('Notice Period: ' + nullif(trim(convert(nvarchar(max),ca.customText4	)), '') + '&lt;br/>', '')
+ coalesce('LTD Company Name: ' + nullif(trim(convert(nvarchar(max),ca.customText1)), '') + '&lt;br/>', '')
+ coalesce('LTD Company No.: ' + nullif(trim(convert(nvarchar(max),ca.customText2	)), '') + '&lt;br/>', '')
+ coalesce('LTD Company Phone: ' + nullif(trim(convert(nvarchar(max),ca.customText3	)), '') + '&lt;br/>', '')


+ coalesce('General Comments: ' + nullif(trim(convert(nvarchar(max),ca.comments)), '') + '&lt;br/>', '')
+ coalesce('Date Available: ' + nullif(trim(convert(nvarchar(max),ca.dateAvailable)), '') + '&lt;br/>', '')
+ coalesce('Available Until: ' + nullif(trim(convert(nvarchar(max),ca.dateAvailableEnd)), '') + '&lt;br/>', '')
+ coalesce('Last Note: ' + nullif(trim(convert(nvarchar(max),ca.dateLastComment)), '') + '&lt;br/>', '')
+ coalesce('Date Last Modified: ' + nullif(trim(convert(nvarchar(max),vclm.dateLastModified)), '') + '&lt;br/>', '') --dateLastModified
+ coalesce('Date Next Call: ' + nullif(trim(convert(nvarchar(max),ca.dateNextCall)), '') + '&lt;br/>', '')
--+ coalesce('CV: ' + nullif(trim(convert(nvarchar(max),ca.description)), '') + '&lt;br/>', '')LTD Company Name
+ coalesce('Disability: ' + nullif(trim(convert(nvarchar(max),ca.disability)), '') + '&lt;br/>', '')
+ coalesce('Employee Payment Type: ' + nullif(trim(convert(nvarchar(max),ca.employeeType)), '') + '&lt;br/>', '')
+ coalesce('Ethnicity: ' + nullif(trim(convert(nvarchar(max),ca.ethnicity)), '') + '&lt;br/>', '')
+ coalesce('Fax: ' + nullif(trim(convert(nvarchar(max),ca.fax)), '') + '&lt;br/>', '')
--+ coalesce('Web Responses: ' + nullif(trim(convert(nvarchar(max),ca.jobResponseJobPostingID)), '') + '&lt;br/>', '')
, coalesce('Latest Comment: ' + nullif( replace( [bullhorn1].[fn_ConvertHTMLToText](lc.comments) ,char(10),'&lt;br/>') , '') + '&lt;br/>', '')
--+ coalesce('Name: ' + nullif(trim(convert(nvarchar(max),ca.name)), '') + '&lt;br/>', '')
+ coalesce('Preferred Contact: ' + nullif(trim(convert(nvarchar(max),ca.preferredContact)), '') + '&lt;br/>', '')
--+ coalesce('Preferred Housing: ' + nullif(trim(convert(nvarchar(max),ca.preferredHousing)), '') + '&lt;br/>', '')
--+ coalesce('Name: ' + nullif(trim(convert(nvarchar(max),ca.realName)), '') + '&lt;br/>', '')
+ coalesce('Recent Employers: ' + nullif(trim(convert(nvarchar(max),ca.recentClientList)), '') + '&lt;br/>', '')
+ coalesce('Referred by (not in System): ' + nullif(trim(convert(nvarchar(max),ca.referredBy)), '') + '&lt;br/>', '')
, coalesce('Referred By: ' + nullif(convert(nvarchar(max),CA.referredByUserID), '') + ' - ' + UC.firstname + ' ' + UC.lastname + '&lt;br/>', '')
, coalesce('Opted In - SMS Messages: ' + nullif(cast(case ca.massmailoptout when 1 then 'No' when 0 then 'Yes' end as nvarchar(max)), '') + '&lt;br/>', '')
+ coalesce('Status: ' + nullif(trim(convert(nvarchar(max),ca.status)), '') + '&lt;br/>', '')
--+ coalesce('Time Zone Offset EST: ' + nullif(trim(convert(nvarchar(max),ca.timeZoneOffsetEST)), '') + '&lt;br/>', '')
+ coalesce('Type: ' + nullif(trim(convert(nvarchar(max),ca.type)), '') + '&lt;br/>', '')
--+ coalesce('Last Note: ' + nullif(trim(convert(nvarchar(max),ca.userCommentID)), '') + '&lt;br/>', '')
--+ coalesce('ID: ' + nullif(trim(convert(nvarchar(max),ca.userID)), '') + '&lt;br/>', '')
--+ coalesce('User Type: ' + nullif(trim(convert(nvarchar(max),ca.userTypeID)), '') + '&lt;br/>', '')
+ coalesce('Veteran: ' + nullif(trim(convert(nvarchar(max),ca.veteran)), '') + '&lt;br/>', '')
--+ coalesce('Whitelist: ' + nullif(trim(convert(nvarchar(max),ca.whitelistID)), '') + '&lt;br/>', '')
--+ coalesce('Authorised to work in the EU: ' + nullif(trim(convert(nvarchar(max),ca.workAuthorized)), '') + '&lt;br/>', '')
, coalesce('Authorised to work in the EU: ' + nullif(cast(case ca.workAuthorized when 1 then 'Yes' when 0 then 'No' end as nvarchar(max)), '') + '&lt;br/>', '')
/*
--                        , coalesce('Other email: ' + nullif(cast(e3.email as nvarchar(max)), '') + '&lt;br/>', '')
                        , coalesce('Available Until: ' + nullif(cast(CA.dateAvailableEnd as nvarchar(max)), '') + '&lt;br/>', '')
--                        , coalesce('Bar admission: ' + nullif(cast(AD.Admission as nvarchar(max)), '') + '&lt;br/>', '')
--                        , coalesce('Business Sector: ' + nullif(cast(INDUSTRY.BusinessSector as nvarchar(max)), '') + '&lt;br/>', '')
                        , coalesce('Current Hourly Rate: ' + nullif(cast(CA.hourlyRateLow as nvarchar(max)), '') + '&lt;br/>', '')
                        , coalesce('Date Available: ' + nullif(cast(CA.dateAvailable as nvarchar(max)), '') + '&lt;br/>', '')
                        , coalesce('Date Registered: ' + nullif(convert(nvarchar(10),CA.dateAdded,120), '') + '&lt;br/>', '')
--                        , coalesce('Description: ' + nullif(cast(UC.description as nvarchar(max)), '') + '&lt;br/>', '')
                        , coalesce('Desired Hourly Rate: ' + nullif(cast(CA.hourlyRate as nvarchar(max)), '') + '&lt;br/>', '')
                        , coalesce('Desired Locations: ' + nullif(cast(CA.desiredLocations as nvarchar(max)), '') + '&lt;br/>', '')
                        , coalesce('Employment Preference: ' + nullif(cast(CA.employmentPreference as nvarchar(max)), '') + '&lt;br/>', '')
                        , coalesce('General Comments: ' + nullif(convert(nvarchar(max),CA.comments), '') + '&lt;br/>', '')
                        , coalesce('ID Number: ' + nullif(cast(CA.ssn as nvarchar(max)), '') + '&lt;br/>', '')
--                        
                        
                        , coalesce('Other Phone: ' + nullif(convert(nvarchar(max),CA.phone2), '') + '&lt;br/>', '')
--                        , coalesce('Placements: ' + nullif(convert(nvarchar(max),pm.status), '') + '&lt;br/>', '') --CA.activePlacements
--                        , coalesce('Practice Area / Category: ' + nullif(cast(CATEGORY.Name as nvarchar(max)), '') + '&lt;br/>', '')
--                        , coalesce('Referred By (Other): ' + nullif(convert(nvarchar(max),CA.referredBy), '') + '&lt;br/>', '')
                        
                        , coalesce('Registered By: ' + nullif(convert(nvarchar(max),CA.recruiterUserID), '') + ' - ' + UC0.firstname + ' ' + UC0.lastname + '&lt;br/>', '')
--                        , coalesce('Secondary Owners: ' + nullif(convert(nvarchar(max),owner2c.email), '') + '&lt;br/>', '') --CA.secondaryOwners
                        , coalesce('Singapore / PR Yes/No: ' + nullif(cast(ca.EmployeeType as nvarchar(max)), '') + '&lt;br/>', '')
--                        , coalesce('Skills: ' + nullif(cast(SN.SkillName as nvarchar(max)), '') + '&lt;br/>', '')
                        , coalesce('Skype: ' + nullif(cast(CA.phone2 as nvarchar(max)), '') + '&lt;br/>', '')
                        , coalesce('Source: ' + nullif(cast(CA.source as nvarchar(max)), '') + '&lt;br/>', '')
                        , coalesce('Specialty: ' + nullif(cast(CA.specialtyIDList as nvarchar(max)), '') + '&lt;br/>', '')
                        , coalesce('Status: ' + nullif(convert(nvarchar(max),CA.Status), '') + '&lt;br/>', '')
--                        , coalesce('Web Responses: ' + nullif(convert(nvarchar(max),wr1.name), '') + '&lt;br/>', '') --CA.jobResponseJobPostingID
                        , coalesce('Willing to Relocate: ' + nullif(cast(CA.willRelocate as nvarchar(max)), '') + '&lt;br/>', '')
                       
--                        , coalesce('LTD Company Address: ' + nullif(cast( concat(CA.secondaryaddress1,' ',CA.secondaryAddress2) as nvarchar(max)), '') + '&lt;br/>', '')
--                        , coalesce('LTD Company City: ' + nullif(cast(CA.secondaryCity as nvarchar(max)), '') + '&lt;br/>', '')
--                        , coalesce('LTD Company Country: ' + nullif(cast(tmp_country.country as nvarchar(max)), '') + '&lt;br/>', '')
--                        , coalesce('LTD Company County: ' + nullif(cast(CA.secondaryState as nvarchar(max)), '') + '&lt;br/>', '')
--                        , coalesce('LTD Company Post Code: ' + nullif(cast(CA.secondaryZip as nvarchar(max)), '') + '&lt;br/>', '')
*/
                        , coalesce('CV: ' + '&lt;br/>' + nullif(UC1.description, '') + '&lt;br/>', '')
--                      + coalesce('CV: ' + nullif(UW.description, '') + '&lt;br/>', '')
                        --+ coalesce('Summary: ' + nullif(cast(summary.summary as nvarchar(max)), '') + '&lt;br/>', '')
                        ) as note --, 1, 0, '') as note
	-- select top 10 * -- select count(*) -- select referredBy, referredByUserID
	from bullhorn1.Candidate CA --where CA.isPrimaryOwner = 1 --where convert(varchar(max),CA.comments) &lt;&gt; ''
       --left join e3 on CA.userID = e3.ID
	left join (select userid, firstname, lastname from bullhorn1.BH_UserContact) UC0 ON UC0.userID = CA.recruiterUserID
	left join (select userid, firstname, lastname from bullhorn1.BH_UserContact) UC ON UC.userID = CA.referredByUserID
       left join (select userid, trim(replace([bullhorn1].[fn_ConvertHTMLToText](description),char(10),'&lt;br/>')) as description from bullhorn1.BH_UserContact) UC1 on CA.UserID = UC1.userID
       left join bullhorn1.View_CandidateLastModified vclm on vclm.userID = ca.userID
       left join bullhorn1.View_CandidateWebResponse vcwr on vcwr.userID = ca.userID
	--left join tmp_country on cast(CA.desiredLocations as varchar(2)) = tmp_country.ABBREVIATION
--	left join tmp_country on cast(CA.secondaryCountryID as varchar(2)) = tmp_country.code
--       left join admission AD on CA.userID = AD.Userid
--       left join INDUSTRY on INDUSTRY.userId = CA.userID --BusinessSector
--       left join CATEGORY on CATEGORY.Userid = CA.userID
--       left join owner2c on owner2c.candidateid = CA.candidateid
       left join (select * from lc where rn = 1) lc on lc.userid = CA.userid
--       left join (select userid, status from bullhorn1.BH_Placement ) pm on pm.userid = ca.userid
--       left join SKILL SN on CA.userID = SN.userId
--       --left join SPECIALTY on SPECIALTY.candidateID = CA.userID
--       left join wr1 on wr1.userid = CA.userid
       --left join summary on CA.userID = summary.CandidateID
       /*left join (SELECT userid, STUFF((
                        SELECT char(10) + nullif(description_truong, '') + char(10) + '--------------------------------------------------' + char(10)
                        from bullhorn1.BH_UserWork where userid = a.userid FOR XML PATH (''), TYPE).value('.', 'nvarchar(MAX)'), 1, 1, '')  AS description 
                        FROM (   select userid, description_truong
                                        from bullhorn1.BH_UserWork) AS a GROUP BY a.userid 
                        ) uw on uw.userid = ca.userid*/
	where ca.isdeleted &lt;&gt; 1 --and ca.status &lt;&gt; 'Archive' 
	)
--select count(*) from note --8545
--select * from note --where AddedNote like '%Business Sector%'
select * from note

</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5248</xloc>
      <yloc>416</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Offer 5</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>offer</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>VCPOSITIONCANDIDATEID</name>
        <field>position_candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCOfferID</rename>
        <default/>
        <type>Integer</type>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>valid</name>
        <rename>valid</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>7056</xloc>
      <yloc>432</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Offer 5 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>offer</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>VCPOSITIONCANDIDATEID</name>
        <field>position_candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCOfferID</rename>
        <default/>
        <type>Integer</type>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>valid</name>
        <rename>valid</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>7072</xloc>
      <yloc>720</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>POSITION CANDIDATE</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>VCJobID</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCCandidateID</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCPOSITIONCANDIDATEID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6944</xloc>
      <yloc>608</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Position Candidate 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>VCJobID</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCCandidateID</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCPOSITIONCANDIDATEID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6944</xloc>
      <yloc>720</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>SFE IMPORT</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>sub_functional_expertise</table>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_fe_id</name>
        <field>functional_expertise_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>name</name>
        <rename>sfe</rename>
        <update>Y</update>
      </value>
      <value>
        <name>functional_expertise_id</name>
        <rename>final_fe_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>tmp</name>
        <rename>tmp</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4624</xloc>
      <yloc>1024</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>SFE IMPORT 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>sub_functional_expertise</table>
      <key>
        <name>tmp_sfe</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_fe_id</name>
        <field>functional_expertise_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>name</name>
        <rename>sfe</rename>
        <update>Y</update>
      </value>
      <value>
        <name>functional_expertise_id</name>
        <rename>final_fe_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>tmp</name>
        <rename>tmp_sfe</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3632</xloc>
      <yloc>912</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>SOURCE 4 2</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <key>
        <name>vc_contact_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>candidate_source_id</name>
        <rename>vc_source_id</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2608</xloc>
      <yloc>1376</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>STEP1. JOBAPP</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>/*
'SHORTLISTED'then 102
'SENT'then 103
'FIRST_INTERVIEW'then 104
'SECOND_INTERVIEW'then 105
'THIRD_INTERVIEW'then 106
'FOURTH_INTERVIEW'then 107
'FIFTH_INTERVIEW'then 108
'LAST_INTERVIEW_ROUND' then 123
'OFFERED'then 200
'PLACED'then 300
'PLACEMENT_PERMANENT'then 301
'PLACEMENT_CONTRACT'then 302
'PLACEMENT_TEMP'then 303
'ONBOARDING'then 310
*/

with
  JPInfo as (
  	select JP.jobPostingID as JobID
  		, JP.title as JobTitle
              , case when JP.employmentType is null then 301
                     when JP.employmentType like '%Perm%' then 301
                     when JP.employmentType like '%Opportunity%' then 301
			when JP.employmentType in ('Full-time','General Posting','INTERN FEE','Internal Recruitment') then 301
                     when JP.employmentType like '%Contract%' then 302
                     when JP.employmentType like '%Fixed%' then 302
                     when JP.employmentType like '%Part%' then 302
                     when JP.employmentType like '%Temp%' then 302
		       when JP.employmentType in ('Transactional Opportunity') then 302
                     --when JP.employmentType in ('Temporary','Temp to Perm') then 303
                     else null end as JobType
		, Cl.clientID as ContactID
		, Cl.userID as ClientUserID
		, UC.name as ContactName
		, UC.email as ContactEmail
		, CC.clientCorporationID as CompanyID
		, CC.name as CompanyName
	-- select distinct JP.employmentType
	from bullhorn1.BH_JobPosting JP
	left join bullhorn1.BH_Client Cl on JP.clientUserID = Cl.userID
	left join bullhorn1.BH_UserContact UC on JP.clientUserID = UC.userID
	left join bullhorn1.BH_ClientCorporation CC on JP.clientCorporationID = CC.clientCorporationID
	where 1=1 and JP.title &lt;&gt; '' and (JP.isdeleted &lt;&gt; 1)
)
--select * from JPInfo order by JobID


, ja0 as (
       select
                JR.jobPostingID as 'application-positionExternalId', JPI.JobType
               , JPI.CompanyID, JPI.CompanyName,  JPI.ContactID, JPI.ContactName, JPI.ContactEmail, JPI.JobID,  JPI.JobTitle, CAI.CandidateName as '#Candidate Name' --, JR.userID, JPI.ClientUserID, 
               , CAI.candidateID as 'application-candidateExternalId'
               , convert(varchar(10),JR.dateAdded,120) as 'dateAdded'
               , coalesce(nullif(case
when JR.status = 'Placed' then 'OFFERED' --'PLACED'
                            else '' end, ''), '') as 'application-stage'  --, JR.status as '#Original-status' -- SHORTLISTED, SENT, FIRST_INTERVIEW, SECOND_INTERVIEW, OFFERED, PLACEMENT_PERMANENT, PLACEMENT_CONTRACT, PLACEMENT_TEMP, ONBOARDING.
        -- select count(*) --5995 -- select distinct JR.status -- select top 100 *
        from bullhorn1.BH_JobResponse JR
        left join ( select CA.userID as CandidateUserID, CA.candidateID, UC.userID, UC.name as CandidateName, UC.email as CandidateEmail from bullhorn1.BH_Candidate CA left join bullhorn1.BH_UserContact UC on CA.userID = UC.userID ) CAI on JR.userID = CAI.CandidateUserID
        left join JPInfo JPI on JR.jobPostingID = JPI.JobID
        where CAI.candidateID is not null 
UNION
       select 
                PL.jobPostingID as 'application-positionExternalId', JPI.JobType
              , JPI.CompanyID, JPI.CompanyName,  JPI.ContactID, JPI.ContactName, JPI.ContactEmail, JPI.JobID,  JPI.JobTitle, CAI.CandidateName as '#Candidate Name' --, JR.userID, JPI.ClientUserID, 
              , CAI.candidateID as 'application-candidateExternalId'
              , convert(varchar(10),PL.dateAdded,120) as 'dateAdded'
              , 'OFFERED' as 'application-stage'
        -- select count(*)
        from bullhorn1.BH_Placement PL
        left join ( select CA.userID as CandidateUserID, CA.candidateID, UC.userID, UC.name as CandidateName, UC.email as CandidateEmail from bullhorn1.BH_Candidate CA left join bullhorn1.BH_UserContact UC on CA.userID = UC.userID ) CAI on PL.userID = CAI.CandidateUserID 
        left join JPInfo JPI on PL.jobPostingID = JPI.JobID
)
--select top 2000 * from ja0
--where ( [application-positionExternalId] = 6744 and [application-candidateExternalId] = 64995) or ([application-positionExternalId] = 5343 and [application-candidateExternalId] = 193508)
--where CompanyName like 'Nuance%' or CompanyID = 6

, ja1 ("application-positionExternalId","application-candidateExternalId", JobType, "application-Stage","dateAdded", rn) as (
       SELECT 
              "application-positionExternalId"
              ,"application-candidateExternalId"
              , JobType
              ,"application-Stage"
              ,"dateAdded"
              , rn = ROW_NUMBER() OVER (PARTITION BY "application-positionExternalId","application-candidateExternalId" --,"application-Stage"--, "dateAdded"
                     ORDER BY "application-positionExternalId" desc,
                            CASE [application-stage]
                            --WHEN 'PLACEMENT_PERMANENT' THEN 1
                            WHEN 'PLACED' THEN 1
                            WHEN 'OFFERED' THEN 2
                            WHEN 'SECOND_INTERVIEW' THEN 3
                            WHEN 'FIRST_INTERVIEW' THEN 4
                            WHEN 'SENT' THEN 5
                            WHEN 'SHORTLISTED' THEN 6
                            END asc, dateAdded desc )
       FROM ja0 
       left join (select jobPostingID from bullhorn1.BH_JobPosting where isdeleted &lt;&gt; 1 /*and status &lt;&gt; 'Archive'*/) job on job.jobPostingID = ja0.[application-positionExternalId]
       left join (select candidateid from bullhorn1.Candidate where isdeleted &lt;&gt; 1 /*and status &lt;&gt; 'Archive'*/) candidate on candidate.candidateid = ja0.[application-candidateExternalId]
       where "application-Stage" not like 'CANDIDATE%' and "application-Stage" &lt;&gt; '' and (job.jobPostingID is not null and candidate.candidateid is not null)
       )




--select [application-stage], count(*) from ja1 where rn = 1 group by [application-stage] 
select "application-positionExternalId","application-candidateExternalId","application-Stage","dateAdded","dateAdded" as 'TIME_REJECTED'
      , JobType as POSITIONCANDIDATE_status, rn
    , 3 as OFFER_draft_offer --used to move OFFERED to PLACED in VC [offer]
    , 2 as INVOICE_status --used to update invoice status in VC [invoice] as 'active'
    , 1 as INVOICE_renewal_index --default value in VC [invoice]
    , 1 as INVOICE_renewal_flow_status --used to update flow status in VC [invoice] as 'placement_active'
    , 1 as INVOICE_valid
from ja1
where rn = 1 --and [application-stage] = 'PLACED' --and [#Candidate Name] like '%Freeman%'
--and JobType = 302

</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6400</xloc>
      <yloc>1584</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>SUB STATUS 2</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>Y</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema/>
      <table>position_candidate</table>
      <key>
        <name>final_position_id</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_candidate_id</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>sub_status_id</name>
        <rename>final_sub_status_id</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6928</xloc>
      <yloc>1232</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>SUB STATUS 2 2</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>Y</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema/>
      <table>position_candidate</table>
      <key>
        <name>final_position_id</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_candidate_id</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>sub_status_id</name>
        <rename>final_sub_status_id</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>7200</xloc>
      <yloc>208</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>SUB_STATUS</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>sub_status</table>
      <key>
        <name>sub_status</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>name</name>
        <rename>sub_status</rename>
        <update>Y</update>
      </value>
      <value>
        <name>creator_id</name>
        <rename>creator_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>7520</xloc>
      <yloc>144</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Sort rows</name>
    <type>SortRows</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <directory>%%java.io.tmpdir%%</directory>
    <prefix>out</prefix>
    <sort_size>1000000</sort_size>
    <free_memory/>
    <compress>N</compress>
    <compress_variable/>
    <unique_rows>N</unique_rows>
    <fields>
      <field>
        <name>owners-email</name>
        <ascending>Y</ascending>
        <case_sensitive>N</case_sensitive>
        <collator_enabled>N</collator_enabled>
        <collator_strength>0</collator_strength>
        <presorted>N</presorted>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>480</xloc>
      <yloc>432</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Sort rows 2</name>
    <type>SortRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <directory>%%java.io.tmpdir%%</directory>
    <prefix>out</prefix>
    <sort_size>1000000</sort_size>
    <free_memory/>
    <compress>N</compress>
    <compress_variable/>
    <unique_rows>N</unique_rows>
    <fields>
      <field>
        <name>final_company_id</name>
        <ascending>Y</ascending>
        <case_sensitive>N</case_sensitive>
        <collator_enabled>N</collator_enabled>
        <collator_strength>0</collator_strength>
        <presorted>N</presorted>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>688</xloc>
      <yloc>512</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Sort rows 3</name>
    <type>SortRows</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <directory>%%java.io.tmpdir%%</directory>
    <prefix>out</prefix>
    <sort_size>1000000</sort_size>
    <free_memory/>
    <compress>N</compress>
    <compress_variable/>
    <unique_rows>N</unique_rows>
    <fields>
      <field>
        <name>Department</name>
        <ascending>Y</ascending>
        <case_sensitive>N</case_sensitive>
        <collator_enabled>N</collator_enabled>
        <collator_strength>0</collator_strength>
        <presorted>N</presorted>
      </field>
      <field>
        <name>final_company_id</name>
        <ascending>Y</ascending>
        <case_sensitive>N</case_sensitive>
        <collator_enabled>N</collator_enabled>
        <collator_strength>0</collator_strength>
        <presorted>N</presorted>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2240</xloc>
      <yloc>1040</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Sort rows 4</name>
    <type>SortRows</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <directory>%%java.io.tmpdir%%</directory>
    <prefix>out</prefix>
    <sort_size>1000000</sort_size>
    <free_memory/>
    <compress>N</compress>
    <compress_variable/>
    <unique_rows>N</unique_rows>
    <fields>
      <field>
        <name>owners-email</name>
        <ascending>Y</ascending>
        <case_sensitive>N</case_sensitive>
        <collator_enabled>N</collator_enabled>
        <collator_strength>0</collator_strength>
        <presorted>N</presorted>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2352</xloc>
      <yloc>848</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Sort rows 4 2</name>
    <type>SortRows</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <directory>%%java.io.tmpdir%%</directory>
    <prefix>out</prefix>
    <sort_size>1000000</sort_size>
    <free_memory/>
    <compress>N</compress>
    <compress_variable/>
    <unique_rows>N</unique_rows>
    <fields>
      <field>
        <name>owners-email</name>
        <ascending>Y</ascending>
        <case_sensitive>N</case_sensitive>
        <collator_enabled>N</collator_enabled>
        <collator_strength>0</collator_strength>
        <presorted>N</presorted>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3632</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Sort rows 4 3</name>
    <type>SortRows</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <directory>%%java.io.tmpdir%%</directory>
    <prefix>out</prefix>
    <sort_size>1000000</sort_size>
    <free_memory/>
    <compress>N</compress>
    <compress_variable/>
    <unique_rows>N</unique_rows>
    <fields>
      <field>
        <name>owners-email</name>
        <ascending>Y</ascending>
        <case_sensitive>N</case_sensitive>
        <collator_enabled>N</collator_enabled>
        <collator_strength>0</collator_strength>
        <presorted>N</presorted>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2352</xloc>
      <yloc>1440</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Sort rows 5</name>
    <type>SortRows</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <directory>%%java.io.tmpdir%%</directory>
    <prefix>out</prefix>
    <sort_size>1000000</sort_size>
    <free_memory/>
    <compress>N</compress>
    <compress_variable/>
    <unique_rows>N</unique_rows>
    <fields>
      <field>
        <name>owners-email</name>
        <ascending>Y</ascending>
        <case_sensitive>N</case_sensitive>
        <collator_enabled>N</collator_enabled>
        <collator_strength>0</collator_strength>
        <presorted>N</presorted>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5536</xloc>
      <yloc>256</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Sort rows 6</name>
    <type>SortRows</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <directory>%%java.io.tmpdir%%</directory>
    <prefix>out</prefix>
    <sort_size>1000000</sort_size>
    <free_memory/>
    <compress>N</compress>
    <compress_variable/>
    <unique_rows>N</unique_rows>
    <fields>
      <field>
        <name>sub_status</name>
        <ascending>Y</ascending>
        <case_sensitive>N</case_sensitive>
        <collator_enabled>N</collator_enabled>
        <collator_strength>0</collator_strength>
        <presorted>N</presorted>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>7072</xloc>
      <yloc>144</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Split field to rows</name>
    <type>SplitFieldToRows3</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <splitfield>company-document</splitfield>
    <delimiter>,</delimiter>
    <newfield>company-document-filename</newfield>
    <rownum>N</rownum>
    <rownum_field/>
    <resetrownumber>Y</resetrownumber>
    <delimiter_is_regex>N</delimiter_is_regex>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>352</xloc>
      <yloc>192</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Split field to rows 2</name>
    <type>SplitFieldToRows3</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <splitfield>owners</splitfield>
    <delimiter>,</delimiter>
    <newfield>owners-email</newfield>
    <rownum>N</rownum>
    <rownum_field/>
    <resetrownumber>Y</resetrownumber>
    <delimiter_is_regex>N</delimiter_is_regex>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>352</xloc>
      <yloc>432</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Split field to rows 2 2</name>
    <type>SplitFieldToRows3</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <splitfield>owners</splitfield>
    <delimiter>,</delimiter>
    <newfield>owners-email</newfield>
    <rownum>N</rownum>
    <rownum_field/>
    <resetrownumber>Y</resetrownumber>
    <delimiter_is_regex>N</delimiter_is_regex>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>352</xloc>
      <yloc>512</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Split field to rows 2 2 2 2</name>
    <type>SplitFieldToRows3</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <splitfield>owners</splitfield>
    <delimiter>,</delimiter>
    <newfield>owners-email</newfield>
    <rownum>N</rownum>
    <rownum_field/>
    <resetrownumber>Y</resetrownumber>
    <delimiter_is_regex>N</delimiter_is_regex>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2240</xloc>
      <yloc>912</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Split field to rows 2 2 2 2 2</name>
    <type>SplitFieldToRows3</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <splitfield>owners</splitfield>
    <delimiter>,</delimiter>
    <newfield>owners-email</newfield>
    <rownum>N</rownum>
    <rownum_field/>
    <resetrownumber>Y</resetrownumber>
    <delimiter_is_regex>N</delimiter_is_regex>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3504</xloc>
      <yloc>272</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Split field to rows 2 2 2 2 3</name>
    <type>SplitFieldToRows3</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <splitfield>owners</splitfield>
    <delimiter>,</delimiter>
    <newfield>owners-email</newfield>
    <rownum>N</rownum>
    <rownum_field/>
    <resetrownumber>Y</resetrownumber>
    <delimiter_is_regex>N</delimiter_is_regex>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2240</xloc>
      <yloc>1504</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Split field to rows 2 2 3</name>
    <type>SplitFieldToRows3</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <splitfield>owners</splitfield>
    <delimiter>,</delimiter>
    <newfield>owners-email</newfield>
    <rownum>N</rownum>
    <rownum_field/>
    <resetrownumber>Y</resetrownumber>
    <delimiter_is_regex>N</delimiter_is_regex>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5392</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Split field to rows 2 4</name>
    <type>SplitFieldToRows3</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <splitfield>owners</splitfield>
    <delimiter>,</delimiter>
    <newfield>owners-email</newfield>
    <rownum>N</rownum>
    <rownum_field/>
    <resetrownumber>Y</resetrownumber>
    <delimiter_is_regex>N</delimiter_is_regex>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2240</xloc>
      <yloc>848</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Split field to rows 2 4 2</name>
    <type>SplitFieldToRows3</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <splitfield>owners</splitfield>
    <delimiter>,</delimiter>
    <newfield>owners-email</newfield>
    <rownum>N</rownum>
    <rownum_field/>
    <resetrownumber>Y</resetrownumber>
    <delimiter_is_regex>N</delimiter_is_regex>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3504</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Split field to rows 2 4 3</name>
    <type>SplitFieldToRows3</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <splitfield>owners</splitfield>
    <delimiter>,</delimiter>
    <newfield>owners-email</newfield>
    <rownum>N</rownum>
    <rownum_field/>
    <resetrownumber>Y</resetrownumber>
    <delimiter_is_regex>N</delimiter_is_regex>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2240</xloc>
      <yloc>1440</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Split field to rows 2 5</name>
    <type>SplitFieldToRows3</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <splitfield>owners</splitfield>
    <delimiter>,</delimiter>
    <newfield>owners-email</newfield>
    <rownum>N</rownum>
    <rownum_field/>
    <resetrownumber>Y</resetrownumber>
    <delimiter_is_regex>N</delimiter_is_regex>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5392</xloc>
      <yloc>256</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Split field to rows 3</name>
    <type>SplitFieldToRows3</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <splitfield>document</splitfield>
    <delimiter>,</delimiter>
    <newfield>document-filename</newfield>
    <rownum>N</rownum>
    <rownum_field/>
    <resetrownumber>Y</resetrownumber>
    <delimiter_is_regex>N</delimiter_is_regex>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3504</xloc>
      <yloc>208</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Split field to rows 3 2</name>
    <type>SplitFieldToRows3</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <splitfield>document</splitfield>
    <delimiter>,</delimiter>
    <newfield>document-filename</newfield>
    <rownum>N</rownum>
    <rownum_field/>
    <resetrownumber>Y</resetrownumber>
    <delimiter_is_regex>N</delimiter_is_regex>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5392</xloc>
      <yloc>192</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Split field to rows 4</name>
    <type>SplitFieldToRows3</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <splitfield>document</splitfield>
    <delimiter>,</delimiter>
    <newfield>document-filename</newfield>
    <rownum>N</rownum>
    <rownum_field/>
    <resetrownumber>Y</resetrownumber>
    <delimiter_is_regex>N</delimiter_is_regex>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2240</xloc>
      <yloc>272</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Step1. Update App status</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema/>
      <table>position_candidate</table>
      <key>
        <name>VCJobID</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCCandidateID</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>status</name>
        <rename>POSITIONCANDIDATE_status</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6752</xloc>
      <yloc>1584</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Sub FE</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select cs.categoryID
, c.occupation as FE
, s.name as SFE
, getdate() as insert_timestamp
from bullhorn1.BH_CategorySkillAssociation cs
left join bullhorn1.BH_CategoryList c on c.categoryID = cs.categoryID
left join bullhorn1.BH_SkillList s on s.skillID = cs.skillID
order by FE, SFE</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>224</xloc>
      <yloc>1456</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Sub status</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>sub_status</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>status</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCSubStatus</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6720</xloc>
      <yloc>1504</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Sub status 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>sub_status</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>sub_status</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_sub_status_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6832</xloc>
      <yloc>1232</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Sub status 3 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>sub_status</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>sub_status</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_sub_status_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>7072</xloc>
      <yloc>208</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>SubStatus</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema/>
      <table>position_candidate</table>
      <key>
        <name>final_position_id</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_candidate_id</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>sub_status_id</name>
        <rename>VCSubStatus</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6912</xloc>
      <yloc>1504</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Unique rows</name>
    <type>Unique</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <count_rows>N</count_rows>
    <count_field/>
    <reject_duplicate_row>N</reject_duplicate_row>
    <error_description/>
    <fields>
      <field>
        <name>owners-email</name>
        <case_insensitive>Y</case_insensitive>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>592</xloc>
      <yloc>432</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Unique rows 2</name>
    <type>Unique</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <count_rows>N</count_rows>
    <count_field/>
    <reject_duplicate_row>N</reject_duplicate_row>
    <error_description/>
    <fields>
      <field>
        <name>Department</name>
        <case_insensitive>Y</case_insensitive>
      </field>
      <field>
        <name>final_company_id</name>
        <case_insensitive>Y</case_insensitive>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2352</xloc>
      <yloc>1040</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Unique rows 3</name>
    <type>Unique</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <count_rows>N</count_rows>
    <count_field/>
    <reject_duplicate_row>N</reject_duplicate_row>
    <error_description/>
    <fields>
      <field>
        <name>owners-email</name>
        <case_insensitive>Y</case_insensitive>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2480</xloc>
      <yloc>848</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Unique rows 3 2</name>
    <type>Unique</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <count_rows>N</count_rows>
    <count_field/>
    <reject_duplicate_row>N</reject_duplicate_row>
    <error_description/>
    <fields>
      <field>
        <name>owners-email</name>
        <case_insensitive>Y</case_insensitive>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3744</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Unique rows 3 3</name>
    <type>Unique</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <count_rows>N</count_rows>
    <count_field/>
    <reject_duplicate_row>N</reject_duplicate_row>
    <error_description/>
    <fields>
      <field>
        <name>owners-email</name>
        <case_insensitive>Y</case_insensitive>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2480</xloc>
      <yloc>1440</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Unique rows 4</name>
    <type>Unique</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <count_rows>N</count_rows>
    <count_field/>
    <reject_duplicate_row>N</reject_duplicate_row>
    <error_description/>
    <fields>
      <field>
        <name>owners-email</name>
        <case_insensitive>Y</case_insensitive>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5696</xloc>
      <yloc>256</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Unique rows 5</name>
    <type>Unique</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <count_rows>N</count_rows>
    <count_field/>
    <reject_duplicate_row>N</reject_duplicate_row>
    <error_description/>
    <fields>
      <field>
        <name>sub_status</name>
        <case_insensitive>Y</case_insensitive>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>7200</xloc>
      <yloc>144</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update 19</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema/>
      <table>candidate</table>
      <key>
        <name>candidate_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>candidate_owner_json</name>
        <rename>candidate_owner_json</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5248</xloc>
      <yloc>1296</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update 3</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>desired_contract_rate</name>
        <rename>desired_contract_rate</rename>
      </value>
      <value>
        <name>contract_rate</name>
        <rename>contract_rate</rename>
      </value>
      <value>
        <name>contract_interval</name>
        <rename>contract_interval</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5968</xloc>
      <yloc>1936</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update Candidate CF</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>additional_form_values</table>
      <key>
        <name>additional_type</name>
        <field>additional_type</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCCandidateID</name>
        <field>additional_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>form_id</name>
        <field>form_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>field_id</name>
        <field>field_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>additional_type</name>
        <rename>additional_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>additional_id</name>
        <rename>VCCandidateID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>form_id</name>
        <rename>form_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>field_id</name>
        <rename>field_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>field_value</name>
        <rename>field_value</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>constraint_id</name>
        <rename>constraint_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4608</xloc>
      <yloc>1664</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update Candidate desire_salary 2 2</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>300</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>salary_type</name>
        <rename>salary_type</rename>
      </value>
      <value>
        <name>months_per_year</name>
        <rename>months_per_year</rename>
      </value>
      <value>
        <name>desire_salary</name>
        <rename>Desired Annual Salary</rename>
      </value>
      <value>
        <name>current_salary</name>
        <rename>Current Annual Salary (auto calculated from monthly salary)</rename>
      </value>
      <value>
        <name>desire_salary_monthly</name>
        <rename>Desired Monthly Salary</rename>
      </value>
      <value>
        <name>present_salary_rate</name>
        <rename>Current Monthly Salary</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5872</xloc>
      <yloc>2048</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update Candidate desire_salary 2 3</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>300</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>desire_salary</name>
        <rename>desire_salary</rename>
      </value>
      <value>
        <name>months_per_year</name>
        <rename>months_per_year</rename>
      </value>
      <value>
        <name>present_salary_rate</name>
        <rename>present_salary_rate</rename>
      </value>
      <value>
        <name>salary_type</name>
        <rename>salary_type</rename>
      </value>
      <value>
        <name>current_salary</name>
        <rename>current_salary</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5872</xloc>
      <yloc>2080</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update Job Documents</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>bulk_upload_document_mapping</table>
      <key>
        <name>entity_type</name>
        <field>entity_type</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_job_id</name>
        <field>entity_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>document-filename</name>
        <field>file_name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>default_file</name>
        <field>default_file</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>entity_type</name>
        <rename>entity_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>entity_id</name>
        <rename>final_job_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>file_name</name>
        <rename>document-filename</rename>
        <update>Y</update>
      </value>
      <value>
        <name>default_file</name>
        <rename>default_file</rename>
        <update>Y</update>
      </value>
      <value>
        <name>document_type</name>
        <rename>document_type</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3744</xloc>
      <yloc>208</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update Language</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema/>
      <table>candidate</table>
      <key>
        <name>actual_candidate_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>skill_details_json</name>
        <rename>field_value_json</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5280</xloc>
      <yloc>1376</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update Rejected date</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema/>
      <table>position_candidate</table>
      <key>
        <name>final_position_id</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_candidate_id</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>rejected_date</name>
        <rename>rejected_date</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6912</xloc>
      <yloc>1408</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>VC SFE</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection/>
    <schema>public</schema>
    <table>sub_functional_expertise</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field/>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
      <field>
        <column_name>functional_expertise_id</column_name>
        <stream_name>VCFE_ID</stream_name>
      </field>
      <field>
        <column_name>name</column_name>
        <stream_name>SubFunctional_Expertise</stream_name>
      </field>
      <field>
        <column_name>insert_timestamp</column_name>
        <stream_name>insert_timestamp</stream_name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>496</xloc>
      <yloc>1456</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>VERTICAL</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>vertical</table>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>name</name>
        <rename>ind</rename>
        <update>N</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>N</update>
      </value>
      <value>
        <name>tmp</name>
        <rename>tmp</rename>
        <update>N</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4752</xloc>
      <yloc>464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>VERTICAL 3</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>vertical</table>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>name</name>
        <rename>industry</rename>
        <update>N</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>N</update>
      </value>
      <value>
        <name>tmp</name>
        <rename>tmp</rename>
        <update>N</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1568</xloc>
      <yloc>272</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>View_UserDelimitedCategories</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>with 
View_UserDelimitedCategories (userid, Categories) as (
       SELECT m.userid, trim( replace(replace(replace(Categories.value,'  ',' '),' )',')'),'( ','(') ) as Categories 
       FROM bullhorn1.View_UserDelimitedCategories m CROSS APPLY STRING_SPLIT(m.Categories,';') AS Categories 
       where (Categories is not null and Categories &lt;&gt; '') )

select distinct Categories as fe, count(*) as amount, lower(Categories) as 'tmp' from View_UserDelimitedCategories where Categories is not null and Categories &lt;&gt; '' group by Categories --current_timestamp as 'insert_timestamp',
--select count(*) from View_UserDelimitedCategories

-- UNION select 'OTHERS', 1, 'others'


</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4880</xloc>
      <yloc>592</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Vincere FE</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection/>
    <schema>public</schema>
    <table>functional_expertise</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field/>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
      <field>
        <column_name>name</column_name>
        <stream_name>Functional_Expertise</stream_name>
      </field>
      <field>
        <column_name>insert_timestamp</column_name>
        <stream_name>insert_timestamp</stream_name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>384</xloc>
      <yloc>1392</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>WORK HISTORY + REFERENCE + EDUCATION</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>Y</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>actual_candidate_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>experience</name>
        <rename>candidate-workHistory</rename>
      </value>
      <value>
        <name>education_summary</name>
        <rename>education_summary</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5696</xloc>
      <yloc>480</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>WORK LOCATION 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>500</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>contact_location</table>
      <key>
        <name>VCContactID</name>
        <field>contact_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCAddressID</name>
        <field>company_location_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>contact_id</name>
        <rename>VCContactID</rename>
        <update>N</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>N</update>
      </value>
      <value>
        <name>company_location_id</name>
        <rename>VCAddressID</rename>
        <update>N</update>
      </value>
      <value>
        <name>tmp</name>
        <rename>tmp</rename>
        <update>N</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2736</xloc>
      <yloc>1632</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>[CONPENSATION PERIOD]</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>compensation_period</table>
      <key>
        <name>VCJobID</name>
        <field>position_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>position_id</name>
        <rename>VCJobID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>from_date</name>
        <rename>start_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>to_date</name>
        <rename>to_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>period_type</name>
        <rename>compensation_period__period_type</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>7056</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>[INVOICE]</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>invoice</table>
      <key>
        <name>VCOfferID</name>
        <field>offer_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCPOSITIONCANDIDATEID</name>
        <field>position_candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>offer_id</name>
        <rename>VCOfferID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>position_candidate_id</name>
        <rename>VCPOSITIONCANDIDATEID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>renewal_flow_status</name>
        <rename>renewal_flow_status</rename>
        <update>Y</update>
      </value>
      <value>
        <name>renewal_index</name>
        <rename>renewal_index</rename>
        <update>Y</update>
      </value>
      <value>
        <name>status</name>
        <rename>InvoiceStatus</rename>
        <update>Y</update>
      </value>
      <value>
        <name>valid</name>
        <rename>valid</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>7664</xloc>
      <yloc>416</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>[OFFER PAY CHARGE]</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>offer_pay_charge</table>
      <key>
        <name>VCOfferID</name>
        <field>offer_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>charge_rate</name>
        <rename>charge_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>comp_setting_id</name>
        <rename>offer_pay_charge__comp_setting_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>offer_id</name>
        <rename>VCOfferID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>pay_rate</name>
        <rename>pay_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>tax_period_id</name>
        <rename>offer_pay_charge__tax_period_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>margin_percent</name>
        <rename>margin_percent</rename>
        <update>Y</update>
      </value>
      <value>
        <name>markup_percent</name>
        <rename>markup_percent</rename>
        <update>Y</update>
      </value>
      <value>
        <name>profit</name>
        <rename>profit</rename>
        <update>Y</update>
      </value>
      <value>
        <name>total_pay_rate</name>
        <rename>total_pay_rate</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>7168</xloc>
      <yloc>432</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>[OFFER PERSIONAL INFO]</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>offer_personal_info</table>
      <key>
        <name>VCOfferID</name>
        <field>offer_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>client_company_id</name>
        <rename>pd.company_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_company_name</name>
        <rename>company.client_company_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_contact_id</name>
        <rename>pd.client_contact_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_contact_name</name>
        <rename>contact.client_contact_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_department</name>
        <rename>contact.client_department</rename>
        <update>Y</update>
      </value>
      <value>
        <name>current_location_id</name>
        <rename>c.current_location_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>date_of_birth</name>
        <rename>c.date_of_birth</rename>
        <update>Y</update>
      </value>
      <value>
        <name>email</name>
        <rename>c.email</rename>
        <update>Y</update>
      </value>
      <value>
        <name>end_date</name>
        <rename>end_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>export_data_to</name>
        <rename>Export_data_to</rename>
        <update>Y</update>
      </value>
      <value>
        <name>first_name</name>
        <rename>c.first_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>invoice_date</name>
        <rename>invoice_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>invoice_message</name>
        <rename>InvoiceNote</rename>
        <update>Y</update>
      </value>
      <value>
        <name>invoice_total</name>
        <rename>Invoice_total</rename>
        <update>Y</update>
      </value>
      <value>
        <name>last_name</name>
        <rename>c.last_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>male</name>
        <rename>c.male</rename>
        <update>Y</update>
      </value>
      <value>
        <name>net_total</name>
        <rename>Net_total</rename>
        <update>Y</update>
      </value>
      <value>
        <name>note</name>
        <rename>PlacementNote</rename>
        <update>Y</update>
      </value>
      <value>
        <name>notice_period</name>
        <rename>c.notice_period</rename>
        <update>Y</update>
      </value>
      <value>
        <name>offer_date</name>
        <rename>placed_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>offer_id</name>
        <rename>VCOfferID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>other_invoice_items_total</name>
        <rename>Other_invoice_items_total</rename>
        <update>Y</update>
      </value>
      <value>
        <name>placed_date</name>
        <rename>placed_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>start_date</name>
        <rename>start_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>tax_rate</name>
        <rename>Tax_rate</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>7568</xloc>
      <yloc>416</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>[OFFER REVENUE SPLIT]</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>offer_revenue_split</table>
      <key>
        <name>VCOfferID</name>
        <field>offer_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VC_user_account_ID</name>
        <field>user_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>offer_id</name>
        <rename>VCOfferID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>user_id</name>
        <rename>VC_user_account_ID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>shared</name>
        <rename>VC_offer_revenue_split_shared</rename>
        <update>Y</update>
      </value>
      <value>
        <name>amount</name>
        <rename>VC_offer_revenue_split_amount</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>7280</xloc>
      <yloc>720</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>[OFFER]</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>Y</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema/>
      <table>offer</table>
      <key>
        <name>VCPOSITIONCANDIDATEID</name>
        <field>position_candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>draft_offer</name>
        <rename>draft_offer</rename>
      </value>
      <value>
        <name>position_type</name>
        <rename>pd.position_type</rename>
      </value>
      <value>
        <name>currency_type</name>
        <rename>currency_type</rename>
      </value>
      <value>
        <name>tmp</name>
        <rename>placementID</rename>
      </value>
      <value>
        <name>country_code</name>
        <rename>company_location.country_code</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6704</xloc>
      <yloc>432</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>[OFFER] CONTRACT</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>offer</table>
      <key>
        <name>VCPOSITIONCANDIDATEID</name>
        <field>position_candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>position_candidate_id</name>
        <rename>VCPOSITIONCANDIDATEID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>charge_rate</name>
        <rename>charge_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>charge_rate_type</name>
        <rename>charge_rate_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>currency_type</name>
        <rename>compensation.currency_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>contract_length</name>
        <rename>contract_length</rename>
        <update>Y</update>
      </value>
      <value>
        <name>contract_length_type</name>
        <rename>contract_length_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>contract_rate_type</name>
        <rename>contract_rate_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>draft_offer</name>
        <rename>draft_offer</rename>
        <update>Y</update>
      </value>
      <value>
        <name>margin_percent</name>
        <rename>margin_percent</rename>
        <update>Y</update>
      </value>
      <value>
        <name>markup_percent</name>
        <rename>markup_percent</rename>
        <update>Y</update>
      </value>
      <value>
        <name>pay_calculation_type</name>
        <rename>pay_calculation_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>pay_rate</name>
        <rename>pay_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>position_type</name>
        <rename>pd.position_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>valid</name>
        <rename>placed_valid</rename>
        <update>Y</update>
      </value>
      <value>
        <name>profit</name>
        <rename>profit</rename>
        <update>Y</update>
      </value>
      <value>
        <name>projected_profit</name>
        <rename>projected_profit</rename>
        <update>Y</update>
      </value>
      <value>
        <name>total_pay_rate</name>
        <rename>total_pay_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>use_time_temp</name>
        <rename>use_time_temp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>working_day_per_month</name>
        <rename>working_day_per_month</rename>
        <update>Y</update>
      </value>
      <value>
        <name>working_day_per_week</name>
        <rename>working_day_per_week</rename>
        <update>Y</update>
      </value>
      <value>
        <name>working_hour_per_day</name>
        <rename>working_hour_per_day</rename>
        <update>Y</update>
      </value>
      <value>
        <name>working_hour_per_week</name>
        <rename>working_hour_per_week</rename>
        <update>Y</update>
      </value>
      <value>
        <name>working_week_per_month</name>
        <rename>working_week_per_month</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6944</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>[OFFER] PERMANENT</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>offer</table>
      <key>
        <name>VCPOSITIONCANDIDATEID</name>
        <field>position_candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>position_candidate_id</name>
        <rename>VCPOSITIONCANDIDATEID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>currency_type</name>
        <rename>compensation.currency_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>gross_annual_salary</name>
        <rename>contract_rate_from-MinimumSalary</rename>
        <update>Y</update>
      </value>
      <value>
        <name>pay_rate</name>
        <rename>contract_rate_from-MinimumSalary</rename>
        <update>Y</update>
      </value>
      <value>
        <name>profit</name>
        <rename>contract_rate_from-MinimumSalary</rename>
        <update>Y</update>
      </value>
      <value>
        <name>position_type</name>
        <rename>pd.position_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>percentage_of_annual_salary</name>
        <rename>percentage_of_annual_salary</rename>
        <update>Y</update>
      </value>
      <value>
        <name>projected_profit</name>
        <rename>projected_profit</rename>
        <update>Y</update>
      </value>
      <value>
        <name>use_quick_fee_forecast</name>
        <rename>use_quick_fee_forecast</rename>
        <update>Y</update>
      </value>
      <value>
        <name>valid</name>
        <rename>placed_valid</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6832</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>[PLACEMENT DETAIL]</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
with
  JPInfo as (
  	select JP.jobPostingID as JobID
  		, JP.title as JobTitle, jp.status as 'job_status'
		, Cl.clientID as ContactID, Cl.userID as ClientUserID, cl.status as 'contact_status'
		, UC.name as ContactName, UC.email as ContactEmail
		, CC.clientCorporationID as CompanyID, CC.name as CompanyName, CC.status as 'company_status'
	from bullhorn1.BH_JobPosting JP
	left join bullhorn1.BH_Client Cl on JP.clientUserID = Cl.userID
	left join bullhorn1.BH_UserContact UC on JP.clientUserID = UC.userID
	left join bullhorn1.BH_ClientCorporation CC on JP.clientCorporationID = CC.clientCorporationID
	where 1=1 and JP.title &lt;&gt; '' and (JP.isdeleted &lt;&gt; 1 /*and JP.status &lt;&gt; 'Archive'*/)
	)
--select top 100 * from JPInfo order by JobID


select --top 10
         PL.jobPostingID as 'application-positionExternalId', pl.placementID
       , JPI.CompanyID, JPI.CompanyName, JPI.company_status, JPI.ContactID, JPI.ContactName, JPI.ContactEmail, JPI.contact_status, JPI.JobID, JPI.JobTitle, JPI.job_status, CAI.UserID, CAI.CandidateName as 'Candidate Name', CAI.candidate_status --, JR.userID, JPI.ClientUserID,
       , CAI.candidateID as 'application-candidateExternalId'
       --, 'OFFERED' as 'application-stage'
       
       --, pl.dateAdded as [application-actionedDate] --convert(varchar(10),PL.dateAdded,120)--as 'placed_date'
       , pl.dateAdded as 'placed_date' --dateeffective
       , pl.dateBegin as 'placement_date', DATEADD(year, 1, pl.dateBegin)  as 'to_date' 
       , case when pl.dateEnd is null then DATEADD(year, 1, pl.dateBegin) end as 'end_date'
       , pl.employmentStartDate as 'start_date'
       --, pl.dateClientEffective as 'placement_date'
       , pl.dateBegin as 'invoice_date'
       , case 
              when pl.employmentType in ('Permanent','Retained','Direct Hire') then 1
              --when pl.employmentType in ('Contract','Fixed Contract','Part-time','Fixed term Contract','Temp','Temp to Perm', 'Temporary') then 2
              else 2 end as 'position_type' --'Job Type'
       , case
              when trim(pl.customText1) like '%AED%' then 'aed'
              when trim(pl.customText1) like 'Afghanistan Afghanis%' then ''
              when trim(pl.customText1) like 'Angola Kwanza%' then ''
              when trim(pl.customText1) like 'Antilles Guilders (Florins)%' then ''
              when trim(pl.customText1) like 'Armenia Drams%' then ''
              when trim(pl.customText1) like 'Aruba Guilders (Florins)%' then ''
              when trim(pl.customText1) like 'AUS Dollars%' then 'aud'
              when trim(pl.customText1) like 'B&amp;H Convertible Marka%' then ''
              when trim(pl.customText1) like 'Bahrain Dinars%' then 'bhd'
              when trim(pl.customText1) like 'British Pound%' then 'pound'
              when trim(pl.customText1) like '%CNY%' then 'yuan'
              when trim(pl.customText1) like '%EUR%' then 'euro'
              when trim(pl.customText1) like '%Euro%' then 'euro'
              when trim(pl.customText1) like '%GBP%' then 'pound'
              when trim(pl.customText1) like '%£%' then 'pound'
              when trim(pl.customText1) like '%HKD%' then 'hkd'
              when trim(pl.customText1) like '%HK%$' then 'hkd'
              when trim(pl.customText1) like 'Kuwait Dinars%' then 'kwd'
              when trim(pl.customText1) like '%OMR%' then 'omr'
              when trim(pl.customText1) like '%PHP%' then 'php'
              when trim(pl.customText1) like 'Please Select%' then ''
              when trim(pl.customText1) like 'QAR%' then 'qar'
              when trim(pl.customText1) like 'Russia Rubles%' then 'rub'
              when trim(pl.customText1) like 'SAR%' then 'sar'
              when trim(pl.customText1) like '%Sing%' then 'singd'
              when trim(pl.customText1) like 'Singapore Dollars%' then 'singd'
              when trim(pl.customText1) like 'UAE Dirhams%' then 'aed'
              when trim(pl.customText1) like 'US Dollars%' then 'usd'
              when trim(pl.customText1) like '%USD%' then 'usd'
              else '' end as currency_type
                  
, '>>>Profit Split'
       , statement.email as 'user_email' -->> Profit split - %
       , 1 as 'profit_split_mode' -->> Profit split - %
       , pl.costcenter as 'Cost Center'

      
, '>>>PERMANENT'
       , pl.salary as 'contract_rate_from-MinimumSalary' --'gross_annual_salary'
       , 1 as 'use_quick_fee_forecast'
       , pl.fee*100 as 'percentage_of_annual_salary' --'Quick Fee Forecast % (Permanent Job)'
       , pl.salary*pl.fee as 'projected_profit'--, pl.salary, pl.fee
       --, pl.flatFee as 'N/A (Auto Calculated)'
       
, '>>>CONTRACT'
       , convert(float,pl.payRate) as 'pay_rate'
       , convert(float,pl.payRate) as 'total_pay_rate' --Pay rate + On-costs (number) = Total pay rate
       , 'chargeRate' as charge_rate_type
       , pl.clientBillRate as 'charge_rate'
       , pl.clientBillRate-convert(float,pl.payrate) as 'profit' --Charge rate - Total pay rate = Profit | Margin
       ,(pl.clientBillRate-convert(float,pl.payRate))*100/(case when pl.clientBillRate = 0 then 1 end) as 'margin_percent' --Margin % = Profit | Margin * 100 / Charge rate
       ,(pl.clientBillRate-convert(float,pl.payRate))*100/(case when convert(float,pl.payRate) = 0 then 1 end) as 'markup_percent' --Markup % = Profit | Margin * 100 / Total pay rate
       , vp.markUpPercentage
       , case
              when pl.salaryUnit in ('Per Hour','Hourly','Per Hour,Per Hour') then 1
              when pl.salaryUnit in ('Per Day') then 2
              when pl.salaryUnit in ('Per Week') then 3
              when pl.salaryUnit in ('Per Month') then 4
              end as 'contract_rate_type'--, pl.salaryUnit    
       , Stuff(--'EMAIL: ' + char(10)
              + Coalesce('Placement ID: ' + NULLIF(convert(nvarchar(max), pl.placementid), '') + char(10), '') --as 'Contact External ID
+ coalesce('Billing Frequency: ' + nullif(trim(convert(nvarchar(max),pl.billingFrequency)), '') + char(10), '')
+ coalesce('Billing Profile: ' + nullif(trim(convert(nvarchar(max),pl.billingProfileID)), '') + char(10), '')
+ coalesce('Bonus Package: ' + nullif(trim(convert(nvarchar(max),pl.bonusPackage)), '') + char(10), '')
--+ coalesce('Candidate Source: ' + nullif(trim(convert(nvarchar(max),pl.candidateSource)), '') + char(10), '')
+ coalesce('Bill Rate (Over-time): ' + nullif(trim(convert(nvarchar(max),pl.clientOverTimeRate)), '') + char(10), '')
--+ coalesce('Comments: ' + nullif(trim(convert(nvarchar(max),pl.comments)), '') + char(10), '')
+ coalesce('Bill Effective Date (Client): ' + nullif(trim(convert(nvarchar(max),pl.dateClientEffective)), '') + char(10), '')
+ coalesce('Pay Effective Date (Candidate): ' + nullif(trim(convert(nvarchar(max),pl.dateEffective)), '') + char(10), '')
+ coalesce('Date Last Modified: ' + nullif(trim(convert(nvarchar(max),vplm.dateLastModified)), '') + char(10), '') --, pl.dateLastModified
+ coalesce('Guarentee Info: ' + nullif(trim(convert(nvarchar(max),pl.daysGuaranteed)), '') + char(10), '')
+ coalesce('Days Pro-Rated: ' + nullif(trim(convert(nvarchar(max),pl.daysProRated)), '') + char(10), '')
+ coalesce('Job Duration: ' + nullif(trim(convert(nvarchar(max),pl.durationWeeks)), '') + char(10), '')
+ coalesce('Employee Payment Type: ' + nullif(trim(convert(nvarchar(max),pl.employeeType)), '') + char(10), '')
+ coalesce('# Expiring Credentials: ' + nullif(trim(convert(nvarchar(max),vp.expiringCredentials)), '') + char(10), '') --, pl.expiringCredentials
+ coalesce('Placement Fee (Flat): ' + nullif(trim(convert(nvarchar(max),vp.flatFee)), '') + char(10), '')
+ coalesce('Hours of Operation: ' + nullif(trim(convert(nvarchar(max),pl.hoursOfOperation)), '') + char(10), '')
+ coalesce('Invoice Grouping: ' + nullif(trim(convert(nvarchar(max),pl.invoiceGroup)), '') + char(10), '')
+ coalesce('Rate Entry Type: ' + nullif(trim(convert(nvarchar(max),pl.isMultirate)), '') + char(10), '')
+ coalesce('Assigned to: ' + nullif(trim(convert(nvarchar(max),vjou.usersAssigned)), '') + char(10), '') --, pl.jobAssignments
+ coalesce('Submission: ' + nullif(trim(convert(nvarchar(max),jr.jobResponseID)), '') + char(10), '') --, pl.jobResponseID
+ coalesce('Submission Status: ' + nullif(trim(convert(nvarchar(max),jr.status)), '') + char(10), '') --, pl.jobResponseStatus
+ coalesce('Legal Business Entity: ' + nullif(trim(convert(nvarchar(max),pl.legalBusinessEntityID)), '') + char(10), '') --***EXISTS sometime
--+ coalesce('Modifying User: ' + nullif(trim(convert(nvarchar(max),pl.modifyingUser)), '') + char(10), '')
+ coalesce('Options Package: ' + nullif(trim(convert(nvarchar(max),pl.optionsPackage)), '') + char(10), '')
+ coalesce('Overtime Exemption: ' + nullif(trim(convert(nvarchar(max),pl.otExemption)), '') + char(10), '')
+ coalesce('Other Hourly Fee: ' + nullif(trim(convert(nvarchar(max),pl.otherHourlyFee)), '') + char(10), '')
+ coalesce('Other Hourly Fee Comments: ' + nullif(trim(convert(nvarchar(max),pl.otherHourlyFeeComments)), '') + char(10), '')
+ coalesce('OT Mark-up %: ' + nullif(trim(convert(nvarchar(max),vp.overtimeMarkUpPercentage)), '') + char(10), '') --, pl.overtimeMarkUpPercentage
+ coalesce('Pay Rate (Over-time): ' + nullif(trim(convert(nvarchar(max),pl.overtimeRate)), '') + char(10), '')
+ coalesce('Pay Group: ' + nullif(trim(convert(nvarchar(max),pl.payGroupLookupID)), '') + char(10), '')
+ coalesce('Payroll Employee Type: ' + nullif(trim(convert(nvarchar(max),pl.payrollEmployeeTypeLookupID)), '') + char(10), '')
+ coalesce('Requirement: ' + nullif(trim(convert(nvarchar(max),cert.placementCertificationID)), '') + char(10), '') --, pl.placementCertifications
+ coalesce('Placement #: ' + nullif(trim(convert(nvarchar(max),pl.placementID)), '') + char(10), '')
+ coalesce('Exemption Status: ' + nullif(trim(convert(nvarchar(max),pl.placementTaxExemptionStatusLookupID)), '') + char(10), '')
+ coalesce('Position Code: ' + nullif(trim(convert(nvarchar(max),pl.positionCode)), '') + char(10), '')
+ coalesce('Project Code List: ' + nullif(trim(convert(nvarchar(max),pl.projectCodeList)), '') + char(10), '')
+ coalesce('Quit Job: ' + nullif(trim(convert(nvarchar(max),pl.quitJob)), '') + char(10), '')
+ coalesce('Recruiting Manager Commission Over-ride %: ' + nullif(trim(convert(nvarchar(max),pl.recruitingManagerPercentGrossMargin)), '') + char(10), '')
+ coalesce('Referral Fee: ' + nullif(trim(convert(nvarchar(max),pl.referralFee)), '') + char(10), '')
+ coalesce('Referral Fee Type: ' + nullif(trim(convert(nvarchar(max),pl.referralFeeType)), '') + char(10), '')
+ coalesce('Reported Margin: ' + nullif(trim(convert(nvarchar(max),pl.reportedMargin)), '') + char(10), '')
+ coalesce('Reporting Billing (other): ' + nullif(trim(convert(nvarchar(max),pl.reportTo)), '') + char(10), '')
+ coalesce('Sales Manager Commission Over-ride %: ' + nullif(trim(convert(nvarchar(max),pl.salesManagerPercentGrossMargin)), '') + char(10), '')
+ coalesce('Statement Contact: ' + nullif(trim(convert(nvarchar(max),pl.statementUserID)), '') + char(10), '')
+ coalesce('Status: ' + nullif(trim(convert(nvarchar(max),pl.status)), '') + char(10), '')
+ coalesce('Withholding Tax %: ' + nullif(trim(convert(nvarchar(max),pl.taxRate)), '') + char(10), '')
+ coalesce('Tax State: ' + nullif(trim(convert(nvarchar(max),pl.taxState)), '') + char(10), '')
+ coalesce('Termination Reason: ' + nullif(trim(convert(nvarchar(max),pl.terminationReason)), '') + char(10), '')
+ coalesce('Time and Expense: ' + nullif(trim(convert(nvarchar(max),pte.timeAndExpenseID)), '') + char(10), '') --, pl.timeAndExpense
+ coalesce('Time Units: ' + nullif(trim(convert(nvarchar(max),ptu.timeUnitID)), '') + char(10), '')
+ coalesce('Umbrella Company: ' + nullif(trim(convert(nvarchar(max),pl.vendorClientCorporationID)), '') + char(10), '')
+ coalesce('Workers Comp Code: ' + nullif(trim(convert(nvarchar(max),pl.workersCompRateID)), '') + char(10), '')
+ coalesce('Work Week Begin: ' + nullif(trim(convert(nvarchar(max),pl.workWeekStart)), '') + char(10), '')
--+ Coalesce('Billing Contact: ' + NULLIF(convert(nvarchar(max), billing.name), '') + char(10), '') --as 'Contact External ID'
--+ Coalesce('Billing Frequency: ' + NULLIF(convert(nvarchar(max), pl.billingFrequency), '') + char(10), '')
--+ Coalesce('Days Guaranteed: ' + NULLIF(convert(nvarchar(max), pl.daysguaranteed), '') + char(10), '')
--+ Coalesce('Days Pro-Rated: ' + NULLIF(convert(nvarchar(max),pl.daysProRated), '') + char(10), '')
--+ Coalesce('Employee Type: ' + NULLIF(convert(nvarchar(max), pl.employeetype), '') + char(10), '')
--+ Coalesce('Hours Per Period: ' + NULLIF(convert(nvarchar(max),pl.hoursPerDay), '') + char(10), '')
--+ Coalesce('Overtime: ' + NULLIF(convert(nvarchar(max),pl.clientOverTimeRate), '') + char(10), '')
--+ Coalesce('Overtime: ' + NULLIF(convert(nvarchar(max),pl.overtimeRate), '') + char(10), '')
--+ Coalesce('Pay Effective Date (Candidate): ' + NULLIF(convert(nvarchar(max),pl.dateEffective), '') + char(10), '')
--+ Coalesce('Placement Fee (Flat): ' + NULLIF(convert(nvarchar(max),vp.flatFee), '') + char(10), '')
--+ Coalesce('Rate Entry Type: ' + NULLIF(convert(nvarchar(max),pl.isMultirate), '') + char(10), '')
--+ Coalesce('Referral Fee Type: ' + NULLIF(convert(nvarchar(max),pl.referralFeeType), '') + char(10), '')
--+ Coalesce('Reporting to: ' + NULLIF(convert(nvarchar(max), pl.reportto), '') + char(10), '')
--+ Coalesce('Statement Contact: ' + NULLIF(convert(nvarchar(max), statement.name), '') + char(10), '') --as 'Contact External ID' Primary Timesheet Authoriser
--+ Coalesce('Status: ' + NULLIF(convert(nvarchar(max), pl.status), '') + char(10), '')
----+ Coalesce('Time and Expense: ' + NULLIF(convert(nvarchar(max),pl.timeAndExpense), '') + char(10), '')
--+ Coalesce('VAT %: ' + NULLIF(convert(nvarchar(max),pl.taxRate), '') + char(10), '')
--+ Coalesce('' + NULLIF(convert(nvarchar(max), pc.note), '') + char(10), '')
+ coalesce('Comments: ' + nullif(trim(convert(nvarchar(max),pl.comments)), '') + char(10), '')
       , 1, 0, '') as 'PlacementNote'
--       , Stuff(
--              , 1, 0, '') as 'InvoiceNote'
        , '' as 'InvoiceNote'

, 3 as draft_offer --used to move OFFERED to PLACED in VC [offer]
, 2 as InvoiceStatus --used to update invoice status in VC [invoice] as 'active'
, 1 as renewal_index --default value in VC [invoice]
, 1 as renewal_flow_status
, -10 as Latest_user_id
, getdate() as Latest_update_date
, 0 as Tax_rate
, 'other' as Export_data_to
, 0 as Net_total
, 0 as Other_invoice_items_total
, 0 as Invoice_total
, 1 as 'compensation_period__period_type'
, 655 as 'offer_pay_charge__comp_setting_id'
, 3 as 'offer_pay_charge__tax_period_id'
--, 1 as valid
, 1 as placed_valid
, 1 as invoice_valid
, 2 as position_type --Contract placements
, 1 as split_mode --1-percent 2-number
, DATEDIFF(DAY,pl.dateBegin,pl.dateEnd) as contract_length
--, case 
--    when pl.dateEnd is not null and pl.dateEnd &lt;&gt; '' then cast(day(pl.dateEnd - pl.dateBegin) as decimal (9,2))/22
--    when pl.dateEnd is null then 0
--    end as contract_length
, 2 as contract_length_type
, case 
       when pl.employeeType like '%W2%' then 2
       when pl.employeeType like '%1099%' then 3
       when pl.employeeType like '%Umbrella%' then 4
       when pl.employeeType like '%PAYG%' then 5
       when pl.employeeType like '%LTD%' then 6
       when pl.employeeType like '%PAYE%' then 7
       when pl.employeeType like '%Employee%' then 8
       end as pay_calculation_type
, 0 as use_time_temp --Time management: 0 manual - 1 timetemp - 2 astute payroll
, case when pl.hoursperday = 0 then 8 else pl.hoursperday end as working_hour_per_day --, case when pl.hoursperday &lt; 11 then pl.hoursperday else 8 end as working_hour_per_day
, 5 as working_day_per_week
, 40 as working_hour_per_week
, 22 as working_day_per_month
, 4 as working_week_per_month

-- select count(*) --2086
-- select *  -- select distinct customText1 -- select distinct hoursperday
-- select distinct pl.employmentType -- select distinct pl.salaryUnit -- statement.email -- select DATEADD(year, 1, pl.dateBegin)
-- pl.billingUserID, pl.statementUserID -- select distinct pl.employmentType --pl.salaryUnit -- statement.email -- select DATEADD(year, 1, pl.dateBegin) 
from bullhorn1.BH_Placement PL --group by customText1 --where  pl.billingUserID &lt;&gt; pl.statementUserID
left join bullhorn1.View_Placement vp on vp.placementid = pl.placementid
left join (
       select placementID,  STRING_AGG( note, char(10)) WITHIN GROUP (ORDER BY note) note
       from ( 
              select pc.placementID,
                      + Stuff(
                      + Coalesce('Split: ' + NULLIF(convert(nvarchar(max), pc.commissionPercentage), '') + char(10), '')--, pc.commissionPercentage as 'Split %'
                      --+ Coalesce('Date Added: ' + NULLIF(convert(nvarchar(max), pc.dateAdded), '') + char(10), '')--, pc.dateAdded as 'N/A'
                      + Coalesce('Fee Split: ' + NULLIF(convert(nvarchar(max), pc.flatPayout), '') + char(10), '')--, pc.flatPayout as 'Split Amount'
                      + Coalesce('% of Gross Margin: ' + NULLIF(convert(nvarchar(max), pc.grossMarginPercentage), '') + char(10), '')--, pc.grossMarginPercentage as 'Margin % (Auto Calculated)'
                      --+ Coalesce('Placement: ' + NULLIF(convert(nvarchar(max), pc.placement), '') + char(10), '')
                      + Coalesce('Role: ' + NULLIF(convert(nvarchar(max), pc.role), '') + char(10), '')
                      + Coalesce('Status: ' + NULLIF(convert(nvarchar(max), pc.status), '') + char(10), '')
                      + Coalesce('Recipient: ' + NULLIF(convert(nvarchar(max), uc.name), '') + char(10), '') --pc.userid
                      + Coalesce('Comments: ' + NULLIF(convert(nvarchar(max), pc.comments), '') + char(10), '')
                      , 1, 0, '') as note
              -- select * 
              from bullhorn1.BH_Commission pc
              left join (select userID,name from bullhorn1.BH_UserContact) UC on UC.UserID = pc.userID  
              /*where pc.placementID = 3*/ ) t
       GROUP BY placementID
       ) pc on pc.placementID = pl.placementID
left join ( select CA.userID as CandidateUserID, CA.candidateID, UC.userID, UC.name as CandidateName, UC.email as CandidateEmail, CA.status as 'candidate_status' from bullhorn1.BH_Candidate CA left join bullhorn1.BH_UserContact UC on CA.userID = UC.userID where CA.isdeleted &lt;&gt; 1 /*and CA.status &lt;&gt; 'Archive'*/) CAI on PL.userID = CAI.CandidateUserID 
left join ( select distinct userID, name, email from bullhorn1.BH_UserContact UC) billing on billing.userid = pl.billinguserid
left join ( select distinct userid, name, email from bullhorn1.BH_UserContact UC) statement on statement.userid = pl.statementUserID
left join JPInfo JPI on PL.jobPostingID = JPI.JobID

left join bullhorn1.View_PlacementLastModified vplm on vplm.placementID = pl.placementID
--left join bullhorn1.View_Placement vp on vp.placementID = pl.placementID
left join bullhorn1.View_JobOrderUsersAssigned vjou on vjou.jobpostingid = pl.jobpostingid --check DUPLICATED
left join (
       select vpj.placementID, jr.jobResponseID, jr.status
       from bullhorn1.View_PlacementJobResponse vpj 
       left join bullhorn1.BH_JobResponse jr on jr.jobResponseID = vpj.jobResponseID
       ) jr on jr.placementID = pl.placementID
left join bullhorn1.BH_PlacementCertification cert on cert.placementID = pl.placementID
left join bullhorn1.BH_PlacementTimeAndExpense pte on pte.timeAndExpenseID = pl.placementTimeAndExpenseID --check DUPLICATED
left join bullhorn1.BH_PlacementTimeUnit ptu on ptu.placementID = pl.placementID
--left join bullhorn1.BH_UserShiftAvailability usa on usa.timeUnitID = pl.timeUnitID
--left join bullhorn1.BH_JobOpportunity jo on jo.jobpostingid = pl.jobpostingid

where JPI.JobID is not null and CAI.CandidateUserID is not null
--and pl.employmentType in ('Permanent','Retained') --and pl.salary = 0
--and pl.employmentType in ('Contract','Fixed Contract','Part-time','Fixed term Contract','Temp','Temp to Perm', 'Temporary')
--and PL.placementid in (3346) --3409, 3410, 3411, 3412, 3413, 3414, 3415, 3416, 3417, 3418, 3419)
--and JPI.JobID in (549)
--and cai.CandidateUserID in (41914,73149,20656)
--and pl.clientBillRate = convert(float,pl.payRate)


--select CA.userID as CandidateUserID, CA.candidateID, UC.userID, UC.name as CandidateName, UC.email as CandidateEmail from bullhorn1.BH_Candidate CA left join bullhorn1.BH_UserContact UC on CA.userID = UC.userID where ca.userid in (41914,73149,20656) and CA.isdeleted &lt;&gt; 1 and CA.status &lt;&gt; 'Archive'
--select * from bullhorn1.BH_Placement PL where PL.placementid in (3409, 3410, 3411, 3412, 3413, 3414, 3415, 3416, 3417, 3418, 3419)
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6320</xloc>
      <yloc>608</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>[POSITION CANDIDATE]</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema/>
      <table>position_candidate</table>
      <key>
        <name>final_candidate_id</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_position_id</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>candidate_id</name>
        <rename>final_candidate_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>position_description_id</name>
        <rename>final_position_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>status</name>
        <rename>status</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>associated_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>associated_date</name>
        <rename>associated_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>sent_date</name>
        <rename>sent_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>interview1_date</name>
        <rename>interview1_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>interview2_date</name>
        <rename>interview2_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>offer_date</name>
        <rename>offer_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>active</name>
        <rename>active</rename>
        <update>Y</update>
      </value>
      <value>
        <name>rejected_date</name>
        <rename>rejected_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>placed_date</name>
        <rename>placed_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>hire_date</name>
        <rename>hire_date</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6944</xloc>
      <yloc>64</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>[PROFIT SPLIT]</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
--select top 10 * from bullhorn1.BH_JobPosting JP where JP.jobPostingID = 6778 
--select top 10 * from bullhorn1.BH_UserContact UC where userID in (5668,2085)
--select top 10 * from bullhorn1.BH_Client Cl where Cl.userID in (74441)

--select * from bullhorn1.BH_Placement PL where PL.userID = 13325 -- placementID in (3267,3322,3360)
--select count(*) from bullhorn1.BH_Commission pc
--select * from bullhorn1.BH_Commission pc where placementID in (199725)

/* CHECKING DUPLICATE candidateID
with t as (
       select CA.userID as CandidateUserID, CA.candidateID, UC.userID, UC.name as CandidateName, UC.email as CandidateEmail, CA.status as 'candidate_status', CA.isprimaryOwner, CA.dateAdded
       from bullhorn1.BH_Candidate CA 
       left join bullhorn1.BH_UserContact UC on CA.userID = UC.userID 
       where CA.isdeleted &lt;&gt; 1
       --and CA.Userid in (10001) --and CA.status &lt;&gt; 'Archive' order by userID desc, dateAdded
)
select CA.userID as CandidateUserID, CA.candidateID, CA.status as 'candidate_status', isprimaryOwner from bullhorn1.BH_Candidate CA where CA.userid in (select userid from t group by userID having count(*) > 1 )
*/


with
  JPInfo as (
  	select   JP.jobPostingID as JobID
  		, JP.title as JobTitle, jp.status as 'job_status'
		, Cl.clientID as ContactID, Cl.userID as ClientUserID, cl.status as 'contact_status'
		, UC.name as ContactName, UC.email as ContactEmail
		, CC.clientCorporationID as CompanyID, CC.name as CompanyName, CC.status as 'company_status'
	from bullhorn1.BH_JobPosting JP
	left join bullhorn1.BH_Client Cl on JP.clientUserID = Cl.userID
	left join bullhorn1.BH_UserContact UC on JP.clientUserID = UC.userID
	left join bullhorn1.BH_ClientCorporation CC on JP.clientCorporationID = CC.clientCorporationID
	where 1=1 and JP.title &lt;&gt; '' and JP.isdeleted &lt;&gt; 1 --and JP.status &lt;&gt; 'Archive' --and Cl.isPrimaryOwner = 1 ---*** --	and JP.jobPostingID = 6778
	)
--select top 100 * from JPInfo order by JobID

, CAI as (
       select CA.candidateID, CA.userID as CandidateUserID, UC.name as CandidateName, UC.email as CandidateEmail, CA.status as 'candidate_status' 
       from bullhorn1.BH_Candidate CA left join bullhorn1.BH_UserContact UC on CA.userID = UC.userID 
       where CA.isdeleted &lt;&gt; 1 --and CA.isprimaryOwner = 1 ---*** --and UC.userid = 13325 --and CA.status &lt;&gt; 'Archive'
       )

-- CALCULATE_SUM_of_PLACEMENT: expectation = 100%
, -- with 
  commission as ( select placementID, sum(commissionPercentage) as sum_commissionPercentage from bullhorn1.BH_Commission group by placementID )
--select * from commission where sum_commissionPercentage = 1
--select * from commission where placementID in (199725)


--CALCULATE_SUM_of_USERID/PLACEMENT
, commissionPercentage as ( select cp.placementID, UC.userID, sum(cp.commissionPercentage) as commissionPercentage from bullhorn1.BH_Commission cp left join bullhorn1.BH_UserContact UC on UC.userID = cp.userID group by cp.placementID, UC.userID ) -- CALCULATE SUM USERID/PLACEMENT
--select placementID from commissionPercentage group by placementid having count(*) > 1
--select * from commissionPercentage where placementID in (199725)


, -- with
  commissionPercentage_verify as (
       select commission.placementID as 'commission_placementID', commission.sum_commissionPercentage as 'sum_commissionPercentage'
              , t.placementID, t.userID, t.commissionPercentage
       from commission
       left join (select cp.placementID, cp.userID, cp.commissionPercentage, row_number() over(partition by cp.placementID, cp.userID /*, cp.commissionPercentage*/ order by cp.placementID asc) as rn from bullhorn1.BH_Commission cp) t on t.placementID = commission.placementID
       --where commission.commissionPercentage = 1 -- split=100%
       --where commission.commissionPercentage &lt;&gt; 1 -- split&lt;&gt;100%
       --where (t.commissionPercentage = 0.5 and t.rn = 2) --same user &amp; same split
       --where (t.commissionPercentage &lt;&gt; 0.5 and t.rn &lt;&gt; 2)
       )
--select * from commissionPercentage_verify where placementID in (199725)
--select placementID from commissionPercentage_verify group by placementid having count(*) > 1




select --distinct
         PL.jobPostingID as 'application-positionExternalId'
       , CAI.candidateID as 'application-candidateExternalId', CAI.CandidateUserID         
       , pl.placementID, row_number() over(partition by pl.placementID order by pl.placementID asc) as '#rn'
--       , JPI.CompanyID, JPI.CompanyName, JPI.company_status, JPI.ContactID, JPI.ContactName, JPI.ContactEmail, JPI.contact_status, JPI.JobID, JPI.JobTitle, JPI.job_status, CAI.UserID, CAI.CandidateName as 'Candidate Name', CAI.candidate_status --, JR.userID, JPI.ClientUserID,
       , pl.salary as '#salary'
--       , pl.fee*100 as 'percentage_of_annual_salary'
--       , pl.salary*pl.fee as 'projected_profit'
                      , pc2.email as 'recipient_VC_user_account_email', cp.userid as '#userid', pc2.name as '#recipient_name' --, pc.role --, pc.userid as 'recipient_userid'
                      , cp.commissionPercentage*100 as 'VC_offer_revenue_split_shared' --% Split
                      , cp.commissionPercentage*(pl.salary*pl.fee) as 'VC_offer_revenue_split_amount' --Fee Split
                      , commission.sum_commissionPercentage
                      --, pc.grossMarginPercentage as '% of Gross Margin'
--select count(*) --
--select JPI.*
--select PL.*
--select distinct pc2.email -- select distinct pl.employmentType
from bullhorn1.BH_Placement PL
left join CAI on CAI.CandidateUserID = PL.userID
left join JPInfo JPI on JPI.JobID = PL.jobPostingID
left join commissionPercentage cp on cp.placementID = pl.placementID
left join commission on commission.placementID = pl.placementID
left join ( select distinct userid, name, email from bullhorn1.BH_UserContact UC) pc2 on pc2.userid = cp.userid
--left join (select * from commissionPercentage_verify where rn > 1) cpv on cpv.placementID = pl.placementID --** TURN ON FOR SAME SAME USER WITH TOTAL SPLIT = 100%
where pc2.userid is not null and JPI.JobID is not null and CAI.CandidateUserID is not null
--and pl.placementID in (199725) --,198406)
--and PL.userID in (13325)
--and cai.CandidateUserID in (41914,73149,20656)
--and JPI.JobID in (549)

--and pl.employmentType in ('Permanent','Retained')
--and pl.employmentType in ('Contract','Fixed Contract','Part-time','Fixed term Contract','Temp','Temp to Perm', 'Temporary')
--and cpv.placementID is not null --** TURN ON FOR SAME SAME USER WITH TOTAL SPLIT = 100%

--and cp.commissionPercentage = 1
--and pl.salary = 0
--and commission.sum_commissionPercentage = 1
order by pl.placementID asc


</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6320</xloc>
      <yloc>720</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>additional_form_values InsertUpdate 2 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>additional_form_values</table>
      <key>
        <name>additional_type</name>
        <field>additional_type</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_additional_id</name>
        <field>additional_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>form_id</name>
        <field>form_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>field_id</name>
        <field>field_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>additional_type</name>
        <rename>additional_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>additional_id</name>
        <rename>final_additional_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>form_id</name>
        <rename>form_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>field_id</name>
        <rename>field_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>field_value</name>
        <rename>field_value</rename>
        <update>Y</update>
      </value>
      <value>
        <name>constraint_id</name>
        <rename>constraint_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4576</xloc>
      <yloc>1536</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>additional_form_values InsertUpdate 2 2 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>additional_form_values</table>
      <key>
        <name>additional_type</name>
        <field>additional_type</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_additional_id</name>
        <field>additional_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>form_id</name>
        <field>form_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>field_id</name>
        <field>field_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>additional_type</name>
        <rename>additional_type</rename>
        <update>N</update>
      </value>
      <value>
        <name>additional_id</name>
        <rename>final_additional_id</rename>
        <update>N</update>
      </value>
      <value>
        <name>form_id</name>
        <rename>form_id</rename>
        <update>N</update>
      </value>
      <value>
        <name>field_id</name>
        <rename>field_id</rename>
        <update>N</update>
      </value>
      <value>
        <name>field_value</name>
        <rename>field_value</rename>
        <update>Y</update>
      </value>
      <value>
        <name>constraint_id</name>
        <rename>constraint_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4576</xloc>
      <yloc>1600</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>additional_form_values InsertUpdate 2 2 2 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>additional_form_values</table>
      <key>
        <name>additional_type</name>
        <field>additional_type</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_additional_id</name>
        <field>additional_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>form_id</name>
        <field>form_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>field_id</name>
        <field>field_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>field_value</name>
        <field>field_value</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>additional_type</name>
        <rename>additional_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>additional_id</name>
        <rename>final_additional_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>form_id</name>
        <rename>form_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>field_id</name>
        <rename>field_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>field_value</name>
        <rename>field_value</rename>
        <update>Y</update>
      </value>
      <value>
        <name>constraint_id</name>
        <rename>constraint_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4576</xloc>
      <yloc>1264</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>additional_form_values InsertUpdate 2 2 2 2 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>additional_form_values</table>
      <key>
        <name>additional_type</name>
        <field>additional_type</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_additional_id</name>
        <field>additional_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>form_id</name>
        <field>form_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>field_id</name>
        <field>field_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>field_value</name>
        <field>field_value</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>additional_type</name>
        <rename>additional_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>additional_id</name>
        <rename>final_additional_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>form_id</name>
        <rename>form_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>field_id</name>
        <rename>field_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>field_value</name>
        <rename>field_value</rename>
        <update>Y</update>
      </value>
      <value>
        <name>constraint_id</name>
        <rename>constraint_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4576</xloc>
      <yloc>1328</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>additional_form_values InsertUpdate 2 2 2 2 2 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>additional_form_values</table>
      <key>
        <name>additional_type</name>
        <field>additional_type</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_additional_id</name>
        <field>additional_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>form_id</name>
        <field>form_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>field_id</name>
        <field>field_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>field_value</name>
        <field>field_value</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>additional_type</name>
        <rename>additional_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>additional_id</name>
        <rename>final_additional_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>form_id</name>
        <rename>form_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>field_id</name>
        <rename>field_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>field_value</name>
        <rename>field_value</rename>
        <update>Y</update>
      </value>
      <value>
        <name>constraint_id</name>
        <rename>constraint_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4576</xloc>
      <yloc>1456</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>additional_form_values InsertUpdate 2 2 2 2 3</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>additional_form_values</table>
      <key>
        <name>additional_type</name>
        <field>additional_type</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_additional_id</name>
        <field>additional_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>form_id</name>
        <field>form_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>field_id</name>
        <field>field_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>field_value</name>
        <field>field_value</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>additional_type</name>
        <rename>additional_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>additional_id</name>
        <rename>final_additional_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>form_id</name>
        <rename>form_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>field_id</name>
        <rename>field_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>field_value</name>
        <rename>field_value</rename>
        <update>Y</update>
      </value>
      <value>
        <name>constraint_id</name>
        <rename>constraint_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4576</xloc>
      <yloc>1392</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>additional_form_values InsertUpdate 2 2 3</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>additional_form_values</table>
      <key>
        <name>additional_type</name>
        <field>additional_type</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_additional_id</name>
        <field>additional_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>form_id</name>
        <field>form_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>field_id</name>
        <field>field_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>field_value</name>
        <field>field_value</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>additional_type</name>
        <rename>additional_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>additional_id</name>
        <rename>final_additional_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>form_id</name>
        <rename>form_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>field_id</name>
        <rename>field_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>field_value</name>
        <rename>field_value</rename>
        <update>Y</update>
      </value>
      <value>
        <name>constraint_id</name>
        <rename>constraint_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4576</xloc>
      <yloc>1200</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>company_lookup</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>224</xloc>
      <yloc>128</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 10</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>CONTACT DEFAULT IMPORT</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2112</xloc>
      <yloc>80</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 11</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>company_lookup</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>company industry 2</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>INSERT NEW INDUSTRY</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>352</xloc>
      <yloc>656</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 12</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>COMPANY INDUSTRY 3</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>352</xloc>
      <yloc>736</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 13</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>final_contact_id</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2112</xloc>
      <yloc>272</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 14</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>final_contact_id</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2112</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 15</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>final_contact_id</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>CONTACT PERSONAL LOCATION</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2240</xloc>
      <yloc>592</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 15 2</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>final_contact_id  - Lead</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2240</xloc>
      <yloc>1568</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 16</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>CONTACT INSERT COMPANY LOCATION</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>CONTACT PERSONAL LOCATION</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2240</xloc>
      <yloc>656</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 16 2</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>INSERT COMPANY LOCATION 2</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2240</xloc>
      <yloc>1632</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 17</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>final_contact_id</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2240</xloc>
      <yloc>720</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 18</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>final_contact_id</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2112</xloc>
      <yloc>848</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 18 2</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>final_contact_id  - Lead</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2112</xloc>
      <yloc>1440</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 19</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>Job Application 2</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6944</xloc>
      <yloc>144</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 19 2</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>final_contact_id</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>user_account_import 2</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>CONTACT PERSONAL LOCATION</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2112</xloc>
      <yloc>912</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 2</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>COMPANY PARENT_ID</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>company_lookup</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>224</xloc>
      <yloc>192</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 20</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>position_candidate</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>7568</xloc>
      <yloc>512</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 21</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>Job Application 2</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>Filter rows 11</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>7424</xloc>
      <yloc>144</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 22</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>final_contact_id</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>VERTICAL 3</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1568</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 23</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>final_contact_id</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>functional_expertise</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>CONTACT INDUSTRY</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1568</xloc>
      <yloc>464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 24</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>final_contact_id</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>functional_expertise</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>sub_functional_expertise</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>CONTACT FUNCTIONAL EXPERTISE</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1344</xloc>
      <yloc>1232</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 24 2</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>final_contact_id</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>functional_expertise</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>sub_functional_expertise</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>CONTACT FUNCTIONAL EXPERTISE</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1568</xloc>
      <yloc>592</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 25</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name/>
        <CopyNr/>
      </step>
      <step>
        <name>final_contact_id</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1568</xloc>
      <yloc>848</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 26</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>final_contact_id</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>DISTRIBUTION LIST</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>CONTACT WORK LOCATION</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>CONTACT INDUSTRY</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>CONTACT FUNCTIONAL EXPERTISE</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>CONTACT SUBFUNTIONAL EXPERTISE</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1568</xloc>
      <yloc>656</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 27</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>Contact Comment - br</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>Contact Comment</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1568</xloc>
      <yloc>720</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 28</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>Job</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3360</xloc>
      <yloc>208</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 29</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>final_contact_id</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>candidate_source 2</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>CONTACT REPORT TO</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2240</xloc>
      <yloc>464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 3</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>COMPANY IMPORT</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>352</xloc>
      <yloc>64</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 30</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>CONTACT IMPORT</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2112</xloc>
      <yloc>160</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 31</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>JOB IMPORT</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3712</xloc>
      <yloc>112</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 32</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>CANDIDATE IMPORT</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5248</xloc>
      <yloc>96</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 33</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>Job</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3360</xloc>
      <yloc>272</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 34</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>Job</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>position_agency_consultant</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3360</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 35</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>Job</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3360</xloc>
      <yloc>400</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 36</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>lookup_final_candidate</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>CANDIDATE LOCATION</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5248</xloc>
      <yloc>768</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 37</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>Job</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>compensation - permanent</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3360</xloc>
      <yloc>464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 38</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>Job</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3504</xloc>
      <yloc>528</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 39</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>company_location 2</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>Job</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>position_sub_type</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3504</xloc>
      <yloc>592</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 4</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>company_lookup</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>224</xloc>
      <yloc>272</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 40</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>Job</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>vertical 2</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>JOB LOCATION 3</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3504</xloc>
      <yloc>720</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 41</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>Job</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>insert job fe</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>JOB INDUSTRY 2</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3504</xloc>
      <yloc>848</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 42</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>Job</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>position_description_functional_expertise</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>candidate_sub_functional_expertise 2</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3504</xloc>
      <yloc>1040</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 43</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>lookup_final_candidate</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5392</xloc>
      <yloc>416</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 44</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>lookup_final_candidate</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>CANDIDATE NOTE</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5392</xloc>
      <yloc>480</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 45</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>lookup_final_candidate</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5248</xloc>
      <yloc>192</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 46</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>lookup_final_candidate</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>CANDIDATE SOURCE 2</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5248</xloc>
      <yloc>688</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 47</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>lookup_final_candidate</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>CANDIDATE DESIRED LOCATION</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5248</xloc>
      <yloc>832</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 48</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>lookup_final_candidate</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>CANDIDATE PERSONAL LOCATION</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5248</xloc>
      <yloc>912</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 49</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>lookup_final_candidate</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5248</xloc>
      <yloc>256</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 49 2 2</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>Job Application 2</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>SUB_STATUS</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>[POSITION CANDIDATE]</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6944</xloc>
      <yloc>208</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 5</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>COMPANY LOCATION</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>company_lookup</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>224</xloc>
      <yloc>352</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 50</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>lookup_final_candidate</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>Filter rows 5</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5920</xloc>
      <yloc>256</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 51</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>user_account_import 3</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5248</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 52</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>document_types</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>464</xloc>
      <yloc>832</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 52 2</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>Company document + type</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>352</xloc>
      <yloc>896</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 53</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>lookup_final_candidate</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5392</xloc>
      <yloc>976</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 53 2</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>final_contact_id</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2240</xloc>
      <yloc>976</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 53 3</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>lookup_final_candidate</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>CANDIDATE COMPANY ADDRESS</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5392</xloc>
      <yloc>1040</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 54</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>lookup_final_candidate</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>CANDIDATE COMPANY ADDRESS</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4752</xloc>
      <yloc>208</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 55</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>lookup_final_candidate</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>CANDIDATE SOURCE</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>WORK HISTORY + REFERENCE + EDUCATION</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5392</xloc>
      <yloc>624</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 56</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>lookup_final_candidate</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>CANDIDATE GROUP</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>candidate_group_candidate</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4752</xloc>
      <yloc>400</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 57</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>lookup_final_candidate</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>CANDIDATE GROUP CANDIDATE</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>VERTICAL</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4752</xloc>
      <yloc>528</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 58</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>lookup_final_candidate</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>FE IMPORT</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>INDUSTRY 2</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4752</xloc>
      <yloc>656</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 59</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>lookup_final_candidate</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>SFE IMPORT</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>CANDIDATE FUNCTIONAL EXPERTISE</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4752</xloc>
      <yloc>1088</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 59 2</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>SFE IMPORT 2</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>position_description_functional_expertise</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3504</xloc>
      <yloc>976</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 59 3</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>lookup_final_candidate</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>sub_functional_expertise 2</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>CANDIDATE FUNCTIONAL EXPERTISE</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4752</xloc>
      <yloc>784</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 6</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>company_lookup</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>224</xloc>
      <yloc>432</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 60</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>lookup_final_candidate</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>candidate_sub_functional_expertise 3</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4752</xloc>
      <yloc>848</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 61</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>lookup_final_candidate</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>CANDIDATE ACTIVITY</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4752</xloc>
      <yloc>912</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 62</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>lookup_final_candidate</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>CANDIDATE GROUP 2</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4752</xloc>
      <yloc>272</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 63</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>[POSITION CANDIDATE]</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>[PLACEMENT DETAIL]</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6416</xloc>
      <yloc>576</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 64</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>[OFFER]</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6832</xloc>
      <yloc>512</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 65</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>[OFFER] PERMANENT</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6944</xloc>
      <yloc>512</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 66</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>[OFFER]</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>[OFFER] PERMANENT</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>[OFFER] CONTRACT</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>POSITION CANDIDATE</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>7056</xloc>
      <yloc>512</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 67</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>[OFFER PERSIONAL INFO]</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>7664</xloc>
      <yloc>512</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 68</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>[INVOICE]</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>[PROFIT SPLIT]</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6416</xloc>
      <yloc>720</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 69</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>COMPANY DOCUMENT 2</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>Contact document + type</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>352</xloc>
      <yloc>992</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 7</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>user_account_import</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>company_lookup</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>224</xloc>
      <yloc>512</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 70</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>CONTACT DOCUMENT 3</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>Job document + type</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>352</xloc>
      <yloc>1072</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 71</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>JOB DOCUMENT</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>Candidate document + type</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>352</xloc>
      <yloc>1168</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 72</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>final_contact_id</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>CONTACT SOURCE</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2112</xloc>
      <yloc>528</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 73</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>[OFFER PAY CHARGE]</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>7264</xloc>
      <yloc>512</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 74</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>candidate_source - Lead</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2240</xloc>
      <yloc>1376</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 75</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>POSITION CANDIDATE</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6704</xloc>
      <yloc>512</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 76</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>[CONPENSATION PERIOD]</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>7168</xloc>
      <yloc>512</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 77</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>final_contact_id  - Lead</name>
        <CopyNr>0</CopyNr>
      </step>
      <step>
        <name>user_account_import 2 3</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2112</xloc>
      <yloc>1504</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 78</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>final_contact_id</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2112</xloc>
      <yloc>1040</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 79</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>company_department</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2112</xloc>
      <yloc>1104</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 8</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>company_lookup</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>224</xloc>
      <yloc>576</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>block 9</name>
    <type>BlockUntilStepsFinish</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <steps>
      <step>
        <name>CONTACT GROUP</name>
        <CopyNr>0</CopyNr>
      </step>
    </steps>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2240</xloc>
      <yloc>784</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>brand  - BH_DepartmentList 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
select
	trim(customtext9) as name
	, -10 as owner_id
	, current_timestamp as insert_timestamp
	, 'BRAND' as group_type
from bullhorn1.Candidate where convert(nvarchar(max),customText9) is not null and convert(nvarchar(max),customText9) &lt;&gt; '' group by customText9


/*
select
	name
	, -10 as owner_id
	, current_timestamp as insert_timestamp
	, 'BRAND' as group_type
from bullhorn1.BH_DepartmentList
*/</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5680</xloc>
      <yloc>1424</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>brand  - BH_DepartmentList 2 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
select
	trim(customtext9) as name
	, -10 as owner_id
	, current_timestamp as insert_timestamp
	, 'BRAND' as group_type
from bullhorn1.Candidate where convert(nvarchar(max),customText9) is not null and convert(nvarchar(max),customText9) &lt;&gt; '' group by customText9


/*
select
	name
	, -10 as owner_id
	, current_timestamp as insert_timestamp
	, 'BRAND' as group_type
from bullhorn1.BH_DepartmentList
*/</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5680</xloc>
      <yloc>1200</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>brand - BH_UserDepartmentGrouping</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select distinct CA.recruiterUserID, ca.customtext9 as name, UC.email -- UC.name
from bullhorn1.Candidate CA
left join bullhorn1.BH_UserContact UC on UC.userID = CA.recruiterUserID
where convert(nvarchar(max),ca.customText9) is not null and convert(nvarchar(max),ca.customText9) &lt;&gt; '' --and CA.isdeleted &lt;&gt; 1</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5680</xloc>
      <yloc>1488</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>brand - BH_UserDepartmentGrouping 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select 
	  udg.userID
	, UC.email
	, UC.email2
	, UC.email3
	, dep.name
	, udg.isprimarydepartment
from bullhorn1.BH_UserDepartmentGrouping udg
left join bullhorn1.BH_UserContact UC ON UC.userID = udg.userID
left join [bullhorn1].[BH_DepartmentList] dep on dep.departmentid = udg.departmentid</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5680</xloc>
      <yloc>1264</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>brand - candidate</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
select
         CA.candidateID as 'candidate-externalId', CA.userID as 'BH_candidateID'
	   , coalesce(nullif(replace(CA.FirstName,'?',''), ''), 'No Firstname') as 'candidate-firstName'
       , coalesce(nullif(replace(CA.LastName,'?',''), ''), concat('Lastname-',CA.userID)) as 'candidate-lastName'
       , ca.recruiterUserID

       , UC1.firstname as 'recruiter_firstname'
       , UC1.lastname as 'recruiter_lastname'

       , ca.customtext9 as 'user_department_name'

from bullhorn1.Candidate CA
left join bullhorn1.BH_UserContact UC1 ON UC1.userID = ca.recruiterUserID
where convert(nvarchar(max),ca.customText9) is not null and convert(nvarchar(max),ca.customText9) &lt;&gt; '' --and CA.isdeleted &lt;&gt; 1
--and C.userID in (16522)</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5680</xloc>
      <yloc>1568</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>brand - candidate 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
select
         C.candidateID as 'candidate-externalId', C.userID as 'BH_candidateID'
	   , coalesce(nullif(replace(C.FirstName,'?',''), ''), 'No Firstname') as 'candidate-firstName'
       , coalesce(nullif(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID)) as 'candidate-lastName'
       , c.recruiterUserID
       , UC1.firstname as 'recruiter_firstname'
       , UC1.lastname as 'recruiter_lastname'
       , dep.isPrimaryDepartment
       , dep.name as 'user_department_name'
-- select * 
from bullhorn1.Candidate C
left join ( select udg.userID, udg.departmentID, udg.isPrimaryDepartment, dl.name from bullhorn1.BH_UserDepartmentGrouping udg left join bullhorn1.BH_DepartmentList dl on dl.departmentid = udg.departmentid ) dep on dep.userID = c.recruiterUserID
left join bullhorn1.BH_UserContact UC1 ON UC1.userID = c.recruiterUserID
where dep.userID is not null
--and C.userID in (16522)</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5680</xloc>
      <yloc>1344</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>cand lookup 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>actual_candidate_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5104</xloc>
      <yloc>1376</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>cand lookup 2 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>actual_candidate_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5104</xloc>
      <yloc>1456</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>additional_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_additional_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4416</xloc>
      <yloc>1536</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate 10</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>vc_candidate_id</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5536</xloc>
      <yloc>624</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate 11</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>ID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_candidate_id</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4624</xloc>
      <yloc>400</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate 12</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidateID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>actual_candidate_id</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4624</xloc>
      <yloc>864</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate 13</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>actual_candidateid</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4624</xloc>
      <yloc>944</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate 14</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>application-candidateExternalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_candidate_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6832</xloc>
      <yloc>64</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate 15</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>actual_candidate_id</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5536</xloc>
      <yloc>1040</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>additional_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_additional_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4416</xloc>
      <yloc>1600</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>additional_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_additional_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4416</xloc>
      <yloc>1264</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate 2 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>additional_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_additional_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4416</xloc>
      <yloc>1328</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate 2 2 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>additional_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_additional_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4416</xloc>
      <yloc>1456</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate 2 2 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>additional_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_additional_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4416</xloc>
      <yloc>1392</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>application-candidateExternalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCCandidateID</rename>
        <default/>
        <type>BigNumber</type>
      </value>
      <value>
        <name>first_name</name>
        <rename>c.first_name</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>last_name</name>
        <rename>c.last_name</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>male</name>
        <rename>c.male</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>email</name>
        <rename>c.email</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>date_of_birth</name>
        <rename>c.date_of_birth</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>notice_period</name>
        <rename>c.notice_period</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>current_location_id</name>
        <rename>c.current_location_id</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>payslip_email</name>
        <rename>c.payslip_email</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6496</xloc>
      <yloc>608</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate 3 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>application-candidateExternalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCCandidateID</rename>
        <default/>
        <type>BigNumber</type>
      </value>
      <value>
        <name>first_name</name>
        <rename>c.first_name</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>last_name</name>
        <rename>c.last_name</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>male</name>
        <rename>c.male</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>email</name>
        <rename>c.email</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>date_of_birth</name>
        <rename>c.date_of_birth</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>notice_period</name>
        <rename>c.notice_period</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>current_location_id</name>
        <rename>c.current_location_id</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>payslip_email</name>
        <rename>c.payslip_email</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6512</xloc>
      <yloc>1584</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate 3 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>application-candidateExternalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_candidate_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6720</xloc>
      <yloc>1408</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate 3 2 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>application-candidateExternalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_candidate_id</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6704</xloc>
      <yloc>1232</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate 3 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_candidate_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4624</xloc>
      <yloc>656</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate 3 3 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate-externalid-sfe</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_candidate_id</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4624</xloc>
      <yloc>1088</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate 3 3 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_candidate_id</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4624</xloc>
      <yloc>784</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate 3 4</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>application-candidateExternalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCCandidateID</rename>
        <default/>
        <type>Integer</type>
      </value>
      <value>
        <name>first_name</name>
        <rename>c.first_name</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>last_name</name>
        <rename>c.last_name</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>male</name>
        <rename>c.male</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>email</name>
        <rename>c.email</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>date_of_birth</name>
        <rename>c.date_of_birth</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>notice_period</name>
        <rename>c.notice_period</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>current_location_id</name>
        <rename>c.current_location_id</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>payslip_email</name>
        <rename>c.payslip_email</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6496</xloc>
      <yloc>720</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate 4</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select 
	candidateid
	, customDate1  as last_activtiy_date
from bullhorn1.Candidate 
where convert(nvarchar(max),customDate1) is not null and convert(nvarchar(max),customDate1) &lt;&gt; ''</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4928</xloc>
      <yloc>1216</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate 5</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>vc_candidate_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5840</xloc>
      <yloc>1568</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate 5 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>candidate_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5840</xloc>
      <yloc>1344</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate 6</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidateid</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_candidate_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5040</xloc>
      <yloc>1216</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate 7</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>CandidateExtID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>candidateid</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>464</xloc>
      <yloc>1200</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate 8</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate-externalid-eh-es</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>actual_candidate_id</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5536</xloc>
      <yloc>480</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate 8 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>additional_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_additional_id</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4416</xloc>
      <yloc>1200</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate 9</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidateid</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>actual_candidate_id</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5536</xloc>
      <yloc>416</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate FE-SFE 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
/*
select * from bullhorn1.BH_CategoryList; select enabled, count(*) as amount from bullhorn1.BH_category group by enabled
select * from bullhorn1.BH_category; select enabled, count(*) as amount from bullhorn1.BH_category group by enabled
select * from bullhorn1.BH_CategorySkill
select * from bullhorn1.BH_CategorySkillAssociation;
select * from bullhorn1.BH_LineCategory;
select * from bullhorn1.BH_PrivateLabelCategory;
select * from bullhorn1.BH_PrivateLabelCategoryList;
select * from bullhorn1.BH_ReportingCategory;
select * from bullhorn1.BH_SkillList; select enabled, count(*) as amount from bullhorn1.BH_SkillList group by enabled
select * from bullhorn1.BH_Skill; select enabled, count(*) as amount from bullhorn1.BH_Skill group by enabled
select * from bullhorn1.BH_TopicCategory;
select * from bullhorn1.BH_UserCategory;
select * from bullhorn1.BH_UserSkill;
select * from bullhorn1.View_AllAssociatedPrivateLabelCategory;
select * from bullhorn1.View_CardCategory;
select * from bullhorn1.View_Category; select enabled, count(*) as amount from bullhorn1.View_Category group by enabled
select * from bullhorn1.View_SpecialtyList; select enabled, count(*) as amount from bullhorn1.View_SpecialtyList group by enabled
select * from bullhorn1.View_UserCategory;
select * from bullhorn1.View_UserDelimitedBusinessSectors;
select * from bullhorn1.View_UserDelimitedCategories;
select * from bullhorn1.View_UserDelimitedCertifications;
select * from bullhorn1.View_UserDelimitedDepartments;
select * from bullhorn1.View_UserDelimitedSkills
select * from bullhorn1.View_UserDelimitedSpecialties
*/

---CATEGORY >>> FUNCTIONAL EXPERTISE
---SPECIALTY >>> SUB FUNCTIONAL EXPERTISE



with
  View_UserDelimitedBusinessSectors (userid, BusinessSectors) as (
       SELECT m.userid, trim( replace(replace(replace(BusinessSectors.value,'  ',' '),' )',')'),'( ','(') ) as BusinessSectors 
       FROM bullhorn1.View_UserDelimitedBusinessSectors m CROSS APPLY STRING_SPLIT(m.BusinessSectors,';') AS BusinessSectors 
       where (BusinessSectors is not null and BusinessSectors &lt;&gt; '') )
--select distinct BusinessSectors, count(*) as amount, current_timestamp as 'insert_timestamp',lower(BusinessSectors) as 'tmp' from View_UserDelimitedBusinessSectors where BusinessSectors is not null and BusinessSectors &lt;&gt; '' group by BusinessSectors
--select count(*) from View_UserDelimitedBusinessSectors
--select distinct bs.BusinessSectors as fe, count(*) from bullhorn1.Candidate C left join View_UserDelimitedBusinessSectors bs on bs.userid = c.userID where (C.isdeleted &lt;&gt; 1 and C.status &lt;&gt; 'Archive') and bs.userid is not null group by bs.BusinessSectors

/*, View_UserDelimitedBusinessSectors (userid, Specialties) as (
       SELECT m.userid, trim( replace(replace(replace(Specialties.value,'  ',' '),' )',')'),'( ','(') ) as Specialties 
       FROM bullhorn1.View_UserDelimitedSpecialties m CROSS APPLY STRING_SPLIT(m.Specialties,';') AS Specialties 
       where (Specialties is not null and Specialties &lt;&gt; '') )
select Specialties, count(*) from View_UserDelimitedBusinessSectors group by Specialties; */

/* businessSectorIDList -- DO NOT USE
with 
  businessSectorIDList0(candidateID, businessSectorID) as (SELECT candidateID, businessSectorIDList.value as businessSectorIDList from bullhorn1.Candidate m CROSS APPLY STRING_SPLIT(convert(varchar(max),m.businessSectorIDList),',') AS businessSectorIDList)
--select businessSectorID, count(*) from businessSectorIDList0 group by businessSectorID
, businessSectorIDList(candidateID, BusinessSector) as (SELECT candidateID, STRING_AGG( ltrim(rtrim(BSL.name)),', ' ) WITHIN GROUP (ORDER BY BSL.name) name from businessSectorIDList0 left join bullhorn1.BH_BusinessSectorList BSL ON INDUSTRY0.businessSectorID = BSL.businessSectorID WHERE INDUSTRY0.businessSectorID &lt;&gt; '' GROUP BY candidateID )
--select * from businessSectorIDList
--select distinct ltrim(rtrim(BusinessSector)) from businessSectorIDList
--select distinct ltrim(rtrim(name)) from bullhorn1.BH_BusinessSectorList
*/



, -- with 
View_UserDelimitedCategories (userid, Categories) as (
       SELECT m.userid, trim( replace(replace(replace(Categories.value,'  ',' '),' )',')'),'( ','(') ) as Categories 
       FROM bullhorn1.View_UserDelimitedCategories m CROSS APPLY STRING_SPLIT(m.Categories,';') AS Categories 
       where (Categories is not null and Categories &lt;&gt; '') )
--select distinct Categories, count(*), current_timestamp as 'insert_timestamp',lower(Categories) as 'tmp' from View_UserDelimitedCategories where Categories is not null and Categories &lt;&gt; '' group by Categories
--select count(*) from View_UserDelimitedCategories
--select distinct Categories from BULLHORN1.View_UserDelimitedCategories 




, -- with
View_UserCategory(candidateID, userid, categoryIDList, categoryID, name, enabled) as (
       select C.candidateID, C.userid, C.categoryIDList, C.categoryID, ltrim(rtrim(UC.name)), UC.enabled
       FROM bullhorn1.Candidate C
       left join ( select UC.userID, UC.categoryID, substring(name,charindex(':',name)+1,200) as name, enabled from BULLHORN1.View_UserCategory UC left join bullhorn1.BH_CategoryList CL ON UC.categoryid = CL.categoryID ) UC on UC.userid = C.userID
       where UC.name is not null and UC.name &lt;&gt; '' and C.isdeleted &lt;&gt; 1 --and C.status &lt;&gt; 'Archive' --and C.userid in (165180)
       )
--select distinct trim(Name), count(*), current_timestamp as 'insert_timestamp',lower(Name) as 'tmp' from View_UserCategory where Name is not null and Name &lt;&gt; '' group by Name
--select distinct ltrim(rtrim(Name)), enabled from View_UserCategory;
--select *, current_timestamp as insert_timestamp from View_UserCategory where userid in (165180,165184 ,165199, 161585)

/*
--categoryIDList -- DO NOT USE
, categoryIDList0(userid, categoryid) as (SELECT userid, categoryIDList.value as categoryIDList from bullhorn1.Candidate m CROSS APPLY STRING_SPLIT(convert(varchar(max),m.categoryIDList),',') AS categoryIDList)
, categoryIDList(Userid, Name) as (SELECT Userid, CL.occupation from categoryIDList0 left join bullhorn1.BH_CategoryList CL ON CateSplit.categoryid = CL.categoryID )
--select concat('insert into functional_expertise(id,name) values (nextval(''functional_experties_id_seq''),''',a.name,''');') from (select distinct Name from CName) a;
--select distinct ltrim(rtrim(Name)), count(*) from categoryIDList group by Name;
*/



, -- with
  View_UserSpecialty(candidateID, userid, firstname, lastname, SPECIALTY, enabled) as (
       select distinct C.candidateID, C.userid, C.firstname, C.lastname, /*C.specialtyIDList, UC.SpecialtyID,*/ ltrim(rtrim(UC.name)) as name, UC.enabled
       FROM bullhorn1.Candidate C
       left join ( select US.userID, US.SpecialtyID, VS.name as name, enabled from BULLHORN1.View_UserSpecialty US left join bullhorn1.View_Specialty VS ON US.SpecialtyID = VS.specialtyID ) UC on UC.userid = C.userID
       where (C.isdeleted &lt;&gt; 1 )  and UC.userid is not null --and C.status &lt;&gt; 'Archive'
       --where UC.name is not null and UC.name &lt;&gt; '' and C.isdeleted &lt;&gt; 1 and C.status &lt;&gt; 'Archive' 
       --where C.userid in (63774,61671 ,65415, 65303)
       )
--select SPECIALTY, count(*) from View_UserSpecialty group by SPECIALTY;
--select distinct trim(SPECIALTY), trim(SPECIALTY) as 'tmp' from View_UserSpecialty where SPECIALTY is not null and SPECIALTY &lt;&gt; '' and name not in ('.SKILLS_AC')
--select distinct trim(SPECIALTY), enabled from View_UserSpecialty;      
--select candidateID from (select * from View_UserSpecialty where name = 'design') t group by candidateID having count(*) > 1
--select * from bullhorn1.View_UserSpecialty where name = 'design' and candidateid not in (10049,10198)
--select * from bullhorn1.View_UserSpecialty where SPECIALTY is not null and userid in (8771)
--select * from bullhorn1.View_Specialty; select enabled, count(*) as amount from bullhorn1.View_Specialty group by enabled

/*
-- specialtyIDList -- DO NOT USE
, SpecSplit(userid, specialtyid) as (SELECT userid, specialtyIDList.value as specialtyIDList from bullhorn1.Candidate m CROSS APPLY STRING_SPLIT(convert(varchar(max),m.specialtyIDList),',') AS specialtyIDList)
, SpeName(Userid, Name) as (SELECT Userid, VS.name from SpecSplit left join bullhorn1.View_Specialty VS ON SpecSplit.SpecialtyID = VS.specialtyID WHERE SpecSplit.specialtyid &lt;&gt; '')
--select distinct ltrim(rtrim(name)) from SpeName
--select count(distinct Name) from SpeName
*/





---*** SKILL ***---
, -- with 
SKILL (candidateID, userid, skillID, skill, enabled) as (
       SELECT [BH_Candidate].candidateID, [BH_Candidate].userID, [BH_UserSkill].skillID, [BH_SkillList].name, [BH_SkillList].enabled
       FROM [bullhorn1].[BH_Candidate]
       LEFT JOIN [bullhorn1].BH_User on [BH_User].userID = [BH_Candidate].userID
       LEFT JOIN [bullhorn1].BH_UserSkill on [BH_Candidate].userID = [BH_UserSkill].userID
       LEFT JOIN [bullhorn1].BH_SkillList on [BH_UserSkill].skillID = [BH_SkillList].skillID
       WHERE [BH_SkillList].name is not null and [BH_SkillList].name &lt;&gt; '' and [BH_Candidate].isdeleted &lt;&gt; 1 --and [BH_Candidate].status &lt;&gt; 'Archive' 
       )
--select count(*) from SKILL     
--select distinct ltrim(rtrim(Skill)), enabled from SKILL;
--select distinct trim(replace(Skill,'"','')) as Skill, count(*) from SKILL group by skill
--SELECT candidateID, STRING_AGG( skill,', ' ) WITHIN GROUP (ORDER BY skill) name from SKILL /*where candidateID in (154) */group by candidateID
--select * from SKILL where candidateID in (6525,28881,30255,30254)

/*
--skillIDList -- DO NOT USE
, SkillName0(userid, skillID) as (SELECT userid, skillIDList.value as skillID from bullhorn1.Candidate m CROSS APPLY STRING_SPLIT(convert(varchar(max),m.skillIDList),',') AS skillIDList)
, SkillName(userId, SkillName) as (SELECT userId, SL.name from SkillName0 left join bullhorn1.BH_SkillList SL ON SkillName0.skillID = SL.skillID WHERE SkillName0.skillID &lt;&gt; '')
--select count(*) from SkillName
--select top 300 * from SkillName
--select count(distinct ltrim(SkillName)) as Skill from SkillName --where SkillName
--select distinct ltrim(rtrim(SkillName)) as Skill from SkillName --where SkillName
*/




---**** ADMISSION ***---
, AdmissionRows(userId, CombinedText) as (select UCOI.userID, concat(text1,' ',text2) as CombinedText from bullhorn1.BH_UserCustomObjectInstance UCOI inner join bullhorn1.BH_CustomObjectInstance COI On UCOI.instanceID = COI.instanceID)
, admission(Userid, Admission) as (SELECT Userid, STUFF((SELECT ' || ' + CombinedText from  AdmissionRows WHERE Userid = c.Userid and CombinedText is not NULL and CombinedText &lt;&gt; '' FOR XML PATH (''), TYPE).value('.', 'nvarchar(MAX)'), 1, 4, '')  AS URLList FROM  AdmissionRows as c GROUP BY c.Userid)
--select distinct Admission from admission
--select top 100 * from admission


---**** SOURCE ***---
, source (ID,source) as (
       SELECT candidateID, source.value as source 
       from bullhorn1.Candidate m CROSS APPLY STRING_SPLIT(m.source,',') AS source)
--select distinct(ltrim(source)) from source
--select distinct source from bullhorn1.Candidate CA 




-- CHECKING
-- select distinct vudc.Categories as fe, count(*) from bullhorn1.Candidate C left join View_UserDelimitedCategories vudc on vudc.userid = c.userID where (C.isdeleted &lt;&gt; 1 and C.status &lt;&gt; 'Archive') and vudc.userid is not null group by vudc.Categories

select --top 10
         C.candidateID as 'candidate-externalId', C.userID as '#userID'
       , coalesce(nullif(replace(C.FirstName,'?',''), ''), 'No Firstname') as 'candidate-firstName'
       , coalesce(nullif(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID)) as 'candidate-lastName'
       , View_UserDelimitedCategories.Categories as fe, lower(View_UserDelimitedCategories.Categories) as 'tmp'
--       , SKILL.skill as fe, lower(SKILL.skill) as 'tmp'
--       , View_UserDelimitedBusinessSectors.BusinessSectors as fe, lower(View_UserDelimitedBusinessSectors.BusinessSectors) as 'tmp'
--       , View_UserSpecialty.SPECIALTY as fe, lower(View_UserSpecialty.SPECIALTY) as 'tmp'
from bullhorn1.Candidate C 
left join View_UserDelimitedCategories on View_UserDelimitedCategories.userid = c.userID
--left join SKILL on SKILL.candidateID = C.candidateID
--left join View_UserDelimitedBusinessSectors on View_UserDelimitedBusinessSectors.userid = c.userID
--left join View_UserSpecialty on View_UserSpecialty.candidateID = c.candidateID
where C.isdeleted &lt;&gt; 1 -- and C.status &lt;&gt; 'Archive'
and View_UserDelimitedCategories.userid is not null
--and SKILL.candidateID is not null
--and View_UserDelimitedBusinessSectors.userid is not null
--and View_UserSpecialty.candidateID is not null
--and C.userID in (41985)  


/*
UNION
select C.candidateID as 'candidate-externalId', C.userID as '#userID'
       , trim(customText1), lower(customText1) as 'tmp'
from bullhorn1.Candidate C where customText1 is not null and customText1 &lt;&gt; '' group by customText1



, t1 as (
       select
              candidateID,
              3357 as fe,
              --distinct 
              case
                           when trim(Skill) = 'Anthony' then 'X'
                           when trim(Skill) = 'Asset' then 'Asset'
                           when trim(Skill) = 'Auto' then 'Motor'
                           when trim(Skill) = 'Aviation' then 'Aviation'

                           else '' end as sfe
       from SKILL
)
 select * from t1 where sfe &lt;&gt; 'X'
-- select concat('insert into sub_functional_expertise(functional_expertise_id,name) values (3357,''', sfe, ''');' ) from t1 where sfe &lt;&gt; 'X'
       
*/





</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4880</xloc>
      <yloc>656</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate id</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_candidate_id</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4624</xloc>
      <yloc>528</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate industry</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>

with
--View_UserDelimitedBusinessSectors
  View_UserDelimitedBusinessSectors (userid, BusinessSectors) as (
       SELECT m.userid, trim( replace(replace(replace(BusinessSectors.value,'  ',' '),' )',')'),'( ','(') ) as BusinessSectors 
       FROM bullhorn1.View_UserDelimitedBusinessSectors m CROSS APPLY STRING_SPLIT(m.BusinessSectors,';') AS BusinessSectors 
       where (BusinessSectors is not null and BusinessSectors &lt;&gt; '') )

select distinct BusinessSectors as ind , count(*), current_timestamp as 'insert_timestamp',lower(BusinessSectors) as 'tmp' 
from View_UserDelimitedBusinessSectors
where BusinessSectors is not null and BusinessSectors &lt;&gt; ''
--where BusinessSectors not in ('Accountancy','Consultancy','Financial Services','Insurance','Marketing','Retail','Telecommunications','Utilities')
group by BusinessSectors

--select count(*) from View_UserDelimitedBusinessSectors

/*


select distinct trim(customText1) as ind,  current_timestamp as 'insert_timestamp', lower(trim(customText1)) as 'tmp'
from bullhorn1.Candidate C 
where customText1 is not null and trim(customText1) &lt;&gt; '' --group by customText1

--and trim(customText1) not in ('Investment Banking','Insurance','Insurance')
--and trim(customText1) not in ('Other','Insurance','Consultancy')

*/</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4880</xloc>
      <yloc>464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate industry 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
/*
select * from bullhorn1.BH_CategoryList; select enabled, count(*) as amount from bullhorn1.BH_category group by enabled
select * from bullhorn1.BH_category; select enabled, count(*) as amount from bullhorn1.BH_category group by enabled
select * from bullhorn1.BH_CategorySkill
select * from bullhorn1.BH_CategorySkillAssociation;
select * from bullhorn1.BH_LineCategory;
select * from bullhorn1.BH_PrivateLabelCategory;
select * from bullhorn1.BH_PrivateLabelCategoryList;
select * from bullhorn1.BH_ReportingCategory;
select * from bullhorn1.BH_SkillList; select enabled, count(*) as amount from bullhorn1.BH_SkillList group by enabled
select * from bullhorn1.BH_Skill; select enabled, count(*) as amount from bullhorn1.BH_Skill group by enabled
select * from bullhorn1.BH_TopicCategory;
select * from bullhorn1.BH_UserCategory;
select * from bullhorn1.BH_UserSkill;
select * from bullhorn1.View_AllAssociatedPrivateLabelCategory;
select * from bullhorn1.View_CardCategory;
select * from bullhorn1.View_Category; select enabled, count(*) as amount from bullhorn1.View_Category group by enabled
select * from bullhorn1.View_SpecialtyList; select enabled, count(*) as amount from bullhorn1.View_SpecialtyList group by enabled
select * from bullhorn1.View_UserCategory;
select * from bullhorn1.View_UserDelimitedBusinessSectors;
select * from bullhorn1.View_UserDelimitedCategories;
select * from bullhorn1.View_UserDelimitedCertifications;
select * from bullhorn1.View_UserDelimitedDepartments;
select * from bullhorn1.View_UserDelimitedSkills
select * from bullhorn1.View_UserDelimitedSpecialties
*/

---CATEGORY >>> FUNCTIONAL EXPERTISE
---SPECIALTY >>> SUB FUNCTIONAL EXPERTISE




with
-- View_UserDelimitedBusinessSectors
  View_UserDelimitedBusinessSectors (userid, BusinessSectors) as (
       SELECT m.userid, trim( replace(replace(replace(BusinessSectors.value,'  ',' '),' )',')'),'( ','(') ) as BusinessSectors 
       FROM bullhorn1.View_UserDelimitedBusinessSectors m CROSS APPLY STRING_SPLIT(m.BusinessSectors,';') AS BusinessSectors 
       where (BusinessSectors is not null and BusinessSectors &lt;&gt; '') )
--select distinct BusinessSectors, count(*), current_timestamp as 'insert_timestamp',lower(BusinessSectors) as 'tmp' from View_UserDelimitedBusinessSectors group by BusinessSectors
--select count(*) from View_UserDelimitedBusinessSectors


/*
--businessSectorIDList -- DO NOT USE
, businessSectorIDList0(candidateID, businessSectorID) as (SELECT candidateID, businessSectorIDList.value as businessSectorIDList from bullhorn1.Candidate m CROSS APPLY STRING_SPLIT(convert(varchar(max),m.businessSectorIDList),',') AS businessSectorIDList)
, businessSectorIDList(candidateID, BusinessSector) as (SELECT candidateID, STRING_AGG( ltrim(rtrim(BSL.name)),', ' ) WITHIN GROUP (ORDER BY BSL.name) name from businessSectorIDList0 left join bullhorn1.BH_BusinessSectorList BSL ON INDUSTRY0.businessSectorID = BSL.businessSectorID WHERE INDUSTRY0.businessSectorID &lt;&gt; '' GROUP BY candidateID )
--select BusinessSector, count(*) from businessSectorIDList group by BusinessSector
--select * from businessSectorIDList
--select distinct ltrim(rtrim(BusinessSector)) from businessSectorIDList
--select distinct ltrim(rtrim(name)) from bullhorn1.BH_BusinessSectorList
*/

, View_UserCategory(candidateID, userid, categoryIDList, categoryID, name, enabled) as (
       select C.candidateID, C.userid, C.categoryIDList, C.categoryID, ltrim(rtrim(UC.name)), UC.enabled
       FROM bullhorn1.Candidate C
       left join ( select UC.userID, UC.categoryID, substring(name,charindex(':',name)+1,200) as name, enabled from BULLHORN1.View_UserCategory UC left join bullhorn1.BH_CategoryList CL ON UC.categoryid = CL.categoryID ) UC on UC.userid = C.userID
       where UC.name is not null and UC.name &lt;&gt; '' and C.isdeleted &lt;&gt; 1 --and C.status &lt;&gt; 'Archive' --and C.userid in (165180)
       )
--select distinct ltrim(rtrim(Name)), enabled from View_UserCategory;   
--select distinct ltrim(rtrim(Name)), count(*) from View_UserCategory group by Name;
--select *, current_timestamp as insert_timestamp from View_UserCategory where userid in (165180,165184 ,165199, 161585)

/*
--categoryIDList -- DO NOT USE
, categoryIDList0(userid, categoryid) as (SELECT userid, categoryIDList.value as categoryIDList from bullhorn1.Candidate m CROSS APPLY STRING_SPLIT(convert(varchar(max),m.categoryIDList),',') AS categoryIDList)
, categoryIDList(Userid, Name) as (SELECT Userid, CL.occupation from categoryIDList0 left join bullhorn1.BH_CategoryList CL ON CateSplit.categoryid = CL.categoryID )
--select concat('insert into functional_expertise(id,name) values (nextval(''functional_experties_id_seq''),''',a.name,''');') from (select distinct Name from CName) a;
--select distinct ltrim(rtrim(Name)), count(*) from categoryIDList group by Name;
*/



, View_UserSpecialty(candidateID, userid, firstname, lastname, SPECIALTY, enabled) as (
       select distinct C.candidateID, C.userid, C.firstname, C.lastname, /*C.specialtyIDList, UC.SpecialtyID,*/ ltrim(rtrim(UC.name)) as name, UC.enabled
       FROM bullhorn1.Candidate C
       left join ( select US.userID, US.SpecialtyID, VS.name as name, enabled from BULLHORN1.View_UserSpecialty US left join bullhorn1.View_Specialty VS ON US.SpecialtyID = VS.specialtyID ) UC on UC.userid = C.userID
       --where UC.name is not null and UC.name &lt;&gt; '' and C.isdeleted &lt;&gt; 1 and C.status &lt;&gt; 'Archive' 
       --where C.userid in (63774,61671 ,65415, 65303)
       )
--select distinct ltrim(rtrim(SPECIALTY)), enabled from View_UserSpecialty;      
--select distinct ltrim(rtrim(SPECIALTY)) from View_UserSpecialty where name not in ('.SKILLS_AC')
--select SPECIALTY, count(*) from View_UserSpecialty group by SPECIALTY;
--select candidateID from (select * from View_UserSpecialty where name = 'design') t group by candidateID having count(*) > 1
--select * from bullhorn1.View_UserSpecialty where name = 'design' and candidateid not in (10049,10198)
--select * from bullhorn1.View_UserSpecialty where SPECIALTY is not null and userid in (8771)
--select * from bullhorn1.View_Specialty; select enabled, count(*) as amount from bullhorn1.View_Specialty group by enabled

/*
-- specialtyIDList -- DO NOT USE
, SpecSplit(userid, specialtyid) as (SELECT userid, specialtyIDList.value as specialtyIDList from bullhorn1.Candidate m CROSS APPLY STRING_SPLIT(convert(varchar(max),m.specialtyIDList),',') AS specialtyIDList)
, SpeName(Userid, Name) as (SELECT Userid, VS.name from SpecSplit left join bullhorn1.View_Specialty VS ON SpecSplit.SpecialtyID = VS.specialtyID WHERE SpecSplit.specialtyid &lt;&gt; '')
--select distinct ltrim(rtrim(name)) from SpeName
--select count(distinct Name) from SpeName
*/





---*** SKILL ***---
, SKILL (candidateID, userid, skillID, SkillName, enabled) as (
       SELECT [BH_Candidate].candidateID, [BH_Candidate].userID, [BH_UserSkill].skillID, [BH_SkillList].name, [BH_SkillList].enabled
       FROM [bullhorn1].[BH_Candidate]
       LEFT JOIN [bullhorn1].BH_User on [BH_User].userID = [BH_Candidate].userID
       LEFT JOIN [bullhorn1].BH_UserSkill on [BH_Candidate].userID = [BH_UserSkill].userID
       LEFT JOIN [bullhorn1].BH_SkillList on [BH_UserSkill].skillID = [BH_SkillList].skillID
       WHERE [BH_SkillList].name is not null and [BH_SkillList].name &lt;&gt; '' and [BH_Candidate].isdeleted &lt;&gt; 1 --and [BH_Candidate].status &lt;&gt; 'Archive' 
       )
--select count(*) from SKILL     
--select distinct ltrim(rtrim(SkillName)), enabled from SKILL;
--select distinct ltrim(rtrim(SkillName)) as Skill from SKILL
--SELECT candidateID, STRING_AGG( SkillName,', ' ) WITHIN GROUP (ORDER BY SkillName) name from SKILL where candidateID in (154) group by candidateID
--select * from SKILL where candidateID in (6525,28881,30255,30254)

/*
--skillIDList -- DO NOT USE
, SkillName0(userid, skillID) as (SELECT userid, skillIDList.value as skillID from bullhorn1.Candidate m CROSS APPLY STRING_SPLIT(convert(varchar(max),m.skillIDList),',') AS skillIDList)
, SkillName(userId, SkillName) as (SELECT userId, SL.name from SkillName0 left join bullhorn1.BH_SkillList SL ON SkillName0.skillID = SL.skillID WHERE SkillName0.skillID &lt;&gt; '')
--select count(*) from SkillName
--select top 300 * from SkillName
--select count(distinct ltrim(SkillName)) as Skill from SkillName --where SkillName
--select distinct ltrim(rtrim(SkillName)) as Skill from SkillName --where SkillName
*/




---**** ADMISSION ***---
, AdmissionRows(userId, CombinedText) as (select UCOI.userID, concat(text1,' ',text2) as CombinedText from bullhorn1.BH_UserCustomObjectInstance UCOI inner join bullhorn1.BH_CustomObjectInstance COI On UCOI.instanceID = COI.instanceID)
, admission(Userid, Admission) as (SELECT Userid, STUFF((SELECT ' || ' + CombinedText from  AdmissionRows WHERE Userid = c.Userid and CombinedText is not NULL and CombinedText &lt;&gt; '' FOR XML PATH (''), TYPE).value('.', 'nvarchar(MAX)'), 1, 4, '')  AS URLList FROM  AdmissionRows as c GROUP BY c.Userid)
--select distinct Admission from admission
--select top 100 * from admission





---**** SOURCE ***---
, source (ID,source) as (
       SELECT candidateID, source.value as source 
       from bullhorn1.Candidate m CROSS APPLY STRING_SPLIT(m.source,',') AS source)
--select distinct(ltrim(source)) from source
--select distinct source from bullhorn1.Candidate CA 





select --top 10
         C.candidateID as 'candidate-externalId', C.userID as '#userID'
	   --, coalesce(nullif(replace(C.FirstName,'?',''), ''), 'No Firstname') as 'candidate-firstName'
       --, coalesce(nullif(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID)) as 'candidate-lastName'
       , bs.BusinessSectors, lower(bs.BusinessSectors) as 'tmp'
from bullhorn1.View_Candidate C 
left join View_UserDelimitedBusinessSectors bs on bs.userid = c.userID 
where bs.userid is not null and (C.isdeleted &lt;&gt; 1) -- and C.status &lt;&gt; 'Archive') and 
--and C.userID in (142823)       



/*
select 
         C.candidateID as 'candidate-externalId', C.userID as '#userID'

, trim(customText1) as BusinessSectors,  current_timestamp as 'insert_timestamp', lower(trim(customText1)) as 'tmp'
from bullhorn1.Candidate C 
where (C.isdeleted &lt;&gt; 1 and C.status &lt;&gt; 'Archive') 
and customText1 is not null and trim(customText1) &lt;&gt; '' --group by customText1
--and trim(customText1) not in ('Investment Banking','Insurance','Insurance')
*/

</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4880</xloc>
      <yloc>528</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate lookup 3 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contactExtId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCContactID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4624</xloc>
      <yloc>272</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate lookup 4 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCCandidateID</rename>
        <default/>
        <type>Integer</type>
      </value>
      <value>
        <name>current_location_id</name>
        <rename>current_location_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5072</xloc>
      <yloc>1536</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate owners</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
-- OWNER
with t as ( 
       select
              a.code as 'candidate-externalId', o.email
              --distinct a.owningcons as 'candidate-owners', o.email
       -- select distinct a.owningcons
       from candidate a
       left join owners o on o.initials = a.owningcons
       where a.owningcons is not null
)
select --top 123
       [candidate-externalId]
       , case
              when email = 'christ@charterhouse.com.hk' then '[{"ownerId":"28985","primary":"true"}]'
              when email = '20170216_082644.983_annabella.poon@hrboss.com' then '[{"ownerId":"28950","primary":"true"}]'
              when email = 'vivianl@charterhouse.com.hk' then '[{"ownerId":"28966","primary":"true"}]'
              when email = 'tassaneea@charterhouse.com.hk' then '[{"ownerId":"28967","primary":"true"}]'
              when email = 'richardn@charterhouse.com.hk' then '[{"ownerId":"28968","primary":"true"}]'
              when email = 'devik@charterhouse.com.hk' then '[{"ownerId":"28969","primary":"true"}]'
              when email = 'bharatim@charterhouse.com.hk' then '[{"ownerId":"28970","primary":"true"}]'
              when email = 'katet@charterhouse.com.hk' then '[{"ownerId":"28971","primary":"true"}]'
              when email = 'enquiries@charterhouse.com.hk' then '[{"ownerId":"28972","primary":"true"}]'
              when email = 'raymondc@charterhouse.com.hk' then '[{"ownerId":"28973","primary":"true"}]'
              when email = 'katrinaw@charterhouse.com.hk' then '[{"ownerId":"28974","primary":"true"}]'

              when email = 'sysadmin@vincere.io' then '[{"ownerId":"-10","primary":"true"}]'
              when email = 'cherryt@charterhouse.com.hk' then '[{"ownerId":"29111","primary":"true"}]'
              when email = 'charterhouseprod@veryrealemail.com' then '[{"ownerId":"28953","primary":"true"}]'
              when email = 'enquiry@charterhouse.com.sg' then '[{"ownerId":"29112","primary":"true"}]'
              when email = 'maryw@charterhouse.com.hk' then '[{"ownerId":"29113","primary":"true"}]'
              when email = 'luke.phibbs@charterhouse.com.hk' then '[{"ownerId":"29074","primary":"true"}]'
              when email = 'noellec@charterhouse.com.hk' then '[{"ownerId":"29114","primary":"true"}]'
              when email = 'kalinann@charterhouse.com.hk' then '[{"ownerId":"29115","primary":"true"}]'
              when email = 'winky.cheung@charterhouse.com.hk' then '[{"ownerId":"28984","primary":"true"}]'
              when email = 'neonc@charterhouse.com.hk' then '[{"ownerId":"29118","primary":"true"}]'
              when email = 'winniek@charterhouse.com.hk' then '[{"ownerId":"29116","primary":"true"}]'
              when email = 'dollies@charterhouse.com.hk' then '[{"ownerId":"29119","primary":"true"}]'
              when email = 'roshanp@charterhouse.com.hk' then '[{"ownerId":"29120","primary":"true"}]'
              when email = 'mandyli@charterhouse.com.hk' then '[{"ownerId":"29121","primary":"true"}]'
              when email = 'patricial@charterhouse.com.hk' then '[{"ownerId":"29122","primary":"true"}]'
              when email = 'frontline@charterhouse.com.hk' then '[{"ownerId":"29123","primary":"true"}]'
              end as candidate_owner_json       
from t 
where email is not null

</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4928</xloc>
      <yloc>1296</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate_group 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate_group</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>name</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_candidate_group_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4512</xloc>
      <yloc>400</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate_group_candidate</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>candidate_group_candidate</table>
      <key>
        <name>VCContactID</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCContactGroupID</name>
        <field>candidate_group_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>candidate_id</name>
        <rename>VCContactID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>candidate_group_id</name>
        <rename>VCContactGroupID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4368</xloc>
      <yloc>272</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate_language_tmp</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>500</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema/>
      <table>candidate_language_tmp</table>
      <key>
        <name>actual_candidate_id</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>language</name>
        <field>language</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>candidate_id</name>
        <rename>actual_candidate_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>language</name>
        <rename>language</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5280</xloc>
      <yloc>1456</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate_source</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate_source</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>vc_source_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5696</xloc>
      <yloc>624</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate_source - Lead</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>candidate_source</table>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>name</name>
        <rename>name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>source_type</name>
        <rename>source_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>payment_style</name>
        <rename>payment_style</rename>
        <update>Y</update>
      </value>
      <value>
        <name>tmp</name>
        <rename>tmp</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2240</xloc>
      <yloc>1296</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate_source 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>candidate_source</table>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>name</name>
        <rename>name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>source_type</name>
        <rename>source_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>payment_style</name>
        <rename>payment_style</rename>
        <update>Y</update>
      </value>
      <value>
        <name>tmp</name>
        <rename>tmp</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2240</xloc>
      <yloc>400</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate_sub_functional_expertise</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>candidate_functional_expertise</table>
      <key>
        <name>final_fe_id</name>
        <field>functional_expertise_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_candidate_id</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_sfe_id</name>
        <field>sub_functional_expertise_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>functional_expertise_id</name>
        <rename>final_fe_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>candidate_id</name>
        <rename>final_candidate_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>sub_functional_expertise_id</name>
        <rename>final_sfe_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4224</xloc>
      <yloc>1088</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate_sub_functional_expertise 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema/>
      <table>position_description_functional_expertise</table>
      <key>
        <name>final_fe_id</name>
        <field>functional_expertise_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_job_id</name>
        <field>position_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_sfe_id</name>
        <field>sub_functional_expertise_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>functional_expertise_id</name>
        <rename>final_fe_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>position_id</name>
        <rename>final_job_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>sub_functional_expertise_id</name>
        <rename>final_sfe_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4032</xloc>
      <yloc>976</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate_sub_functional_expertise 3</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>candidate_functional_expertise</table>
      <key>
        <name>final_fe_id</name>
        <field>functional_expertise_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_candidate_id</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_sfe_id</name>
        <field>sub_functional_expertise_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>functional_expertise_id</name>
        <rename>final_fe_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>candidate_id</name>
        <rename>final_candidate_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>sub_functional_expertise_id</name>
        <rename>final_sfe_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4224</xloc>
      <yloc>784</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>cf 2 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>

--CUSTOM FIELD > Systems (Multi select dropdown menu)
with SKILL (candidateID,userid, SkillName) as ( 
       SELECT candidateID, userid, name --STRING_AGG(name,', ' ) WITHIN GROUP (ORDER BY name) files 
       -- SELECT distinct name as v
       from (
              SELECT [BH_Candidate].candidateID, [BH_Candidate].userID, [BH_UserSkill].skillID, [BH_SkillList].name 
              FROM [bullhorn1].[BH_Candidate]
              LEFT JOIN [bullhorn1].BH_User on [BH_User].userID = [BH_Candidate].userID
              LEFT JOIN [bullhorn1].BH_UserSkill on [BH_Candidate].userID = [BH_UserSkill].userID
              LEFT JOIN [bullhorn1].BH_SkillList on [BH_UserSkill].skillID = [BH_SkillList].skillID
              WHERE [BH_SkillList].name is not null and [BH_SkillList].name &lt;&gt; '' and [BH_Candidate].isdeleted &lt;&gt; 1 and [BH_Candidate].status &lt;&gt; 'Archive' ) s --order by name asc--       GROUP BY candidateID,userid )
              )
--select distinct skillname from SKILL where userid in (165199)

, t as (
select 
       candidateid
       , case
when trim(skillname) = 'Access' then '1'
when trim(skillname) = 'Agresso' then '2'
when trim(skillname) = 'Cartesis' then '3'
when trim(skillname) = 'Cognos' then '4'
when trim(skillname) = 'Concept' then '5'
when trim(skillname) = 'DDS' then '6'
when trim(skillname) = 'Dynamics' then '7'
when trim(skillname) = 'Great Plains' then '8'
when trim(skillname) = 'Hyperion' then '9'
when trim(skillname) = 'JD Edwards' then '10'
when trim(skillname) = 'Maconomy' then '11'
when trim(skillname) = 'MediaOcean' then '12'
when trim(skillname) = 'Navision' then '13'
when trim(skillname) = 'Netsuite' then '14'
when trim(skillname) = 'Opera' then '15'
when trim(skillname) = 'Oracle' then '16'
when trim(skillname) = 'Paprika' then '17'
when trim(skillname) = 'PeopleSoft' then '18'
when trim(skillname) = 'Quickbooks' then '19'
when trim(skillname) = 'Rebus' then '20'
when trim(skillname) = 'Sage' then '21'
when trim(skillname) = 'Sap' then '22'
when trim(skillname) = 'Sun Accounts' then '23'
when trim(skillname) = 'Trafficlive' then '24'
when trim(skillname) = 'VBA' then '25'
when trim(skillname) = 'XERO' then '26'
else null end as field_value
from SKILL
)

select   candidateID as 'additional_id'
       , 'add_cand_info' as 'additional_type'
       , 1005 as 'form_id'
       , 11274 as 'field_id'
       , STRING_AGG( field_value,',' ) WITHIN GROUP (ORDER BY field_value asc) field_value
       , 11274 as 'constraint_id'
from t
group by candidateID

</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4288</xloc>
      <yloc>1536</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>cf 2 2 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>--CUSTOM FIELD > Notice Period (Freetext)
select candidateID as 'additional_id' , firstname, lastname
       , 'add_cand_info' as 'additional_type'
       , 1005 as 'form_id'
       , 11273 as 'field_id'
       , case
when trim(customText1) = '-' then '1'
when trim(customText1) = '.' then '2'
when trim(customText1) = '?' then '3'
when trim(customText1) = '0' then '4'
when trim(customText1) = '1' then '5'
when trim(customText1) = '1 mont' then '6'
when trim(customText1) = '1 Month' then '7'
when trim(customText1) = '1 Week' then '8'
when trim(customText1) = '2 monh' then '9'
when trim(customText1) = '2 Months' then '10'
when trim(customText1) = '2 Weeks' then '11'
when trim(customText1) = '3 Months' then '12'
when trim(customText1) = '3 Weeks' then '13'
when trim(customText1) = '4' then '14'
when trim(customText1) = '4 Weeks' then '15'
when trim(customText1) = '6 Months' then '16'
when trim(customText1) = '6 Weeks' then '17'
when trim(customText1) = 'a' then '18'
when trim(customText1) = 'ASAP' then '19'
when trim(customText1) = 'immediate' then '20'
when trim(customText1) = 'N/A' then '21'
when trim(customText1) = 'none' then '22'
when trim(customText1) = 'Other' then '23'
when trim(customText1) = 'owns his business' then '24'
when trim(customText1) = 'TBC' then '25'
when trim(customText1) = 'Unknown' then '26'
when trim(customText1) = 'Unkown' then '27'
when trim(customText1) = 'What is the offer?' then '28'
end as field_value
       , 11273 as 'constraint_id'
-- select distinct trim(customText1) as v     
from bullhorn1.Candidate C
where C.isdeleted &lt;&gt; 1
and customText1 is not null and convert(nvarchar(max),customText1) &lt;&gt; '' 
order by trim(customText1) asc</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4288</xloc>
      <yloc>1600</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>cf 2 2 2 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>-- AHPRA Registration Level
select candidateID as 'additional_id'
       , 'add_cand_info' as 'additional_type'
       , 1005 as 'form_id'
       , 11273 as 'field_id'
       , case 
when trim(customText10) = 'DO NOT CONTACT' then '1'
when trim(customText10) = 'Eligible for Limited' then '2'
when trim(customText10) = 'Eligible for Provisional (AMC)' then '3'
when trim(customText10) = 'Eligible for Provisional (Comp Auth)' then '4'
when trim(customText10) = 'Eligible for Specialist (Pathway)' then '5'
when trim(customText10) = 'Eligible for Specialist Pathway' then '6'
when trim(customText10) = 'EN / EEN' then '7'
when trim(customText10) = 'General AHPRA Registration' then '8'
when trim(customText10) = 'General Registration' then '9'
when trim(customText10) = 'Limited Registration' then '10'
when trim(customText10) = 'Limited/Provisional AHPRA Registration' then '11'
when trim(customText10) = 'Not Eligible' then '12'
when trim(customText10) = 'Provisional Registration' then '13'
when trim(customText10) = 'RN' then '14'
when trim(customText10) = 'Specialist Registration' then '15'       
       end as field_value
       , 11273 as 'constraint_id'
-- select distinct customText10
from bullhorn1.Candidate where customText10 &lt;&gt; '' and customText10 is not null order by customText10 asc</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4288</xloc>
      <yloc>1264</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>cf 2 2 2 2 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>-- Residency
select candidateID as 'additional_id'
       , 'add_cand_info' as 'additional_type'
       , 1005 as 'form_id'
       , 11275 as 'field_id'
       , case 
when trim(customText9) = '[Not Advised]' then '1'
when trim(customText9) = 'Applied for Permanent Residency' then '2'
when trim(customText9) = 'Applied for PR' then '3'
when trim(customText9) = 'Australian Citizen' then '4'
when trim(customText9) = 'New Zealand Citizen' then '5'
when trim(customText9) = 'Not Advised' then '6'
when trim(customText9) = 'Not In Australia' then '7'
when trim(customText9) = 'Partner Visa' then '8'
when trim(customText9) = 'Permanent Resident' then '9'
when trim(customText9) = 'Spousal Visa' then '10'
when trim(customText9) = 'Temporary Resident' then '11'
when trim(customText9) = 'Temporary Visa' then '12'       
       end as field_value
       , 11275 as 'constraint_id'
-- select distinct customText9
from bullhorn1.Candidate where customText9  &lt;&gt; '' and customText9 is not null order by customText9 asc
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4288</xloc>
      <yloc>1328</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>cf 2 2 2 2 2 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>-- MMM Classification
SELECT
         clientCorporationID as additional_id, name
        , 'add_com_info' as 'additional_type'
        , 1009 as 'form_id'
        , 11277 as 'field_id'
        , case
when trim(customText3) = '' then '1'
when trim(customText3) = '0' then '2'
when trim(customText3) = '1' then '3'
when trim(customText3) = '2' then '4'
when trim(customText3) = '2 Available' then '5'
when trim(customText3) = '3' then '6'
when trim(customText3) = '4' then '7'
when trim(customText3) = '5' then '8'
when trim(customText3) = 'AMDS' then '9'
when trim(customText3) = 'ATSI' then '10'
when trim(customText3) = 'DPA' then '11'
when trim(customText3) = 'NON DPA' then '12'        
        end as 'field_value'
        , 11277 as 'constraint_id'
-- select distinct customText3
from bullhorn1.BH_ClientCorporation where customText3 is not null order by customText3 asc
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4288</xloc>
      <yloc>1456</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>cf 2 2 2 2 3</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>-- DPA Status
SELECT
         clientCorporationID as additional_id, name
        , 'add_com_info' as 'additional_type'
        , 1009 as 'form_id'
        , 11276 as 'field_id'
        , case 
when trim(customText2) = '' then '1'
when trim(customText2) = '0' then '2'
when trim(customText2) = '1' then '3'
when trim(customText2) = '2' then '4'
when trim(customText2) = '2 Available' then '5'
when trim(customText2) = '3' then '6'
when trim(customText2) = '4' then '7'
when trim(customText2) = '5' then '8'
when trim(customText2) = 'AMDS' then '9'
when trim(customText2) = 'ATSI' then '10'
when trim(customText2) = 'DPA' then '11'
when trim(customText2) = 'NON DPA' then '12' end as 'field_value'
        , 11276 as 'constraint_id'
-- select distinct customText2
from bullhorn1.BH_ClientCorporation where customText2 is not null order by customText2 asc
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4288</xloc>
      <yloc>1392</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>cf 2 2 3</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>with
customText1 (candidateID,customText1) as (
       SELECT 
              candidateID
              , trim( replace(replace(replace(customText1.value,'  ',' '),' )',')'),'( ','(') ) as customText1 --, trim( ind.value ) as ind 
       FROM (
              SELECT candidateID, trim( customText1.value ) as customText1 
              FROM bullhorn1.Candidate m 
              CROSS APPLY STRING_SPLIT( trim( convert(varchar(500),m.customText1) ), ',') AS customText1
              ) m
       CROSS APPLY STRING_SPLIT( trim( convert(varchar(500),m.customText1) ), ';') AS customText1
       where (customText1 is not null and convert(nvarchar(max),customText1) &lt;&gt; '' and customText1 &lt;&gt; 'Please Select')
       )
--select distinct customText1 from customText1 where customText1 &lt;&gt; '#N/A' order by customText1 asc
--select distinct customText1, count(*) from customText1 where customText1 &lt;&gt; '#N/A' group by customText1
, t as ( 
       select 
              candidateID
              , case
when trim(customText1) = '19AA - Requires 3GA Program' then '1'
when trim(customText1) = '19AA - Requires a 3GA Program' then '2'
when trim(customText1) = '19AB - Requires DPA' then '3'
when trim(customText1) = '19AB - Requires DWS' then '4'
when trim(customText1) = 'Eligible for Exemption' then '5'
when trim(customText1) = 'Not Applicable' then '6'
when trim(customText1) = 'Unrestricted' then '7'
              else null end as field_value
       from customText1 ) --where customText11 &lt;&gt; '#N/A'
select candidateID as 'additional_id'
       , 'add_cand_info' as 'additional_type'
       , 1005 as 'form_id'
       , 11266 as 'field_id'
       , STRING_AGG( field_value,',' ) WITHIN GROUP (ORDER BY field_value asc) field_value
       , 11266 as 'constraint_id'
from t group by candidateID</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4288</xloc>
      <yloc>1200</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>common_location</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema/>
      <table>common_location</table>
      <key>
        <name>current_location_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>latitude</name>
        <rename>Latitude</rename>
      </value>
      <value>
        <name>longitude</name>
        <rename>Longitude</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5216</xloc>
      <yloc>1536</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>common_location 2</name>
    <type>CombinationLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <schema>public</schema>
    <table>common_location</table>
    <connection>to</connection>
    <commit>1</commit>
    <cache_size>9999</cache_size>
    <replace>N</replace>
    <preloadCache>N</preloadCache>
    <crc>N</crc>
    <crcfield>hashcode</crcfield>
    <fields>
      <key>
        <name>candidate-secondaryaddress</name>
        <lookup>address</lookup>
      </key>
      <key>
        <name>candidate-secondaryCountry</name>
        <lookup>country_code</lookup>
      </key>
      <key>
        <name>candidate-secondarycity</name>
        <lookup>city</lookup>
      </key>
      <key>
        <name>candidate-secondarystate</name>
        <lookup>state</lookup>
      </key>
      <key>
        <name>candidate-secondaryzipCode</name>
        <lookup>post_code</lookup>
      </key>
      <key>
        <name>candidate-secondaryaddress</name>
        <lookup>location_name</lookup>
      </key>
      <return>
        <name>id</name>
        <creation_method>sequence</creation_method>
        <use_autoinc>N</use_autoinc>
      </return>
    </fields>
    <sequence>common_location_id_seq</sequence>
    <last_update_field/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5536</xloc>
      <yloc>912</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>common_location 3</name>
    <type>CombinationLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <schema>public</schema>
    <table>common_location</table>
    <connection>to</connection>
    <commit>1</commit>
    <cache_size>9999</cache_size>
    <replace>N</replace>
    <preloadCache>N</preloadCache>
    <crc>N</crc>
    <crcfield>hashcode</crcfield>
    <fields>
      <key>
        <name>candidate-secondaryaddress</name>
        <lookup>address</lookup>
      </key>
      <key>
        <name>candidate-secondaryCountry</name>
        <lookup>country_code</lookup>
      </key>
      <key>
        <name>candidate-secondarycity</name>
        <lookup>city</lookup>
      </key>
      <key>
        <name>candidate-secondarystate</name>
        <lookup>state</lookup>
      </key>
      <key>
        <name>candidate-secondaryzipCode</name>
        <lookup>post_code</lookup>
      </key>
      <key>
        <name>candidate-secondaryaddress</name>
        <lookup>location_name</lookup>
      </key>
      <key>
        <name>final_candidate_id</name>
        <lookup>personal_location_candidate_id</lookup>
      </key>
      <return>
        <name>id</name>
        <creation_method>sequence</creation_method>
        <use_autoinc>N</use_autoinc>
      </return>
    </fields>
    <sequence>common_location_id_seq</sequence>
    <last_update_field/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5536</xloc>
      <yloc>832</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>common_location 3 2</name>
    <type>CombinationLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <schema>public</schema>
    <table>common_location</table>
    <connection>to</connection>
    <commit>1</commit>
    <cache_size>9999</cache_size>
    <replace>N</replace>
    <preloadCache>N</preloadCache>
    <crc>N</crc>
    <crcfield>hashcode</crcfield>
    <fields>
      <key>
        <name>contact-personal-address</name>
        <lookup>address</lookup>
      </key>
      <key>
        <name>contact-personal-country_code</name>
        <lookup>country_code</lookup>
      </key>
      <key>
        <name>contact-personal-city</name>
        <lookup>city</lookup>
      </key>
      <key>
        <name>contact-personal-state</name>
        <lookup>state</lookup>
      </key>
      <key>
        <name>contact-personal-post_code</name>
        <lookup>post_code</lookup>
      </key>
      <key>
        <name>contact-personal-address</name>
        <lookup>location_name</lookup>
      </key>
      <return>
        <name>id</name>
        <creation_method>sequence</creation_method>
        <use_autoinc>N</use_autoinc>
      </return>
    </fields>
    <sequence>common_location_id_seq</sequence>
    <last_update_field/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2352</xloc>
      <yloc>528</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>common_location 4</name>
    <type>CombinationLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <schema>public</schema>
    <table>common_location</table>
    <connection>to</connection>
    <commit>1</commit>
    <cache_size>9999</cache_size>
    <replace>N</replace>
    <preloadCache>N</preloadCache>
    <crc>N</crc>
    <crcfield>hashcode</crcfield>
    <fields>
      <key>
        <name>Desired Location Address - Desired Location Name</name>
        <lookup>city</lookup>
      </key>
      <key>
        <name>Desired Location Address - Desired Location Name</name>
        <lookup>address</lookup>
      </key>
      <key>
        <name>Desired Location Address - Desired Location Name</name>
        <lookup>location_name</lookup>
      </key>
      <key>
        <name>final_candidate_id</name>
        <lookup>desired_location_candidate_id</lookup>
      </key>
      <return>
        <name>id</name>
        <creation_method>sequence</creation_method>
        <use_autoinc>N</use_autoinc>
      </return>
    </fields>
    <sequence>common_location_id_seq</sequence>
    <last_update_field/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5536</xloc>
      <yloc>768</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>common_location 5</name>
    <type>CombinationLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <schema>public</schema>
    <table>common_location</table>
    <connection>to</connection>
    <commit>1</commit>
    <cache_size>9999</cache_size>
    <replace>N</replace>
    <preloadCache>N</preloadCache>
    <crc>N</crc>
    <crcfield>hashcode</crcfield>
    <fields>
      <key>
        <name>candidate-city</name>
        <lookup>city</lookup>
      </key>
      <key>
        <name>candidate-address</name>
        <lookup>address</lookup>
      </key>
      <key>
        <name>candidate-Country</name>
        <lookup>country_code</lookup>
      </key>
      <key>
        <name>candidate-address</name>
        <lookup>location_name</lookup>
      </key>
      <key>
        <name>candidate-zipCode</name>
        <lookup>post_code</lookup>
      </key>
      <key>
        <name>candidate-Country</name>
        <lookup>country</lookup>
      </key>
      <key>
        <name>candidate-state</name>
        <lookup>state</lookup>
      </key>
      <key>
        <name>final_candidate_id</name>
        <lookup>current_location_candidate_id</lookup>
      </key>
      <return>
        <name>id</name>
        <creation_method>sequence</creation_method>
        <use_autoinc>N</use_autoinc>
      </return>
    </fields>
    <sequence>common_location_id_seq</sequence>
    <last_update_field/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5536</xloc>
      <yloc>688</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contact-companyId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_company_id</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1840</xloc>
      <yloc>80</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company - parent_id 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>parent_companyid</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_parent_company_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>352</xloc>
      <yloc>128</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>company</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>CompanyExtID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_companyid</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>432</xloc>
      <yloc>928</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company 2 2 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>#CompanyId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_company_id</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3280</xloc>
      <yloc>112</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company 2 2 2 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contact-companyId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_company_id</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1840</xloc>
      <yloc>160</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company 2 2 2 2 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contact-companyId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_company_id</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1968</xloc>
      <yloc>1216</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company 4</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>external_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>actual_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>464</xloc>
      <yloc>736</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company 5</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>CompanyExtId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCCompanyID</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2352</xloc>
      <yloc>592</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company 5 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>CompanyExtId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCCompanyID</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2352</xloc>
      <yloc>1568</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company 6</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>CompanyExtId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCCompanyID</rename>
        <default/>
        <type>Number</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2352</xloc>
      <yloc>656</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company 6 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>CompanyExtId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCCompanyID</rename>
        <default/>
        <type>Number</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2352</xloc>
      <yloc>1632</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company 7</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>CompanyExtId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCCompanyID</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3632</xloc>
      <yloc>592</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company 8</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>CompanyExtId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCCompanyID</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3632</xloc>
      <yloc>528</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company industry</name>
    <type>TableInput</type>
    <description>test</description>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
with
ind0 (clientCorporationID,ind) as (
      SELECT
             clientCorporationID
             , trim( replace(replace(replace(ind.value,'  ',' '),' )',')'),'( ','(') ) as ind
             --, trim( ind.value ) as ind
      FROM bullhorn1.BH_ClientCorporation m CROSS APPLY STRING_SPLIT( trim( convert(varchar(500),m.businessSectorList) ), ';') AS ind
      )

,ind1 (clientCorporationID,ind) as (
      SELECT
             clientCorporationID
             , trim( ind.value ) as ind
      FROM ind0 m CROSS APPLY STRING_SPLIT( trim( convert(varchar(500),m.ind) ), ',') AS ind
      )


select
      distinct ind as 'company-industry'
	  , lower(ind) as tmp
      , current_timestamp as insert_timestamp
from ind1
where ind &lt;&gt; '' and ind &lt;&gt; '#N/A'

</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>352</xloc>
      <yloc>576</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company industry 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>

with
ind0 (clientCorporationID,ind) as (
      SELECT
             clientCorporationID
             , trim( replace(replace(replace(ind.value,'  ',' '),' )',')'),'( ','(') ) as ind
             --, trim( ind.value ) as ind
      FROM bullhorn1.BH_ClientCorporation m CROSS APPLY STRING_SPLIT( trim( convert(varchar(500),m.businessSectorList) ), ';') AS ind
      )

,ind1 (clientCorporationID,ind) as (
      SELECT
             clientCorporationID
             , trim( ind.value ) as ind
      FROM ind0 m CROSS APPLY STRING_SPLIT( trim( convert(varchar(500),m.ind) ), ',') AS ind
      )


select
        clientCorporationID
       , ind as 'company_industry'
	  , lower(ind) as 'tmp'
, current_timestamp as 'insert_timestamp'

from ind1
where ind &lt;&gt; '' and ind &lt;&gt; '#N/A'</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>224</xloc>
      <yloc>656</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company location lookup</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company_location</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>VCCompanyID</name>
        <field>company_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>locationAddress</name>
        <field>address</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCAddressID</rename>
        <default/>
        <type>Number</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2480</xloc>
      <yloc>656</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company location lookup 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company_location</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>VCCompanyID</name>
        <field>company_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>locationAddress</name>
        <field>address</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCAddressID</rename>
        <default/>
        <type>Number</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2480</xloc>
      <yloc>1632</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company_department</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>company_department</table>
      <key>
        <name>department_tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_company_id</name>
        <field>company_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>department_name</name>
        <rename>Department</rename>
        <update>Y</update>
      </value>
      <value>
        <name>company_id</name>
        <rename>final_company_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>department_insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>tmp</name>
        <rename>department_tmp</rename>
        <update>N</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2608</xloc>
      <yloc>1040</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company_department 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company_department</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>department_tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_company_id</name>
        <field>company_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>company_department_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2352</xloc>
      <yloc>1104</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company_legal_document</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>company_legal_document</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>companyid</name>
        <field>company_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>legal_doc_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>608</xloc>
      <yloc>896</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company_location</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company_location</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>pd.company_location_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>country_code</name>
        <rename>company_location.country_code</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6704</xloc>
      <yloc>608</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company_location 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>company_location</table>
      <key>
        <name>VCCompanyID</name>
        <field>company_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>locationAddress</name>
        <field>address</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>city</name>
        <rename>city</rename>
        <update>Y</update>
      </value>
      <value>
        <name>address</name>
        <rename>locationAddress</rename>
        <update>Y</update>
      </value>
      <value>
        <name>location_name</name>
        <rename>locationName</rename>
        <update>Y</update>
      </value>
      <value>
        <name>country_code</name>
        <rename>country_code</rename>
        <update>Y</update>
      </value>
      <value>
        <name>post_code</name>
        <rename>post_code</rename>
        <update>Y</update>
      </value>
      <value>
        <name>company_id</name>
        <rename>VCCompanyID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>state</name>
        <rename>state</rename>
        <update>Y</update>
      </value>
      <value>
        <name>tmp</name>
        <rename>tmp</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3744</xloc>
      <yloc>528</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company_location 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company_location</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>pd.company_location_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>country_code</name>
        <rename>company_location.country_code</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6704</xloc>
      <yloc>720</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company_location 4</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company_location</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>VCCompanyID</name>
        <field>company_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>locationAddress</name>
        <field>address</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCAddressID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3744</xloc>
      <yloc>592</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company_lookup</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>company-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_company_id</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>80</xloc>
      <yloc>128</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>compensation</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>compensation</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>VCJobID</name>
        <field>position_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>currency_type</name>
        <rename>compensation.currency_type</rename>
        <default/>
        <type>String</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6832</xloc>
      <yloc>608</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>compensation - contract</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>compensation</table>
      <key>
        <name>final_job_id</name>
        <field>position_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>charge_rate</name>
        <rename>charge_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>charge_rate_type</name>
        <rename>charge_rate_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>contract_rate_type</name>
        <rename>contract_rate_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>margin_percent</name>
        <rename>margin_percent</rename>
        <update>Y</update>
      </value>
      <value>
        <name>markup_percent</name>
        <rename>markup_percent</rename>
        <update>Y</update>
      </value>
      <value>
        <name>on_cost</name>
        <rename>on_cost</rename>
        <update>Y</update>
      </value>
      <value>
        <name>on_cost_percentage</name>
        <rename>on_cost_percentage</rename>
        <update>Y</update>
      </value>
      <value>
        <name>pay_rate</name>
        <rename>pay_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>position_id</name>
        <rename>final_job_id</rename>
        <update>N</update>
      </value>
      <value>
        <name>profit</name>
        <rename>profit</rename>
        <update>Y</update>
      </value>
      <value>
        <name>total_pay_rate</name>
        <rename>total_pay_rate</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3632</xloc>
      <yloc>464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>compensation - permanent</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>compensation</table>
      <key>
        <name>final_job_id</name>
        <field>position_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>percentage_of_annual_salary</name>
        <rename>percentage_of_annual_salary</rename>
        <update>Y</update>
      </value>
      <value>
        <name>position_id</name>
        <rename>final_job_id</rename>
        <update>N</update>
      </value>
      <value>
        <name>use_quick_fee_forecast</name>
        <rename>use_quick_fee_forecast</rename>
        <update>Y</update>
      </value>
      <value>
        <name>pay_rate</name>
        <rename>position-actualSalary</rename>
        <update>Y</update>
      </value>
      <value>
        <name>total_pay_rate</name>
        <rename>position-actualSalary</rename>
        <update>Y</update>
      </value>
      <value>
        <name>gross_annual_salary</name>
        <rename>position-actualSalary</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3632</xloc>
      <yloc>400</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>compensation 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>compensation</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>VCJobID</name>
        <field>position_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>currency_type</name>
        <rename>compensation.currency_type</rename>
        <default/>
        <type>String</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6832</xloc>
      <yloc>720</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contact-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>actual_contactid</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5632</xloc>
      <yloc>1040</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>report_clienID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCContactID_report</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2240</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>ContactExtID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_contact_id</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>464</xloc>
      <yloc>1024</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact 2 3 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contact-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>actual_contactid</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1568</xloc>
      <yloc>992</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact 2 3 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contact-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>actual_contactid</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1568</xloc>
      <yloc>1056</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact 2 3 2 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contact-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>actual_contactid</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1568</xloc>
      <yloc>928</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact 4</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contact_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>actual_contactid</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1472</xloc>
      <yloc>656</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact FE-SFE</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>

with
  desiredSpecialties (clientID, userID, fe) as ( 
       SELECT m.clientID, m.userID, trim(desiredSpecialties.value) as desiredSpecialties 
       FROM bullhorn1.BH_Client m CROSS APPLY STRING_SPLIT(convert(nvarchar(max),m.desiredSpecialties),';') AS desiredSpecialties 
       where (isdeleted &lt;&gt; 1) and (desiredSpecialties is not null and convert(nvarchar(max),desiredSpecialties) &lt;&gt; '') 
       )
--select distinct(desiredSpecialties), count(*) from desiredSpecialties group by desiredSpecialties;
--select count(*) from desiredSpecialties --123926


, View_UserDelimitedCategories (clientID, userID, fe) as ( 
       select C.clientID, C.userid, t.Categories
       FROM bullhorn1.BH_Client C
       left join (
              SELECT m.userID, trim(Categories.value) as Categories 
              FROM bullhorn1.View_UserDelimitedCategories m CROSS APPLY STRING_SPLIT(convert(nvarchar(max),m.Categories),';') AS Categories 
              where (Categories is not null and convert(nvarchar(max),Categories) &lt;&gt; '')
              ) t on t.userID = C.userID )
--select distinct(Categories), count(*) from View_UserDelimitedCategories group by Categories;
--select count(*) from View_UserDelimitedCategories --123926
--select * from View_UserDelimitedCategories where Categories in ('Other') --userID in (50333)


, desiredCategories(clientID, userid, desiredCategories) as (
       select C.clientID, C.userid, t.desiredCategories
       FROM bullhorn1.BH_Client C
       left join (
              SELECT m.userID, trim(desiredCategories.value) as desiredCategories 
              FROM bullhorn1.BH_Client m CROSS APPLY STRING_SPLIT(convert(nvarchar(max),m.desiredCategories),';') AS desiredCategories 
              where (desiredCategories is not null and convert(nvarchar(max),desiredCategories) &lt;&gt; '')
              ) t on t.userID = C.userID )
--select distinct desiredCategories from desiredCategories


, View_UserCategory(clientID, userid, View_UserCategory) as (
       select C.clientID, C.userid, vuc.name as 'View_UserCategory'
       FROM bullhorn1.BH_Client C
       left join ( select UC.userID, UC.categoryID, substring(name,charindex(':',name)+1,200) as name from BULLHORN1.View_UserCategory UC left join bullhorn1.BH_CategoryList CL ON UC.categoryid = CL.categoryID ) vuc on vuc.userid = C.userID
       where (C.isdeleted &lt;&gt; 1) --and UC.name is not null and UC.name &lt;&gt; '' --and C.userid in (165180)
       )
--select distinct(lower(View_UserDelimitedCategories)), count(*) from all_category group by View_UserDelimitedCategories;
--select distinct(desiredCategories), count(*) from all_category group by desiredCategories;
--select * from View_UserCategory where userid in (50333) --clientID in (5907,4934,4925,4941)


, all_fe as (
       select * from desiredSpecialties UNION
       select * from View_UserDelimitedCategories UNION
       select * from desiredCategories UNION
       select * from View_UserCategory
       )


--select distinct fe, count(*) as amount, lower(fe) as 'tmp' from all_fe where fe is not null and fe &lt;&gt; '' group by fe
select clientID, userID, fe, lower(fe) as 'tmp' from all_fe where fe is not null and fe &lt;&gt; ''
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1696</xloc>
      <yloc>464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact FE-SFE 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>


with
-- desiredskills
 -- with 
  desiredskills (clientID, userid, sfe) as (
       SELECT m.clientID, m.userid, trim( replace(replace(desiredskills.value,'•',''),'"','') ) as desiredskills 
       FROM bullhorn1.BH_Client m CROSS APPLY STRING_SPLIT(convert(nvarchar(max),m.desiredskills),';') AS desiredskills 
       where (isdeleted &lt;&gt; 1) and (desiredskills is not null and convert(nvarchar(max),desiredskills) &lt;&gt; '') )
--select distinct(desiredskills), count(*) from desiredskills group by desiredskills;
--select count(*) from cat1 --123926


-- desiredSpecialties >>> Sub Industry/Sector
, desiredSpecialties (clientID, userid, desiredSpecialties) as (
       SELECT m.clientID, m.userid, trim(desiredSpecialties.value) as desiredSpecialties 
       FROM bullhorn1.BH_Client m CROSS APPLY STRING_SPLIT(convert(nvarchar(max),m.desiredSpecialties),';') AS desiredSpecialties 
       where (isdeleted &lt;&gt; 1) and (desiredSpecialties is not null and convert(nvarchar(max),desiredSpecialties) &lt;&gt; '') 
       )
--select distinct(desiredSpecialties), count(*) from desiredSpecialties group by desiredSpecialties;
--select count(*) from desiredSpecialties --123926


---*** SKILL ***---
, SKILL (clientID, userid, skill) as (
       SELECT bullhorn1.bh_client.clientID, bullhorn1.bh_client.userID, trim( replace(replace([BH_SkillList].name,'•',''),'"','') ) as 'SkillName'
       FROM bullhorn1.bh_client --[bullhorn1].[BH_Candidate]
       LEFT JOIN [bullhorn1].BH_User on [BH_User].userID = bullhorn1.bh_client.userID --[BH_Candidate].userID
       LEFT JOIN [bullhorn1].BH_UserSkill on bullhorn1.bh_client.userID = [BH_UserSkill].userID
       LEFT JOIN [bullhorn1].BH_SkillList on [BH_UserSkill].skillID = [BH_SkillList].skillID
       WHERE [BH_SkillList].name is not null and [BH_SkillList].name &lt;&gt; '' and bullhorn1.bh_client.isdeleted &lt;&gt; 1 --and bullhorn1.bh_client.status &lt;&gt; 'Archive' 
       )
--select count(*) from SKILL     
--select distinct ltrim(rtrim(skill)), enabled from SKILL;
--select distinct ltrim(rtrim(skill)) as Skill from SKILL
--SELECT clientID, STRING_AGG( skill,', ' ) WITHIN GROUP (ORDER BY skill) skill from SKILL /*where clientID in (154)*/ group by clientID
--select * from SKILL where clientID in (6525,28881,30255,30254)

, all_sfe as (
       select * from desiredskills UNION
       select * from desiredSpecialties UNION
       select * from SKILL
       )
--select distinct sfe, count(*) as amount, lower(sfe) as 'tmp', 'others' as 'tmp_fe' from all_sfe where sfe is not null and sfe &lt;&gt; '' group by sfe
select clientID, userID, lower(sfe) as 'tmp', 'others' as 'tmp_fe' from all_sfe where sfe is not null and sfe &lt;&gt; ''



</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1472</xloc>
      <yloc>1232</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact FE-SFE 2 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>

with

-- desiredskills
  -- with 
  desiredskills (clientID, desiredskills) as ( 
       SELECT m.clientID, trim( replace(replace(desiredskills.value,'â€¢',''),'"','') ) as desiredskills 
       FROM bullhorn1.BH_Client m CROSS APPLY STRING_SPLIT(convert(nvarchar(max),m.desiredskills),';') AS desiredskills 
       where (isdeleted &lt;&gt; 1 /*and status &lt;&gt; 'Archive'*/) and (desiredskills is not null and convert(nvarchar(max),desiredskills) &lt;&gt; '') )
--select distinct(desiredskills), count(*) from desiredskills group by desiredskills;
--select count(*) from cat1 --123926


---*** SKILL ***---
, -- with 
  SKILL (clientID, userid, skillID, skill, enabled) as (
       SELECT bullhorn1.bh_client.clientID, bullhorn1.bh_client.userID, [BH_UserSkill].skillID, trim( replace(replace([BH_SkillList].name,'â€¢',''),'"','') ) as 'SkillName', [BH_SkillList].enabled --, [bullhorn1].BH_User.*
       FROM bullhorn1.bh_client --[bullhorn1].[BH_Candidate]
       LEFT JOIN [bullhorn1].BH_User on [BH_User].userID = bullhorn1.bh_client.userID --[BH_Candidate].userID
       LEFT JOIN [bullhorn1].BH_UserSkill on bullhorn1.bh_client.userID = [BH_UserSkill].userID
       LEFT JOIN [bullhorn1].BH_SkillList on [BH_UserSkill].skillID = [BH_SkillList].skillID
       WHERE [BH_SkillList].name is not null and [BH_SkillList].name &lt;&gt; '' and bullhorn1.bh_client.isdeleted &lt;&gt; 1 --and bullhorn1.bh_client.status &lt;&gt; 'Archive' 
       )
--select count(*) from SKILL     
--select distinct ltrim(rtrim(skill)), enabled from SKILL;
--select distinct ltrim(rtrim(skill)) as Skill from SKILL
--SELECT clientID, STRING_AGG( skill,', ' ) WITHIN GROUP (ORDER BY skill) skill from SKILL /*where clientID in (154)*/ group by clientID
--select top 100 * from SKILL where clientID in (548, 2224)


-- View_UserDelimitedCategories
, View_UserDelimitedCategories (userID, Categories) as ( 
       SELECT m.userID, trim(Categories.value) as Categories 
       FROM bullhorn1.View_UserDelimitedCategories m CROSS APPLY STRING_SPLIT(convert(nvarchar(max),m.Categories),';') AS Categories 
       where (Categories is not null and convert(nvarchar(max),Categories) &lt;&gt; '') )
--select distinct(Categories), count(*) from View_UserDelimitedCategories group by Categories;
--select count(*) from View_UserDelimitedCategories --123926
--select * from View_UserDelimitedCategories where Categories in ('Other') --userID in (50333)


, analytics as (
       select    Cl.clientID as 'contact-externalID', Cl.userID
              , vudc.Categories, lower(vudc.Categories) as 'tmp_fe'
              , SKILL.skill, lower(SKILL.skill) as 'tmp_sfe'
       from bullhorn1.bh_client Cl
       --left join bullhorn1.BH_UserContact UC ON UC.userID = Cl.userID
       left join View_UserDelimitedCategories vudc on vudc.userid = Cl.userID
       left join SKILL on SKILL.clientID = Cl.clientID
       where Cl.isdeleted &lt;&gt; 1 --and Cl.status &lt;&gt; 'Archive'
       --and bs.userid is not null
--       and vudc.userid is not null 
       )
--select distinct(lower(tmp)), count(*) from analytics group by tmp;
--select distinct(lower(Categories)), count(*) from analytics group by Categories;



---***********************************---
select --top 10000
         Cl.clientID as 'contact-externalID', Cl.userID
       , case when (ltrim(replace(UC.firstName,'?','')) = '' or  UC.firstName is null) then 'Firstname' else ltrim(replace(UC.firstName,'?','')) end as 'contact-firstName'
       , case when (ltrim(replace(UC.lastName,'?','')) = '' or  UC.lastName is null) then concat('Lastname-',Cl.clientID) else ltrim(replace(UC.lastName,'?','')) end as 'contact-Lastname'
       , vudc.Categories as 'fe', lower(vudc.Categories) as 'tmp_fe'
       , s.sfe as 'sfe', lower(s.sfe) as 'tmp_sfe'
-- select top 10 UC.*
from bullhorn1.View_ClientContact Cl
left join bullhorn1.BH_UserContact UC ON UC.userID = Cl.userID
left join bullhorn1.View_UserDelimitedCategories vudc on vudc.userid = Cl.userID
left join (select clientID, desiredskills as sfe from desiredskills UNION select clientID, skill as sfe from SKILL) s on s.clientID = Cl.clientID
where Cl.isdeleted &lt;&gt; 1 --and Cl.status &lt;&gt; 'Archive'
and vudc.userid is not null
--and s.clientID is not null
--and Cl.userID in (50333)


</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1696</xloc>
      <yloc>592</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact fe</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>

with
  desiredSpecialties (clientID, userID, fe) as ( 
       SELECT m.clientID, m.userID, trim(desiredSpecialties.value) as desiredSpecialties 
       FROM bullhorn1.BH_Client m CROSS APPLY STRING_SPLIT(convert(nvarchar(max),m.desiredSpecialties),';') AS desiredSpecialties 
       where (isdeleted &lt;&gt; 1) and (desiredSpecialties is not null and convert(nvarchar(max),desiredSpecialties) &lt;&gt; '') 
       )
--select distinct(desiredSpecialties), count(*) from desiredSpecialties group by desiredSpecialties;
--select count(*) from desiredSpecialties --123926


, View_UserDelimitedCategories (clientID, userID, fe) as ( 
       select C.clientID, C.userid, t.Categories
       FROM bullhorn1.BH_Client C
       left join (
              SELECT m.userID, trim(Categories.value) as Categories 
              FROM bullhorn1.View_UserDelimitedCategories m CROSS APPLY STRING_SPLIT(convert(nvarchar(max),m.Categories),';') AS Categories 
              where (Categories is not null and convert(nvarchar(max),Categories) &lt;&gt; '')
              ) t on t.userID = C.userID )
--select distinct(Categories), count(*) from View_UserDelimitedCategories group by Categories;
--select count(*) from View_UserDelimitedCategories --123926
--select * from View_UserDelimitedCategories where Categories in ('Other') --userID in (50333)


, desiredCategories(clientID, userid, desiredCategories) as (
       select C.clientID, C.userid, t.desiredCategories
       FROM bullhorn1.BH_Client C
       left join (
              SELECT m.userID, trim(desiredCategories.value) as desiredCategories 
              FROM bullhorn1.BH_Client m CROSS APPLY STRING_SPLIT(convert(nvarchar(max),m.desiredCategories),';') AS desiredCategories 
              where (desiredCategories is not null and convert(nvarchar(max),desiredCategories) &lt;&gt; '')
              ) t on t.userID = C.userID )
--select distinct desiredCategories from desiredCategories


, View_UserCategory(clientID, userid, View_UserCategory) as (
       select C.clientID, C.userid, vuc.name as 'View_UserCategory'
       FROM bullhorn1.BH_Client C
       left join ( select UC.userID, UC.categoryID, substring(name,charindex(':',name)+1,200) as name from BULLHORN1.View_UserCategory UC left join bullhorn1.BH_CategoryList CL ON UC.categoryid = CL.categoryID ) vuc on vuc.userid = C.userID
       where (C.isdeleted &lt;&gt; 1) --and UC.name is not null and UC.name &lt;&gt; '' --and C.userid in (165180)
       )
--select distinct(lower(View_UserDelimitedCategories)), count(*) from all_category group by View_UserDelimitedCategories;
--select distinct(desiredCategories), count(*) from all_category group by desiredCategories;
--select * from View_UserCategory where userid in (50333) --clientID in (5907,4934,4925,4941)

, all_fe as (
       select * from desiredSpecialties UNION
       select * from View_UserDelimitedCategories UNION
       select * from desiredCategories UNION
       select * from View_UserCategory
       )
select distinct fe, count(*) as amount, lower(fe) as 'tmp' from all_fe where fe is not null and fe &lt;&gt; '' group by fe
--UNION select 'SKILLS', 1, 'skills'

--select clientID, userID, fe, lower(fe) as 'tmp' from all_fe where fe is not null and fe &lt;&gt; ''
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1696</xloc>
      <yloc>400</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact id</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>clientID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_contact_id</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1472</xloc>
      <yloc>464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact id 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contact-externalID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_contact_id</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1472</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact id 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>clientID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_contact_id</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1248</xloc>
      <yloc>1232</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact id 3 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contact-externalID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_contact_id</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1472</xloc>
      <yloc>592</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact industry 2 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>

with
-- BusinessSectors
  BusinessSectors (userid, BusinessSectors) as (
       SELECT m.userid, trim( replace(replace(replace(BusinessSectors.value,'  ',' '),' )',')'),'( ','(') ) as BusinessSectors 
       FROM bullhorn1.View_UserDelimitedBusinessSectors m CROSS APPLY STRING_SPLIT(m.BusinessSectors,';') AS BusinessSectors 
       where (BusinessSectors is not null and BusinessSectors &lt;&gt; '') )
--select distinct BusinessSectors, count(*), current_timestamp as 'insert_timestamp',lower(bs.BusinessSectors) as 'tmp' from BusinessSectors group by BusinessSectors
--select count(*) from BusinessSectors


-- desiredskills
, desiredskills (clientID, desiredskills) as ( 
       SELECT m.clientID, trim( replace(replace(desiredskills.value,'•',''),'"','') ) as desiredskills 
       FROM bullhorn1.BH_Client m CROSS APPLY STRING_SPLIT(convert(nvarchar(max),m.desiredskills),';') AS desiredskills 
       where (isdeleted &lt;&gt; 1) and (desiredskills is not null and convert(nvarchar(max),desiredskills) &lt;&gt; '') )
--select distinct(desiredskills), count(*) from desiredskills group by desiredskills;
--select count(*) from cat1 --123926


-- desiredSpecialties >>> Sub Industry/Sector
, desiredSpecialties (clientID, desiredSpecialties) as ( 
       SELECT m.clientID, trim(desiredSpecialties.value) as desiredSpecialties 
       FROM bullhorn1.BH_Client m CROSS APPLY STRING_SPLIT(convert(nvarchar(max),m.desiredSpecialties),';') AS desiredSpecialties 
       where (isdeleted &lt;&gt; 1) and (desiredSpecialties is not null and convert(nvarchar(max),desiredSpecialties) &lt;&gt; '') )
--select distinct(desiredSpecialties), count(*) from desiredSpecialties group by desiredSpecialties;
--select count(*) from desiredSpecialties --123926


-- FUNCTIONAL EXPERTISE
-- View_UserCategory
, View_UserCategory(clientID, userid, categoryIDList, name) as (
       select C.clientID, C.userid, C.desiredCategories, UC.name 
       -- select top 10 * -- select distinct convert(nvarchar(max),desiredCategories) -- select distinct UC.name
       FROM bullhorn1.BH_Client C
       left join ( select UC.userID, UC.categoryID, substring(name,charindex(':',name)+1,200) as name from BULLHORN1.View_UserCategory UC left join bullhorn1.BH_CategoryList CL ON UC.categoryid = CL.categoryID ) UC on UC.userid = C.userID
       where UC.name is not null and UC.name &lt;&gt; '' and C.isdeleted &lt;&gt; 1
       )
--select distinct(name), count(*) from View_UserCategory group by name;
-- select * from CATEGORY where userid in (165180,165184 ,165199, 161585)


-- desiredCategories
, desiredCategories (clientID, desiredCategories) as ( 
       SELECT m.clientID, desiredCategories.value as desiredCategories 
       FROM bullhorn1.BH_Client m CROSS APPLY STRING_SPLIT(convert(nvarchar(max),m.desiredCategories),';') AS desiredCategories 
       where (isdeleted &lt;&gt; 1) and (desiredCategories is not null and convert(nvarchar(max),desiredCategories) &lt;&gt; '') )
--select distinct(desiredCategories), count(*) from desiredCategories group by desiredCategories;
--select count(*) from desiredCategories --123926
--select * from desiredCategories where clientID in (161981,162199)




---***********************************---
select    Cl.clientID as 'contact-externalID', Cl.userID
       , case when (ltrim(replace(UC.firstName,'?','')) = '' or  UC.firstName is null) then 'Firstname' else ltrim(replace(UC.firstName,'?','')) end as 'contact-firstName'
       , case when (ltrim(replace(UC.lastName,'?','')) = '' or  UC.lastName is null) then concat('Lastname-',Cl.clientID) else ltrim(replace(UC.lastName,'?','')) end as 'contact-Lastname'
       , bs.BusinessSectors, lower(bs.BusinessSectors) as 'tmp'
from bullhorn1.bh_client Cl
left join bullhorn1.BH_UserContact UC ON Cl.userID = UC.userID
left join BusinessSectors bs on bs.userid = Cl.userID
where (Cl.isdeleted &lt;&gt; 1) and bs.userid is not null
--and Cl.status &lt;&gt; 'Archive'
--and Cl.userID in (162199)







</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1696</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact lookup</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>ContactExtId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCContactID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2608</xloc>
      <yloc>656</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact lookup 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>ContactExtId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCContactID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2608</xloc>
      <yloc>1632</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact sfe</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>


with
-- desiredskills
 -- with 
  desiredskills (clientID, userid, sfe) as (
       SELECT m.clientID, m.userid, trim( replace(replace(desiredskills.value,'•',''),'"','') ) as desiredskills 
       FROM bullhorn1.BH_Client m CROSS APPLY STRING_SPLIT(convert(nvarchar(max),m.desiredskills),';') AS desiredskills 
       where (isdeleted &lt;&gt; 1) and (desiredskills is not null and convert(nvarchar(max),desiredskills) &lt;&gt; '') )
--select distinct(desiredskills), count(*) from desiredskills group by desiredskills;
--select count(*) from cat1 --123926


-- desiredSpecialties >>> Sub Industry/Sector
, desiredSpecialties (clientID, userid, desiredSpecialties) as (
       SELECT m.clientID, m.userid, trim(desiredSpecialties.value) as desiredSpecialties 
       FROM bullhorn1.BH_Client m CROSS APPLY STRING_SPLIT(convert(nvarchar(max),m.desiredSpecialties),';') AS desiredSpecialties 
       where (isdeleted &lt;&gt; 1) and (desiredSpecialties is not null and convert(nvarchar(max),desiredSpecialties) &lt;&gt; '') 
       )
--select distinct(desiredSpecialties), count(*) from desiredSpecialties group by desiredSpecialties;
--select count(*) from desiredSpecialties --123926


---*** SKILL ***---
, SKILL (clientID, userid, skill) as (
       SELECT bullhorn1.bh_client.clientID, bullhorn1.bh_client.userID, trim( replace(replace([BH_SkillList].name,'•',''),'"','') ) as 'SkillName'
       FROM bullhorn1.bh_client --[bullhorn1].[BH_Candidate]
       LEFT JOIN [bullhorn1].BH_User on [BH_User].userID = bullhorn1.bh_client.userID --[BH_Candidate].userID
       LEFT JOIN [bullhorn1].BH_UserSkill on bullhorn1.bh_client.userID = [BH_UserSkill].userID
       LEFT JOIN [bullhorn1].BH_SkillList on [BH_UserSkill].skillID = [BH_SkillList].skillID
       WHERE [BH_SkillList].name is not null and [BH_SkillList].name &lt;&gt; '' and bullhorn1.bh_client.isdeleted &lt;&gt; 1 --and bullhorn1.bh_client.status &lt;&gt; 'Archive' 
       )
--select count(*) from SKILL     
--select distinct ltrim(rtrim(skill)), enabled from SKILL;
--select distinct ltrim(rtrim(skill)) as Skill from SKILL
--SELECT clientID, STRING_AGG( skill,', ' ) WITHIN GROUP (ORDER BY skill) skill from SKILL /*where clientID in (154)*/ group by clientID
--select * from SKILL where clientID in (6525,28881,30255,30254)

, all_sfe as (
       select * from desiredskills UNION
       select * from desiredSpecialties UNION
       select * from SKILL
       )
select distinct sfe, count(*) as amount, lower(sfe) as 'tmp', 'others' as tmp_fe from all_sfe where sfe is not null and sfe &lt;&gt; '' group by sfe
--select clientID, userID, lower(sfe) as 'tmp', 'OTHERS' as fe_name from all_sfe where sfe is not null and sfe &lt;&gt; ''



</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1472</xloc>
      <yloc>1168</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact_department</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>contact_department</table>
      <key>
        <name>company_department_id</name>
        <field>department_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_contact_id</name>
        <field>contact_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>department_id</name>
        <rename>company_department_id</rename>
        <update>N</update>
      </value>
      <value>
        <name>contact_id</name>
        <rename>final_contact_id</rename>
        <update>N</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>department_insert_timestamp</rename>
        <update>N</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2480</xloc>
      <yloc>1104</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact_group_contact</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>contact_group_contact</table>
      <key>
        <name>VCContactID</name>
        <field>contact_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCContactGroupID</name>
        <field>contact_group_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>contact_id</name>
        <rename>VCContactID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>contact_group_id</name>
        <rename>VCContactGroupID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1232</xloc>
      <yloc>848</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contract_rate</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>300</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>contract_rate</name>
        <rename>Contract Pay Rate</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5968</xloc>
      <yloc>1664</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contract_rate 3</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>300</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>contract_rate</name>
        <rename>Current Pay Rate</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5968</xloc>
      <yloc>1792</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>dayRate/dayRateLow/day - desired_contract_rate/contract_rate/contract_interval</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select 
         convert(varchar(500),C.candidateID) as 'candidate-externalId'
       , Coalesce(NULLIF(replace(C.FirstName,'?',''), ''), 'No Firstname') as 'contact-firstName'
       , Coalesce(NULLIF(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID)) as 'contact-lastName'

       , c.dayRate as 'desired_contract_rate'
       , c.dayRateLow as 'contract_rate'
       , 'day' as 'contract_interval'

from bullhorn1.Candidate C
where c.isdeleted &lt;&gt; 1
and (c.dayRate &lt;&gt; '' and c.dayRate is not null ) or (c.dayRateLow &lt;&gt; '' and c.dayRateLow is not null )
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5680</xloc>
      <yloc>1936</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>deleted_timestamp</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>Y</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <key>
        <name>actual_contactid</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>deleted_timestamp</name>
        <rename>dateadded</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1696</xloc>
      <yloc>1056</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>desire_salary</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>desire_salary</name>
        <rename>desire_salary</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5968</xloc>
      <yloc>1728</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>document_types</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>document_types</table>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>name</name>
        <rename>name</rename>
        <update>N</update>
      </value>
      <value>
        <name>tmp</name>
        <rename>tmp</rename>
        <update>N</update>
      </value>
      <value>
        <name>kind</name>
        <rename>kind</rename>
        <update>N</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>352</xloc>
      <yloc>832</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>document_types 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>with 
  company(company, ID, docid, uploaded_filename, created, type) as (SELECT 'company', clientCorporationID,  concat(F.clientCorporationFileID,F.fileExtension) as docid, concat(F.name, F.fileExtension) as filename, F.dateadded, F.type from bullhorn1.BH_ClientCorporationFile F ) --where F.fileExtension in ('.doc','.docx','.pdf','.xls','.xlsx','.rtf','.html')
--select *, 0 as candidate_id, 'legal_document' as document_type from company where id in (12005)
, contact(contact, ID, docid, uploaded_filename, created, type) as (SELECT 'contact', Cl.clientid, concat(F.clientContactFileID, F.fileExtension) as docid, concat(F.name, F.fileExtension) as filename, F.dateadded, F.type from bullhorn1.View_ClientContactFile F left join bullhorn1.BH_Client Cl on Cl.userid = F.clientcontactuserid ) --where F.fileExtension in ('.doc','.docx','.pdf','.xls','.xlsx','.rtf','.html')
--select *, 0 as candidate_id, 'document' as document_type from contact
, job(job, ID, docid, uploaded_filename, created, type) as (SELECT 'job', jobPostingID, concat(jobPostingFileID, fileExtension) as docid, concat(name, fileExtension) as filename, F.dateadded, F.type from bullhorn1.View_JobPostingFile F ) --where fileExtension in ('.doc','.docx','.pdf','.xls','.xlsx','.rtf','.html') 
--select *, 0 as candidate_id, 'job_description' as document_type from job
, candidate(candidateID, ID, docid, uploaded_filename, created, type) as ( SELECT 'candidateID', c.candidateid,  concat(F.candidateFileID, F.fileExtension) as ResumeId, concat(F.name, F.fileExtension) as filename, F.dateadded, F.type from bullhorn1.View_CandidateFile F left join bullhorn1.Candidate C on C.userid = F.candidateuserid) --F.candidateUserID, WHERE F.fileExtension in ('.doc','.docx','.pdf','.xls','.xlsx','.rtf','.html') and C.candidateid in (121698)
--select * from candidate where ID in (161358,157430,149777 )
, placement(candidateID, ID, docid, uploaded_filename, created, type) as (SELECT 'candidateID', c.candidateid ,  concat(placementFileID, fileExtension) as placementfile, concat(F.name, F.fileExtension) as filename, F.dateadded, F.type from bullhorn1.View_PlacementFile F left join bullhorn1.Candidate C on C.userid = F.userid) --F.userID, WHERE fileExtension in ('.doc','.docx','.pdf','.xls','.xlsx','.rtf','.html')
--select top 10 * from placement
, doc as (
       select * from company
       union all
       select * from contact
       union all
       select * from job
       union all 
       select * from candidate
       union all
       select * from placement
)
--select distinct trim(type) as type from doc where type is not null and type &lt;&gt; ''
select distinct --trim(type),
       case 
              when trim(type) like 'CV%' then 'CV/Resume'
              when trim(type) like '%resume%' then 'CV/Resume'
              when trim(type) like '%Formatted CV%' then 'BH Formatted CV'
              when trim(type) like '%other%' then 'Other docs'
              else trim(type) end as name
       , lower(
              case 
              when trim(type) like 'CV%' then 'CV/Resume'
              when trim(type) like '%resume%' then 'CV/Resume'
              when trim(type) like '%Formatted CV%' then 'BH Formatted CV'
              when trim(type) like '%other%' then 'Other docs'
              else trim(type) end) as tmp
	, 0 as kind
from doc 
where type is not null and type not in ('') --,'NA')</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>224</xloc>
      <yloc>832</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>document_types 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>document_types</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>document_types_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>608</xloc>
      <yloc>1200</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>document_types 4</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>document_types</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>document_types_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>608</xloc>
      <yloc>1120</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>document_types 5</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>document_types</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>document_types_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>528</xloc>
      <yloc>928</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>document_types 6</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>document_types</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>document_types_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>608</xloc>
      <yloc>1024</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>fe</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>functional_expertise</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_fe_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1360</xloc>
      <yloc>464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>fe 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>

with
-- CATEGORY
--  View_JobCategory (jobPostingID, categoryID) as ( 
--       SELECT m.jobPostingID, trim( replace(replace(categoryID.value,'•',''),'"','') ) as categoryID 
--       FROM bullhorn1.View_JobCategory m CROSS APPLY STRING_SPLIT(convert(nvarchar(max),m.categoryID),';') AS categoryID 
--       where (categoryID is not null and convert(nvarchar(max),categoryID) &lt;&gt; '')  -- and (isdeleted &lt;&gt; 1 and status &lt;&gt; 'Archive') 
--       )
--m.jobpostingidselect distinct(categoryID), count(*) from View_JobCategory group by categoryID;
--select * from bullhorn1.View_JobCategory


  View_JobDelimitedCategories (jobPostingID, fe, rn) as ( 
       SELECT m.jobPostingID, trim( replace(replace(Categories.value,'•',''),'"','') ) as Categories
              , rn = ROW_NUMBER() OVER (PARTITION BY m.jobPostingID ORDER BY m.jobPostingID desc)
       --FROM bullhorn1.View_JobDelimitedCategories m
       FROM (
              SELECT m.jobPostingID, trim( replace(replace(Categories.value,'•',''),'"','') ) as Categories
              FROM bullhorn1.View_JobDelimitedCategories m
              CROSS APPLY STRING_SPLIT(convert(nvarchar(max),m.Categories),',') AS Categories
              ) m
       CROSS APPLY STRING_SPLIT(convert(nvarchar(max),m.Categories),';') AS Categories
       where (Categories is not null and convert(nvarchar(max),Categories) &lt;&gt; '')  -- and (isdeleted &lt;&gt; 1 and status &lt;&gt; 'Archive') 
       )
--select distinct(Categories), count(*) from View_JobDelimitedCategories group by Categories;
--select * from View_JobDelimitedCategories where rn = 1
--select * from bullhorn1.View_JobDelimitedCategories;
--select distinct cast(JDC.categories as varchar(max)) from bullhorn1.View_JobDelimitedCategories JDC --where cast(skills as varchar(max)) &lt;&gt; ''


--select * from bullhorn1.View_JobDelimitedSpecialties;
, View_JobDelimitedSpecialties (jobPostingID, Specialties, rn) as ( 
       SELECT m.jobPostingID, trim( replace(replace(Specialties.value,'•',''),'"','') ) as Specialties
              , rn = ROW_NUMBER() OVER (PARTITION BY m.jobPostingID ORDER BY m.jobPostingID desc)
       --FROM bullhorn1.View_JobDelimitedCategories m
       FROM (
              SELECT m.jobPostingID, trim( replace(replace(Specialties.value,'•',''),'"','') ) as Specialties
              FROM bullhorn1.View_JobDelimitedSpecialties m
              CROSS APPLY STRING_SPLIT(convert(nvarchar(max),m.Specialties),',') AS Specialties
              ) m
       CROSS APPLY STRING_SPLIT(convert(nvarchar(max),m.Specialties),';') AS Specialties
       where (Specialties is not null and convert(nvarchar(max),Specialties) &lt;&gt; '')  -- and (isdeleted &lt;&gt; 1 and status &lt;&gt; 'Archive') 
       )
--select distinct(Specialties), count(*) from View_JobDelimitedSpecialties group by Specialties;
--select * from View_JobDelimitedSpecialties


, all_fe as (
       select * from View_JobDelimitedCategories UNION
       select * from View_JobDelimitedSpecialties
       )


select distinct(fe) as fe, count(*) as amount, lower(fe) as 'tmp' from all_fe group by fe
UNION select 'SKILLS', 1, 'skills'


--select jobPostingID, fe, lower(fe) as tmp from all_fe where fe is not null and fe &lt;&gt; ''





</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3360</xloc>
      <yloc>784</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>fe 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>functional_expertise</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>tmp_fe</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_fe_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1136</xloc>
      <yloc>1232</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>fe 3 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>functional_expertise</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>tmp_fe</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_fe_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1360</xloc>
      <yloc>592</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>fe 3 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>functional_expertise</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>tmp_fe</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_fe_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4512</xloc>
      <yloc>1088</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>fe 3 2 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>functional_expertise</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>tmp_fe</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_fe_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4752</xloc>
      <yloc>1024</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>fe 3 2 2 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>functional_expertise</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>tmp_fe</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_fe_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3744</xloc>
      <yloc>976</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>fe 3 2 2 4</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>functional_expertise</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>tmp_fe</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_fe_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4512</xloc>
      <yloc>784</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>fe 3 2 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>functional_expertise</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>tmp_fe</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_fe_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3504</xloc>
      <yloc>912</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>fe 4</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>functional_expertise</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>fe_actual_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3744</xloc>
      <yloc>848</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>fe 5</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>functional_expertise</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_fe_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4512</xloc>
      <yloc>656</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>final_contact_id</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contact-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_contact_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1904</xloc>
      <yloc>272</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>final_contact_id  - Lead</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contact-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_contact_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1968</xloc>
      <yloc>1296</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>final_contact_id 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>position-contactId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_company_id</name>
        <field>company_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_contact_id</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3440</xloc>
      <yloc>112</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>functional_expertise</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>functional_expertise</table>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>name</name>
        <rename>fe</rename>
        <update>Y</update>
      </value>
      <value>
        <name>tmp</name>
        <rename>tmp</rename>
        <update>N</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1568</xloc>
      <yloc>400</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>functional_expertise 3</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>functional_expertise</table>
      <key>
        <name>tmp_fe</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>name</name>
        <rename>fe</rename>
        <update>Y</update>
      </value>
      <value>
        <name>tmp</name>
        <rename>tmp_fe</rename>
        <update>N</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1568</xloc>
      <yloc>528</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>functional_expertise 3 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>functional_expertise</table>
      <key>
        <name>tmp_fe</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>name</name>
        <rename>fe</rename>
        <update>Y</update>
      </value>
      <value>
        <name>tmp</name>
        <rename>tmp_fe</rename>
        <update>N</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4752</xloc>
      <yloc>720</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>hourlyRate/hourlyRateLow/hour - desired_contract_rate/contract_rate/contract_interval</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select 
         convert(varchar(500),C.candidateID) as 'candidate-externalId'
       , Coalesce(NULLIF(replace(C.FirstName,'?',''), ''), 'No Firstname') as 'contact-firstName'
       , Coalesce(NULLIF(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID)) as 'contact-lastName'

       , c.hourlyRate as 'desired_contract_rate'
       , c.hourlyRateLow as 'contract_rate'
       , 'hour' as 'contract_interval'
--       , c.dayRate as 'desired_contract_rate'
--       , c.dayRateLow as 'contract_rate'

from bullhorn1.Candidate C
where c.isdeleted &lt;&gt; 1
and (c.hourlyRate &lt;&gt; '' and c.hourlyRate is not null ) or (c.hourlyRateLow &lt;&gt; '' and c.hourlyRateLow is not null )
--where C.isPrimaryOwner = 1	
--where c.hourlyRate &lt;&gt; 0
--where c.dateAdded >= '2020-01-01 00:00:00'</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5680</xloc>
      <yloc>1856</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>industry</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>vertical</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_industry_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4512</xloc>
      <yloc>528</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>industry - BusinessSectors</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
-- BusinessSector: split by separate rows by comma, then combine them into Business Sector(Industry)
/*with
  BusinessSector0(userid, businessSectorID) as (SELECT userid, a.value as ind FROM  ( select Cl.userID, UC.businessSectorIDList from bullhorn1.BH_Client Cl left join bullhorn1.BH_UserContact UC ON Cl.userID = UC.userID where Cl.isPrimaryOwner = 1 and convert(varchar(100),UC.businessSectorIDList) &lt;&gt; '' and UC.businessSectorIDList is not null ) m CROSS APPLY STRING_SPLIT( ltrim(rtrim( convert(varchar(100),m.businessSectorIDList) )), ',') AS a )
, BusinessSector(userId, BusinessSector) as (SELECT userId, ltrim(rtrim(BSL.name)) as BusinessSector from BusinessSector0 left join bullhorn1.BH_BusinessSectorList BSL ON BusinessSector0.businessSectorID = BSL.businessSectorID WHERE BusinessSector0.businessSectorID &lt;&gt; '' )
-- select * from BusinessSector
select
       distinct BusinessSector
       , current_timestamp as insert_timestamp
from BusinessSector*/




with
-- BusinessSectors
  BusinessSectors (userid, BusinessSectors) as (
       SELECT m.userid, trim( replace(replace(replace(BusinessSectors.value,'  ',' '),' )',')'),'( ','(') ) as BusinessSectors 
       FROM bullhorn1.View_UserDelimitedBusinessSectors m CROSS APPLY STRING_SPLIT(m.BusinessSectors,';') AS BusinessSectors 
       where (BusinessSectors is not null and BusinessSectors &lt;&gt; '') )
select distinct BusinessSectors as 'industry', count(*), current_timestamp as 'insert_timestamp', lower(BusinessSectors) as 'tmp' from BusinessSectors group by BusinessSectors</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1696</xloc>
      <yloc>272</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>industry 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>vertical</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>parent_id</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_industry_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>592</xloc>
      <yloc>656</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>industry 4</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>vertical</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_industry_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1360</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>industry 4 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>vertical</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_industry_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3744</xloc>
      <yloc>720</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>insert contact_group</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>contact_group</table>
      <key>
        <name>GROUP_NAME</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>owner_id</name>
        <field>owner_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>name</name>
        <rename>GROUP_NAME</rename>
        <update>Y</update>
      </value>
      <value>
        <name>owner_id</name>
        <rename>owner_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>share_permission</name>
        <rename>share_permission</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1568</xloc>
      <yloc>784</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>insert job fe</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>functional_expertise</table>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>name</name>
        <rename>fe</rename>
        <update>Y</update>
      </value>
      <value>
        <name>tmp</name>
        <rename>tmp</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3504</xloc>
      <yloc>784</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>job 6</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>application-positionExternalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCJobID</rename>
        <default/>
        <type>BigNumber</type>
      </value>
      <value>
        <name>company_id</name>
        <rename>pd.company_id</rename>
        <default/>
        <type>Integer</type>
      </value>
      <value>
        <name>contact_id</name>
        <rename>pd.client_contact_id</rename>
        <default/>
        <type>Integer</type>
      </value>
      <value>
        <name>position_type</name>
        <rename>pd.position_type</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>currency_type</name>
        <rename>pd.currency_type</rename>
        <default/>
        <type>String</type>
      </value>
      <value>
        <name>company_location_id</name>
        <rename>pd.company_location_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6592</xloc>
      <yloc>608</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>job 6 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>application-positionExternalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCJobID</rename>
        <default/>
        <type>BigNumber</type>
      </value>
      <value>
        <name>company_id</name>
        <rename>pd.company_id</rename>
        <default/>
        <type>Integer</type>
      </value>
      <value>
        <name>contact_id</name>
        <rename>pd.client_contact_id</rename>
        <default/>
        <type>Integer</type>
      </value>
      <value>
        <name>position_type</name>
        <rename>pd.position_type</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>currency_type</name>
        <rename>pd.currency_type</rename>
        <default/>
        <type>String</type>
      </value>
      <value>
        <name>company_location_id</name>
        <rename>pd.company_location_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6624</xloc>
      <yloc>1584</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>job 6 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>application-positionExternalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCJobID</rename>
        <default/>
        <type>Integer</type>
      </value>
      <value>
        <name>company_id</name>
        <rename>pd.company_id</rename>
        <default/>
        <type>Integer</type>
      </value>
      <value>
        <name>contact_id</name>
        <rename>pd.client_contact_id</rename>
        <default/>
        <type>Integer</type>
      </value>
      <value>
        <name>position_type</name>
        <rename>pd.position_type</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>currency_type</name>
        <rename>pd.currency_type</rename>
        <default/>
        <type>String</type>
      </value>
      <value>
        <name>company_location_id</name>
        <rename>pd.company_location_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6592</xloc>
      <yloc>720</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>job activity</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <schema>public</schema>
    <table>activity</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>N</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field>contactid</partitioning_field>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
      <field>
        <column_name>position_id</column_name>
        <stream_name>actual_id</stream_name>
      </field>
      <field>
        <column_name>user_account_id</column_name>
        <stream_name>final_user_account_id</stream_name>
      </field>
      <field>
        <column_name>insert_timestamp</column_name>
        <stream_name>insert_timestamp</stream_name>
      </field>
      <field>
        <column_name>content</column_name>
        <stream_name>content</stream_name>
      </field>
      <field>
        <column_name>type</column_name>
        <stream_name>type</stream_name>
      </field>
      <field>
        <column_name>category</column_name>
        <stream_name>category</stream_name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3888</xloc>
      <yloc>1040</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>job industry</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>with
  View_JobDelimitedBusinessSectors (jobPostingID, BusinessSectors, rn) as ( 
       SELECT m.jobPostingID, trim( replace(replace(replace(BusinessSectors.value,'  ',' '),' )',')'),'( ','(') ) as BusinessSectors
              , rn = ROW_NUMBER() OVER (PARTITION BY m.jobPostingID ORDER BY m.jobPostingID desc)
       FROM bullhorn1.View_JobDelimitedBusinessSectors m CROSS APPLY STRING_SPLIT(convert(nvarchar(max),m.BusinessSectors),';') AS BusinessSectors 
       where (BusinessSectors is not null and convert(nvarchar(max),BusinessSectors) &lt;&gt; '') -- and (m.isdeleted &lt;&gt; 1 and m.status &lt;&gt; 'Archive')
       )
--select distinct BusinessSectors, count(*), current_timestamp as 'insert_timestamp', lower(BusinessSectors) as tmp from View_JobDelimitedBusinessSectors group by BusinessSectors;
--select * from bullhorn1.View_JobDelimitedBusinessSectors;

select
         a.jobPostingID as 'position-externalId-ind'
       , a.dateadded
       , a.title as 'position-title'
       , View_JobDelimitedBusinessSectors.businesssectors, lower(View_JobDelimitedBusinessSectors.businesssectors) as tmp
from bullhorn1.BH_JobPosting a --where a.jobPostingID = 2539
left join View_JobDelimitedBusinessSectors on View_JobDelimitedBusinessSectors.jobPostingID = a.jobPostingID
where (a.isdeleted &lt;&gt; 1) 
and (View_JobDelimitedBusinessSectors.jobPostingID is not null and View_JobDelimitedBusinessSectors.rn = 1)
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3360</xloc>
      <yloc>720</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>job industry - BusinessSectors</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>with
  View_JobDelimitedBusinessSectors (jobPostingID, BusinessSectors, rn) as ( 
       SELECT m.jobPostingID, trim( replace(replace(replace(BusinessSectors.value,'  ',' '),' )',')'),'( ','(') ) as BusinessSectors
              , rn = ROW_NUMBER() OVER (PARTITION BY m.jobPostingID ORDER BY m.jobPostingID desc)
       FROM bullhorn1.View_JobDelimitedBusinessSectors m CROSS APPLY STRING_SPLIT(convert(nvarchar(max),m.BusinessSectors),';') AS BusinessSectors 
       where (BusinessSectors is not null and convert(nvarchar(max),BusinessSectors) &lt;&gt; '') -- and (m.isdeleted &lt;&gt; 1 and m.status &lt;&gt; 'Archive')
       )
select distinct BusinessSectors as 'industry', count(*), current_timestamp as 'insert_timestamp_ind', lower(BusinessSectors) as tmp from View_JobDelimitedBusinessSectors group by BusinessSectors;
--select * from bullhorn1.View_JobDelimitedBusinessSectors;
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3360</xloc>
      <yloc>656</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>last_activtiy_date 3</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>candidate_extension</table>
      <key>
        <name>final_candidate_id</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>last_activity_date</name>
        <rename>last_activtiy_date</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5152</xloc>
      <yloc>1216</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>lookup company 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>clientCorporationID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_company_id</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>464</xloc>
      <yloc>656</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>lookup_final_candidate</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_candidate_id</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>current_location_id</name>
        <rename>can.current_location_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5072</xloc>
      <yloc>176</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>position_agency_consultant</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>position_agency_consultant</table>
      <key>
        <name>final_job_id</name>
        <field>position_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>vc_user_account_id</name>
        <field>user_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>position_id</name>
        <rename>final_job_id</rename>
        <update>N</update>
      </value>
      <value>
        <name>user_id</name>
        <rename>vc_user_account_id</rename>
        <update>N</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3888</xloc>
      <yloc>272</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>position_candidate</name>
    <type>Update</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>Y</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema/>
      <table>position_candidate</table>
      <key>
        <name>VCPOSITIONCANDIDATEID</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>hire_date</name>
        <rename>placed_date</rename>
      </value>
      <value>
        <name>placed_date</name>
        <rename>placed_date</rename>
      </value>
      <value>
        <name>offer_date</name>
        <rename>placed_date</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>7456</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>position_candidate 3</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema/>
      <table>position_candidate</table>
      <key>
        <name>final_candidate_id</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_position_id</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>candidate_id</name>
        <rename>final_candidate_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>position_description_id</name>
        <rename>final_position_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>status</name>
        <rename>status</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>associated_date</name>
        <rename>associated_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>sent_date</name>
        <rename>sent_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>interview1_date</name>
        <rename>interview1_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>interview2_date</name>
        <rename>interview2_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>offer_date</name>
        <rename>offer_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>active</name>
        <rename>active</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6912</xloc>
      <yloc>1344</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>position_description</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>position-externalId-ind</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_job_id_ind</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3632</xloc>
      <yloc>720</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>position_description 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>position-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>job_actual_id</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3888</xloc>
      <yloc>592</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>position_description 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>application-positionExternalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_position_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6592</xloc>
      <yloc>1408</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>position_description 3 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>application-positionExternalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_position_id</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6576</xloc>
      <yloc>1232</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>position_description 4</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>jobPostingID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>job_actual_id</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3632</xloc>
      <yloc>848</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>position_description 5</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>externalid</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>actual_id</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3632</xloc>
      <yloc>1040</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>position_description 6</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>job-externalid-sfe</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_job_id</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3632</xloc>
      <yloc>976</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>position_description 7</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>application-positionExternalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_position_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6720</xloc>
      <yloc>64</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>position_description 8</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>position_description</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>JobExtID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>jobid</rename>
        <default/>
        <type>BigNumber</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>464</xloc>
      <yloc>1120</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>position_description_functional_expertise</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>position_description_functional_expertise</table>
      <key>
        <name>job_actual_id</name>
        <field>position_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>fe_actual_id</name>
        <field>functional_expertise_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>position_id</name>
        <rename>job_actual_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>functional_expertise_id</name>
        <rename>fe_actual_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3888</xloc>
      <yloc>848</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>position_sub_type</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>Y</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <key>
        <name>final_job_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>position_sub_type</name>
        <rename>position_sub_type</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3744</xloc>
      <yloc>400</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>salary - contract_rate</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select --top 10
        convert(varchar(max),C.candidateID) as 'candidate-externalId' --, C.userID as '#userID'
      , coalesce(nullif(replace(C.FirstName,'?',''), ''), 'No Firstname') as 'contact-firstName'
      , coalesce(nullif(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID)) as 'contact-lastName'

    , cast(C.salary as int) as 'Current Pay Rate'

from bullhorn1.Candidate C
where C.isdeleted &lt;&gt; 1 --and C.status &lt;&gt; 'Archive'     
and salary is not null and salary &lt;&gt; 0</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5680</xloc>
      <yloc>1792</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>salary - desire_salary</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select --top 10
        convert(varchar(max),C.candidateID) as 'candidate-externalId' --, C.userID as '#userID'    , coalesce(nullif(replace(C.FirstName,'?',''), ''), 'No Firstname') as 'contact-firstName'
      , coalesce(nullif(replace(C.FirstName,'?',''), ''), 'No Firstname') as 'contact-firstName'
      , coalesce(nullif(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID)) as 'contact-lastName'

    --, cast(C.salary as int) as 'Desired Annual Salary - GB: This is monthly number so needs * 12'
--    , cast(C.salary*12 as int) as 'desire_salary'
    , cast(C.salaryLow as int) as 'desire_salary' --'Current Salary (Annual) - Mths/year = 12'
    
from bullhorn1.Candidate C --where C.isPrimaryOwner = 1
where C.isdeleted &lt;&gt; 1 --and C.status &lt;&gt; 'Archive'     
and salaryLow is not null and salaryLow &lt;&gt; 0</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5680</xloc>
      <yloc>1728</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>salary/hourlyratelow - contract_rate</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>


select --top 10
        convert(varchar(max),C.candidateID) as 'candidate-externalId' --, C.userID as '#userID'
      , coalesce(nullif(replace(C.FirstName,'?',''), ''), 'No Firstname') as 'contact-firstName'
      , coalesce(nullif(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID)) as 'contact-lastName'

      , cast(C.salary as int) as 'Current Pay Rate'

from bullhorn1.Candidate C
where C.isdeleted &lt;&gt; 1 --and C.status &lt;&gt; 'Archive'     
and salary is not null and salary &lt;&gt; 0


/*
select --top 10
        convert(varchar(max),C.candidateID) as 'candidate-externalId' --, C.userID as '#userID'
      , coalesce(nullif(replace(C.FirstName,'?',''), ''), 'No Firstname') as 'contact-firstName'
      , coalesce(nullif(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID)) as 'contact-lastName'

    --, cast(C.hourlyratelow as int) as 'Contract Pay Rate'
	  , C.hourlyratelow as 'Contract Pay Rate'

from bullhorn1.Candidate C
where C.isdeleted &lt;&gt; 1 --and C.status &lt;&gt; 'Archive'     
and hourlyratelow is not null and hourlyratelow &lt;&gt; 0
*/</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5680</xloc>
      <yloc>1664</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>salary/salarylow/day - desired_contract_rate/contract_rate/contract_interval</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select 
       convert(varchar(500),C.candidateID) as 'candidate-externalId'
       , Coalesce(NULLIF(replace(C.FirstName,'?',''), ''), 'No Firstname') as 'contact-firstName'
       , Coalesce(NULLIF(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID)) as 'contact-lastName'

       , c.salary as 'desired_contract_rate'
       , c.salarylow as 'contract_rate'
       , 'day' as 'contract_interval'
--       , c.dayRate as 'desired_contract_rate'
--       , c.dayRateLow as 'contract_rate'

from bullhorn1.Candidate C
where (c.salary &lt;&gt; '' and c.salary is not null ) or (c.salarylow &lt;&gt; '' and c.salarylow is not null )
--where C.isPrimaryOwner = 1	
--where c.hourlyRate &lt;&gt; 0
--where c.dateAdded >= '2020-01-01 00:00:00'</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5680</xloc>
      <yloc>2000</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>sfe</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
with
  View_UserSpecialty(candidateID, userid, firstname, lastname, SPECIALTY, enabled) as (
       select distinct C.candidateID, C.userid, C.firstname, C.lastname, /*C.specialtyIDList, UC.SpecialtyID,*/ ltrim(rtrim(UC.name)) as name, UC.enabled
       FROM bullhorn1.Candidate C
       left join ( select US.userID, US.SpecialtyID, VS.name as name, enabled from BULLHORN1.View_UserSpecialty US left join bullhorn1.View_Specialty VS ON US.SpecialtyID = VS.specialtyID ) UC on UC.userid = C.userID
       where (C.isdeleted &lt;&gt; 1 )  and UC.userid is not null --and C.status &lt;&gt; 'Archive'
       --where UC.name is not null and UC.name &lt;&gt; '' and C.isdeleted &lt;&gt; 1 and C.status &lt;&gt; 'Archive' 
       --where C.userid in (63774,61671 ,65415, 65303)
       )
--select SPECIALTY, count(*) from View_UserSpecialty group by SPECIALTY;
--select distinct trim(SPECIALTY), trim(SPECIALTY) as 'tmp' from View_UserSpecialty where SPECIALTY is not null and SPECIALTY &lt;&gt; '' and name not in ('.SKILLS_AC')
--select distinct trim(SPECIALTY), enabled from View_UserSpecialty;      
--select candidateID from (select * from View_UserSpecialty where name = 'design') t group by candidateID having count(*) > 1
--select * from bullhorn1.View_UserSpecialty where name = 'design' and candidateid not in (10049,10198)
--select * from bullhorn1.View_UserSpecialty where SPECIALTY is not null and userid in (8771)
--select * from bullhorn1.View_Specialty; select enabled, count(*) as amount from bullhorn1.View_Specialty group by enabled

-- CHECKING
, amount as (
       select --top 10
                C.candidateID as 'candidate-externalid-sfe', C.userID as 'userID'
              , coalesce(nullif(replace(C.FirstName,'?',''), ''), 'No Firstname') as 'candidate-firstName'
              , coalesce(nullif(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID)) as 'candidate-lastName'
              , 'others' as 'tmp_fe'
              , View_UserSpecialty.SPECIALTY as 'sfe', lower(View_UserSpecialty.SPECIALTY) as 'tmp_sfe'
       from bullhorn1.Candidate C 
       left join View_UserSpecialty on View_UserSpecialty.candidateID = c.candidateID
       where C.isdeleted &lt;&gt; 1 -- and C.status &lt;&gt; 'Archive'
       and View_UserSpecialty.candidateID is not null
       --and C.userID in (41953)
       )
select * from amount 
--select top 10 * from amount where userid in (29790, 29772)
--select tmp, count(*) from amount group by tmp order by tmp asc
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4880</xloc>
      <yloc>1088</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>sfe 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>

with
  View_UserSpecialty(candidateID, userid, firstname, lastname, SPECIALTY, enabled) as (
       select distinct C.candidateID, C.userid, C.firstname, C.lastname, /*C.specialtyIDList, UC.SpecialtyID,*/ ltrim(rtrim(UC.name)) as name, UC.enabled
       FROM bullhorn1.Candidate C
       left join ( select US.userID, US.SpecialtyID, VS.name as name, enabled from BULLHORN1.View_UserSpecialty US left join bullhorn1.View_Specialty VS ON US.SpecialtyID = VS.specialtyID ) UC on UC.userid = C.userID
       where (C.isdeleted &lt;&gt; 1 )  and UC.userid is not null --and C.status &lt;&gt; 'Archive'
       --where UC.name is not null and UC.name &lt;&gt; '' and C.isdeleted &lt;&gt; 1 and C.status &lt;&gt; 'Archive' 
       --where C.userid in (63774,61671 ,65415, 65303)
       )
--select SPECIALTY, count(*) from View_UserSpecialty group by SPECIALTY;
--select distinct trim(SPECIALTY), trim(SPECIALTY) as 'tmp' from View_UserSpecialty where SPECIALTY is not null and SPECIALTY &lt;&gt; '' and name not in ('.SKILLS_AC')
--select distinct trim(SPECIALTY), enabled from View_UserSpecialty;      
--select candidateID from (select * from View_UserSpecialty where name = 'design') t group by candidateID having count(*) > 1
--select * from bullhorn1.View_UserSpecialty where name = 'design' and candidateid not in (10049,10198)
--select * from bullhorn1.View_UserSpecialty where SPECIALTY is not null and userid in (8771)
--select * from bullhorn1.View_Specialty; select enabled, count(*) as amount from bullhorn1.View_Specialty group by enabled

-- CHECKING
, amount as (
       select --top 10
                C.candidateID as 'candidate-externalId', C.userID as 'userID'
              , coalesce(nullif(replace(C.FirstName,'?',''), ''), 'No Firstname') as 'candidate-firstName'
              , coalesce(nullif(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID)) as 'candidate-lastName'
              , 'others' as tmp_fe
              , View_UserSpecialty.SPECIALTY as sfe, lower(View_UserSpecialty.SPECIALTY) as 'tmp'
       from bullhorn1.Candidate C 
       left join View_UserSpecialty on View_UserSpecialty.candidateID = c.candidateID
       where C.isdeleted &lt;&gt; 1 -- and C.status &lt;&gt; 'Archive'
       and View_UserSpecialty.candidateID is not null
       --and C.userID in (41953)
       )

--select * from amount 
--select top 10 * from amount where userid in (29790, 29772)
select distinct sfe, tmp, 'others' as tmp_fe from amount


</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4880</xloc>
      <yloc>1024</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>sfe 2 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>



with
-- SKILL
  skills (jobPostingID, sfe) as ( 
       SELECT m.jobPostingID, trim(skills.value) as skills 
       FROM bullhorn1.BH_JobPosting m CROSS APPLY STRING_SPLIT(convert(nvarchar(max),m.skills),',') AS skills 
       where (skills is not null and convert(nvarchar(max),skills) &lt;&gt; '') -- and (m.isdeleted &lt;&gt; 1 and m.status &lt;&gt; 'Archive')
       )
--select distinct skills, count(*) from skills group by skills;
--select distinct cast(JP.skills as varchar(max)) from bullhorn1.BH_JobPosting JP where (JP.isdeleted &lt;&gt; 1 and JP.status &lt;&gt; 'Archive')
, View_JobDelimitedSkills (jobPostingID, skills) as ( 
       SELECT m.jobPostingID, trim( replace(replace(skills.value,'•',''),'"','') ) as skills 
       FROM bullhorn1.View_JobDelimitedSkills m CROSS APPLY STRING_SPLIT(convert(nvarchar(max),m.skills),';') AS skills 
       where (skills is not null and convert(nvarchar(max),skills) &lt;&gt; '')  -- and (isdeleted &lt;&gt; 1 and status &lt;&gt; 'Archive') 
       )
--select distinct(skills), count(*), lower(skills) as tmp from View_JobDelimitedSkills group by skills;
--select * from bullhorn1.View_JobDelimitedSkills;




, all_sfe as (
       select * from skills UNION
       select * from View_JobDelimitedSkills
       )
select distinct sfe as 'sfe', count(*) as amount, lower(sfe) as 'tmp_sfe', 'skills' as 'tmp_fe' from all_sfe where sfe is not null and sfe &lt;&gt; '' group by sfe
--select clientID, userID, lower(sfe) as 'tmp', 'OTHERS' as fe_name from all_sfe where sfe is not null and sfe &lt;&gt; ''



</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3360</xloc>
      <yloc>912</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>sfe 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>sub_functional_expertise</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_fe_id</name>
        <field>functional_expertise_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_sfe_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1008</xloc>
      <yloc>1232</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>sfe 3 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>sub_functional_expertise</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>tmp_sfe</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_fe_id</name>
        <field>functional_expertise_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_sfe_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1232</xloc>
      <yloc>592</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>sfe 3 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>sub_functional_expertise</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>tmp_sfe</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_fe_id</name>
        <field>functional_expertise_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_sfe_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4368</xloc>
      <yloc>1088</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>sfe 3 2 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>sub_functional_expertise</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>tmp_sfe</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_fe_id</name>
        <field>functional_expertise_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_sfe_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3888</xloc>
      <yloc>976</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>sfe 3 2 2 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>sub_functional_expertise</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>tmp_sfe</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_fe_id</name>
        <field>functional_expertise_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_sfe_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4368</xloc>
      <yloc>784</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>sfe 4</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>

with

-- SKILL
 skills (jobPostingID, sfe) as ( 
       SELECT m.jobPostingID, trim(skills.value) as skills 
       FROM bullhorn1.BH_JobPosting m CROSS APPLY STRING_SPLIT(convert(nvarchar(max),m.skills),',') AS skills 
       where (skills is not null and convert(nvarchar(max),skills) &lt;&gt; '') -- and (m.isdeleted &lt;&gt; 1 and m.status &lt;&gt; 'Archive')
       )
--select distinct skills, count(*) from skills group by skills;
--select distinct cast(JP.skills as varchar(max)) from bullhorn1.BH_JobPosting JP where (JP.isdeleted &lt;&gt; 1 and JP.status &lt;&gt; 'Archive')
, View_JobDelimitedSkills (jobPostingID, skills) as ( 
       SELECT m.jobPostingID, trim( replace(replace(skills.value,'•',''),'"','') ) as skills 
       FROM bullhorn1.View_JobDelimitedSkills m CROSS APPLY STRING_SPLIT(convert(nvarchar(max),m.skills),';') AS skills 
       where (skills is not null and convert(nvarchar(max),skills) &lt;&gt; '')  -- and (isdeleted &lt;&gt; 1 and status &lt;&gt; 'Archive') 
       )
--select distinct(skills), count(*), lower(skills) as tmp from View_JobDelimitedSkills group by skills;
--select * from bullhorn1.View_JobDelimitedSkills;

, all_sfe as (
       select * from skills UNION
       select * from View_JobDelimitedSkills
       )

select jobPostingID as 'job-externalid-sfe', sfe, lower(sfe) as 'tmp_sfe', 'skill' as 'tmp_fe' from all_sfe where sfe is not null and sfe &lt;&gt; ''
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3360</xloc>
      <yloc>976</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>sfe 5</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
with

 View_UserDelimitedCategories (userid, Categories) as (
       SELECT m.userid, trim( replace(replace(replace(Categories.value,'  ',' '),' )',')'),'( ','(') ) as Categories 
       FROM bullhorn1.View_UserDelimitedCategories m CROSS APPLY STRING_SPLIT(m.Categories,';') AS Categories 
       where (Categories is not null and Categories &lt;&gt; '') )
--select distinct Categories, count(*), current_timestamp as 'insert_timestamp',lower(Categories) as 'tmp' from View_UserDelimitedCategories where Categories is not null and Categories &lt;&gt; '' group by Categories
--select count(*) from View_UserDelimitedCategories
--select distinct Categories from BULLHORN1.View_UserDelimitedCategories 



---*** SKILL ***---
, -- with
SKILL (candidateID, userid, skillID, skill, enabled) as (
       SELECT [BH_Candidate].candidateID, [BH_Candidate].userID, [BH_UserSkill].skillID, [BH_SkillList].name, [BH_SkillList].enabled
       FROM [bullhorn1].[BH_Candidate]
       LEFT JOIN [bullhorn1].BH_User on [BH_User].userID = [BH_Candidate].userID
       LEFT JOIN [bullhorn1].BH_UserSkill on [BH_Candidate].userID = [BH_UserSkill].userID
       LEFT JOIN [bullhorn1].BH_SkillList on [BH_UserSkill].skillID = [BH_SkillList].skillID
       WHERE [BH_SkillList].name is not null and [BH_SkillList].name &lt;&gt; '' and [BH_Candidate].isdeleted &lt;&gt; 1 --and [BH_Candidate].status &lt;&gt; 'Archive' 
       )
--select distinct skill, count(*) from SKILL group by skill
--select distinct trim(replace(Skill,'"','')) as Skill, count(*) from SKILL group by skill
--select distinct ltrim(rtrim(Skill)), enabled from SKILL;
--SELECT candidateID, STRING_AGG( skill,', ' ) WITHIN GROUP (ORDER BY skill) name from SKILL /*where candidateID in (154) */group by candidateID
--select * from SKILL where candidateID in (6525,28881,30255,30254)



-- CHECKING
, amount as (
select --top 10
         C.candidateID as 'candidate-externalId', C.userID as 'userID'
       , coalesce(nullif(replace(C.FirstName,'?',''), ''), 'No Firstname') as 'candidate-firstName'
       , coalesce(nullif(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID)) as 'candidate-lastName'
       , View_UserDelimitedCategories.Categories as 'fe', lower(View_UserDelimitedCategories.Categories) as 'tmp_fe'
       , SKILL.skill as 'sfe', lower(SKILL.skill) as 'tmp_sfe'
-- select
from bullhorn1.View_Candidate VC left join bullhorn1.Candidate C on c.candidateid = VC.candidateid
left join View_UserDelimitedCategories on View_UserDelimitedCategories.userid = c.userID
left join SKILL on SKILL.candidateID = C.candidateID
where C.isdeleted &lt;&gt; 1 -- and C.status &lt;&gt; 'Archive'
--and View_UserDelimitedCategories.userid is not null
--and SKILL.candidateID is not null
--and C.userID in (41953)
)


select * from amount --where userid in (29790, 29772)
--select tmp, count(*) from amount group by tmp order by tmp asc


</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4880</xloc>
      <yloc>784</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>source</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select
	  	   C.candidateID as 'candidate-externalId'
--       , Coalesce(NULLIF(replace(C.FirstName,'?',''), ''), 'No Firstname') as 'contact-firstName'
--       , Coalesce(NULLIF(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID)) as 'contact-lastName'
--       , ltrim(rtrim(c.source)) as 'candidate-source'
--	     , trim(lower(c.source)) as 'tmp'
		 , coalesce(NULLIF(trim(lower(c.source)), ''), 'data import') as 'tmp'
-- select count (*) -- select distinct ltrim(rtrim(source))
from bullhorn1.Candidate C
--where source &lt;&gt; ''
--and c.dateAdded >= '2020-01-01 00:00:00'</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5248</xloc>
      <yloc>624</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>source 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select distinct ltrim(rtrim(source)) as name
	   , ltrim(rtrim(lower(source))) as tmp
       , 1 as source_type
       , current_timestamp as insert_timestamp
       , 11 as payment_style 
from bullhorn1.Candidate C
where source &lt;&gt; '' 
--and c.dateAdded >= '2020-01-01 00:00:00'</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5248</xloc>
      <yloc>544</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>source 2 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>/*
select distinct concat('Lead Source - ',trim(L.leadsource)) as name
	   , lower(concat('Lead Source - ',trim(L.leadsource))) as tmp
       , 1 as source_type
       , current_timestamp as insert_timestamp
       , 11 as payment_style 
from bullhorn1.BH_UserContact UC
left join bullhorn1.BH_lead L on L.userid = UC.userid
where L.leadsource &lt;&gt; '' 
--and c.dateAdded >= '2020-01-01 00:00:00'
*/


select distinct trim(UC.source) as name
	   , trim(lower(UC.source)) as tmp
       , 1 as source_type
       , current_timestamp as insert_timestamp
       , 11 as payment_style 
from bullhorn1.BH_UserContact UC
where UC.source is not null and UC.source &lt;&gt; '' 

and UC.source &lt;&gt; 'LinkedIn'
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2112</xloc>
      <yloc>400</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>source 2 2 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>

	   
select distinct trim(L.leadsource) as name --concat('Lead Source - ',trim(L.leadsource)) as name
	   , lower(trim(L.leadsource)) as tmp --, lower(concat('Lead Source - ',trim(L.leadsource))) as tmp
       , 1 as source_type
       , current_timestamp as insert_timestamp
       , 11 as payment_style 
from bullhorn1.BH_UserContact UC
left join bullhorn1.BH_lead L on L.userid = UC.userid
where L.leadsource &lt;&gt; '' 
--and c.dateAdded >= '2020-01-01 00:00:00'
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2112</xloc>
      <yloc>1296</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>source 3</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
select
	 	Cl.Clientid as 'contact-externalId'
--       , Coalesce(NULLIF(replace(C.FirstName,'?',''), ''), 'No Firstname') as 'contact-firstName'
--       , Coalesce(NULLIF(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID)) as 'contact-lastName'
 	   , trim(UC.source) as name
	   , trim(lower(UC.source)) as tmp
       , 1 as source_type
       , current_timestamp as insert_timestamp
       , 11 as payment_style 
-- select count (*) -- select distinct ltrim(rtrim(source))
from bullhorn1.BH_UserContact UC
left join bullhorn1.BH_Client cl ON cl.userID = uc.userID
where cl.userID is not null and UC.source is not null and UC.source &lt;&gt; '' 





/*
select --top 3
         UC.userid as 'contact-externalId'
--cl.clientID as 'contact-externalId'
       --, iif(UC.clientCorporationID in (select clientCorporationID from bullhorn1.BH_ClientCorporation /*where status &lt;&gt; 'Archive'*/), convert(varchar(max),UC.clientCorporationID), 'default' ) as 'contact-companyId', CC.name as 'company-name'

       , case when (ltrim(replace(UC.firstName,'?','')) = '' or  UC.firstName is null) then 'Firstname' else ltrim(replace(UC.firstName,'?','')) end as 'contact-firstName'
       --, UC.middleName as 'contact-middleName'
       , UC.lastName as 'contact-Lastname' --, case when (ltrim(replace(UC.lastName,'?','')) = '' or  UC.lastName is null) then concat('Lastname-',Cl.clientID) else ltrim(replace(UC.lastName,'?','')) end as 'contact-Lastname'
	   , lower(concat('Lead Source - ',trim(L.leadsource))) as tmp
from bullhorn1.BH_UserContact UC
left join bullhorn1.BH_Client cl ON cl.userID = uc.userID
left join bullhorn1.BH_lead L on L.userid = UC.userid
where L.leadsource &lt;&gt; '' 
--left join bullhorn1.BH_ClientCorporation CC on CC.clientCorporationID = UC.clientCorporationID
--left join bullhorn1.BH_UserContact UC2 on UC2.userID = UC.reporttouserid
--where (Cl.isdeleted &lt;&gt; 1 and Cl.status &lt;&gt; 'Archive') --where isPrimaryOwner = 1 --and UC.clientCorporationID = 1284
--where UC.userID in (98833)
--and UC.userID in (23365, 23366, 23368, 23386, 23424, 23427, 23556, 23802, 23822, 24949, 25161, 25162, 25163, 25164, 25168, 25170, 25171, 25173, 25188, 25189, 25327, 25328, 25329, 25330, 25561, 25564, 25708, 25713, 26984, 41526, 41530, 41660, 42265, 42268, 42278, 42403, 42512, 42518, 42770, 42776, 42780, 42786, 42790, 42791, 42808, 42811, 42816, 42978, 45088, 45366, 45501, 45619, 45854, 46071, 46206, 47322, 47388, 47523, 47760, 48053, 48076, 48935, 49721, 50969, 51662, 52420, 52423, 52520, 52521, 52522, 52524, 52525, 52528, 52529, 52530, 53479, 53486, 53760, 53768, 53769, 53778, 53780, 53783, 53803, 53822, 53824, 53885, 53888, 53891, 53892, 53893, 53894, 53900, 53901, 53910, 53918, 53928, 53933, 53940, 53955, 53971, 53975, 53980, 53982, 53984, 54006, 54011, 54587, 55615, 55616, 55618, 55623, 55624, 55625, 55626, 55636, 55666, 55667, 55668, 55892, 55895, 55921, 55922, 55923, 55988, 55990, 55992, 55993, 55995, 55996, 55997, 55999, 56002, 56003, 56004, 56007, 56008, 56009, 56019, 56020, 56021, 56158, 56170, 56172, 56177, 56259, 56261, 56262, 56263, 56265, 56273, 56277, 56279, 56283, 56284, 57280, 57286, 58605, 58606, 58766, 58767, 58771, 58780, 58783, 58785, 59068, 59069, 59071, 59826, 63788, 66891, 70015, 70016, 70017, 70025, 70027, 70028, 70030, 70032, 70033, 70034, 70037, 70038, 70040, 70041, 70108, 70109, 70110, 70112, 70116, 70121, 70123, 70125, 70126, 70127, 70128, 70129, 70130, 70239, 70723, 70724, 70725, 70727, 70728, 71108, 71111, 71112, 71116, 71119, 71141, 71562, 71564, 71565, 71566, 71567, 71666, 71715, 71725, 71952, 72743, 72744, 72745, 72746, 72755, 72756, 72864, 72865, 72867, 72868, 72870, 72871, 72873, 72874, 72875, 72876, 72877, 72878, 72881, 72882, 72883, 72884, 72885, 72886, 72887, 73044, 73045, 73046, 73047, 73048, 73051, 73053, 73650, 73652, 74279, 74327, 74329, 74330, 74331, 74334, 74336, 74338, 74339, 74366, 74384, 74386, 74387, 74391, 74394, 74395, 74663, 74664, 74666, 74668, 74762, 74763, 74764, 74765, 74766, 74767, 74768, 74769, 74770, 74771, 74773, 74775, 74776, 74777, 74778, 74779, 74780, 74781, 74782, 74783, 74784, 74786, 74790, 74791, 74792, 74794, 74795, 74815, 74816, 74817, 74818, 74819, 74821, 74822, 74823, 74824, 74825, 74826, 74827, 74829, 74831, 74832, 74833, 74834, 74836, 74838, 74953, 75131, 75132, 75133, 75134, 75135, 75136, 75139, 75140, 75142, 75143, 75144, 75145, 75146, 75147, 75148, 75149, 75150, 75151, 75152, 75153, 75154, 75155, 75156, 75157, 75158, 75159, 75160, 75191, 75192, 75270, 75332, 75333, 75334, 75364, 75388, 75394, 75430, 75433, 75813, 76662, 77218, 77586, 78990, 80014, 80107, 80169, 80171, 80175, 80319, 80385, 80542, 80568, 80618, 80619, 80622, 80881, 81060, 81143, 81226, 81419, 82106, 82155, 82188, 82255, 82313, 82321, 82339, 82340, 82349, 82378, 82382, 82399, 82404, 82406, 82409, 82418, 82542, 82621, 82929, 84039, 84040, 84041, 84044, 84051, 84052, 84054, 85334, 85470, 85472, 85493, 85631, 85632, 85638, 85639, 85663, 85865, 86174, 86396, 86580, 86760, 87006, 87357, 87426, 87428, 87539, 88160, 88161, 88544, 88546, 89063, 89072, 89073, 89080, 89084, 89196, 89198, 89200, 89201, 89295, 89306, 89309, 89453, 89454, 89459, 89476, 89477, 89478, 89479, 89482, 90207, 90210, 90222, 90381, 90388, 90439, 90442, 90444, 90447, 90448, 90450, 90451, 90476, 90478, 90819, 90920, 90922, 90923, 90929, 90942, 90946, 90947, 90948, 91367, 91624, 91627, 91650, 91652, 91653, 91654, 91656, 91662, 91663, 91664, 91665, 91666, 91667, 91668, 91669, 91672, 91673, 91674, 91675, 91676, 91677, 91682, 91683, 91684, 91691, 91692, 91693, 91694, 91699, 91701, 91704, 91705, 91706, 91707, 91708, 91711, 91808, 91865, 91869, 91896, 92048, 92050, 92070, 92325, 92374, 92379, 92381, 92524, 93231, 93232, 93235, 93236, 93238, 93242, 93317, 93320, 93326, 93329, 93436, 93440, 93441, 93443, 93449, 93450, 93451, 93452, 93456, 93459, 93462, 93467, 93469, 93474, 93478, 93479, 93480, 93814, 94527, 94529, 94531, 94533, 94534, 94623, 94629, 94637, 94723, 94730, 94736, 94738, 94739, 94741, 95058, 95412, 95633, 95890, 95891, 96594, 96648, 96870, 96871, 96886, 96889, 96965, 97397, 97399, 97401, 97402, 97408, 97410, 97414, 97416, 97423, 97427, 97460, 97475, 97477, 97479, 97480, 97482, 97483, 97485, 97486, 97487, 97539, 97541, 97542, 97543, 97544, 97545, 97567, 97568, 97580, 97678, 97684, 97685, 97686, 98205, 98213, 98320, 98455, 98456, 98460, 98466, 98530, 98591, 99014, 99015, 99016) 

--and cl.clientID is not null
*/</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2112</xloc>
      <yloc>464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>source 3 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>


select --top 3
         UC.userid as 'contact-externalId'
       --, iif(UC.clientCorporationID in (select clientCorporationID from bullhorn1.BH_ClientCorporation /*where status &lt;&gt; 'Archive'*/), convert(varchar(max),UC.clientCorporationID), 'default' ) as 'contact-companyId', CC.name as 'company-name'
       , case when (ltrim(replace(UC.firstName,'?','')) = '' or  UC.firstName is null) then 'Firstname' else ltrim(replace(UC.firstName,'?','')) end as 'contact-firstName'
       --, UC.middleName as 'contact-middleName'
       , UC.lastName as 'contact-Lastname' --, case when (ltrim(replace(UC.lastName,'?','')) = '' or  UC.lastName is null) then concat('Lastname-',Cl.clientID) else ltrim(replace(UC.lastName,'?','')) end as 'contact-Lastname'

	   , lower(trim(L.leadsource)) as tmp
--	   , lower(concat('Lead Source - ',trim(L.leadsource))) as tmp
       , 1 as source_type
       , current_timestamp as insert_timestamp
       , 11 as payment_style 

from bullhorn1.BH_UserContact UC
left join bullhorn1.BH_Client cl ON cl.userID = uc.userID
left join bullhorn1.BH_lead L on L.userid = UC.userid
where L.leadsource &lt;&gt; '' 
--left join bullhorn1.BH_ClientCorporation CC on CC.clientCorporationID = UC.clientCorporationID
--left join bullhorn1.BH_UserContact UC2 on UC2.userID = UC.reporttouserid
--where (Cl.isdeleted &lt;&gt; 1 and Cl.status &lt;&gt; 'Archive') --where isPrimaryOwner = 1 --and UC.clientCorporationID = 1284
--where UC.userID in (98833)
--and UC.userID in (23365) 
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2112</xloc>
      <yloc>1376</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>status 2 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>with t as (
select
         convert(varchar(1000),C.candidateID) as 'candidate-externalId' , C.userID as '#userID'
       , stuff( coalesce(' ' + nullif(C.namesuffix, ''), '') + coalesce( nullif(replace(C.FirstName,'?',''), ''), 'No Firstname' ) , 1, 0, '') as 'contact-firstName'
       , coalesce(nullif(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID)) as 'contact-lastName'
--select distinct vc.status, c.status
       , case
       --when cl.status in ('Placed','Commenced','No Seeking','Cannot Assist','Not-Responsive','6- Not-Responsive','Placed - Direct Hire','Archive','Left Company','Former Candidate','Former Contact','Inactive','Non MM Contractor','Non MM Placed Perm', 'Placed by us','Placed Contractor','Placed FTC','Placed Permanent') then 0      
       when c.status like '%Placed%' then 0
       when c.status like '%Archive%' then 0
       when c.status like '%Left%' then 0
       when c.status like '%Former%' then 0
       when c.status like '%%Inactive' then 0
       when c.status like '%%Passive' then 0
       when c.status like '%Non %' then 0
       when c.status in ('Commenced','No Seeking','Cannot Assist','Not-Responsive') then 0
              
       when c.status like '%Do%not%use%' then 2
       when c.status like '%DNC%' then 2
       when c.status like '%DNU%' then 2
       when c.status like '%Unavailable%' then 2
       end as active
from bullhorn1.View_Candidate VC
left join bullhorn1.Candidate C on c.candidateid = VC.candidateid
)
select * from t where active is not null
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5248</xloc>
      <yloc>1104</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>status ACTIVE/PASSIVE 2 2</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>Y</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>actual_candidate_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>active</name>
        <rename>active</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5536</xloc>
      <yloc>1104</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>status ACTIVE/PASSIVE 3</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>Y</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <key>
        <name>actual_contactid</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>active</name>
        <rename>active</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1696</xloc>
      <yloc>992</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>sub_functional_expertise</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>sub_functional_expertise</table>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCFEID</name>
        <field>functional_expertise_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>name</name>
        <rename>sfe</rename>
        <update>N</update>
      </value>
      <value>
        <name>functional_expertise_id</name>
        <rename>VCFEID</rename>
        <update>N</update>
      </value>
      <value>
        <name>tmp</name>
        <rename>tmp</rename>
        <update>N</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1360</xloc>
      <yloc>528</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>sub_functional_expertise 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>sub_functional_expertise</table>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCFEID</name>
        <field>functional_expertise_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>name</name>
        <rename>sfe</rename>
        <update>N</update>
      </value>
      <value>
        <name>functional_expertise_id</name>
        <rename>VCFEID</rename>
        <update>N</update>
      </value>
      <value>
        <name>tmp</name>
        <rename>tmp</rename>
        <update>N</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4544</xloc>
      <yloc>720</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>sub_functional_expertise 3</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>sub_functional_expertise</table>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCFEID</name>
        <field>functional_expertise_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>name</name>
        <rename>sfe</rename>
        <update>N</update>
      </value>
      <value>
        <name>functional_expertise_id</name>
        <rename>VCFEID</rename>
        <update>N</update>
      </value>
      <value>
        <name>tmp</name>
        <rename>tmp</rename>
        <update>N</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1248</xloc>
      <yloc>1168</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>team_group 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>team_group</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>user_department_name</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>team_group_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5936</xloc>
      <yloc>1568</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>team_group 2 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>team_group</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>user_department_name</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>team_group_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5936</xloc>
      <yloc>1344</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>team_group 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>team_group</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>name</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>team_group_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5936</xloc>
      <yloc>1488</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>team_group 3 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>team_group</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>name</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>team_group_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5936</xloc>
      <yloc>1264</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>team_group 4</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>team_group</table>
      <key>
        <name>name</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>name</name>
        <rename>name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>group_type</name>
        <rename>group_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>owner_id</name>
        <rename>owner_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5840</xloc>
      <yloc>1424</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>team_group 4 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>team_group</table>
      <key>
        <name>name</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>name</name>
        <rename>name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>group_type</name>
        <rename>group_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>owner_id</name>
        <rename>owner_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5840</xloc>
      <yloc>1200</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>team_group_candidate</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>team_group_candidate</table>
      <key>
        <name>vc_candidate_id</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>team_group_id</name>
        <field>team_group_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>candidate_id</name>
        <rename>vc_candidate_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>team_group_id</name>
        <rename>team_group_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6048</xloc>
      <yloc>1568</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>team_group_candidate 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>team_group_candidate</table>
      <key>
        <name>candidate_id</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>team_group_id</name>
        <field>team_group_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>candidate_id</name>
        <rename>candidate_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>team_group_id</name>
        <rename>team_group_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6048</xloc>
      <yloc>1344</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>team_group_user</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>team_group_user</table>
      <key>
        <name>user_account_id</name>
        <field>user_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>team_group_id</name>
        <field>team_group_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>user_id</name>
        <rename>user_account_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>team_group_id</name>
        <rename>team_group_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6048</xloc>
      <yloc>1488</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>team_group_user 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>team_group_user</table>
      <key>
        <name>user_account_id</name>
        <field>user_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>team_group_id</name>
        <field>team_group_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>user_id</name>
        <rename>user_account_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>team_group_id</name>
        <rename>team_group_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6048</xloc>
      <yloc>1264</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>user_account</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>user_account</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>owners-email</name>
        <field>email</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_user_account_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>592</xloc>
      <yloc>512</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>user_account 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>user_account</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>recipient_VC_user_account_email</name>
        <field>email</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VC_user_account_ID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>7168</xloc>
      <yloc>720</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>user_account 3 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>user_account</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>owners-email</name>
        <field>email</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_user_account_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2480</xloc>
      <yloc>912</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>user_account 3 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>user_account</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>owners-email</name>
        <field>email</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_user_account_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2480</xloc>
      <yloc>1504</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>user_account 4</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>user_account</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>owners-email</name>
        <field>email</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>vc_user_account_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3744</xloc>
      <yloc>272</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>user_account 5</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>user_account</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>email</name>
        <field>email</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>user_account_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5840</xloc>
      <yloc>1488</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>user_account 5 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>user_account</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>email</name>
        <field>email</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>user_account_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5840</xloc>
      <yloc>1264</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>user_account 6</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>user_account</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>owners-email</name>
        <field>email</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_user_account_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>5696</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>user_account_import</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>user_account</table>
      <key>
        <name>owners-email</name>
        <field>email</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>email</name>
        <rename>owners-email</rename>
        <update>N</update>
      </value>
      <value>
        <name>name</name>
        <rename>owners-email</rename>
        <update>N</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>owners-insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>super_user</name>
        <rename>owners-super_user</rename>
        <update>N</update>
      </value>
      <value>
        <name>first_name</name>
        <rename>owners-email</rename>
        <update>Y</update>
      </value>
      <value>
        <name>last_name</name>
        <rename>owners-last_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>locked_user</name>
        <rename>owners-locked_user</rename>
        <update>Y</update>
      </value>
      <value>
        <name>language</name>
        <rename>owners-language</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>784</xloc>
      <yloc>432</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>user_account_import 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>user_account</table>
      <key>
        <name>owners-email</name>
        <field>email</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>email</name>
        <rename>owners-email</rename>
        <update>N</update>
      </value>
      <value>
        <name>name</name>
        <rename>owners-email</rename>
        <update>N</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>owners-insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>super_user</name>
        <rename>owners-super_user</rename>
        <update>N</update>
      </value>
      <value>
        <name>first_name</name>
        <rename>owners-email</rename>
        <update>Y</update>
      </value>
      <value>
        <name>last_name</name>
        <rename>owners-last_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>locked_user</name>
        <rename>owners-locked_user</rename>
        <update>Y</update>
      </value>
      <value>
        <name>language</name>
        <rename>owners-language</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2736</xloc>
      <yloc>848</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>user_account_import 2 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>user_account</table>
      <key>
        <name>owners-email</name>
        <field>email</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>email</name>
        <rename>owners-email</rename>
        <update>N</update>
      </value>
      <value>
        <name>name</name>
        <rename>owners-email</rename>
        <update>N</update>
      </value>
      <value>
        <name>super_user</name>
        <rename>owners-super_user</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>owners-insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>first_name</name>
        <rename>owners-email</rename>
        <update>Y</update>
      </value>
      <value>
        <name>last_name</name>
        <rename>owners-last_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>locked_user</name>
        <rename>owners-locked_user</rename>
        <update>Y</update>
      </value>
      <value>
        <name>language</name>
        <rename>owners-language</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>4000</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>user_account_import 2 3</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>user_account</table>
      <key>
        <name>owners-email</name>
        <field>email</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>email</name>
        <rename>owners-email</rename>
        <update>N</update>
      </value>
      <value>
        <name>name</name>
        <rename>owners-email</rename>
        <update>N</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>owners-insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>super_user</name>
        <rename>owners-super_user</rename>
        <update>N</update>
      </value>
      <value>
        <name>first_name</name>
        <rename>owners-email</rename>
        <update>Y</update>
      </value>
      <value>
        <name>last_name</name>
        <rename>owners-last_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>locked_user</name>
        <rename>owners-locked_user</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2736</xloc>
      <yloc>1440</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>user_account_import 3</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>user_account</table>
      <key>
        <name>owners-email</name>
        <field>email</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>email</name>
        <rename>owners-email</rename>
        <update>N</update>
      </value>
      <value>
        <name>name</name>
        <rename>owners-email</rename>
        <update>N</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>owners-insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>super_user</name>
        <rename>owners-super_user</rename>
        <update>Y</update>
      </value>
      <value>
        <name>first_name</name>
        <rename>owners-email</rename>
        <update>Y</update>
      </value>
      <value>
        <name>last_name</name>
        <rename>owners-last_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>locked_user</name>
        <rename>owners-locked_user</rename>
        <update>Y</update>
      </value>
      <value>
        <name>language</name>
        <rename>owners-language</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>6016</xloc>
      <yloc>256</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>vertical 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>vertical</table>
      <key>
        <name>tmp</name>
        <field>tmp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>name</name>
        <rename>industry</rename>
        <update>N</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp_ind</rename>
        <update>N</update>
      </value>
      <value>
        <name>tmp</name>
        <rename>tmp</rename>
        <update>N</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3504</xloc>
      <yloc>656</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step_error_handling>
  </step_error_handling>
  <slave-step-copy-partition-distribution>
  </slave-step-copy-partition-distribution>
  <slave_transformation>N</slave_transformation>
</transformation>
