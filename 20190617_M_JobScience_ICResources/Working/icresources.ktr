<?xml version="1.0" encoding="UTF-8"?>
<transformation>
  <info>
    <name>icresources</name>
    <description/>
    <extended_description/>
    <trans_version/>
    <trans_type>Normal</trans_type>
    <trans_status>0</trans_status>
    <directory>/</directory>
    <parameters>
    </parameters>
    <log>
      <trans-log-table>
        <connection/>
        <schema/>
        <table/>
        <size_limit_lines/>
        <interval/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STATUS</id>
          <enabled>Y</enabled>
          <name>STATUS</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
          <subject/>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
          <subject/>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
          <subject/>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
          <subject/>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
          <subject/>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
          <subject/>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>STARTDATE</id>
          <enabled>Y</enabled>
          <name>STARTDATE</name>
        </field>
        <field>
          <id>ENDDATE</id>
          <enabled>Y</enabled>
          <name>ENDDATE</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>DEPDATE</id>
          <enabled>Y</enabled>
          <name>DEPDATE</name>
        </field>
        <field>
          <id>REPLAYDATE</id>
          <enabled>Y</enabled>
          <name>REPLAYDATE</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>Y</enabled>
          <name>LOG_FIELD</name>
        </field>
        <field>
          <id>EXECUTING_SERVER</id>
          <enabled>N</enabled>
          <name>EXECUTING_SERVER</name>
        </field>
        <field>
          <id>EXECUTING_USER</id>
          <enabled>N</enabled>
          <name>EXECUTING_USER</name>
        </field>
        <field>
          <id>CLIENT</id>
          <enabled>N</enabled>
          <name>CLIENT</name>
        </field>
      </trans-log-table>
      <perf-log-table>
        <connection/>
        <schema/>
        <table/>
        <interval/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>SEQ_NR</id>
          <enabled>Y</enabled>
          <name>SEQ_NR</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>INPUT_BUFFER_ROWS</id>
          <enabled>Y</enabled>
          <name>INPUT_BUFFER_ROWS</name>
        </field>
        <field>
          <id>OUTPUT_BUFFER_ROWS</id>
          <enabled>Y</enabled>
          <name>OUTPUT_BUFFER_ROWS</name>
        </field>
      </perf-log-table>
      <channel-log-table>
        <connection/>
        <schema/>
        <table/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>LOGGING_OBJECT_TYPE</id>
          <enabled>Y</enabled>
          <name>LOGGING_OBJECT_TYPE</name>
        </field>
        <field>
          <id>OBJECT_NAME</id>
          <enabled>Y</enabled>
          <name>OBJECT_NAME</name>
        </field>
        <field>
          <id>OBJECT_COPY</id>
          <enabled>Y</enabled>
          <name>OBJECT_COPY</name>
        </field>
        <field>
          <id>REPOSITORY_DIRECTORY</id>
          <enabled>Y</enabled>
          <name>REPOSITORY_DIRECTORY</name>
        </field>
        <field>
          <id>FILENAME</id>
          <enabled>Y</enabled>
          <name>FILENAME</name>
        </field>
        <field>
          <id>OBJECT_ID</id>
          <enabled>Y</enabled>
          <name>OBJECT_ID</name>
        </field>
        <field>
          <id>OBJECT_REVISION</id>
          <enabled>Y</enabled>
          <name>OBJECT_REVISION</name>
        </field>
        <field>
          <id>PARENT_CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>PARENT_CHANNEL_ID</name>
        </field>
        <field>
          <id>ROOT_CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>ROOT_CHANNEL_ID</name>
        </field>
      </channel-log-table>
      <step-log-table>
        <connection/>
        <schema/>
        <table/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>N</enabled>
          <name>LOG_FIELD</name>
        </field>
      </step-log-table>
      <metrics-log-table>
        <connection/>
        <schema/>
        <table/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>METRICS_DATE</id>
          <enabled>Y</enabled>
          <name>METRICS_DATE</name>
        </field>
        <field>
          <id>METRICS_CODE</id>
          <enabled>Y</enabled>
          <name>METRICS_CODE</name>
        </field>
        <field>
          <id>METRICS_DESCRIPTION</id>
          <enabled>Y</enabled>
          <name>METRICS_DESCRIPTION</name>
        </field>
        <field>
          <id>METRICS_SUBJECT</id>
          <enabled>Y</enabled>
          <name>METRICS_SUBJECT</name>
        </field>
        <field>
          <id>METRICS_TYPE</id>
          <enabled>Y</enabled>
          <name>METRICS_TYPE</name>
        </field>
        <field>
          <id>METRICS_VALUE</id>
          <enabled>Y</enabled>
          <name>METRICS_VALUE</name>
        </field>
      </metrics-log-table>
    </log>
    <maxdate>
      <connection/>
      <table/>
      <field/>
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
    </maxdate>
    <size_rowset>10000</size_rowset>
    <sleep_time_empty>50</sleep_time_empty>
    <sleep_time_full>50</sleep_time_full>
    <unique_connections>N</unique_connections>
    <feedback_shown>Y</feedback_shown>
    <feedback_size>50000</feedback_size>
    <using_thread_priorities>Y</using_thread_priorities>
    <shared_objects_file/>
    <capture_step_performance>N</capture_step_performance>
    <step_performance_capturing_delay>1000</step_performance_capturing_delay>
    <step_performance_capturing_size_limit/>
    <dependencies>
    </dependencies>
    <partitionschemas>
    </partitionschemas>
    <slaveservers>
    </slaveservers>
    <clusterschemas>
    </clusterschemas>
    <created_user/>
    <created_date>2017/01/20 16:14:34.085</created_date>
    <modified_user/>
    <modified_date>2017/01/20 16:14:34.085</modified_date>
    <key_for_session_key>H4sIAAAAAAAAAAMAAAAAAAAAAAA=</key_for_session_key>
    <is_key_private>N</is_key_private>
  </info>
  <notepads>
    <notepad>
      <note>COMPANY</note>
      <xloc>176</xloc>
      <yloc>32</yloc>
      <width>68</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>CONTACT</note>
      <xloc>720</xloc>
      <yloc>32</yloc>
      <width>65</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>JOB</note>
      <xloc>1184</xloc>
      <yloc>32</yloc>
      <width>31</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>CANDIDATE</note>
      <xloc>1712</xloc>
      <yloc>32</yloc>
      <width>79</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>move OFFERED to PLACEMENT_PERMANENT</note>
      <xloc>2608</xloc>
      <yloc>32</yloc>
      <width>251</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>Insert all offer / placement details (default value)
- with PERMANENT jobs, End date is not mandatory
- with CONTRACT / TEMP jobs, End date is mandatory</note>
      <xloc>3312</xloc>
      <yloc>368</yloc>
      <width>298</width>
      <heigth>58</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>255</backgroundcolorgreen>
      <backgroundcolorblue>0</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>[Invoice] table only contains PLACED stage</note>
      <xloc>3488</xloc>
      <yloc>128</yloc>
      <width>237</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>255</backgroundcolorgreen>
      <backgroundcolorblue>0</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>Main flow for sub status</note>
      <xloc>3056</xloc>
      <yloc>1024</yloc>
      <width>138</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>Activities [ALL]</note>
      <xloc>2222</xloc>
      <yloc>493</yloc>
      <width>89</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>FE - SFE Settings</note>
      <xloc>1648</xloc>
      <yloc>2176</yloc>
      <width>97</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>Update permanent placement</note>
      <xloc>2288</xloc>
      <yloc>1616</yloc>
      <width>169</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>Update Placement details as requested
--PLACED status not supported via data import
--Set position_type of those jobs = 1 (PERMANENT) as discussed
--Used for injecting revenue profit split</note>
      <xloc>2288</xloc>
      <yloc>1664</yloc>
      <width>351</width>
      <heigth>74</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>Dummy offer already created for PERMANENT OFFERED status
Valid = 1 as default (no need to import)
Position_type and currency_type added | gross_annual_salary | payrate added</note>
      <xloc>3120</xloc>
      <yloc>1760</yloc>
      <width>415</width>
      <heigth>58</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>255</backgroundcolorgreen>
      <backgroundcolorblue>0</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>Insert all offer / placement details (default value)
- with PERMANENT jobs, End date is not mandatory
- with CONTRACT / TEMP jobs, End date is mandatory</note>
      <xloc>3440</xloc>
      <yloc>2144</yloc>
      <width>298</width>
      <heigth>58</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>255</backgroundcolorgreen>
      <backgroundcolorblue>0</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>[Invoice] table only contains PLACED stage</note>
      <xloc>3296</xloc>
      <yloc>2016</yloc>
      <width>237</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>255</backgroundcolorgreen>
      <backgroundcolorblue>0</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>pay_rate is affected more than gross_annual_salary</note>
      <xloc>3056</xloc>
      <yloc>1712</yloc>
      <width>276</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>update placed date in ATS | placed date = hire_date</note>
      <xloc>2848</xloc>
      <yloc>1600</yloc>
      <width>280</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>Contact location as work location</note>
      <xloc>64</xloc>
      <yloc>1696</yloc>
      <width>187</width>
      <heigth>26</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
  </notepads>
  <connection>
    <name>from</name>
    <server>10.0.1.65</server>
    <type>POSTGRESQL</type>
    <access>Native</access>
    <database>icresources3</database>
    <port>5432</port>
    <username>postgres</username>
    <password>Encrypted 2be98afc86aa7f2e4cb79ff228dc6fa8c</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>5432</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <connection>
    <name>to</name>
    <server>rdb4</server>
    <type>POSTGRESQL</type>
    <access>Native</access>
    <database>icresources.vincere.io</database>
    <port>5432</port>
    <username>dbapplication_user</username>
    <password>Encrypted 2be98afc819e8b9aebe11bd63cb8b9ae3</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>5432</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <order>
    <hop>
      <from>BULLHORN Job Comment</from>
      <to>Database lookup 2 2 2 2 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 2 2 2 2 2</from>
      <to>Insert / Update 2 3 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>BULLHORN Company Comment</from>
      <to>Database lookup 2 2 2 2 2 2 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 2 2 2 2 2 2 2</from>
      <to>Insert / Update 2 3 2 2 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>BULLHORN Candidate Email Body</from>
      <to>Database lookup 2 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 2 2</from>
      <to>Insert / Update 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>BULLHORN Job Application - Rejected</from>
      <to>position_description</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 3 2 2</from>
      <to>Update 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>position_description</from>
      <to>candidate 3 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>BULLHORN Candidate Note</from>
      <to>Update 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>source</from>
      <to>Database lookup 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>source 2</from>
      <to>candidate_source</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate_source</from>
      <to>source</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2</from>
      <to>Database lookup 2 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 4</from>
      <to>candidate_source_id</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate id</from>
      <to>industry</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate industry 2</from>
      <to>candidate id</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>industry</from>
      <to>candidate_industry</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate industry</from>
      <to>industry 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>industry 2</from>
      <to>candidate industry 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact id 2</from>
      <to>industry 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact industry 2 2</from>
      <to>contact id 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>industry 4</from>
      <to>contact_industry 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact industry 3</from>
      <to>industry 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>industry 2 3</from>
      <to>contact industry 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact</from>
      <to>additional_form_values InsertUpdate 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>cf 2</from>
      <to>contact</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact FE-SFE</from>
      <to>contact id</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact id</from>
      <to>fe</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>fe</from>
      <to>contact_functional_expertise 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 3 3</from>
      <to>Insert / Update</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 3 3</from>
      <to>candidate_functional_expertise 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate FE-SFE 2</from>
      <to>candidate 3 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate - desired_contract_rate - contract_rate</from>
      <to>Update 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate 3 3 2</from>
      <to>Insert / Update 2 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>sfe</from>
      <to>candidate 3 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 2 2 2 2 2 2 2</from>
      <to>company activity</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 2 2 2 2 2</from>
      <to>job activity</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>CANDIDATE Employment history summary</from>
      <to>Database lookup 2 2 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 3 2</from>
      <to>Update 2 5</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 2 2</from>
      <to>candidate_industry 2 2 2 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Company Location</from>
      <to>Database lookup</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Custom Field</from>
      <to>company</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup</from>
      <to>Insert / Update 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Insert new industry</from>
      <to>company industry 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company</from>
      <to>InsertUpdate Custom Field</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company industry</from>
      <to>Insert new industry</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company industry 2</from>
      <to>lookup company</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>lookup company</from>
      <to>lookup industry</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>lookup industry</from>
      <to>company_industry 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Insert new industry 2 2</from>
      <to>position_description industry 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>industry 4 2</from>
      <to>Update 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>position_description id 2 3</from>
      <to>industry 4 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>position_description industry 2</from>
      <to>Insert new industry 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>position_description industry 2 2 2</from>
      <to>position_description id 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>BULLHORN Contact Info</from>
      <to>Database lookup 2 2 2 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>BULLHORN Contact Location</from>
      <to>Database lookup 2 2 2 3 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 2 3 2</from>
      <to>Update 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 4 2</from>
      <to>Insert / Update 2 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job - contract_rate  FROM/TO</from>
      <to>Database lookup 2 2 4 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>CANDIDATE table</from>
      <to>Database lookup 2 4 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 4 2</from>
      <to>Update 3 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2</from>
      <to>compensation 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job - FromSalary - ToSalary</from>
      <to>Database lookup 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate Comment</from>
      <to>Database lookup 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 3</from>
      <to>Insert / Update Activity</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 3</from>
      <to>candidate_industry 2 2 2 2 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Company - table</from>
      <to>company 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company 2 2</from>
      <to>info</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 2 3 2</from>
      <to>Update 2 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact Comment</from>
      <to>Database lookup - Contact</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup - Contact</from>
      <to> Contact Comment</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup - Contact</from>
      <to>Insert / Update - Contact Comment</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>BULLHORN Contact Email Body 2</from>
      <to>Database lookup 2 2 3 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 3 2 3</from>
      <to>Insert - Contact Comment 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 3 2 3</from>
      <to>Insert / Update 2 2 3 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact New documents</from>
      <to>Contact lookup 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact lookup 2</from>
      <to>Insert contact new documents</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact lookup 2</from>
      <to>Update Contact Documents</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact FE-SFE 2</from>
      <to>contact id 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact id 3</from>
      <to>fe 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>fe 3</from>
      <to>sfe 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>sfe 3</from>
      <to>contact_functional_expertise 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>position insert_timestamp</from>
      <to>position insert_timestamp 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>position insert_timestamp 2</from>
      <to>Update 4 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>position_description id 2 3 2</from>
      <to>Update 4 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>position_description id 2 3 2 2</from>
      <to>Update 4 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>position_internalDescription 2</from>
      <to>position_description id 2 3 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>position_publicDescription</from>
      <to>position_description id 2 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 5</from>
      <to>Insert / Update 2 5</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job FE</from>
      <to>Database lookup 2 2 5</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 16</from>
      <to>Update 19</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate owners</from>
      <to>Database lookup 16</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>create user</from>
      <to>Table output 8</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>create user</from>
      <to>candidate_source_id 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate desire_salary</from>
      <to>Update Candidate desire_salary</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company 2 2</from>
      <to>company-linkedin</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 2 3 2</from>
      <to>Update 2 3 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 2 3 2 2</from>
      <to>Insert / Update 2 2 2 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate Pay Rate</from>
      <to>Update Candidate desire_salary 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Company lookup.com</from>
      <to>Contact lookup.con</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Concat Fields Client Name</from>
      <to>JOBAPP DETAIL - offer personal info</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact lookup.con</from>
      <to>Concat Fields Client Name</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job lookup</from>
      <to>Position Candidate 6</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job lookup</from>
      <to>Update App status</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job lookup</from>
      <to>Update job App status 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Offer</from>
      <to>Company lookup.com</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Offer</from>
      <to>compensation_period</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Position Candidate 6</from>
      <to>Offer</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Position Candidate 6</from>
      <to>Offer (always ON)</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Position Candidate 6</from>
      <to>Offer 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Position Candidate 6</from>
      <to>Offer 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Position Candidate 6</from>
      <to>Offer 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>compensation_period</from>
      <to>offer_pay_charge</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate lookup 3 2</from>
      <to>Conf Stage</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate lookup 3 2</from>
      <to>Job lookup 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Conf Stage</from>
      <to>Update Config Stage 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job lookup 3</from>
      <to>Sub status</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job lookup 3</from>
      <to>Update Rejected date</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>JobApp Config Stage</from>
      <to>Candidate lookup 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>JobApp SubStatus</from>
      <to>Candidate lookup 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Sub status</from>
      <to>Error Update Report</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Sub status</from>
      <to>SubStatus</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Sub status</from>
      <to>Update SubStatus</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Concat Fields Client Name</from>
      <to>JOBAPP - offer personal info</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>JOBAPP - offer personal info</from>
      <to>Invoice  (always ON)</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>JOBAPP DETAIL - offer personal info</from>
      <to>Invoice  (always ON)</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>JOBAPP</from>
      <to>Candidate lookup 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate lookup 2 2</from>
      <to>Job lookup</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>JOBAPP DETAIL (DO_NOT_REMOVE)</from>
      <to>Candidate lookup 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Invoice  (always ON)</from>
      <to>Update Terminated Invoice</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 4 2</from>
      <to>Update 3 3 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>BULLHORN Candidate Note</from>
      <to>Database lookup 2 4 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 4 2 2</from>
      <to>Update 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Concat Fields Client Name</from>
      <to>JOBAPP DETAIL - offer personal info 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>JOBAPP DETAIL - offer personal info 2</from>
      <to>Invoice  (always ON)</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>JobApp From OFFERED Stage 2 2 2 2</from>
      <to>Candidate lookup 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>JOBAPP 2</from>
      <to>Candidate lookup 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Concat Fields Client Name</from>
      <to>JOBAPP DETAIL - offer personal info 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>JOBAPP DETAIL - offer personal info 2 2</from>
      <to>Invoice  (always ON)</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Concat Fields Client Name</from>
      <to>JOBAPP DETAIL - offer personal info 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>JOBAPP DETAIL - offer personal info 2 3</from>
      <to>Invoice  (always ON)</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Extract Candidate_Contact Documents</from>
      <to>lookup candidateid</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Extract company document</from>
      <to>lookup companyid</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Extract job document</from>
      <to>lookup jobid</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>lookup candidateid</from>
      <to>update candidate_document</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>lookup company_legal_document</from>
      <to>update legal_document</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>lookup companyid</from>
      <to>lookup company_legal_document</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>lookup contactid</from>
      <to>update candidate_document contact</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>lookup jobid</from>
      <to>update job_document</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Extract Contact Documents</from>
      <to>lookup contactid</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>lookup company_legal_document</from>
      <to>update legal_document 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact New documents 2</from>
      <to>Contact lookup 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact lookup 2 2</from>
      <to>Update Contact Documents</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact New documents 2 2</from>
      <to>Contact lookup 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact New documents 2 3</from>
      <to>Contact lookup 2 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact lookup 2 2 2</from>
      <to>Update Contact Documents</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact lookup 2 2 3</from>
      <to>Update Contact Documents</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 2</from>
      <to>compensation 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job - Type - Fee - FromSalary - ToSalary</from>
      <to>Database lookup 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 2</from>
      <to>position_description position_type</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 2</from>
      <to>compensation annual_salary_from</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 2</from>
      <to>compensation annual_salary_to</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate Note 2</from>
      <to>Database lookup 2 2 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 2 3</from>
      <to>Insert / Update 2 4 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 2 3</from>
      <to>Update 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>position_description industry 2 2</from>
      <to>Insert new industry 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate_email_subscribed</from>
      <to>email_subscription 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate_email_subscribed</from>
      <to>email_subscription 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Company Fee model</from>
      <to>Company lookup 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Company lookup 2</from>
      <to>Insert company fee model</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Company lookup 2</from>
      <to>Update Company CF</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Company lookup 2</from>
      <to>Insert company fee model 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Company Fee model 2</from>
      <to>Company lookup 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 4</from>
      <to>candidate_source_id 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>cf 2 2</from>
      <to>candidate</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate</from>
      <to>additional_form_values InsertUpdate 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>BULLHORN Contact Location 2</from>
      <to>Database lookup 2 2 2 3 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 2 3 2 2 2</from>
      <to>Insert / Update 2 2 2 2 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Database lookup 2 2 2 3 2 2 2</from>
      <to>Candidate common_location</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate lookup 2</from>
      <to>Insert / Update 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate lookup 2</from>
      <to>Insert event</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate lookup 2</from>
      <to>Insert task comment</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Company lookup 2 2</from>
      <to>Contact lookup 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Company lookup 2 2</from>
      <to>Job lookup 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact lookup 2 3</from>
      <to>Job lookup 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Event</from>
      <to>Company lookup 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Feed Post Comment</from>
      <to>Company lookup 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job lookup 2</from>
      <to>Candidate lookup 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Task 1 comment</from>
      <to>Company lookup 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Task 2 comment</from>
      <to>Company lookup 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Task 3</from>
      <to>Company lookup 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate lookup 2</from>
      <to>Insert Engagement</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact lookup 2 3</from>
      <to>Candidate lookup 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Engagement</from>
      <to>Contact lookup 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Change Request</from>
      <to>Candidate lookup 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate lookup 2</from>
      <to>Insert change request</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>dual contact cand</from>
      <to>contact 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact 2</from>
      <to>additional_form_values dual</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>cand lookup</from>
      <to>insert_candidate_gdpr</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>gdpr</from>
      <to>cand lookup</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate umbrella</from>
      <to>cand lookup</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>cand lookup</from>
      <to>Update Candidate company</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate national insurance</from>
      <to>Candidate lookup 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate lookup 2 3</from>
      <to>Update Candidate CF</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate back office</from>
      <to>Candidate lookup 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>FE lookup 2</from>
      <to>VC SFE</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Functional Exp</from>
      <to>Vincere FE</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Sub FE</from>
      <to>FE lookup 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>CSV file input</from>
      <to>Mapping candidate fe sfe</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact FE/SFE</from>
      <to>contact lookup</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact lookup</from>
      <to>FE lookup</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>FE lookup</from>
      <to>SFE lookup</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>SFE lookup</from>
      <to>Insert / Update contact FESFE</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate lookup 2 4</from>
      <to>Job lookup 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Company lookup.com 2</from>
      <to>Contact lookup.con 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Compensation set</from>
      <to>Insert offer pay charge - Contract</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Concat Fields Client Name 2</from>
      <to>Insert offer personal Info</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Concat Fields Client Name 2</from>
      <to>Offer personal info - Contract</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact lookup.con 2</from>
      <to>Concat Fields Client Name 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job lookup 2 2</from>
      <to>Position Candidate 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job lookup 2 2</from>
      <to>Update App status 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job lookup 2 2</from>
      <to>Update contract status</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job lookup 2 2</from>
      <to>Update job App status 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>JobApp Contract placement</from>
      <to>Candidate lookup 2 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>JobApp Permanent placement</from>
      <to>Candidate lookup 2 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Offer 2 2</from>
      <to>Company lookup.com 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Offer 2 2</from>
      <to>Compensation set</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Offer 2 2</from>
      <to>Insert [Invoice]</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Offer 2 2</from>
      <to>Update Invoice</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Offer 2 2</from>
      <to>Update Terminated Invoice 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Offer 2 2</from>
      <to>User.u</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Position Candidate 2</from>
      <to>Insert Update [Offer]</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Position Candidate 2</from>
      <to>Insert Update [Offer] contract</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Position Candidate 2</from>
      <to>Offer 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Position Candidate 2</from>
      <to>Placed lookup output</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Position Candidate 2</from>
      <to>Update Offer</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>User.u</from>
      <to>Insert offer_revenue_split</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>User.u</from>
      <to>Microsoft Excel Writer</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate FE/SFE</from>
      <to>candidate_lookup</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate_lookup</from>
      <to>FE lookup</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>SFE lookup</from>
      <to>Insert / Update candidate FESFE</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate lookup 2 4 2</from>
      <to>Job lookup 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>JobApp Permanent split</from>
      <to>Candidate lookup 2 4 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Offer 2 2 2</from>
      <to>User.u 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Position Candidate 2 2</from>
      <to>Offer 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>User.u 2</from>
      <to>Insert offer_revenue_split 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job lookup 2 2 2</from>
      <to>Position Candidate 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Offer 2 2 2</from>
      <to>User.u 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Offer 2 2 2</from>
      <to>User.u 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>User.u 2 2</from>
      <to>Insert offer_revenue_split 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>User.u 2 3</from>
      <to>Insert offer_revenue_split 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>JobApp Contract split</from>
      <to>Candidate lookup 2 4 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate Hires Industry</from>
      <to>Candidate lookup</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate lookup</from>
      <to>Industry lookup</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Industry lookup</from>
      <to>Insert Candidate Industry</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact Hires contractor</from>
      <to>contact 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact 2 2</from>
      <to>Industry lookup</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Industry lookup</from>
      <to>Insert contact industry</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>JobApp Offer info</from>
      <to>Candidate lookup 2 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>JobApp rejected</from>
      <to>Candidate lookup 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate language</from>
      <to>cand lookup 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>cand lookup 2</from>
      <to>Update Language</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact id 2 2</from>
      <to>industry 4 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact industry (market sector)</from>
      <to>contact id 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>industry 4 3</from>
      <to>contact_industry</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>industry 4 2 2</from>
      <to>Update 4 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>position_description id 2 3 3</from>
      <to>industry 4 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>job industry</from>
      <to>position_description id 2 3 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>candidate industry (market sector)</from>
      <to>Candidate lookup 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate lookup 3</from>
      <to>industry 4 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>industry 4 3</from>
      <to>candidate industry 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact location 2</from>
      <to>contact lookup 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>comp lookup</from>
      <to>company location lookup</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company location lookup</from>
      <to>contact work location</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>contact lookup 3</from>
      <to>comp lookup</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact location</from>
      <to>comp lookup</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>comp lookup</from>
      <to>Insert company location 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>comp lookup</from>
      <to>insert company location</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>company location lookup</from>
      <to>Insert company location 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Sub FE AREA</from>
      <to>FE lookup 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Contact FE/SFE AREA</from>
      <to>contact lookup</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Candidate FE/SFE AREA</from>
      <to>candidate_lookup</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Job lookup 2 2</from>
      <to>Update App placed date</to>
      <enabled>N</enabled>
    </hop>
  </order>
  <step>
    <name> Contact Comment</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <schema>public</schema>
    <table>activity</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>N</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field>contactid</partitioning_field>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
      <field>
        <column_name>contact_id</column_name>
        <stream_name>actual_contactid</stream_name>
      </field>
      <field>
        <column_name>user_account_id</column_name>
        <stream_name>user_account_id</stream_name>
      </field>
      <field>
        <column_name>insert_timestamp</column_name>
        <stream_name>insert_timestamp</stream_name>
      </field>
      <field>
        <column_name>content</column_name>
        <stream_name>content</stream_name>
      </field>
      <field>
        <column_name>type</column_name>
        <stream_name>type</stream_name>
      </field>
      <field>
        <column_name>category</column_name>
        <stream_name>category</stream_name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>864</xloc>
      <yloc>80</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>BULLHORN Candidate Email Body</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>/*
VINCERE: alter table activity add column userMessageID int4;

alter table BULLHORN1.BH_UserMessage add email_content nvarchar(max); 
alter table BULLHORN1.BH_UserMessage add tmp_decompressed nvarchar(max);
alter table BULLHORN1.BH_UserMessage add content_full nvarchar(max); 

select count(*) from tmp_emailbody
select count(*) from bullhorn1.bh_usermessage where email_content is null
select count(*) from bullhorn1.bh_usermessage where email_content is not null
select count(*) from bullhorn1.bh_usermessage where email_content is null and DATALENGTH(commentsCompressed) > 0
select count(*) from bullhorn1.bh_usermessage where 200000 &lt; DATALENGTH(commentsCompressed)
select count(*) from bullhorn1.bh_usermessage where 0 &lt; DATALENGTH(commentsCompressed) and DATALENGTH(commentsCompressed) &lt; 2000000

select top 10 * from bullhorn1.bh_usermessage where subject like 'Appointment Invitation - Vacancy #663: DevOps Engineer'
select top 100 userMessageID, email_content from bullhorn1.bh_usermessage where email_content is not null
select top 100 userMessageID, email_content from bullhorn1.bh_usermessage where email_content is not null and userMessageID  > 289000
select top 100 * from bullhorn1.bh_usermessage where userMessageID in (1152014,1199637)
select top 100 userMessageID, email_content from bullhorn1.BH_UserMessage where userMessageID in (1199637) order by userMessageID
select top 100 * from bullhorn1.bh_usermessage where 200000 &lt; DATALENGTH(commentsCompressed)

update BULLHORN1.BH_UserMessage set email_content = [dbo].[F_ReplaceNullChar](N'เรียน คุณนิศรา,เรื่อง ประกาศโฆษณาลงเวปไซด์ เลขที่ GB-0006-05-2013
     ทางบริษัทขอจัดส่งรายงานเรื่องการลงโฆษณา ทั้งนี้ได้แนบเอกสารตามแบบฟอร์มการลงประกาศโฆษณา เพื่อนำหลักฐานการลงโฆษณาส่งให้กับทางเจ้าพนักงานเพื่อเก็บไว้เป็นหลักฐาน
ขอแสดงความนับถือนายอภินันท์ สุทธินันท์บริษัทจัดหางาน กัมมี่ แบร์ จำกัด089-569-6259 
Apinun Suthinand  Recruiter +66 2 610 3140 (o)
+66 89 522 1400 (m) apinun.s@gummybear.asia www.gummybear.asia 
This email is intended only for the confidential use of the individual(s) to whom it is addressed and may contain information that is privileged and confidential. If the reader of this message is not the intended recipient then they are hereby notified that any review, dissemination, distribution, or copying of this communication is strictly prohibited. If this message has been received in error, please notify us immediately by email or telephone.
') where userMessageID = 966;

*/

-- EMAIL BODY

with EmailBody as 
(
        -- RECEIVER
        select --top 100 
                um.userMessageID --,um.sendingUserID
              , ca.candidateid --, ca.userid,ca.recruiteruserid,ca.firstname,ca.lastname,ca.companyname
              , um.externalFrom, um.externalTo, um.externalCC, um.externalBCC, um.SMTPSendDate --,convert(nvarchar(max),um.externalTo) as externalTo, convert(nvarchar(max),um.externalCC) as externalCC, convert(nvarchar(max),um.externalBCC) as externalBCC, um.SMTPSendDate
              , um.subject, um.email_content, um.comments --, convert(nvarchar(max),um.comments) as comments
              --,mr.userID,mr.folder,mr.recipientType, mr.email, mr.sendingUserID, mr.subjectSort, mr.externalFrom
              , umf.att --,umf.name, umf.directory
        -- select count(*) -- select top 2000 *
        from bullhorn1.BH_UserMessage um
        --left join INT_UncompressedMessages cont on cont.userMessageID = um.userMessageID
        left join bullhorn1.BH_MessageRecipient mr on mr.userMessageID = um.userMessageID
        --left join bullhorn1.BH_UserMessageFile umf on umf.userMessageID = um.userMessageID
        --left join (SELECT userMessageID, STUFF((SELECT ', ' + [dbo].[fn_ConvertHTMLToText](name) from bullhorn1.BH_UserMessageFile WHERE userMessageID = a.userMessageID order by name asc FOR XML PATH (''), TYPE).value('.', 'nvarchar(64)'), 1, 1, '') AS att FROM bullhorn1.BH_UserMessageFile AS a GROUP BY a.userMessageID ) umf on umf.userMessageID = um.userMessageID
        left join (SELECT userMessageID, STRING_AGG(cast(name as nvarchar(max)),',' ) WITHIN GROUP (ORDER BY name) att from bullhorn1.BH_UserMessageFile GROUP BY userMessageID) umf on umf.userMessageID = um.userMessageID        
        left join bullhorn1.Candidate ca on ca.userid = mr.userid
        where mr.isDeleted = 0 and mr.isSpam = 0 and ca.userid is not null and ca.isdeleted &lt;&gt; 1 and ca.status &lt;&gt; 'Archive'
        --and um.userMessageID > 2110065
        --and um.userMessageID in (2110065)
        --and um.comments is not null and convert(varchar(max),um.comments) &lt;&gt; '' 
        --and ca.candidateid = 565        
        --and convert(nvarchar(max),um.externalCC) != '' and um.externalCC is not null and convert(nvarchar(max),um.externalBCC) != '' and um.externalBCC is not null
        --and um.SMTPSendDate > '2018-01-01'
UNION ALL
        -- SENDER
        select --top 100
                um.userMessageID --,um.sendingUserID
              , ca.candidateid --, ca.userid,ca.recruiteruserid,ca.firstname,ca.lastname,ca.companyname
              , um.externalFrom, um.externalTo, um.externalCC, um.externalBCC, um.SMTPSendDate --,convert(nvarchar(max),um.externalTo) as externalTo, convert(nvarchar(max),um.externalCC) as externalCC, convert(nvarchar(max),um.externalBCC) as externalBCC, um.SMTPSendDate
              , um.subject, um.email_content, um.comments --, convert(nvarchar(max),um.comments) as comments
              --,mr.userID,mr.folder,mr.recipientType, mr.email, mr.sendingUserID, mr.subjectSort, mr.externalFrom
              , umf.att --,umf.name, umf.directory
        -- select count(*)
        from bullhorn1.BH_UserMessage um
        --left join INT_UncompressedMessages cont on cont.userMessageID = um.userMessageID
        left join bullhorn1.BH_MessageRecipient mr on mr.userMessageID = um.userMessageID
        --left join bullhorn1.BH_UserMessageFile umf on umf.userMessageID = um.userMessageID
        --left join (SELECT userMessageID, STUFF((SELECT ', ' + name from bullhorn1.BH_UserMessageFile WHERE userMessageID = a.userMessageID order by name asc FOR XML PATH (''), TYPE).value('.', 'nvarchar(MAX)'), 1, 1, '') AS att FROM bullhorn1.BH_UserMessageFile AS a GROUP BY a.userMessageID ) umf on umf.userMessageID = um.userMessageID
        left join (SELECT userMessageID, STRING_AGG(cast(name as nvarchar(max)),',' ) WITHIN GROUP (ORDER BY name) att from bullhorn1.BH_UserMessageFile GROUP BY userMessageID) umf on umf.userMessageID = um.userMessageID        
        left join bullhorn1.Candidate ca on ca.userid = um.sendingUserID
        where um.isSenderDeleted = 0 and ca.userid is not null and ca.isdeleted &lt;&gt; 1 and ca.status &lt;&gt; 'Archive'
        --and convert(nvarchar(max),um.comments) &lt;&gt; '' ) 
        --and ca.candidateid = 565
        --and um.SMTPSendDate > '2018-01-01'
        --and um.userMessageID in (58178)
)

--select count(*) from EmailBody --79626
-- select top 100 * from EmailBody where candidateid between 124602 and 128601
/* select candidateid, concat('insert into position_candidate_feedback (candidate_id, user_account_id, feedback_timestamp, comment_body, feedback_score, insert_timestamp, contact_method, json_relate_info, related_status) values ( 
        (select id from candidate where external_id = ''',candidateid,'''), ',-10,', now(), ''',replace(concat('Date Created: ',convert(varchar,SMTPSendDate,120),char(10),'From: ',externalFrom,char(10),'To: ',externalTo,char(10),'CC: ',externalCC,char(10),'Subject: ',subject,char(10),char(10),'Content: ',comments),'''',''''''),''', 0, now(), 4, ''[]'', 1);') as EmailSQL
from EmailBody --where candidateid = 33
order by SMTPSendDate desc */


select --top 1000
          userMessageID
        --, userid, concat(firstname, ' ',lastname) as fullname, recruiteruserid, companyname, sendingUserID
        , candidateid as 'candidate_id'
        , cast('-10' as int) as 'user_account_id'
        , 'comment' as 'category'
        , 'candidate' as 'type'
        , coalesce(NULLIF(convert(varchar(19), SMTPSendDate, 120),''), CURRENT_TIMESTAMP) as 'insert_timestamp'
        , [dbo].[RemoveNullCharacters]( --dbo.F_ReplaceNullChar(
              [dbo].[udf_StripHTML]( --[dbo].[fn_ConvertHTMLToText](
              replace(replace(replace(replace(replace(replace(
              Stuff('EMAIL: ' + char(10)
                + Coalesce('From: ' + NULLIF(convert(nvarchar(max),externalFrom), '') + char(10), '')
                + Coalesce('To: ' + NULLIF(convert(nvarchar(max),externalTo), '') + char(10), '')
                + Coalesce('CC: ' + NULLIF(convert(nvarchar(max),externalCC), '') + char(10), '')
                + Coalesce('BCC: ' + NULLIF(convert(nvarchar(max),externalBCC), '') + char(10), '')
                + Coalesce('Subject: ' + NULLIF(convert(nvarchar(max),subject), '') + char(10), '')
                + Coalesce('Body: ' + NULLIF(convert(nvarchar(max),email_content), '') + char(10), 'Body: ' + char(10))
                + Coalesce('Comments: ' + NULLIF(convert(nvarchar(max),comments), '') + char(10), '')
                + Coalesce('Attachments: ' + NULLIF(convert(nvarchar(max),att), '') + char(10), '')
              , 1, 0, '')
              ,'Â',''),'Â·',''),'v\:* {behavior:url(#default#VML);}',''),'o\:* {behavior:url(#default#VML);}',''),'w\:* {behavior:url(#default#VML);}',''),'.shape {behavior:url(#default#VML);}','')
              )
         ) 
         as 'content'
        --, umf.name             --ATTACHMENTS
        --, umf.directory        -- PATHS STORE ATTACHMENTS
from EmailBody
--where comments &lt;&gt; ''
--where usermessageid in (58178) --,58175,58178)
--where candidateid = 3772
--where usermessageid > 58164 --in (6212861, 6204234)
--order by userMessageID asc</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1616</xloc>
      <yloc>224</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>BULLHORN Candidate Note</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>with
-- EMAIL
  mail1 (ID,email) as (select C.candidateID, replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(concat(UC.email,',',UC.email2,',',UC.email3),'/',' '),'&lt;',' '),'>',' '),'(',' '),')',' '),':',' '),'.@','@'),'@.','@'),'+',' '),'&amp;',' '),'[',' '),']',' '),'?',' '),'''',' '),';',' '),'•',' '),'*',' '),'|',' '),'‘',' '),CHAR(9),' ') as mail from bullhorn1.BH_UserContact UC left join bullhorn1.Candidate C on C.userID = UC.UserID where UC.email like '%_@_%.__%' or UC.email2 like '%_@_%.__%' or UC.email3 like '%_@_%.__%' and C.isdeleted &lt;&gt; 1 and C.status &lt;&gt; 'Archive' /*and C.isPrimaryOwner = 1*/ )
, mail2 (ID,email) as (SELECT ID, email.value as email FROM mail1 m CROSS APPLY STRING_SPLIT(m.email,',') AS email)
, mail3 (ID,email) as (SELECT ID, case when RIGHT(email, 1) = '.' then LEFT(email, LEN(email) - 1) when LEFT(email, 1) = '.' then RIGHT(email, LEN(email) - 1) else email end as email from mail2 WHERE email like '%_@_%.__%')
, mail4 (ID,email,rn) as ( SELECT ID, email = ltrim(rtrim(CONVERT(NVARCHAR(MAX), email))), r1 = ROW_NUMBER() OVER (PARTITION BY ID ORDER BY ID desc) FROM mail3 )
, e1 (ID,email) as (select ID, email from mail4 where rn = 1)
, ed  (ID,email,rn) as (SELECT ID,email,ROW_NUMBER() OVER(PARTITION BY email ORDER BY ID DESC) AS rn FROM e1 )
, e2 (ID,email) as (select ID, email from mail4 where rn = 2)
, e3 (ID,email) as (select ID, email from mail4 where rn = 3)
, e4 as (select ID, email from mail4 where rn = 4)
--select * from ed where email like '%%' --ID in (391, 2447)

-- NOTE
, note as (
	SELECT convert(varchar(500),CA.candidateID) as 'candidate-externalId'
		 , Stuff(   coalesce('BH Candidate ID: ' + nullif(cast(CA.userID as varchar(max)), '') + char(10), '')  
                        + coalesce('Other email: ' + nullif(cast(e3.email as varchar(max)), '') + char(10), '')
                        + coalesce('General Comments: ' + nullif(convert(varchar(max),CA.comments), '') + char(10), '')
                        + coalesce('CV: ' + nullif(UC1.description, '') + char(10), '')
                        , 1, 0, '') as note
	-- select top 10 * -- select count(*) -- select referredBy, referredByUserID
	from bullhorn1.Candidate CA --where CA.isPrimaryOwner = 1 --where convert(varchar(max),CA.comments) &lt;&gt; ''
       left join ( select userid, firstname, lastname from bullhorn1.BH_UserContact )UC ON UC.userID = CA.referredByUserID
       left join e3 on CA.userID = e3.ID
       left join (select userid, ltrim([bullhorn1].[fn_ConvertHTMLToText](description)) as description from bullhorn1.BH_UserContact) UC1 on CA.UserID = UC1.userID

	where isdeleted &lt;&gt; 1 and status &lt;&gt; 'Archive' )
--select count(*) from note --8545
--select * from note --where AddedNote like '%Business Sector%'
select * from note

</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1616</xloc>
      <yloc>512</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>BULLHORN Company Comment</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>with 
t as (
       select 
                 UC1.clientCorporationID
               , UC.dateAdded , author.name as 'authorname', author.email as 'authoremail'--author.userID, 
               , about.name as 'aboutname', about.email as 'aboutemail'--, about.userID 
               , UC.action, UC.comments
       from bullhorn1.BH_UserComment UC
       left join (select * from bullhorn1.BH_UserContact) author ON author.userID = UC.commentingUserID
       left join (select * from bullhorn1.BH_UserContact) about ON about.userID = UC.userID
       --left join bullhorn1.BH_ClientCorporation on Cl.userID = UC.userID
       --left join bullhorn1.BH_Client Cl on Cl.userID = UC.userID
       left join bullhorn1.BH_UserContact UC1 ON UC1.userID = UC.userID
       where UC1.clientCorporationID is not null
       )

--select count(*) from t
select
             clientCorporationID as external_id
          , cast('-10' as int) as 'user_account_id'
          , 'comment' as category
          , 'company' as type	
          , dateAdded as insert_timestamp
         ,  [bullhorn1].[fn_ConvertHTMLToText](
              Stuff(  Coalesce('Author Name: ' + nullif(convert(varchar(max),authorname), '') + char(10), '')
                        + Coalesce('Author Email: ' + nullif(convert(varchar(max),authoremail), '') + char(10), '')
                        + Coalesce('Author Name: ' + nullif(convert(varchar(max),aboutname), '') + char(10), '')
                        + Coalesce('About Email: ' + nullif(convert(varchar(max),aboutemail), '') + char(10), '')
                        + Coalesce('Action: ' + nullif(convert(varchar(max),[action]), '') + char(10), '')
                        + Coalesce('Comments: ' + nullif(convert(varchar(max),comments), '') + char(10), '')
              , 1, 0, '')) as content
        -- select  top 10 *
from t

</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>80</xloc>
      <yloc>160</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>BULLHORN Contact Email Body 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
-- EMAIL BODY

 ---CREATE INSERT CANDIDATE_COMMENTS
with EmailBody as (
        --EMAIL OF CANDIDATE - RECEIVER
        select --top 100
                  ca.clientID, ca.userid
                , um.userMessageID,um.sendingUserID,um.subject, um.externalFrom
                , um.comments
                , um.email_content as email_content
                , convert(nvarchar(max),um.externalTo) as externalTo, convert(nvarchar(max),um.externalCC) as externalCC, convert(nvarchar(max),um.externalBCC) as externalBCC, um.SMTPSendDate
                --mr.userID,mr.folder,mr.recipientType, mr.email, mr.sendingUserID, mr.subjectSort
                --,mr.userID,mr.folder,mr.recipientType, mr.email, mr.externalFrom
                ,umf.att --,umf.name, umf.directory
        -- select count(*) -- select top 300 *
        from bullhorn1.BH_UserMessage um
        left join bullhorn1.BH_MessageRecipient mr on mr.userMessageID = um.userMessageID
        --left join bullhorn1.BH_UserMessageFile umf on umf.userMessageID = um.userMessageID
        left join (SELECT userMessageID, STRING_AGG(cast(name as nvarchar(max)),',' ) WITHIN GROUP (ORDER BY name) att from bullhorn1.BH_UserMessageFile GROUP BY userMessageID) umf on umf.userMessageID = um.userMessageID
        left join bullhorn1.BH_Client ca on ca.userid = mr.userid
        where mr.isDeleted = 0 and mr.isSpam = 0 and ca.userid is not null and ca.isdeleted &lt;&gt; 1 and ca.status &lt;&gt; 'Archive' --5893
        --and um.comments is not null and convert(varchar(max),um.comments) &lt;&gt; '' 
        --and ca.clientID in (4054)     
        --and convert(nvarchar(max),um.externalCC) != '' and um.externalCC is not null and convert(nvarchar(max),um.externalBCC) != '' and um.externalBCC is not null
UNION ALL
        --EMAIL OF CANDIDATE - SENDER
        select --top 100
                  ca.clientID, ca.userid
                , um.userMessageID,um.sendingUserID,um.subject,um.externalFrom
                , um.comments
                , um.email_content as email_content
                ,convert(nvarchar(max),um.externalTo) as externalTo, convert(nvarchar(max),um.externalCC) as externalCC, convert(nvarchar(max),um.externalBCC) as externalBCC, um.SMTPSendDate
                --mr.userID,mr.folder,mr.recipientType, mr.email, mr.sendingUserID, mr.subjectSort
                --,mr.userID,mr.folder,mr.recipientType, mr.email, mr.externalFrom
                ,umf.att --,umf.name, umf.directory
        -- select count(*)
        from bullhorn1.BH_UserMessage um
        left join bullhorn1.BH_MessageRecipient mr on mr.userMessageID = um.userMessageID
        --left join bullhorn1.BH_UserMessageFile umf on umf.userMessageID = um.userMessageID
        --left join (SELECT userMessageID, STUFF((SELECT ', ' + name from bullhorn1.BH_UserMessageFile WHERE userMessageID = a.userMessageID order by name asc FOR XML PATH (''), TYPE).value('.', 'nvarchar(MAX)'), 1, 1, '') AS att FROM bullhorn1.BH_UserMessageFile AS a GROUP BY a.userMessageID ) umf on umf.userMessageID = um.userMessageID
        left join (SELECT userMessageID, STRING_AGG(cast(name as nvarchar(max)),',' ) WITHIN GROUP (ORDER BY name) att from bullhorn1.BH_UserMessageFile GROUP BY userMessageID) umf on umf.userMessageID = um.userMessageID
        left join bullhorn1.BH_Client ca on ca.userid = um.sendingUserID
        where um.isSenderDeleted = 0 and ca.userid is not null and ca.isdeleted &lt;&gt; 1 and ca.status &lt;&gt; 'Archive'
        --and convert(nvarchar(max),um.comments) &lt;&gt; ''
        --and ca.clientID in (4054)
)
/*
select top 10 clientID, smtpsenddate, count(*)
from EmailBody
group by clientID, smtpsenddate
having count(*) > 5
*/

/*, dup (clientID,SMTPSendDate,rn) as ( SELECT clientID, SMTPSendDate, rn = ROW_NUMBER() OVER (PARTITION BY clientID,SMTPSendDate ORDER BY clientID desc) FROM EmailBody )
select * from dup where clientID = 1074 and rn > 1--and cast(SMTPSendDate as varchar(max)) like '%28/01/2016%'*/

/* select * from EmailBody where candidateid = 33
candidateid between 124602 and 128601 
candidateid between 5 and 90000 -> 13388
candidateid between 90001 and 12000 -> 0
candidateid between 12000 and 122601 -> 45813
candidateid between 122602 and 124601 -> 21439
candidateid between 124602 and 128601 -> 25914

select candidateid, concat('insert into position_candidate_feedback (candidate_id, user_account_id, feedback_timestamp, comment_body, feedback_score, insert_timestamp, contact_method, json_relate_info, related_status) values ( 
        (select id from candidate where external_id = ''',candidateid,'''), ',-10,', now(), ''',replace(concat('Date Created: ',convert(varchar,SMTPSendDate,120),char(10),'From: ',externalFrom,char(10),'To: ',externalTo,char(10),'CC: ',externalCC,char(10),'Subject: ',subject,char(10),char(10),'Content: ',comments),'''',''''''),''', 0, now(), 4, ''[]'', 1);') as EmailSQL
from EmailBody --where candidateid = 33
order by SMTPSendDate desc
*/

--select userMessageID from EmailBody
--select count(*) from EmailBody where userMessageID not in (select userMessageID from bullhorn1.email_m_ID) --245396 
--select userMessageID into bullhorn1.email_m_ID_import from EmailBody where userMessageID not in (select userMessageID from bullhorn1.email_m_ID)

--select top 100 * from EmailBody --where candidateid = 33

select --top 20
          userMessageID
        --, userid
        , clientID as 'contact_id'
        , cast('-10' as int) as 'user_account_id'
        , cast('4' as int) as 'contact_method'
        --, cast('1' as int) as 'related_status'
        , 'comment' as 'category'
        , 'contact' as 'type'
        , coalesce(NULLIF(convert(varchar(19), SMTPSendDate, 120),''), CURRENT_TIMESTAMP) as 'insert_timestamp'
        , [dbo].[RemoveNullCharacters]( --dbo.F_ReplaceNullChar(
              [dbo].[udf_StripHTML]( --[dbo].[fn_ConvertHTMLToText](
              replace(replace(replace(replace(replace(replace(
              Stuff('EMAIL: ' + char(10)
                + Coalesce('From: ' + NULLIF(convert(nvarchar(max),externalFrom), '') + char(10), '')
                + Coalesce('To: ' + NULLIF(convert(nvarchar(max),externalTo), '') + char(10), '')
                + Coalesce('CC: ' + NULLIF(convert(nvarchar(max),externalCC), '') + char(10), '')
                + Coalesce('BCC: ' + NULLIF(convert(nvarchar(max),externalBCC), '') + char(10), '')
                + Coalesce('Subject: ' + NULLIF(convert(nvarchar(max),subject), '') + char(10), '')
                + Coalesce('Body: ' + NULLIF(convert(nvarchar(max),email_content), '') + char(10), 'Body: ' + char(10))
                + Coalesce('Comments: ' + NULLIF(convert(nvarchar(max),comments), '') + char(10), '')
                + Coalesce('Attachments: ' + NULLIF(convert(nvarchar(max),att), '') + char(10), '')
              , 1, 0, '')
              ,'Â',''),'Â·',''),'v\:* {behavior:url(#default#VML);}',''),'o\:* {behavior:url(#default#VML);}',''),'w\:* {behavior:url(#default#VML);}',''),'.shape {behavior:url(#default#VML);}','')
              )
         )
         as 'content'
        --, umf.name             --ATTACHMENTS
        --, umf.directory        --PATHS STORE ATTACHMENTS
from EmailBody
--where userMessageID not in (select userMessageID from bullhorn1.email_m_ID)
--where userMessageID in (3052313,3052246,3050605) --3050605
--where userMessageID > 3052233 --3052313 --3052246--3050605
--and userMessageID &lt; 3652959 --3652966 --3652969
--order by userMessageID desc
--order by userMessageID desc
--where comments &lt;&gt; ''
--where candidateID = 2001
--where clientID in (4054)


-- select top 100 userMessageID, email_content from bullhorn1.bh_usermessage where userMessageID in (3054420)
    
/*
SELECT SYSDATETIME()  
    ,SYSDATETIMEOFFSET()  
    ,SYSUTCDATETIME()  
    ,CURRENT_TIMESTAMP  
    ,GETDATE()  
    ,GETUTCDATE();  

--CREATE DUPLICATE TABLE
CREATE TABLE EmailSQL2
(
  candidate_id integer,
  user_account_id integer,
  feedback_timestamp timestamp without time zone,
  comment_body character varying NOT NULL,
  feedback_score double precision,
  insert_timestamp timestamp without time zone,
  contact_method integer,
  json_relate_info text,
  related_status smallint);
  
CREATE TABLE EMAILSQL (
candidateid int,
EmailSQL text);
*/</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>560</xloc>
      <yloc>240</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>BULLHORN Contact Info</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
with
-- EMAIL
  dup as (select id, trim(email) as email, row_number() over(partition by email order by id) as rn from contact where email like '%_@_%.__%')
--select * from dup


select
         c.id as "contact-externalid"

	, trim(c.ts2_preferred_name_c) as "nickname"
	, trim(c.phone) as "contact-phone"

, c.other_emails_c as "personal_email"
, c.mobilephone as "mobile_phone"
, concat_ws(', ',c.otherphone,c.other_phones_c) as "Home_Phone"

, c.ts2_latitude_c, c.ts2_longitude_c
, c.marketing_sector_ic_c as "industry"--, c.sector_c
, c.area_c as "CUSTOM FIELD > Area (TAGS TYPE)"
, c.dual_candidate_contact_c as "Candidate Record Link"
, c.hasoptedoutofemail as "Email Opt Out"
, c.createddate::timestamp as "insert_timestamp"

-- select count(*) --16459-- select distinct recordtypeid --isdeleted -- select *
from contact c
left join account a on a.id = c.accountid
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u on u.id = c.ownerid
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u1 on u1.id = c.createdbyid
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u2 on u2.id = c.lastmodifiedbyid
left join dup on dup.id = c.id 
left join tmp_documents d on d.parentid = c.id
left join (select left(id,15) as id, name from recordtype) rt on rt.id = c.recordtypeid
--left join contactcalllist ccl on ccl.contactid = c.id
where c.recordtypeid in ('0120Y0000013O5d')

</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>560</xloc>
      <yloc>304</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>BULLHORN Contact Location</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>


select
         c.id as "contact-externalid"
, c.ts2_latitude_c::float8 , c.ts2_longitude_c::float8 
, concat_ws(',',c.mailingstreet,c.mailingcity, c.mailingstate, c.mailingpostalcode, c.mailingcountry) as "contact-address", c.mailingcity as "contact-city", c.mailingstate as "contact-state", c.mailingpostalcode as "contact-zipCode"

, concat_ws(',',c.mailingcity, c.mailingstate, c.mailingpostalcode, c.mailingcountry) as "locationName"
, case
when c.mailingcountry = 'AE' then 'AE'
when c.mailingcountry = 'AL' then 'AL'
when c.mailingcountry = 'AM' then 'AM'
when c.mailingcountry = 'AR' then 'AR'
when c.mailingcountry = 'AT' then 'AT'
when c.mailingcountry = 'AU' then 'AU'
when c.mailingcountry = 'BA' then 'BA'
when c.mailingcountry = 'BD' then 'BD'
when c.mailingcountry = 'BE' then 'BE'
when c.mailingcountry = 'BG' then 'BG'
when c.mailingcountry = 'BH' then 'BH'
when c.mailingcountry = 'BR' then 'BR'
when c.mailingcountry = 'BY' then 'BY'
when c.mailingcountry = 'CA' then 'CA'
when c.mailingcountry = 'CH' then 'CH'
when c.mailingcountry = 'CL' then 'CL'
when c.mailingcountry = 'CM' then 'CM'
when c.mailingcountry = 'CN' then 'CN'
when c.mailingcountry = 'CO' then 'CO'
when c.mailingcountry = 'CR' then 'CR'
when c.mailingcountry = 'CY' then 'CY'
when c.mailingcountry = 'CZ' then 'CZ'
when c.mailingcountry = 'DE' then 'DE'
when c.mailingcountry = 'DK' then 'DK'
when c.mailingcountry = 'DZ' then 'DZ'
when c.mailingcountry = 'EC' then 'EC'
when c.mailingcountry = 'EE' then 'EE'
when c.mailingcountry = 'EG' then 'EG'
when c.mailingcountry = 'ES' then 'ES'
when c.mailingcountry = 'FI' then 'FI'
when c.mailingcountry = 'FR' then 'FR'
when c.mailingcountry = 'GB' then 'GB'
when c.mailingcountry = 'GE' then 'GE'
when c.mailingcountry = 'GR' then 'GR'
when c.mailingcountry = 'HK' then 'HK'
when c.mailingcountry = 'HR' then 'HR'
when c.mailingcountry = 'HU' then 'HU'
when c.mailingcountry = 'IE' then 'IE'
when c.mailingcountry = 'IL' then 'IL'
when c.mailingcountry = 'IN' then 'IN'
when c.mailingcountry = 'IR' then 'IR'
when c.mailingcountry = 'IT' then 'IT'
when c.mailingcountry = 'JO' then 'JO'
when c.mailingcountry = 'JP' then 'JP'
when c.mailingcountry = 'KR' then 'KR'
when c.mailingcountry = 'KZ' then 'KZ'
when c.mailingcountry = 'LB' then 'LB'
when c.mailingcountry = 'LK' then 'LK'
when c.mailingcountry = 'LT' then 'LT'
when c.mailingcountry = 'LV' then 'LV'
when c.mailingcountry = 'MA' then 'MA'
when c.mailingcountry = 'MC' then 'MC'
when c.mailingcountry = 'MD' then 'MD'
when c.mailingcountry = 'MK' then 'MK'
when c.mailingcountry = 'MT' then 'MT'
when c.mailingcountry = 'MU' then 'MU'
when c.mailingcountry = 'MX' then 'MX'
when c.mailingcountry = 'MY' then 'MY'
when c.mailingcountry = 'MZ' then 'MZ'
when c.mailingcountry = 'NG' then 'NG'
when c.mailingcountry = 'NL' then 'NL'
when c.mailingcountry = 'NO' then 'NO'
when c.mailingcountry = 'NZ' then 'NZ'
when c.mailingcountry = 'OM' then 'OM'
when c.mailingcountry = 'PH' then 'PH'
when c.mailingcountry = 'PK' then 'PK'
when c.mailingcountry = 'PL' then 'PL'
when c.mailingcountry = 'PT' then 'PT'
when c.mailingcountry = 'QA' then 'QA'
when c.mailingcountry = 'RO' then 'RO'
when c.mailingcountry = 'RS' then 'RS'
when c.mailingcountry = 'RU' then 'RU'
when c.mailingcountry = 'SA' then 'SA'
when c.mailingcountry = 'SD' then 'SD'
when c.mailingcountry = 'SE' then 'SE'
when c.mailingcountry = 'SG' then 'SG'
when c.mailingcountry = 'SI' then 'SI'
when c.mailingcountry = 'SK' then 'SK'
when c.mailingcountry = 'SY' then 'SY'
when c.mailingcountry = 'TH' then 'TH'
when c.mailingcountry = 'TN' then 'TN'
when c.mailingcountry = 'TR' then 'TR'
when c.mailingcountry = 'TW' then 'TW'
when c.mailingcountry = 'UA' then 'UA'
when c.mailingcountry = 'uk' then 'GB'
when c.mailingcountry = 'UK' then 'GB'
when c.mailingcountry = 'US' then 'US'
when c.mailingcountry = 'VE' then 'VE'
when c.mailingcountry = 'VN' then 'VN'
when c.mailingcountry = 'ZA' then 'ZA'
when c.mailingcountry ilike '201203%' then ''
when c.mailingcountry ilike 'Africa%' then 'ZA'
when c.mailingcountry ilike 'Allemag%' then 'DE'
when c.mailingcountry ilike 'Amsterd%' then 'NL'
when c.mailingcountry ilike 'Argenti%' then 'AR'
when c.mailingcountry ilike 'Armenia%' then 'AM'
when c.mailingcountry ilike 'austral%' then 'AU'
when c.mailingcountry ilike 'Austral%' then 'AU'
when c.mailingcountry ilike 'Austria%' then 'AT'
when c.mailingcountry ilike 'Belgium%' then 'BE'
when c.mailingcountry ilike 'Bosnia%' then 'BA'
when c.mailingcountry ilike 'Brazil%' then 'BR'
when c.mailingcountry ilike 'Bulgari%' then 'BG'
when c.mailingcountry ilike 'Canada%' then 'CA'
when c.mailingcountry ilike 'ChinaCN%' then 'CN'
when c.mailingcountry ilike 'China%' then 'CN'
when c.mailingcountry ilike 'CHina%' then 'CN'
when c.mailingcountry ilike 'CH, Switzerland%' then 'CH'
when c.mailingcountry ilike 'Croatia%' then 'HR'
when c.mailingcountry ilike 'Cyprus%' then 'CY'
when c.mailingcountry ilike 'Czechia%' then 'CZ'
when c.mailingcountry ilike 'Czech%' then 'CZ'
when c.mailingcountry ilike 'Denmark%' then 'DK'
when c.mailingcountry ilike 'Egypt%' then 'EG'
when c.mailingcountry ilike 'england%' then 'GB'
when c.mailingcountry ilike 'England%' then 'GB'
when c.mailingcountry ilike 'Estonia%' then 'EE'
when c.mailingcountry ilike 'Finland%' then 'FI'
when c.mailingcountry ilike 'France%' then 'FR'
when c.mailingcountry ilike 'germany%' then 'DE'
when c.mailingcountry ilike 'Germany%' then 'DE'
when c.mailingcountry ilike 'Holland%' then 'NL'
when c.mailingcountry ilike 'HongKon%' then 'HK'
when c.mailingcountry ilike 'Hong%' then 'HK'
when c.mailingcountry ilike 'Hungary%' then 'HU'
when c.mailingcountry ilike 'india%' then 'IN'
when c.mailingcountry ilike 'India%' then 'IN'
when c.mailingcountry ilike 'Iran%' then 'IR'
when c.mailingcountry ilike 'Ireland%' then 'IE'
when c.mailingcountry ilike 'Israel%' then 'IL'
when c.mailingcountry ilike 'Italy%' then 'IT'
when c.mailingcountry ilike 'Jersey%' then 'GB'
when c.mailingcountry ilike 'kingdom%' then 'GB'
when c.mailingcountry ilike 'Kingdom%' then 'GB'
when c.mailingcountry ilike 'Korea%' then 'KR'
when c.mailingcountry ilike 'Liechte%' then 'LI'
when c.mailingcountry ilike 'Lithuan%' then 'LT'
when c.mailingcountry ilike 'london%' then 'GB'
when c.mailingcountry ilike 'Luxembo%' then 'LU'
when c.mailingcountry ilike 'Malaysi%' then 'MY'
when c.mailingcountry ilike 'Mexico%' then 'MX'
when c.mailingcountry ilike 'Morocco%' then 'MA'
when c.mailingcountry ilike 'Netherl%' then 'NL'
when c.mailingcountry ilike 'Norway%' then 'NO'
when c.mailingcountry ilike 'Phillip%' then 'PH'
when c.mailingcountry ilike 'Poland%' then 'PL'
when c.mailingcountry ilike 'Portuga%' then 'PT'
when c.mailingcountry ilike 'Romania%' then 'RO'
when c.mailingcountry ilike 'Russia%' then 'RU'
when c.mailingcountry ilike 'Scotlan%' then 'GB'
when c.mailingcountry ilike 'Serbia%' then 'RS'
when c.mailingcountry ilike 'Shangha%' then 'CN'
when c.mailingcountry ilike 'Singapo%' then 'SG'
when c.mailingcountry ilike 'Slovaki%' then 'SK'
when c.mailingcountry ilike 'Sloveni%' then 'SI'
when c.mailingcountry ilike 'spain%' then 'ES'
when c.mailingcountry ilike 'Spain%' then 'ES'
when c.mailingcountry ilike 'Sweden%' then 'SE'
when c.mailingcountry ilike 'SWEDEN%' then 'SE'
when c.mailingcountry ilike 'Switzer%' then 'CH'
when c.mailingcountry ilike 'SWITZER%' then 'CH'
when c.mailingcountry ilike 'Taiwan%' then 'TW'
when c.mailingcountry ilike 'TBC%' then ''
when c.mailingcountry ilike 'Tiawan%' then 'TW'
when c.mailingcountry ilike 'Tokyo%' then 'JP'
when c.mailingcountry ilike 'Tunisia%' then 'TN'
when c.mailingcountry ilike 'Turkey%' then 'TR'
when c.mailingcountry ilike 'Uited%' then ''
when c.mailingcountry ilike 'Ukraine%' then 'UA'
when c.mailingcountry ilike 'Wales%' then 'GB'
when c.mailingcountry ilike 'Yorkshi%' then 'GB'
when c.mailingcountry ilike '%UNITED%ARAB%' then 'AE'
when c.mailingcountry ilike '%UAE%' then 'AE'
when c.mailingcountry ilike '%U.A.E%' then 'AE'
when c.mailingcountry ilike '%UNITED%KINGDOM%' then 'GB'
when c.mailingcountry ilike '%UNITED%STATES%' then 'US'
when c.mailingcountry ilike '%USA%' then 'US'
when c.mailingcountry ilike 'US' then 'US'
end as "contact-country"
       , 'WORKPLACE' as "Location > Type" --'PERSONAL_ADDRESS' 

from contact c
where c.recordtypeid in ('0120Y0000013O5d')</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>560</xloc>
      <yloc>416</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>BULLHORN Contact Location 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select
        c.id as "candidate-externalid"
, c.ts2_latitude_c::float8 , c.ts2_longitude_c::float8 
 , 'MAILING_ADDRESS' as "Location > Type"
from contact c
where c.recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1639</xloc>
      <yloc>1605</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>BULLHORN Job Application - Rejected</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>/*
'SHORTLISTED'then 102
'SENT'then 103
'FIRST_INTERVIEW'then 104
'SECOND_INTERVIEW'then 105
'THIRD_INTERVIEW'then 106
'FOURTH_INTERVIEW'then 107
'FIFTH_INTERVIEW'then 108
'LAST_INTERVIEW_ROUND' then 123
'OFFERED'then 200
'PLACED'then 300
'PLACEMENT_PERMANENT'then 301
'PLACEMENT_CONTRACT'then 302
'PLACEMENT_TEMP'then 303
'ONBOARDING'then 310
*/

with
  JPInfo as (
  	select JP.jobPostingID as JobID
  		, JP.title as JobTitle
              , case when JP.employmentType is null then 301
                     when JP.employmentType in ('Permanent','Opportunity') then 301
                     when JP.employmentType in ('Contract','Fixed Contract','Part-time') then 302
                     when JP.employmentType in ('Temporary','Temp to Perm') then 302
                     else null end as JobType
		, Cl.clientID as ContactID
		, Cl.userID as ClientUserID
		, UC.name as ContactName
		, UC.email as ContactEmail
		, CC.clientCorporationID as CompanyID
		, CC.name as CompanyName
	from bullhorn1.BH_JobPosting JP
	left join bullhorn1.BH_Client Cl on JP.clientUserID = Cl.userID
	left join bullhorn1.BH_UserContact UC on JP.clientUserID = UC.userID
	left join bullhorn1.BH_ClientCorporation CC on JP.clientCorporationID = CC.clientCorporationID
	where 1=1 and JP.title &lt;&gt; '' and (JP.isdeleted &lt;&gt; 1 and JP.status &lt;&gt; 'Archive')
)
--select * from JPInfo order by JobID


, ja0 as (
       select
                JR.jobPostingID as 'application-positionExternalId', JPI.JobType
               , JPI.CompanyID, JPI.CompanyName,  JPI.ContactID, JPI.ContactName, JPI.ContactEmail, JPI.JobID,  JPI.JobTitle, CAI.CandidateName as '#Candidate Name' --, JR.userID, JPI.ClientUserID, 
               , CAI.candidateID as 'application-candidateExternalId'
               , convert(varchar(10),JR.dateAdded,120) as 'dateAdded'
               , coalesce(nullif(case
when JR.status = 'Client Rejected' then 'SENT'-- > REJECTED'
when JR.status = 'Offer Rejected' then 'OFFERED'-- > REJECTED'
                            else '' end, ''), '') as 'application-stage'  --, JR.status as '#Original-status' -- SHORTLISTED, SENT, FIRST_INTERVIEW, SECOND_INTERVIEW, OFFERED, PLACEMENT_PERMANENT, PLACEMENT_CONTRACT, PLACEMENT_TEMP, ONBOARDING.
        -- select count(*) --5995 -- select distinct JR.status -- select top 100 *
        from bullhorn1.BH_JobResponse JR
        left join ( select CA.userID as CandidateUserID, CA.candidateID, UC.userID, UC.name as CandidateName, UC.email as CandidateEmail from bullhorn1.BH_Candidate CA left join bullhorn1.BH_UserContact UC on CA.userID = UC.userID ) CAI on JR.userID = CAI.CandidateUserID
        left join JPInfo JPI on JR.jobPostingID = JPI.JobID
        where CAI.candidateID is not null 

)
--select top 2000 * from ja0
--where ( [application-positionExternalId] = 6744 and [application-candidateExternalId] = 64995) or ([application-positionExternalId] = 5343 and [application-candidateExternalId] = 193508)
--where CompanyName like 'Nuance%' or CompanyID = 6

, ja1 ("application-positionExternalId","application-candidateExternalId", JobType, "application-Stage","dateAdded", rn) as (
       SELECT 
              "application-positionExternalId"
              ,"application-candidateExternalId"
              , JobType
              ,"application-Stage"
              ,"dateAdded"
              , rn = ROW_NUMBER() OVER (PARTITION BY "application-positionExternalId","application-candidateExternalId"/*,"application-Stage" */
                     ORDER BY "application-positionExternalId" desc,
                            CASE [application-stage]
                            WHEN 'PLACEMENT_PERMANENT' THEN 1
                            WHEN 'OFFERED' THEN 2
                            WHEN 'SECOND_INTERVIEW' THEN 3
                            WHEN 'FIRST_INTERVIEW' THEN 4
                            WHEN 'SENT' THEN 5
                            WHEN 'SHORTLISTED' THEN 6
                            END asc )
       FROM ja0 
       left join (select jobPostingID from bullhorn1.BH_JobPosting where isdeleted &lt;&gt; 1 and status &lt;&gt; 'Archive') job on job.jobPostingID = ja0.[application-positionExternalId]
       left join (select candidateid from bullhorn1.Candidate where isdeleted &lt;&gt; 1 and status &lt;&gt; 'Archive') candidate on candidate.candidateid = ja0.[application-candidateExternalId]
       where "application-Stage" not like 'CANDIDATE%' and "application-Stage" &lt;&gt; '' and (job.jobPostingID is not null and candidate.candidateid is not null)
       )



--select [application-stage], count(*) from ja1 where rn = 1 group by [application-stage] 
select "application-positionExternalId","application-candidateExternalId","application-Stage", "dateAdded", current_timestamp as 'TIME_REJECTED'
    , JobType as POSITIONCANDIDATE_status
    , 3 as OFFER_draft_offer --used to move OFFERED to PLACED in VC [offer]
    , 2 as INVOICE_status --used to update invoice status in VC [invoice] as 'active'
    , 1 as INVOICE_renewal_index --default value in VC [invoice]
    , 1 as INVOICE_renewal_flow_status --used to update flow status in VC [invoice] as 'placement_active'
    , 1 as INVOICE_valid
from ja1
where rn = 1 --and [application-stage] = 'PLACED' --and [#Candidate Name] like '%Freeman%'

</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1088</xloc>
      <yloc>240</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>BULLHORN Job Comment</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>


with comments as (
(                
       select 
                 a.jobPostingID as 'externalid' --, UC.userID, concat(UC1.firstName,' ',UC1.lastName) as fullname
               , a.title
               , UC.dateAdded
               , Stuff('COMMENT: ' + char(10)
                       + Coalesce('Created Date: ' + NULLIF(convert(nvarchar,UC.dateAdded,120), '') + char(10), '')
                       + Coalesce('Author: ' + NULLIF(U.name, '') + char(10), '')
                       + Coalesce('Action: ' + NULLIF(UC.action, '') + char(10), '')
                       + Coalesce('Comments: ' + NULLIF(cast(UC.comments as nvarchar(max)), '') + char(10), '')
                 , 1, 0, '') as 'content'
               --, 100 tmp_contact_email
       --select top 100 uce.*
       from bullhorn1.BH_UserComment UC --where jobPostingID is not null
       left join bullhorn1.BH_UserCommentEntity uce on uce.userCommentID = UC.userCommentID
       left join bullhorn1.BH_JobPosting a on a.jobPostingID = uce.entityid
       left join bullhorn1.BH_User U on U.userID = UC.commentingUserID
       where a.jobPostingID is not null and (a.isdeleted &lt;&gt; 1 and a.status &lt;&gt; 'Archive') and uce.entity = 'JobPosting'
       --and uce.entityid in (367)
       --select distinct entity from bullhorn1.BH_UserCommentEntity
UNION 
       select 
                 a.jobPostingID as 'externalid' --, UC.userID, concat(UC1.firstName,' ',UC1.lastName) as fullname
               , a.title
               , UC.dateAdded
               , Stuff('COMMENT: ' + char(10)
                       + Coalesce('Created Date: ' + NULLIF(convert(nvarchar,UC.dateAdded,120), '') + char(10), '')
                       + Coalesce('Author: ' + NULLIF(U.name, '') + char(10), '')
                       + Coalesce('Action: ' + NULLIF(UC.action, '') + char(10), '')
                       + Coalesce('Comments: ' + NULLIF(cast(UC.comments as nvarchar(max)), '') + char(10), '')
               , 1, 0, '') as 'content'
       -- select top 100 *
       from bullhorn1.BH_UserComment UC --where jobPostingID is not null
       left join bullhorn1.BH_JobPosting a on a.jobPostingID = UC.jobPostingID
       left join bullhorn1.BH_User U on U.userID = UC.commentingUserID
       where a.jobPostingID is not null and (a.isdeleted &lt;&gt; 1 and a.status &lt;&gt; 'Archive')
       --and a.jobPostingID in (367)
)
UNION ALL
       SELECT
              a.jobPostingID as 'externalid'
              , j.title
              , a.dateAdded
              , Stuff('APPOINTMENT: ' + char(10)
                     + Coalesce('Contact: ' + NULLIF(cast(concat(UC1.FirstName,' ',UC1.LastName,'     ',UC1.email) as nvarchar(max)), '') + char(10), '') --a.clientUserID 
                     + Coalesce('Candidate: ' + NULLIF(cast( concat(UC2.FirstName,' ',UC2.LastName,'     ',UC2.email) as nvarchar(max)), '') + char(10), '') --a.candidateUserID 
                     + Coalesce('Job: ' + NULLIF(cast(j.title as nvarchar(max)), '') + char(10), '') --jobPostingID
                     + coalesce('Communication Method: ' + NULLIF(convert(nvarchar(max),a.communicationMethod), '') + char(10), '')
                     + Coalesce('Date Begin: ' + NULLIF(cast(a.dateBegin as nvarchar(max)), '') + char(10), '')
                     + coalesce('Date End: ' + NULLIF(convert(nvarchar(max),a.dateEnd), '') + char(10), '')
                     + coalesce('Type: ' + NULLIF(convert(nvarchar(max),a.type), '') + char(10), '') --CA.activePlacements
                     + coalesce('Subject: ' + NULLIF(convert(nvarchar(max),a.subject), '') + char(10), '')
                     + coalesce('Reminder: ' + NULLIF(convert(nvarchar(max),a.notificationMinutes), '') + char(10), '')
                     + coalesce('Opportunity: ' + NULLIF(convert(nvarchar(max),j2.title), '') + char(10), '')
                     + coalesce('Location: ' + NULLIF(convert(nvarchar(max),a.location), '') + char(10), '')
                     + coalesce('Description: ' + NULLIF([bullhorn1].[fn_ConvertHTMLToText](a.description), '') + char(10), '')
                     + coalesce('File Name: ' + NULLIF(convert(nvarchar(max),af.name), '') + char(10), '')
                     + coalesce('Owner: ' + NULLIF(cast( concat(UC3.FirstName,' ',UC3.LastName,'     ',UC3.email) as nvarchar(max)), '') + char(10), '')
                     + coalesce('Lead: ' + NULLIF(cast( concat(UC4.FirstName,' ',UC4.LastName,'     ',UC4.email) as nvarchar(max)), '') + char(10), '')
              , 1, 0, '') as 'content' 
       -- select top 100 * -- select count(*) --2062
       from bullhorn1.View_Appointment a
       left join bullhorn1.View_AppointmentFile af on af.appointmentID = a.appointmentID
       left join bullhorn1.BH_Client Cl on Cl.userID = a.ClientUserID
       left join bullhorn1.BH_UserContact UC1 ON UC1.userID = Cl.userID
       left join bullhorn1.BH_UserContact UC2 ON UC2.userID = a.candidateUserID
       left join bullhorn1.BH_UserContact UC3 ON UC3.userID = a.userID
       left join bullhorn1.BH_UserContact UC4 ON UC4.userID = a.LeaduserID
       left join bullhorn1.BH_JobPosting j on j.jobPostingID = a.jobPostingID
       left join bullhorn1.BH_JobPosting j2 on j.jobPostingID = a.opportunityJobPostingID
       where j.jobPostingID is not null and (j.isdeleted &lt;&gt; 1 and j.status &lt;&gt; 'Archive')
UNION ALL
       SELECT ---top 20 
              j.jobPostingID as 'externalid' --,concat(UC1.firstName,' ',UC1.lastName) as fullname
              , j.title
              , a.dateAdded
              , Stuff('TASK: ' + char(10)
                     + Coalesce('Candidate: ' + NULLIF(cast( concat(UC2.FirstName,' ',UC2.LastName,'     ',UC2.email) as nvarchar(max)), '') + char(10), '') --a.candidateUserID 
                     --+ Coalesce('Assigned To: ' + NULLIF(cast(a.childTaskOwners as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Contact: ' + NULLIF(cast(concat(UC1.FirstName,' ',UC1.LastName,'     ',UC1.email) as nvarchar(max)), '') + char(10), '') --a.clientUserID 
                     + Coalesce('Due Date And Time: ' + NULLIF(cast(a.dateBegin as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Date End: ' + NULLIF(cast(a.dateEnd as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Description: ' + NULLIF(cast([bullhorn1].[fn_ConvertHTMLToText](a.description) as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Visibility: ' + NULLIF(cast(a.isPrivate as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Job: ' + NULLIF(cast(j.title as nvarchar(max)), '') + char(10), '') --jobPostingID
                     + Coalesce('Lead: ' + NULLIF(cast( concat(UC3.FirstName,' ',UC3.LastName,'     ',UC3.email) as nvarchar(max)), '') + char(10), '') --a.leadUserID
                     + Coalesce('Reminder: ' + NULLIF(cast(a.notificationMinutes as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Opportunity: ' + NULLIF(cast(a.opportunityJobPostingID as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Placement: ' + NULLIF(cast(a.placementID as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Priority: ' + NULLIF(cast(a.priority as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Recurrence Day Bits: ' + NULLIF(cast(a.recurrenceDayBits as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Recurrence Frequency: ' + NULLIF(cast(a.recurrenceFrequency as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Recurrence Max: ' + NULLIF(cast(a.recurrenceMax as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Recurrence Month Bits: ' + NULLIF(cast(a.recurrenceMonthBits as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Recurrence Style: ' + NULLIF(cast(a.recurrenceStyle as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Recurrence Type: ' + NULLIF(cast(a.recurrenceType as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Subject: ' + NULLIF(cast(a.subject as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Type: ' + NULLIF(cast(a.type as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Owner: ' + NULLIF(cast( concat(UC4.FirstName,' ',UC4.LastName,'     ',UC4.email) as nvarchar(max)), '') + char(10), '') --a.userID
              , 1, 0, '') as 'content' 
       -- select top 100 * -- select count(*) --24
       from bullhorn1.View_Task a
       left join bullhorn1.BH_Client Cl on Cl.userID = a.ClientUserID
       left join bullhorn1.BH_UserContact UC1 ON Cl.userID = UC1.userID
       left join bullhorn1.BH_UserContact UC2 ON a.candidateUserID = UC2.userID
       left join bullhorn1.BH_JobPosting j on j.jobPostingID = a.jobPostingID
       left join bullhorn1.BH_UserContact UC3 ON a.leadUserID = UC3.userID
       left join bullhorn1.BH_UserContact UC4 ON a.userID = UC4.userID
       where j.jobPostingID is not null and (j.isdeleted &lt;&gt; 1 and j.status &lt;&gt; 'Archive')

UNION ALL
        -- PLACEMENT
       select 
              PL.jobPostingID as 'externalid'
              , j.title
              , pl.dateadded 
              , Stuff( 'PLACEMENT: ' + char(10)
                     + Coalesce('Billing Contact: ' + NULLIF(cast( concat(UC1.FirstName,' ',UC1.LastName,'     ',UC1.email)  as nvarchar(max)), '') + char(10), '')  --pl.billingUserID
                     --+ Coalesce('Bill Rate Information: ' + NULLIF(cast(pl.billRateInfoHeader as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Bill Rate: ' + NULLIF(cast(pl.clientBillRate as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Over-time Bill Rate: ' + NULLIF(cast(pl.clientOverTimeRate as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Comments: ' + NULLIF(cast(pl.comments as nvarchar(max)), '') + char(10), '')
                     --+ Coalesce('Contract Employment Info: ' + NULLIF(cast(pl.contractInfoHeader as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Primary Timesheet Approver: ' + NULLIF(cast(pl.correlatedCustomText1 as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Secondary Timecard Approver: ' + NULLIF(cast(pl.correlatedCustomText2 as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Purchase Order Number: ' + NULLIF(cast(pl.correlatedCustomText3 as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Cost Center: ' + NULLIF(cast(pl.costCenter as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Insurance Reference: ' + NULLIF(cast(pl.customText1 as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Start Date: ' + NULLIF(cast(pl.dateBegin as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Effective Date (Client): ' + NULLIF(cast(pl.dateClientEffective as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Effective Date: ' + NULLIF(cast(pl.dateEffective as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Scheduled End: ' + NULLIF(cast(pl.dateEnd as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Days Guaranteed: ' + NULLIF(cast(pl.daysGuaranteed as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Days Pro-Rated: ' + NULLIF(cast(pl.daysProRated as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Employment Type: ' + NULLIF(cast(pl.employmentType as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Placement Fee (%): ' + NULLIF(cast(pl.fee as nvarchar(max)), '') + char(10), '')
                     --+ Coalesce('Placement Fee (Flat): ' + NULLIF(cast(pl.flatFee as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Hours of Operation: ' + NULLIF(cast(pl.hoursOfOperation as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Hours Per Day: ' + NULLIF(cast(pl.hoursPerDay as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Rate Entry Type: ' + NULLIF(cast(pl.isMultirate as nvarchar(max)), '') + char(10), '')
                     --+ Coalesce('Mark-up %: ' + NULLIF(cast(pl.markUpPercentage as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Over-time Pay Rate: ' + NULLIF(cast(pl.overtimeRate as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Pay Rate: ' + NULLIF(cast(pl.payRate as nvarchar(max)), '') + char(10), '')
                     --+ Coalesce('Pay Rate Information: ' + NULLIF(cast(pl.payRateInfoHeader as nvarchar(max)), '') + char(10), '')
                     --+ Coalesce('Permanent Employment Info: ' + NULLIF(cast(pl.permanentInfoHeader as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Referral Fee Type: ' + NULLIF(cast(pl.referralFeeType as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Reporting to: ' + NULLIF(cast(pl.reportTo as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Salary: ' + NULLIF(cast(pl.salary as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Pay Unit: ' + NULLIF(cast(pl.salaryUnit as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Status: ' + NULLIF(cast(pl.status as nvarchar(max)), '') + char(10), '')
              , 1, 0, '') as 'content'
       from bullhorn1.BH_Placement PL --where PL.reportTo &lt;&gt; ''
       left join bullhorn1.BH_UserContact UC1 ON UC1.userID = pl.billingUserID
       left join ( select candidateID, concat(FirstName,' ',LastName) as fullname, userid from bullhorn1.Candidate) C on C.userID = pl.userid
       left join bullhorn1.BH_JobPosting j on j.jobPostingID = PL.jobPostingID
       where j.jobPostingID is not null and (j.isdeleted &lt;&gt; 1 and j.status &lt;&gt; 'Archive')
)

--select count(*) from comments where content &lt;&gt; '' --12428
--select top 10 * from bullhorn1.BH_Client 
--select count(*) from comments where contact_id is not null
--select * from comments where contact_id is not null and contact_id in (4054,7102) --538216 > 563579

select --top 100
                   externalid
                  , title
                  , cast('-10' as int) as 'user_account_id'
                  , 'comment' as 'category'
                  , 'job' as 'type'
                  , dateAdded as 'insert_timestamp'
                  --, [dbo].[udf_StripHTML](content) as 'content'
                  , [bullhorn1].[fn_ConvertHTMLToText](content) as 'content'
from comments where 'content' &lt;&gt; ''
--and externalid in (25447,26051)
--and candidateID = 2988 or fullname like '%Philip%'                
                

</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1088</xloc>
      <yloc>160</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CANDIDATE Employment history summary</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
with
-- EMAIL
  dup as (select id, trim(email) as email, row_number() over(partition by email order by id) as rn from contact where email like '%_@_%.__%')
--select * from dup

, owners (id, email) as ( 
       select t.id, string_agg(u.email,',') as owneremail
       from (select id, ownerid as ownerid from contact where recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')
             union 
             select id, secondary_consultant_c as ownerid from contact where recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')
             ) t
       left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u on u.id = t.ownerid
       --where t.id = '0030Y00001HlRAxQAN'
       group by t.id
       )
--select * from owners where email like '%,%'

, eh as (
       select 
                eh.ts2_contact_c
              , string_agg(
                     concat_ws( chr(10)
                     , coalesce('EMPLOYMENT RECORD: ' || nullif( eh.name,''),null)
                     , coalesce('EMPLOYER NAME: ' || nullif(eh.ts2_name_c,''),null)
                     , coalesce('JOB TITLE: ' || nullif(eh.ts2_job_title_c,''),null)
                     , coalesce('START DATE: ' || nullif( left(eh.ts2_employment_start_date_c,10) ,''),null)
                     , coalesce('END DATE: ' || nullif( left(eh.ts2_employment_end_date_c,10) ,''),null)
                     , coalesce('EMPLOYER: ' || nullif(eh.ts2_employer_c,''),null)
                     , coalesce('COMPENSATION: ' || nullif( eh.ts2_compensation_c,''),null)
                     , coalesce('SALARIED: ' || nullif( case eh.ts2_salaried_c when '1' then 'Yes' else 'No' end,''),null)
                     --, coalesce('PARSED: ' || nullif( case eh.ts2_parsed_c when '1' then 'Yes' else 'No' end,''),null)
                     , coalesce('LOCATION: ' || nullif( eh.ts2_location_c,''),null)
                     , coalesce('CURRENCY: ' || nullif( eh.currencyisocode,''),null)
                     , coalesce('DUTIES &amp; RESPONSIBILITIES: ' || nullif( eh.ts2_responsibilities_c,''),null)
                     , chr(10) )
              , chr(10) ) as "employmenthistory"	
       -- select distinct ts2_parsed_c, count(*)
       from ts2_employment_history_c eh
       --where eh.ts2_contact_c = '0030Y00001a02UgQAI' 
       group by eh.ts2_contact_c
)

, edu as (
       select 
                ts2_contact_c
              , string_agg(
                     concat_ws( chr(10)
                     , coalesce('SCHOOL RECORD: ' || nullif(name,''),null)
                     , coalesce('SCHOOL NAME: ' || nullif(ts2_name_c,''),null)
                     , coalesce('DEGREE: ' || nullif( ts2_degree_c,''),null)
                     , coalesce('DEGREE: ' || nullif( ts2_degreepicklist_c,''),null)
                     , coalesce('MAJOR: ' || nullif( left(ts2_major_c,10) ,''),null)
                     , coalesce('GRADUATION YEAR: ' || nullif( left(ts2_graduation_year_c,10) ,''),null)
                     , coalesce('GRADUATION DATE: ' || nullif( left(ts2_graduationdate_c,10),''),null)
                     --, coalesce('COMPLETE: ' || nullif( ts2_complete_c,''),null)
                     --, coalesce('PARSED: ' || nullif( case ts2_parsed_c when '1' then 'Yes' else 'No' end,''),null)
                     , coalesce('CURRENCY: ' || nullif(currencyisocode,''),null)
                     , chr(10) )
              , chr(10) ) as "educationhistory"	
       -- select distinct ts2_parsed_c, count(*)
       from ts2_education_history_c
       --where ts2_contact_c = '0030Y00001a02UgQAI'
       group by ts2_contact_c
)



select 
         c.id as "candidate-externalid"
	, eh.employmenthistory as "candidate-workHistory"
from contact c --where c.recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')
left join eh on eh.ts2_contact_c = c.id
where c.recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV') --candidate | 40586 rows

</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1616</xloc>
      <yloc>592</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CANDIDATE table</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>

select 
         c.id as "candidate-externalid"
	, trim(c.ts2_preferred_name_c) as "Preferred Name" --**
	, c.ts2_source_c as "candidate-source" --**
       , c.area_c as "CUSTOM FIELD > Area" --**
       , c.position_c as "Current Job Title (POSITION TAGS)" --**
       , c.marketing_sector_ic_c as "industry" --**
	, c.mobilephone as "candidate-mobile"
       , trim(c.phone) as "candidate-homePhone"
       , coalesce( nullif( c.website_c,''),c.portfolio_c) as "Website" --**
	, c.skype_address_c as "candidate-skype"
	--, c.portfolio_c as "Website"
       , concat_ws(', ',c.otherphone,c.other_phones_c) as "candidate-workPhone"
       , left(c.other_emails_c,150) as "Personal Email" --**
       , case c.gdpr_ok_c when '1' then 'Yes' else 'No' end as "GDPR > Consent Given" --**
       , c.gdpr_ok_date_c as "GDPR > Consent Given Date" --**
       , case c.hasoptedoutofemail when '1' then 'Yes' else 'No' end as "Email Opt Out" --**
	--, d.filename as "candidate-document"
       , c.ni_number_c as "TAX > National Insurance number" --**
       , case c.ts2_geo_location_passed_c when '1' then 'Yes' else 'No' end as "Map" --**

       , c.flag_text_c as "candidate-note2" --**		

--, c.dual_candidate_contact_c as "Candidate Record Link"
, c.createddate::timestamp as "insert_timestamp" --**

from contact c --where c.recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')
where c.recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV') --candidate | 40586 rows


</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1616</xloc>
      <yloc>384</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>CSV file input</name>
    <type>CsvInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <filename>H:\ic-resources\20190615_candidate_fe_sfe.csv</filename>
    <filename_field/>
    <rownum_field/>
    <include_filename>N</include_filename>
    <separator>,</separator>
    <enclosure>"</enclosure>
    <header>Y</header>
    <buffer_size>50000</buffer_size>
    <lazy_conversion>Y</lazy_conversion>
    <add_filename_result>N</add_filename_result>
    <parallel>N</parallel>
    <newline_possible>N</newline_possible>
    <encoding/>
    <fields>
      <field>
        <name>id</name>
        <type>Integer</type>
        <format>#</format>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>15</length>
        <precision>0</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>js_category</name>
        <type>String</type>
        <format/>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>33</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>sector</name>
        <type>Boolean</type>
        <format/>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>required</name>
        <type>String</type>
        <format/>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>3</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>vcfe</name>
        <type>String</type>
        <format/>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>19</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>vcsfe</name>
        <type>String</type>
        <format/>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>28</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>comment</name>
        <type>Boolean</type>
        <format/>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>note</name>
        <type>String</type>
        <format/>
        <currency>$</currency>
        <decimal>.</decimal>
        <group>,</group>
        <length>18</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1328</xloc>
      <yloc>2224</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate - desired_contract_rate - contract_rate</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select 
       convert(varchar(500),C.candidateID) as 'candidate-externalId'
       , Coalesce(NULLIF(replace(C.FirstName,'?',''), ''), 'No Firstname') as 'contact-firstName'
       , Coalesce(NULLIF(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID)) as 'contact-lastName'
       , c.dayRate as 'desired_contract_rate'
       , c.dayRateLow as 'contract_rate'
-- select count (*) -- select distinct gender --employmentPreference -- select skillset, skillIDlist, customTextBlock1, companyURL --select top 10 * -- select dayRate, dayRateLow
from bullhorn1.Candidate C
--where C.isPrimaryOwner = 1	</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1616</xloc>
      <yloc>448</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate Comment</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
--select C.candidateID, C.FirstName,C.LastName from bullhorn1.Candidate C where FirstName = 'Mohammad' and lastname = 'Abusalah' --C.isPrimaryOwner = 1 and C.candidateID = 33


with comments as (
        SELECT --top 1000
                  C.candidateID, C.fullname --,UC.Userid
                , UC.dateAdded
                        , Stuff('COMMENT: ' + char(10)
                                + Coalesce('Created Date: ' + NULLIF(convert(varchar,UC.dateAdded,120), '') + char(10), '')
                                + Coalesce('Author: ' + NULLIF(U.name, '') + char(10), '')
                                + Coalesce('Action: ' + NULLIF(UC.action, '') + char(10), '')
                                + Coalesce('Comments: ' + NULLIF( 
                                          replace(replace(replace(replace(replace(replace([bullhorn1].[fn_ConvertHTMLToText](UC.comments) --[bullhorn1].[fn_ConvertHTMLToText](
                                          ,'Â','')
                                          ,'Â·','')
                                          ,'v\:* {behavior:url(#default#VML);}','')
                                          ,'o\:* {behavior:url(#default#VML);}','')
                                          ,'w\:* {behavior:url(#default#VML);}','')
                                          ,'.shape {behavior:url(#default#VML);}','') , '') + char(10), '')
                        , 1, 0, '') as 'content'
        -- select count(*) --12292
        -- select top 100 *
        from bullhorn1.BH_UserComment UC
        left join ( select candidateID, concat(FirstName,' ',LastName) as fullname, userid, isdeleted, status from bullhorn1.Candidate) C on C.userID = UC.Userid 
        left join bullhorn1.BH_User U on U.userID = UC.commentingUserID
        where C.candidateID is not null and C.isdeleted &lt;&gt; 1 and C.status &lt;&gt; 'Archive' --and cast(UC.comments as nvarchar(max)) &lt;&gt; ''
UNION ALL
        SELECT --top 1000
                  ch.candidateID ,C.fullname --,UC.Userid
                , ch.dateAdded
                , coalesce('HISTORY: ' + char(10)
		           + 'Date Added: ' + convert(varchar, ch.dateAdded, 120) + char(10) 
		           + 'Candidate History: ' + NULLIF(convert(nvarchar(max),ch.comments), ''), '') 
		           as 'content'
        -- select count(*) --138
        -- select top 100 *
        from bullhorn1.BH_CandidateHistory CH
        left join ( select candidateID, concat(FirstName,' ',LastName) as fullname, userid, isdeleted, status from bullhorn1.Candidate) C on C.candidateID = CH.candidateID 
        where C.candidateID is not null and C.isdeleted &lt;&gt; 1 and C.status &lt;&gt; 'Archive' and ch.comments is not null --and cast(ch.comments as varchar(max)) &lt;&gt; '' 
UNION ALL
	SELECT --top 1000
	C.candidateID ,C.fullname  --, a.candidateuserID, C.userID
	, a.dateAdded
		 , Stuff(       'APPOINTMENT: ' + char(10)
                         	    + Coalesce('Contact: ' + NULLIF(cast(concat(UC1.FirstName,' ',UC1.LastName,'     ',UC1.email) as nvarchar(max)), '') + char(10), '') --a.clientUserID 
                         	    + Coalesce('Candidate: ' + NULLIF(cast( concat(UC2.FirstName,' ',UC2.LastName,'     ',UC2.email) as nvarchar(max)), '') + char(10), '') --a.candidateUserID 
                         	    + Coalesce('Job: ' + NULLIF(cast(j.title as nvarchar(max)), '') + char(10), '') --jobPostingID
                                + coalesce('Communication Method: ' + NULLIF(convert(nvarchar(max),a.communicationMethod), '') + char(10), '')
		                  + Coalesce('Date Begin: ' + NULLIF(cast(a.dateBegin as varchar(max)), '') + char(10), '')
                                + coalesce('Date End: ' + NULLIF(convert(nvarchar(max),a.dateEnd), '') + char(10), '')
                                + coalesce('Type: ' + NULLIF(convert(nvarchar(max),a.type), '') + char(10), '') --CA.activePlacements
                                + coalesce('Subject: ' + NULLIF(convert(nvarchar(max),a.subject), '') + char(10), '')
                                + coalesce('Reminder: ' + NULLIF(convert(nvarchar(max),a.notificationMinutes), '') + char(10), '')
                                + coalesce('Opportunity: ' + NULLIF(convert(nvarchar(max),j2.title), '') + char(10), '')
                                + coalesce('Location: ' + NULLIF(convert(nvarchar(max),a.location), '') + char(10), '')
                                + coalesce('Description: ' + NULLIF( convert(nvarchar(max),a.description), '') + char(10), '') --[dbo].[fn_ConvertHTMLToText](
                                + coalesce('File Name: ' + NULLIF(convert(nvarchar(max),af.name), '') + char(10), '')
                                + coalesce('Owner: ' + NULLIF(cast( concat(UC3.FirstName,' ',UC3.LastName,'     ',UC3.email) as nvarchar(max)), '') + char(10), '')
                                + coalesce('Lead: ' + NULLIF(cast( concat(UC4.FirstName,' ',UC4.LastName,'     ',UC4.email) as nvarchar(max)), '') + char(10), '')
                        , 1, 0, '') as 'content' 
        -- select count(*) --2062
        -- select top 20 *
        from bullhorn1.View_Appointment a
        left join bullhorn1.View_AppointmentFile af on af.appointmentID = a.appointmentID
        left join ( select candidateID, concat(FirstName,' ',LastName) as fullname, userid, isdeleted, status from bullhorn1.Candidate) C on C.userID = a.candidateuserID
        left join bullhorn1.BH_UserContact UC1 ON UC1.userID = a.ClientuserID
        left join bullhorn1.BH_UserContact UC2 ON UC2.userID = a.candidateUserID
        left join bullhorn1.BH_UserContact UC3 ON UC3.userID = a.userID
        left join bullhorn1.BH_UserContact UC4 ON UC4.userID = a.LeaduserID
        left join bullhorn1.BH_JobPosting j on j.jobPostingID = a.jobPostingID
        left join bullhorn1.BH_JobPosting j2 on j.jobPostingID = a.opportunityJobPostingID        
        where C.candidateID is not null and C.isdeleted &lt;&gt; 1 and C.status &lt;&gt; 'Archive'
UNION ALL
	SELECT --top 1000
	C.candidateID,C.fullname  --, a.candidateuserID, C.userID
	, a.dateAdded
		 , Stuff(       'TASK: ' + char(10)
                            + Coalesce('Candidate: ' + NULLIF(cast( concat(UC2.FirstName,' ',UC2.LastName,'     ',UC2.email) as nvarchar(max)), '') + char(10), '') --a.candidateUserID 
                            --+ Coalesce('Assigned To: ' + NULLIF(cast(a.childTaskOwners as nvarchar(max)), '') + char(10), '')
                            + Coalesce('Contact: ' + NULLIF(cast(concat(UC1.FirstName,' ',UC1.LastName,'     ',UC1.email) as nvarchar(max)), '') + char(10), '') --a.clientUserID 
                            + Coalesce('Due Date And Time: ' + NULLIF(cast(a.dateBegin as nvarchar(max)), '') + char(10), '')
                            + Coalesce('Date End: ' + NULLIF(cast(a.dateEnd as nvarchar(max)), '') + char(10), '')
                            + Coalesce('Description: ' + NULLIF(cast( a.description as nvarchar(max)), '') + char(10), '') --[dbo].[fn_ConvertHTMLToText](
                            + Coalesce('Visibility: ' + NULLIF(cast(a.isPrivate as nvarchar(max)), '') + char(10), '')
                            + Coalesce('Job: ' + NULLIF(cast(j.title as nvarchar(max)), '') + char(10), '') --jobPostingID
                            + Coalesce('Lead: ' + NULLIF(cast( concat(UC3.FirstName,' ',UC3.LastName,'     ',UC3.email) as nvarchar(max)), '') + char(10), '') --a.leadUserID
                            + Coalesce('Reminder: ' + NULLIF(cast(a.notificationMinutes as nvarchar(max)), '') + char(10), '')
                            + Coalesce('Opportunity: ' + NULLIF(cast(j2.title as nvarchar(max)), '') + char(10), '') --a.opportunityJobPostingID 
                            + Coalesce('Placement: ' + NULLIF(cast(a.placementID as nvarchar(max)), '') + char(10), '')
                            + Coalesce('Priority: ' + NULLIF(cast(a.priority as nvarchar(max)), '') + char(10), '')
                            + Coalesce('Recurrence Day Bits: ' + NULLIF(cast(a.recurrenceDayBits as nvarchar(max)), '') + char(10), '')
                            + Coalesce('Recurrence Frequency: ' + NULLIF(cast(a.recurrenceFrequency as nvarchar(max)), '') + char(10), '')
                            + Coalesce('Recurrence Max: ' + NULLIF(cast(a.recurrenceMax as nvarchar(max)), '') + char(10), '')
                            + Coalesce('Recurrence Month Bits: ' + NULLIF(cast(a.recurrenceMonthBits as nvarchar(max)), '') + char(10), '')
                            + Coalesce('Recurrence Style: ' + NULLIF(cast(a.recurrenceStyle as nvarchar(max)), '') + char(10), '')
                            + Coalesce('Recurrence Type: ' + NULLIF(cast(a.recurrenceType as nvarchar(max)), '') + char(10), '')
                            + Coalesce('Subject: ' + NULLIF(cast(a.subject as nvarchar(max)), '') + char(10), '')
                            + Coalesce('Type: ' + NULLIF(cast(a.type as nvarchar(max)), '') + char(10), '')
                            + Coalesce('Owner: ' + NULLIF(cast( concat(UC4.FirstName,' ',UC4.LastName,'     ',UC4.email) as nvarchar(max)), '') + char(10), '') --a.userID
                        , 1, 0, '') as 'content' 
        -- select count(*) --24
        -- select top 100 *        
        from bullhorn1.View_Task a
        left join bullhorn1.BH_Client Cl on Cl.userID = a.ClientUserID
        left join bullhorn1.BH_UserContact UC1 ON Cl.userID = UC1.userID
        left join bullhorn1.BH_UserContact UC2 ON a.candidateUserID = UC2.userID
        left join bullhorn1.BH_JobPosting j on j.jobPostingID = a.jobPostingID
        left join bullhorn1.BH_UserContact UC3 ON a.leadUserID = UC3.userID
        left join bullhorn1.BH_UserContact UC4 ON a.userID = UC4.userID
        left join ( select candidateID, concat(FirstName,' ',LastName) as fullname, userid, isdeleted, status from bullhorn1.Candidate) C on C.userID = a.candidateuserID 
        left join bullhorn1.BH_JobPosting j2 on j2.jobPostingID = a.opportunityJobPostingID
        where C.candidateID is not null and C.isdeleted &lt;&gt; 1 and C.status &lt;&gt; 'Archive'
UNION ALL
       -- PLACEMENT
        select --top 1000
        C.candidateid, C.fullname
       , pl.dateadded 
	, Stuff( 'PLACEMENT: ' + char(10)
              + Coalesce('Billing Contact: ' + NULLIF(cast( concat(UC1.FirstName,' ',UC1.LastName,'     ',UC1.email)  as nvarchar(max)), '') + char(10), '')  --pl.billingUserID
                     --+ Coalesce('Bill Rate Information: ' + NULLIF(cast(pl.billRateInfoHeader as nvarchar(max)), '') + char(10), '')
              + Coalesce('Bill Rate: ' + NULLIF(cast(pl.clientBillRate as nvarchar(max)), '') + char(10), '')
              + Coalesce('Over-time Bill Rate: ' + NULLIF(cast(pl.clientOverTimeRate as nvarchar(max)), '') + char(10), '')
              + Coalesce('Comments: ' + NULLIF(cast(pl.comments as nvarchar(max)), '') + char(10), '')
                     --+ Coalesce('Contract Employment Info: ' + NULLIF(cast(pl.contractInfoHeader as nvarchar(max)), '') + char(10), '')
              + Coalesce('Primary Timesheet Approver: ' + NULLIF(cast(pl.correlatedCustomText1 as nvarchar(max)), '') + char(10), '')
              + Coalesce('Secondary Timecard Approver: ' + NULLIF(cast(pl.correlatedCustomText2 as nvarchar(max)), '') + char(10), '')
              + Coalesce('Purchase Order Number: ' + NULLIF(cast(pl.correlatedCustomText3 as nvarchar(max)), '') + char(10), '')
              + Coalesce('Cost Center: ' + NULLIF(cast(pl.costCenter as nvarchar(max)), '') + char(10), '')
              + Coalesce('Insurance Reference: ' + NULLIF(cast(pl.customText1 as nvarchar(max)), '') + char(10), '')
              + Coalesce('Start Date: ' + NULLIF(cast(pl.dateBegin as nvarchar(max)), '') + char(10), '')
              + Coalesce('Effective Date (Client): ' + NULLIF(cast(pl.dateClientEffective as nvarchar(max)), '') + char(10), '')
              + Coalesce('Effective Date: ' + NULLIF(cast(pl.dateEffective as nvarchar(max)), '') + char(10), '')
              + Coalesce('Scheduled End: ' + NULLIF(cast(pl.dateEnd as nvarchar(max)), '') + char(10), '')
              + Coalesce('Days Guaranteed: ' + NULLIF(cast(pl.daysGuaranteed as nvarchar(max)), '') + char(10), '')
              + Coalesce('Days Pro-Rated: ' + NULLIF(cast(pl.daysProRated as nvarchar(max)), '') + char(10), '')
              + Coalesce('Employment Type: ' + NULLIF(cast(pl.employmentType as nvarchar(max)), '') + char(10), '')
              + Coalesce('Placement Fee (%): ' + NULLIF(cast(pl.fee as nvarchar(max)), '') + char(10), '')
              --+ Coalesce('Placement Fee (Flat): ' + NULLIF(cast(pl.flatFee as nvarchar(max)), '') + char(10), '')
              + Coalesce('Hours of Operation: ' + NULLIF(cast(pl.hoursOfOperation as nvarchar(max)), '') + char(10), '')
              + Coalesce('Hours Per Day: ' + NULLIF(cast(pl.hoursPerDay as nvarchar(max)), '') + char(10), '')
              + Coalesce('Rate Entry Type: ' + NULLIF(cast(pl.isMultirate as nvarchar(max)), '') + char(10), '')
              --+ Coalesce('Mark-up %: ' + NULLIF(cast(pl.markUpPercentage as nvarchar(max)), '') + char(10), '')
              + Coalesce('Over-time Pay Rate: ' + NULLIF(cast(pl.overtimeRate as nvarchar(max)), '') + char(10), '')
              + Coalesce('Pay Rate: ' + NULLIF(cast(pl.payRate as nvarchar(max)), '') + char(10), '')
                     --+ Coalesce('Pay Rate Information: ' + NULLIF(cast(pl.payRateInfoHeader as nvarchar(max)), '') + char(10), '')
                     --+ Coalesce('Permanent Employment Info: ' + NULLIF(cast(pl.permanentInfoHeader as nvarchar(max)), '') + char(10), '')
              + Coalesce('Referral Fee Type: ' + NULLIF(cast(pl.referralFeeType as nvarchar(max)), '') + char(10), '')
              + Coalesce('Reporting to: ' + NULLIF(cast(pl.reportTo as nvarchar(max)), '') + char(10), '')
              + Coalesce('Salary: ' + NULLIF(cast(pl.salary as nvarchar(max)), '') + char(10), '')
              + Coalesce('Pay Unit: ' + NULLIF(cast(pl.salaryUnit as nvarchar(max)), '') + char(10), '')
              + Coalesce('Status: ' + NULLIF(cast(pl.status as nvarchar(max)), '') + char(10), '')
        , 1, 0, '') as 'content'
        from bullhorn1.BH_Placement PL --where PL.reportTo &lt;&gt; ''
        left join bullhorn1.BH_UserContact UC1 ON UC1.userID = pl.billingUserID
        left join ( select candidateID, concat(FirstName,' ',LastName) as fullname, userid, isdeleted, status from bullhorn1.Candidate) C on C.userID = pl.userid
        where C.candidateID is not null and C.isdeleted &lt;&gt; 1 and C.status &lt;&gt; 'Archive'
UNION ALL
       -- Job Submission
        select --top 1000
        C.candidateid, C.fullname
       , jr.dateadded
	, Stuff(    'JOB SUBMISSION: ' + char(10)
                 --Coalesce('Appointments: ' + NULLIF(cast(jr.appointments as nvarchar(max)), '') + char(10), '')
              + Coalesce('Bill Rate: ' + NULLIF(cast(jr.billRate as nvarchar(max)), '') + char(10), '')
              + Coalesce('Comments: ' + NULLIF(cast(jr.comments as nvarchar(max)), '') + char(10), '')
              + Coalesce('Date Added: ' + NULLIF(cast(jr.dateAdded as nvarchar(max)), '') + char(10), '')
              --+ Coalesce('Date Last Modified: ' + NULLIF(cast(jr.dateLastModified as nvarchar(max)), '') + char(10), '')
              + Coalesce('Date Web Response: ' + NULLIF(cast(jr.dateWebResponse as nvarchar(max)), '') + char(10), '')
              + Coalesce('Job Order: ' + NULLIF(cast(j.title as nvarchar(max)), '') + char(10), '') --jr.jobPostingID
              + Coalesce('Latest Appointment: ' + NULLIF(cast(jr.latestAppointmentID as nvarchar(max)), '') + char(10), '')
              + Coalesce('Migrate GUID: ' + NULLIF(cast(jr.migrateGUID as nvarchar(max)), '') + char(10), '')
              --+ Coalesce('Owners: ' + NULLIF(cast(jr.owners as nvarchar(max)), '') + char(10), '')
              + Coalesce('Pay Rate: ' + NULLIF(cast(jr.payRate as nvarchar(max)), '') + char(10), '')
              + Coalesce('Salary: ' + NULLIF(cast(jr.salary as nvarchar(max)), '') + char(10), '')
              + Coalesce('Added By: ' + NULLIF(cast( concat(UC2.FirstName,' ',UC2.LastName,'     ',UC2.email) as nvarchar(max)), '') + char(10), '') --jr.sendingUserID
              + Coalesce('Source: ' + NULLIF(cast(jr.source as nvarchar(max)), '') + char(10), '')
              + Coalesce('Status: ' + NULLIF(cast(jr.status as nvarchar(max)), '') + char(10), '')
              --+ Coalesce('Task: ' + NULLIF(cast(jr.tasks as nvarchar(max)), '') + char(10), '')
              + Coalesce('Candidate: ' + NULLIF(cast( concat(UC1.FirstName,' ',UC1.LastName,'     ',UC1.email) as nvarchar(max)), '') + char(10), '') --jr.userID 
        , 1, 0, '') as note
        from bullhorn1.View_JobResponse jr
        left join bullhorn1.BH_UserContact UC1 ON UC1.userID = jr.userID
        left join bullhorn1.BH_UserContact UC2 ON UC2.userID = jr.sendingUserID
        left join bullhorn1.BH_JobPosting j on j.jobPostingID = jr.jobPostingID        
        left join ( select candidateID, concat(FirstName,' ',LastName) as fullname, userid, isdeleted, status from bullhorn1.Candidate) C on C.userID = jr.userid
        where C.candidateID is not null and C.isdeleted &lt;&gt; 1 and C.status &lt;&gt; 'Archive'
        --where jr.userid &lt;&gt; jr.sendingUserID
)


--select count(*) from comments where note &lt;&gt; '' --12428
select --top 100
                   candidateID
                  , cast('-10' as int) as 'user_account_id'
                  , 'comment' as 'category'
                  , 'candidate' as 'type'
                  , dateAdded as 'insert_timestamp'
                  , [bullhorn1].[fn_ConvertHTMLToText](content) as content
from comments where content &lt;&gt; '' 
--and candidateID = 2988 or fullname like '%Philip%'




</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1616</xloc>
      <yloc>112</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate FE/SFE</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>--CANDIDATE POSITION as FE
with position_cand as (select id
			, position_c
			, recordtypeid
			, trim(unnest(string_to_array(position_c, ';'))) as position_cand
			from contact)

--select * from position_cand
--where id = '0030Y00000j0tVMQAY'

, candposition as (select id as candidate_id
			, position_c as original
			, 'POSITION' as vcfe
			, case position_cand
			when 'Tech Author' then 'Tech Author'
			when 'Mid-level' then 'Staff'
			when 'HR' then 'HR'
			when 'Team Leadership' then 'Staff'
			when 'Management' then 'Management'
			when 'Finance' then 'Finance'
			when 'Project / Programme' then 'Project / Programme'
			when 'CXO' then 'CXO'
			--when 'Support' then ''
			--when 'Regional Management' then ''
			when 'Senior/Princ' then 'Staff'
			when 'Architect' then 'Architect'
			when 'Director / VP' then 'Director / VP'
			when 'Grad/Junior' then 'Staff'
			when 'FieldService' then 'FieldService'
			when 'Applications' then 'Applications'
			when 'Technician' then 'Technician'
			else NULL end as vcsfe
			, now() as insert_timestamp
			from position_cand
			where recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV') --124420
)

select candidate_id
, original
, vcfe
, vcsfe
, insert_timestamp
from candposition
where 1=1
and vcsfe is not NULL --122783
--and sfe is null --1637
--and candidate_id ='0030Y00000j0tVMQAY'

UNION

--CANDIDATE FE/SFE (skills)
select distinct c.id as candidate_id
		, s.ts2_skill_name_c
		, fe.vcfe
		, fe.vcsfe
		, now() as insert_timestamp
from ts2_skill_c s--349730
left join contact c on s.ts2_contact_c = c.id
left join (select distinct js_category, vcfe, vcsfe from candidate_fe_sfe where note = 'Candidate category') fe on trim(lower(fe.js_category)) = trim(lower(s.ts2_skill_name_c))
where 1=1
and c.recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')  --54117 rows
and s.ts2_skill_name_c is not NULL --53996
--and (fe.vcfe is NULL) --check case in capital letter --147339
and (fe.vcfe is not NULL or fe.vcsfe is not NULL) --145537

--total: 286862</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>656</xloc>
      <yloc>2336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate FE/SFE AREA</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>--CANDIDATE AREA SFE
select distinct c.id as candidate_id
, 'AREA' as vcfe
, trim(unnest(string_to_array(c.area_c, ';'))) as vcsfe
, current_timestamp as insert_timestamp
from contact c
where c.recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')
and area_c is not null and area_c &lt;&gt; '' --148705 rows</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>656</xloc>
      <yloc>2448</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate Hires Industry</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>--CONTACT/ CANDIDATE 'Hires Contractor (IC)' as Industry
select ts2_contact_c as candidate_id
, 'Hires Contractor (IC)' as industry
, now() as insert_timestamp
from ts2_skill_c
where lower(ts2_skill_name_c) = lower('Hires Contractor (IC)')</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>560</xloc>
      <yloc>1200</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate Note 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select 
         c.id as "candidate-externalid"
, 'Flag Text' as title
       , c.flag_text_c as "candidate-note2" --**

from contact c --where c.recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')
where c.recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')
and c.flag_text_c is not null and c.flag_text_c &lt;&gt; ''

</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1568</xloc>
      <yloc>304</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate Pay Rate</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select --top 10
        convert(varchar(max),C.candidateID) as 'candidate-externalId' --, C.userID as '#userID'
      , coalesce(nullif(replace(C.FirstName,'?',''), ''), 'No Firstname') as 'contact-firstName'
      , coalesce(nullif(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID)) as 'contact-lastName'

    , cast(C.salary as int) as 'Current Pay Rate'

from bullhorn1.Candidate C
where C.isdeleted &lt;&gt; 1 and C.status &lt;&gt; 'Archive'     
and salary is not null and salary &lt;&gt; 0</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1632</xloc>
      <yloc>1440</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate back office</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>--Candidate back office | bank name
select c.id as candidate_id
, c.limited_company_c
, a.ltdco_bank_name_c as field_value --bank name
, 'add_cand_info' as additional_type
, 1005 as form_id
, 11231 as field_id --Bank Name
, 11231 as constraint_id
, CURRENT_TIMESTAMP as insert_timestamp
from contact c
left join account a on a.id = c.limited_company_c
where c.recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')
and c.limited_company_c is not NULL --1123 rows
and a.ltdco_bank_name_c is not NULL --187

UNION ALL

--Candidate back office | account name
select c.id as candidate_id
, c.limited_company_c
, a.ltdco_bank_account_name_c as field_value
, 'add_cand_info' as additional_type
, 1005 as form_id
, 10063 as field_id --Account Name
, 10063 as constraint_id
, CURRENT_TIMESTAMP as insert_timestamp
from contact c
left join account a on a.id = c.limited_company_c
where c.recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')
and c.limited_company_c is not NULL --1123 rows
and a.ltdco_bank_account_name_c is not NULL --181

UNION ALL

--Candidate back office | account number
select c.id as candidate_id
, c.limited_company_c
, a.ltdco_bank_account_number_c
, 'add_cand_info' as additional_type
, 1005 as form_id
, 10062 as field_id --Account number
, 10062 as constraint_id
, CURRENT_TIMESTAMP as insert_timestamp
from contact c
left join account a on a.id = c.limited_company_c
where c.recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')
and c.limited_company_c is not NULL --1123 rows
and a.ltdco_bank_account_number_c is not NULL --162

--total: 530</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1648</xloc>
      <yloc>2064</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate common_location</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>300</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>common_location</table>
      <key>
        <name>can.current_location_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>latitude</name>
        <rename>ts2_latitude_c</rename>
      </value>
      <value>
        <name>longitude</name>
        <rename>ts2_longitude_c</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1929</xloc>
      <yloc>1674</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate desire_salary</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select --top 10
        convert(varchar(max),C.candidateID) as 'candidate-externalId' --, C.userID as '#userID'    , coalesce(nullif(replace(C.FirstName,'?',''), ''), 'No Firstname') as 'contact-firstName'
      , coalesce(nullif(replace(C.FirstName,'?',''), ''), 'No Firstname') as 'contact-firstName'
      , coalesce(nullif(replace(C.LastName,'?',''), ''), concat('Lastname-',C.userID)) as 'contact-lastName'

    --, cast(C.salary as int) as 'Desired Annual Salary - GB: This is monthly number so needs * 12'
    , cast(C.salary*12 as int) as 'desire_salary'
    --, cast(C.salaryLow as int) as 'Current Salary (Annual) - Mths/year = 12'
    
from bullhorn1.Candidate C --where C.isPrimaryOwner = 1
where C.isdeleted &lt;&gt; 1 and C.status &lt;&gt; 'Archive'     
and salary is not null and salary &lt;&gt; 0</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1632</xloc>
      <yloc>1376</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate language</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>--CANDIDATE LANGUAGE JSON
--CONTACT/ CANDIDATE 'Hires Contractor (IC)' as Industry
with candidatelang as (select ts2_contact_c as candidate_id
		, ts2_skill_name_c
		, case lower(ts2_skill_name_c)
				when lower('Chinese (IC)') then 'zh_CN'
				when lower('Czech (IC)') then 'cs'
				when lower('Dutch (IC)') then 'nl'
				when lower('French (IC)') then 'fr'
				when lower('German (IC)') then 'de'
				when lower('Italian (IC)') then 'it'
				when lower('Japanese (IC)') then 'ja'
				when lower('Korean (IC)') then 'ko'
				when lower('Malaysian (IC)') then 'ml'
				when lower('Portuguese (IC)') then 'pt'
				when lower('Spanish (IC)') then 'es'
				when lower('Swedish (IC)') then 'sv'
				when lower('English (IC)') then 'en'
				else NULL end as candlanguage
		, '' as level
		, now() as insert_timestamp
		from ts2_skill_c
		where lower(ts2_skill_name_c) in (lower('Chinese (IC)'), lower('Czech (IC)'), lower('Dutch (IC)'), lower('French (IC)'), lower('German (IC)')
																, lower('Italian (IC)'), lower('Japanese (IC)'), lower('Korean (IC)'), lower('Malaysian (IC)'), lower('Portuguese (IC)')
																, lower('Spanish (IC)'), lower('Swedish (IC)'), lower('English (IC)'))
)

/*
select candidate_id, count(*)
from candidatelang
group by candidate_id
having count(*) > 1 --0030Y00000j0tD7QAI

select *
from candidatelang
where candidate_id = '0030Y00000j0tD7QAI'
*/

select distinct candidate_id
, (select array_to_json(array_agg(row_to_json(value_json)))
					from (
							select candlanguage as "languageCode" --keep format by using ""
							, '' as "level"
							from candidatelang cl
							where c.candidate_id = cl.candidate_id
							) as value_json )::text as field_value_json
from candidatelang c
--where c.candidate_id = '0030Y00000j0tD7QAI'</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1648</xloc>
      <yloc>2464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate lookup</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCCandidateID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>704</xloc>
      <yloc>1200</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate lookup 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>candidate_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCCandidateID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2736</xloc>
      <yloc>624</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate lookup 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>application-candidateExternalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCCandidateID</rename>
        <default/>
        <type>Integer</type>
      </value>
      <value>
        <name>first_name</name>
        <rename>c.first_name</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>last_name</name>
        <rename>c.last_name</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>male</name>
        <rename>c.male</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>email</name>
        <rename>c.email</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>date_of_birth</name>
        <rename>c.date_of_birth</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>notice_period</name>
        <rename>c.notice_period</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>current_location_id</name>
        <rename>c.current_location_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2368</xloc>
      <yloc>240</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate lookup 2 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCCandidateID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1792</xloc>
      <yloc>1984</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate lookup 2 4</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>can_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCCandidateID</rename>
        <default/>
        <type>Integer</type>
      </value>
      <value>
        <name>first_name</name>
        <rename>c.first_name</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>last_name</name>
        <rename>c.last_name</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>email</name>
        <rename>c.email</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2464</xloc>
      <yloc>1760</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate lookup 2 4 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>can_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCCandidateID</rename>
        <default/>
        <type>Integer</type>
      </value>
      <value>
        <name>first_name</name>
        <rename>c.first_name</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>last_name</name>
        <rename>c.last_name</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>email</name>
        <rename>c.email</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2464</xloc>
      <yloc>2480</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate lookup 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCCandidateID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>704</xloc>
      <yloc>1408</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate lookup 3 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>can_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCCandidateID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2416</xloc>
      <yloc>1024</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Candidate national insurance</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>--National insurance
select id as candidate_id
, ni_number_c as field_value
, 'add_cand_info' as additional_type 
, 1005 as form_id
, 10073 as field_id --National Insurance number
, 10073 as constraint_id
, CURRENT_TIMESTAMP as insert_timestamp
from contact
where ni_number_c is not NULL --337 rows</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1648</xloc>
      <yloc>1984</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Change Request</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>-->>> CHANGE REQUEST
select c.id
, can.id as "candidate_id", can.fullname as "candidate_name" --c.employee_c
, -10 as "user_account_id"
, c.createddate::timestamp as insert_timestamp
, 'comment' as "category"
, 'candidate' as "type"
, concat_ws(chr(10), '[CHANGE REQUEST]'
			, '---Details---'
			, coalesce('Change Request Name: ' || nullif(c."name",''),NULL)
			, coalesce('Change Request Status: ' || nullif(c.change_request_status_c,''),NULL)
			, coalesce('Related Placement: ' || nullif(p.name,''),NULL) --c.related_placement_c
			, coalesce('Employee: ' || nullif(can.fullname, ' '),NULL) --c.employee_c
			, coalesce('Account: ' || nullif(a1.name,''),NULL) --c.account_c
			, chr(10), '---Info to complete---'
			, coalesce('Effective Date: ' || nullif(c.effective_date_c,''),NULL)
			, coalesce('End Date: ' || nullif(c.end_date_c,''),NULL)
			, coalesce('Bill Rate: ' || c.currencyisocode || ' ' || nullif(c.bill_rate_c,''),NULL)
			, coalesce('Pay Rate: ' || c.currencyisocode || ' ' || nullif(c.pay_rate_c, ' '),NULL)
			, coalesce('Contact Manager: ' || nullif(con.fullname,''),NULL) --c.contact_manager_c
			, coalesce('Contact Email: ' || nullif(con.email,''),NULL) --c.contact_manager_c
			, coalesce('Timecard Approver: ' || nullif(con4.fullname,''),NULL) --c.timecardapprover_c
			, coalesce('Status: ' || nullif(c.status_c,''),NULL)
			, chr(10), '---Accounts--'
			, coalesce('Accounts Receivable: ' || nullif(u3.fullname,''),NULL) --c.accounts_receivable_u_c
			, coalesce('Accounts Payable: ' || nullif(con2.fullname,''),NULL) --c.accounts_payable_c
			, coalesce('Currency: ' || nullif(c.currencyisocode,''),NULL)
			, chr(10), '---Paperwork--'
			, coalesce('Employee Name Formula: ' || nullif(can.fullname,''),NULL) --c.employee_c
			, coalesce('Send Extension Contracts: ' || case c.send_extension_contracts_c when '1' then 'YES' else 'NO' end,NULL)
			, coalesce('Date Extension Documents Sent: ' || nullif(c.date_extension_documents_sent_c,''),NULL)
			, coalesce('Contractor Extension Form Completed: ' || case c.contractor_extension_form_completed_c when '1' then 'YES' else 'NO' end,NULL)
			, coalesce('Date Contractor Extension Form Completed: ' || nullif(c.date_contractor_extension_form_completed_c,''),NULL)
			, coalesce('Umbrella Contact: ' || nullif(con2.fullname ,''),NULL) --c.umbrella_contact_c
			, coalesce('Send Client Extension Contracts: ' || case c.send_client_extension_contracts_c when '1' then 'YES' else 'NO' end, NULL)
			, coalesce('Date Client Extension Documents Sent: ' || nullif(c.date_client_extension_documents_sent_c,''),NULL)
			, coalesce('Client Extension Form Completed: ' || case c.client_extension_form_completed_c when '1' then 'YES' else 'NO' end,NULL)
			, coalesce('Date Client Extension Form Completed: ' || nullif(c.date_client_extension_form_completed_c,''),NULL)
			, chr(10), '---Change request fields--'
			, coalesce('Employee Name Formula: ' || nullif(c.description_c,''),NULL)
			, chr(10), '---Status--'
			, coalesce('Processed Status: ' || nullif(c.processed_status_c,''),NULL)
			, coalesce('Processed Datetime: ' || nullif(c.processed_datetime_c,''),NULL)
			, coalesce('Processed Description: ' || nullif(c.processed_description_c ,''),NULL)
			, coalesce('Owner: ' || nullif(u4.fullname,''),NULL)
			, coalesce('Created By: ' || nullif(u.fullname,''),NULL)
			, coalesce('Created: ' || nullif(c.createddate,''),NULL)
			, coalesce('Last Modified By: ' || nullif(u2.fullname,''),NULL)
			, coalesce('Last Modified: ' || nullif(c.lastmodifieddate,''),NULL)
            ) as content
/*
--DETAILS
, c."name" --change request name
, c.change_request_status_c --change request status
, c.related_placement_c --Related Placement
, c.employee_c --Employee
, can.fullname
, c.account_c --Account
, a1.name

--Info to complete
, c.effective_date_c
, c.end_date_c
, c.bill_rate_c
, c.pay_rate_c
, c.currencyisocode
, c.contact_manager_c
, con.fullname
, con.email
, c.timecardapprover_c
, con4.fullname
, c.status_c

--Accounts
, c.accounts_receivable_u_c --User
, u3.fullname
, c.accounts_payable_c --Contact
, con2.fullname
, c.currencyisocode

--Paperwork
, can.fullname --Employee Name Formula
, c.send_extension_contracts_c--Send Extension Contracts
, c.date_extension_documents_sent_c --Date Extension Documents Sent
, c.contractor_extension_form_completed_c --Contractor Extension Form Completed
, c.date_contractor_extension_form_completed_c --Date Contractor Extension Form Completed
, con2.fullname --Umbrella Contact
, c.send_client_extension_contracts_c--Send Client Extension Contracts
, c.date_client_extension_documents_sent_c --Date Client Extension Documents Sent
, c.client_extension_form_completed_c --Client Extension Form Completed
, c.date_client_extension_form_completed_c --Date Client Extension Form Completed
*/
--Change request fields
, c.description_c
/*
--Status
, c.processed_status_c --Processed Status
, c.processed_datetime_c --Processed Datetime
, c.processed_description_c --Processed Description
, c.ownerid
, c.createdbyid
, c.createddate
, c.lastmodifiedbyid
, c.lastmodifieddate
*/
from change_request_c c
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u on u.id = c.createdbyid
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u2 on u2.id = c.lastmodifiedbyid
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u3 on u3.id = c.accounts_receivable_u_c
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u4 on u4.id = c.ownerid
left join ts2_placement_c p on p.id = c.related_placement_c
left join (select id, concat(firstname,' ',lastname) as fullname, email from contact 
			where recordtypeid in ('0120Y0000013O5d')) con on con.id = c.contact_manager_c --CONTACT (manager)
left join (select id, concat(firstname,' ',lastname) as fullname, email from contact) con2 on con2.id = c.accounts_payable_c --CONTACT (payable)
left join (select id, concat(firstname,' ',lastname) as fullname, email from contact 
			where recordtypeid in ('0120Y0000013O5d')) con3 on con3.id = c.umbrella_contact_c --CONTACT (umbrella contact)
left join (select id, concat(firstname,' ',lastname) as fullname, email from contact 
			where recordtypeid in ('0120Y0000013O5d')) con4 on con4.id = c.timecardapprover_c --CONTACT (timecard approver)
left join (select id, concat(firstname,' ',lastname) as fullname, email from contact
			where recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')) can on can.id = c.employee_c --CANDIDATE
left join (select id, name from Account) a1 on a1.id = c.account_c --COMPANY
--where c.id = 'a3Z0J000000I1BJUA0' --538
where can.id is not NULL --442</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2736</xloc>
      <yloc>544</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Company - table</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select 
         a.id as "company-externalid"
       , a.linkedin_c as "company-linkedin"
, a.type as "Client > DISCUSS SPECIFIC LTD COMPANY RELATED FIELDS WITH ANDI"
, a.legal_entity_name_c as "Trading name"
, a.reg_no_c as "Company Number"
, a.billingstreet, a.billingcity, a.billingstate, a.billingpostalcode, a.billingcountry --**
, a.market_sector_c as "industry"
, a.sageref_c as "CUSTOM FIELD > Sage Ref"
, a.terms_sent_c as "Terms Sent > FEE MODEL > Comments"
, a.terms_sent_date_c as "Terms Sent Date	> FEE MODEL > COMMENTS"
, a.rebate_terms_c as "Rebate Terms > FEE MODEL > COMMENTS"
, a.additional_information_c as "Additional Information	> FEE MODEL > COMMENTS"
, a.createddate::timestamp as "insert_timestamp"
from account a</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>80</xloc>
      <yloc>688</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Company Fee model</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select
        a.id as "company-externalid"
      , case when a.rebate_terms_c is not null then a.rebate_terms_c else a.name end as "fee_model_name"
      , 2 as "fee_model_type" --Fixed fee
      , a.currencyisocode as "currency" --default for PRTR
      --, NULL as "contract_type" --Permanent by default
      --, NULL as "contract_category"
      --, NULL as "charge_rate" --20% as their default
      --, NULL as "gross_annual_salary" --gross annual salary as selection
      , now() as "insert_timestamp"
      , concat_ws( chr(10)
             , coalesce('Terms Sent: ' || nullif( case when a.terms_sent_c = '1' then 'Yes' when a.terms_sent_c = '1' then 'No' end,''), '')
             , coalesce('Terms Sent Date: ' || nullif(a.terms_sent_date_c,''), '')
             , coalesce('Rebate Terms: ' || nullif(a.rebate_terms_c,''), '')
             , coalesce('Additional Information: ' || nullif(a.additional_information_c,''), '')
             ) as "description"
from account a</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>80</xloc>
      <yloc>1040</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Company Fee model 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select
        a.id as "company-externalid"
       , 'add_com_info' as additional_type
       , 1006 as form_id
       , 11266 as field_id
       , a.sageref_c as field_value --"CUSTOM FIELD > Sage Ref"
       , 11266 as constraint_id
from account a
where sageref_c is not null and sageref_c &lt;&gt; ''</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>96</xloc>
      <yloc>912</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Company Location</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>with 
billaddress as (
select 
         a.id as "company-externalid"
       , ltrim( concat_ws(', ', a.billingstreet, a.billingcity, a.billingstate, a.billingpostalcode, a.billingcountry)) as "address"
       , ltrim( concat_ws(', ', a.billingcity, a.billingstate, a.billingpostalcode, a.billingcountry)) as "location_name"
       , a.billingcity as "city", a.billingstate as "state", a.billingpostalcode as "post_code"
       , 'BILLING_ADDRESS' as location_type
       , now() as insert_timestamp
       , a.billingcountry --**
       , case
              when a.billingcountry = 'SG' then 'SG'
              when a.billingcountry = 'Engalnd' then 'GB'
              when a.billingcountry = 'The Netherlands' then 'NL'
              when a.billingcountry = 'Schweiz' then 'CH'
              when a.billingcountry ilike 'United Kingdon' then 'GB'
              when a.billingcountry ilike 'South Africa' then 'ZA'
              when a.billingcountry ilike 'South Korea' then 'KR'
              when a.billingcountry ilike 'New Zealand' then 'NZ'
              when a.billingcountry ilike 'Northern Ireland' then 'IE'
              when a.billingcountry ilike 'North Wales' then 'GB'
              when a.billingcountry = 'UnitedKingdom' then 'GB'
              when a.billingcountry = 'Sapin' then 'ES'     
        when a.billingcountry ilike '201203%' then ''
        when a.billingcountry ilike 'Africa%' then 'ZA'
        when a.billingcountry ilike 'Albania%' then 'AL'
        when a.billingcountry ilike 'Allemag%' then 'DE'
        when a.billingcountry ilike 'amsterd%' then 'NL'
        when a.billingcountry ilike 'Amsterd%' then 'NL'
        
        when a.billingcountry ilike 'Argenti%' then 'AR'
        when a.billingcountry ilike 'Armenia%' then 'AM'
        when a.billingcountry ilike 'AT%' then ''
        when a.billingcountry ilike 'austral%' then 'AU'
        when a.billingcountry ilike 'Austral%' then 'AU'
        when a.billingcountry ilike 'Austria%' then 'AT'
        when a.billingcountry ilike 'Belarus%' then 'BY'
        when a.billingcountry ilike 'Belgium%' then 'BE'
        when a.billingcountry ilike 'berkshi%' then 'GB'
        when a.billingcountry ilike 'Berkshi%' then 'GB'
        when a.billingcountry ilike 'BOULOGN%' then ''
        when a.billingcountry ilike 'Brazil%' then 'BR'
        when a.billingcountry ilike 'Bucks%' then ''
        when a.billingcountry ilike 'Bulgari%' then 'BG'
        when a.billingcountry ilike 'Canada%' then 'CA'
        when a.billingcountry ilike 'Channel%' then 'GB'
        when a.billingcountry ilike 'China%' then 'CN'
        when a.billingcountry ilike 'CHINA%' then 'CN'
        when a.billingcountry ilike 'Chna%' then 'CN'
        when a.billingcountry ilike 'CH%' then 'CH'
        when a.billingcountry ilike 'CN%' then 'CN'
        when a.billingcountry ilike 'Cyprus%' then 'CY'
        when a.billingcountry ilike 'Czechia%' then 'CZ'
        when a.billingcountry ilike 'Czech%' then 'CZ'
        when a.billingcountry ilike 'Denmark%' then 'DK'
        when a.billingcountry ilike 'Deutsch%' then 'DE'
        when a.billingcountry ilike 'Devon%' then ''
        when a.billingcountry ilike 'djfopas%' then ''
        when a.billingcountry ilike 'Egypt%' then 'EG'
        when a.billingcountry ilike 'england%' then 'GB'
        when a.billingcountry ilike 'England%' then 'GB'
        when a.billingcountry ilike 'Estonia%' then 'EE'
        when a.billingcountry ilike 'Finland%' then 'FI'
        when a.billingcountry ilike 'FInland%' then 'FI'
        when a.billingcountry ilike 'France%' then 'FR'
        when a.billingcountry ilike 'GB%' then 'GB'
        when a.billingcountry ilike 'germany%' then 'DE'
        when a.billingcountry ilike 'Germany%' then 'DE'
        when a.billingcountry ilike 'Gibralt%' then 'ES'
        when a.billingcountry ilike 'Great%' then 'GB'
        when a.billingcountry ilike 'Greece%' then 'GR'
        when a.billingcountry ilike 'Guadelo%' then ''
        when a.billingcountry ilike 'HK%' then 'HK'
        when a.billingcountry ilike 'Hong%' then 'HK'
        when a.billingcountry ilike 'Hungary%' then 'HU'
        when a.billingcountry ilike 'india%' then 'IN'
        when a.billingcountry ilike 'India%' then 'IN'
        when a.billingcountry ilike 'Ireland%' then 'IE'
        when a.billingcountry ilike 'Israel%' then 'IL'
        when a.billingcountry ilike 'Italy%' then 'IT'
        when a.billingcountry ilike 'Japan%' then 'JP'
        when a.billingcountry ilike 'Jersey%' then 'GB'
        when a.billingcountry ilike 'JP%' then 'JP'
        when a.billingcountry ilike 'Kazakhs%' then 'KZ'
        when a.billingcountry ilike 'kingdom%' then 'GB'
        when a.billingcountry ilike 'Kingdom%' then 'GB'
        when a.billingcountry ilike 'Kingdon%' then ''
        when a.billingcountry ilike 'Korea%' then 'KR'
        when a.billingcountry ilike 'Latvia%' then 'LV'
        when a.billingcountry ilike 'Liechte%' then 'LI'
        when a.billingcountry ilike 'Lincs%' then ''
        when a.billingcountry ilike 'Lithuan%' then 'LT'
        when a.billingcountry ilike 'london%' then 'GB'
        when a.billingcountry ilike 'Luxembo%' then 'LU'
        when a.billingcountry ilike 'Madeira%' then 'PT'
        when a.billingcountry ilike 'Malaysi%' then 'MY'
        when a.billingcountry ilike 'Malta%' then 'MT'
        when a.billingcountry ilike 'Morocco%' then 'MA'
        when a.billingcountry ilike 'Netherl%' then 'NL'
        when a.billingcountry ilike 'Norway%' then 'NO'
        when a.billingcountry ilike 'Oman%' then 'OM'
        when a.billingcountry ilike 'Philipp%' then 'PH'
        when a.billingcountry ilike 'Poland%' then 'PL'
        when a.billingcountry ilike 'Polska%' then ''
        when a.billingcountry ilike 'Portuga%' then 'PT'
        when a.billingcountry ilike 'Qatar%' then 'QA'
        when a.billingcountry ilike 'Romania%' then 'RO'
        when a.billingcountry ilike 'Russia%' then 'RU'
        when a.billingcountry ilike 'Sapin%' then ''
        when a.billingcountry ilike 'Saudi%' then 'SA'
        when a.billingcountry ilike 'Scotlan%' then 'GB'
        when a.billingcountry ilike 'Serbia%' then 'RS'
        when a.billingcountry ilike 'Shangha%' then 'CN'
        when a.billingcountry ilike 'Singapo%' then 'SG'
        when a.billingcountry ilike 'Slovaki%' then 'SK'
        when a.billingcountry ilike 'Sloveni%' then 'SI'
        when a.billingcountry ilike 'spain%' then 'ES'
        when a.billingcountry ilike 'Spain%' then 'ES'
        when a.billingcountry ilike 'States%' then 'US'
        when a.billingcountry ilike 'Surrey%' then ''
        when a.billingcountry ilike 'sweden%' then 'SE'
        when a.billingcountry ilike 'Sweden%' then 'SE'
        when a.billingcountry ilike 'SWEDEN%' then 'SE'
        when a.billingcountry ilike 'Switzer%' then 'CH'
        when a.billingcountry ilike 'SWITZER%' then 'CH'
        when a.billingcountry ilike 'Taiwan%' then 'TW'
        when a.billingcountry ilike 'TBC%' then ''
        when a.billingcountry ilike 'Test%' then 'RO'
        when a.billingcountry ilike 'Tiawan%' then 'TW'
        when a.billingcountry ilike 'Tokyo%' then 'JP'
        when a.billingcountry ilike 'Turkey%' then 'TR'
        when a.billingcountry ilike 'TW%' then 'TW'
        when a.billingcountry ilike 'Tyne%' then ''
        when a.billingcountry ilike 'Uited%' then 'GB'
        when a.billingcountry ilike 'Ukraine%' then 'UA'
        when a.billingcountry ilike 'uk%' then 'GB'
        when a.billingcountry ilike 'UK%' then 'GB'
        when a.billingcountry ilike 'UnitedK%' then ''
        --when a.billingcountry ilike 'UNITED%' then 'AE GB US'
        when a.billingcountry ilike 'untied%' then 'GB'
        when a.billingcountry ilike 'usa%' then 'US'
        when a.billingcountry ilike 'USA%' then 'US'
        when a.billingcountry ilike 'US%' then 'US'
        when a.billingcountry ilike 'Wales%' then 'GB'
        --when a.billingcountry ilike 'x%' then 'EG FR GR HU IE LU MX SE CH TN GB'
        when a.billingcountry ilike 'Zealand%' then 'NZ'
        when a.billingcountry ilike '%UNITED%ARAB%' then 'AE'
        when a.billingcountry ilike '%UAE%' then 'AE'
        when a.billingcountry ilike '%U.A.E%' then 'AE'
        when a.billingcountry ilike '%UNITED%KINGDOM%' then 'GB'
        when a.billingcountry ilike '%UNITED%STATES%' then 'US'
        when a.billingcountry ilike '%USA%' then 'US'
        when a.billingcountry ilike 'US' then 'US'
              end as "countrycode"       
-- select count(*) --14158-- select distinct shippingcountry --name --isdeleted -- select * -- select coalesce( nullif(a.currencyisocode,''), '') -- select account_id, name,reg_no_c, accountnumber, ltdco_bank_account_number_c
from account a
)
-- select distinct billingcountry, countrycode from billaddress
select * from billaddress </sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>80</xloc>
      <yloc>464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Company lookup 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>company</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>company-externalid</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCCompanyID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>192</xloc>
      <yloc>1040</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Company lookup 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>company_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCCompanyID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2368</xloc>
      <yloc>624</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Company lookup.com</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>pd.company_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>name</name>
        <rename>company.client_company_name</rename>
        <default/>
        <type>String</type>
      </value>
      <value>
        <name>id</name>
        <rename>company.client_company_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3008</xloc>
      <yloc>240</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Company lookup.com 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>pd.company_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>name</name>
        <rename>com.client_company_name</rename>
        <default/>
        <type>String</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3056</xloc>
      <yloc>2112</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Compensation set</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>compensation_setting</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>system_code</name>
        <field>system_code</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>comp_setting_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2848</xloc>
      <yloc>2128</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Concat Fields Client Name</name>
    <type>ConcatFields</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <separator> </separator>
    <enclosure/>
    <enclosure_forced>N</enclosure_forced>
    <enclosure_fix_disabled>N</enclosure_fix_disabled>
    <header>N</header>
    <footer>N</footer>
    <format>DOS</format>
    <compression>None</compression>
    <encoding/>
    <endedLine/>
    <fileNameInField>N</fileNameInField>
    <fileNameField/>
    <create_parent_folder>Y</create_parent_folder>
    <file>
      <name>file</name>
      <servlet_output>N</servlet_output>
      <do_not_open_new_file_init>N</do_not_open_new_file_init>
      <extention>txt</extention>
      <append>N</append>
      <split>N</split>
      <haspartno>N</haspartno>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <SpecifyFormat>N</SpecifyFormat>
      <date_time_format/>
      <add_to_result_filenames>Y</add_to_result_filenames>
      <pad>N</pad>
      <fast_dump>N</fast_dump>
      <splitevery>0</splitevery>
    </file>
    <fields>
      <field>
        <name>contact.client_first_name</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>contact.client_last_name</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
    </fields>
    <ConcatFields>
      <targetFieldName>contact.client_contact_name</targetFieldName>
      <targetFieldLength>0</targetFieldLength>
      <removeSelectedFields>N</removeSelectedFields>
    </ConcatFields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3264</xloc>
      <yloc>240</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Concat Fields Client Name 2</name>
    <type>ConcatFields</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <separator> </separator>
    <enclosure/>
    <enclosure_forced>N</enclosure_forced>
    <enclosure_fix_disabled>N</enclosure_fix_disabled>
    <header>N</header>
    <footer>N</footer>
    <format>DOS</format>
    <compression>None</compression>
    <encoding/>
    <endedLine/>
    <fileNameInField>N</fileNameInField>
    <fileNameField/>
    <create_parent_folder>Y</create_parent_folder>
    <file>
      <name>file</name>
      <servlet_output>N</servlet_output>
      <do_not_open_new_file_init>N</do_not_open_new_file_init>
      <extention>txt</extention>
      <append>N</append>
      <split>N</split>
      <haspartno>N</haspartno>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <SpecifyFormat>N</SpecifyFormat>
      <date_time_format/>
      <add_to_result_filenames>Y</add_to_result_filenames>
      <pad>N</pad>
      <fast_dump>N</fast_dump>
      <splitevery>0</splitevery>
    </file>
    <fields>
      <field>
        <name>client_first_name</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>client_last_name</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
    </fields>
    <ConcatFields>
      <targetFieldName>client_contact_name</targetFieldName>
      <targetFieldLength>0</targetFieldLength>
      <removeSelectedFields>N</removeSelectedFields>
    </ConcatFields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3248</xloc>
      <yloc>2224</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Conf Stage</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection/>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>application_configurable_stage</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>ConfigStage</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCConfigStage</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2592</xloc>
      <yloc>864</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact Comment</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
with comments as (
       select 
                 Cl.clientID as 'contact_id' --, UC.userID, concat(UC1.firstName,' ',UC1.lastName) as fullname
               , UC.dateAdded
               , Stuff('COMMENT: ' + char(10)
                     + Coalesce('Created Date: ' + NULLIF(convert(varchar,UC.dateAdded,120), '') + char(10), '')
                     + Coalesce('Author: ' + NULLIF(U.name, '') + char(10), '')
                     + Coalesce('Action: ' + NULLIF(UC.action, '') + char(10), '')
                     + Coalesce('Comments: ' + NULLIF(cast(UC.comments as nvarchar(max)), '') + char(10), '')
               , 1, 0, '') as 'content'
       -- select top 100 *
       from bullhorn1.BH_UserComment UC
       left join bullhorn1.BH_Client Cl on Cl.userID = UC.userID
       left join bullhorn1.BH_UserContact UC1 ON Cl.userID = UC1.userID
       left join bullhorn1.BH_User U on U.userID = UC.commentingUserID
       where Cl.clientID is not null and (Cl.isdeleted &lt;&gt; 1 and Cl.status &lt;&gt; 'Archive')
UNION ALL
	SELECT --top 20 
                Cl.clientID as 'contact_id' --,concat(UC1.firstName,' ',UC1.lastName) as fullname
              , a.dateAdded
              , Stuff('APPOINTMENT: ' + char(10)
                    + Coalesce('Contact: ' + NULLIF(cast(concat(UC1.FirstName,' ',UC1.LastName,'     ',UC1.email) as nvarchar(max)), '') + char(10), '') --a.clientUserID 
                    + Coalesce('Candidate: ' + NULLIF(cast( concat(UC2.FirstName,' ',UC2.LastName,'     ',UC2.email) as nvarchar(max)), '') + char(10), '') --a.candidateUserID 
                    + Coalesce('Job: ' + NULLIF(cast(j.title as nvarchar(max)), '') + char(10), '') --jobPostingID
                    + coalesce('Communication Method: ' + NULLIF(convert(nvarchar(max),a.communicationMethod), '') + char(10), '')
                    + Coalesce('Date Begin: ' + NULLIF(cast(a.dateBegin as nvarchar(max)), '') + char(10), '')
                    + coalesce('Date End: ' + NULLIF(convert(nvarchar(max),a.dateEnd), '') + char(10), '')
                    + coalesce('Type: ' + NULLIF(convert(nvarchar(max),a.type), '') + char(10), '') --CA.activePlacements
                    + coalesce('Subject: ' + NULLIF(convert(nvarchar(max),a.subject), '') + char(10), '')
                    + coalesce('Reminder: ' + NULLIF(convert(nvarchar(max),a.notificationMinutes), '') + char(10), '')
                    + coalesce('Opportunity: ' + NULLIF(convert(nvarchar(max),j2.title), '') + char(10), '')
                    + coalesce('Location: ' + NULLIF(convert(nvarchar(max),a.location), '') + char(10), '')
                    + coalesce('Description: ' + NULLIF( convert(nvarchar(max),a.description), '') + char(10), '')
                    + coalesce('File Name: ' + NULLIF(convert(nvarchar(max),af.name), '') + char(10), '')
                    + coalesce('Owner: ' + NULLIF(cast( concat(UC3.FirstName,' ',UC3.LastName,'     ',UC3.email) as nvarchar(max)), '') + char(10), '')
                    + coalesce('Lead: ' + NULLIF(cast( concat(UC4.FirstName,' ',UC4.LastName,'     ',UC4.email) as nvarchar(max)), '') + char(10), '')
              , 1, 0, '') as 'content' 
       -- select top 100 * -- select count(*) --2062
       from bullhorn1.View_Appointment a
       left join bullhorn1.View_AppointmentFile af on af.appointmentID = a.appointmentID
       left join bullhorn1.BH_Client Cl on Cl.userID = a.ClientUserID
       left join bullhorn1.BH_UserContact UC1 ON UC1.userID = Cl.userID
       left join bullhorn1.BH_UserContact UC2 ON UC2.userID = a.candidateUserID
       left join bullhorn1.BH_UserContact UC3 ON UC3.userID = a.userID
       left join bullhorn1.BH_UserContact UC4 ON UC4.userID = a.LeaduserID
       left join bullhorn1.BH_JobPosting j on j.jobPostingID = a.jobPostingID
       left join bullhorn1.BH_JobPosting j2 on j.jobPostingID = a.opportunityJobPostingID
       where Cl.clientID is not null and (Cl.isdeleted &lt;&gt; 1 and Cl.status &lt;&gt; 'Archive')
UNION ALL
	SELECT ---top 20 
                Cl.clientID as 'contact_id' --,concat(UC1.firstName,' ',UC1.lastName) as fullname
              , a.dateAdded
              , Stuff('TASK: ' + char(10)
                     + Coalesce('Candidate: ' + NULLIF(cast( concat(UC2.FirstName,' ',UC2.LastName,'     ',UC2.email) as nvarchar(max)), '') + char(10), '') --a.candidateUserID 
                     --+ Coalesce('Assigned To: ' + NULLIF(cast(a.childTaskOwners as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Contact: ' + NULLIF(cast(concat(UC1.FirstName,' ',UC1.LastName,'     ',UC1.email) as nvarchar(max)), '') + char(10), '') --a.clientUserID 
                     + Coalesce('Due Date And Time: ' + NULLIF(cast(a.dateBegin as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Date End: ' + NULLIF(cast(a.dateEnd as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Description: ' + NULLIF(cast( a.description as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Job: ' + NULLIF(cast(j.title as nvarchar(max)), '') + char(10), '') --jobPostingID
                     + Coalesce('Lead: ' + NULLIF(cast( concat(UC3.FirstName,' ',UC3.LastName,'     ',UC3.email) as nvarchar(max)), '') + char(10), '') --a.leadUserID
                     + Coalesce('Reminder: ' + NULLIF(cast(a.notificationMinutes as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Opportunity: ' + NULLIF(cast(a.opportunityJobPostingID as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Placement: ' + NULLIF(cast(a.placementID as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Priority: ' + NULLIF(cast(a.priority as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Subject: ' + NULLIF(cast(a.subject as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Type: ' + NULLIF(cast(a.type as nvarchar(max)), '') + char(10), '')
                     + Coalesce('Owner: ' + NULLIF(cast( concat(UC4.FirstName,' ',UC4.LastName,'     ',UC4.email) as nvarchar(max)), '') + char(10), '') --a.userID
                        , 1, 0, '') as 'content' 
        -- select top 100 * -- select count(*) --24
        from bullhorn1.View_Task a
        left join bullhorn1.BH_Client Cl on Cl.userID = a.ClientUserID
        left join bullhorn1.BH_UserContact UC1 ON Cl.userID = UC1.userID
        left join bullhorn1.BH_UserContact UC2 ON a.candidateUserID = UC2.userID
        left join bullhorn1.BH_JobPosting j on j.jobPostingID = a.jobPostingID
        left join bullhorn1.BH_UserContact UC3 ON a.leadUserID = UC3.userID
        left join bullhorn1.BH_UserContact UC4 ON a.userID = UC4.userID
        where Cl.clientID is not null and (Cl.isdeleted &lt;&gt; 1 and Cl.status &lt;&gt; 'Archive')
)

--select count(*) from comments where content &lt;&gt; '' --12428
--select top 10 * from bullhorn1.BH_Client 
--select count(*) from comments where contact_id is not null
--select * from comments where contact_id is not null and contact_id in (4054,7102) --538216 > 563579

select --top 100
                   contact_id
                  , cast('-10' as int) as 'user_account_id'
                  , 'comment' as 'category'
                  , 'contact' as 'type'
                  , dateAdded as 'insert_timestamp'
                  --, [dbo].[udf_StripHTML](content) as 'content'
                  , [bullhorn1].[fn_ConvertHTMLToText](content) as 'content'
from comments --where 'content' &lt;&gt; '' 
--and contact_id = 326 
--or fullname like '%Philip%'
        
        </sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>560</xloc>
      <yloc>112</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact FE/SFE</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>--CONTACT FE
select distinct c.id as contact_id
, s.ts2_skill_name_c
, fe.vcfe
, fe.vcsfe
, CURRENT_TIMESTAMP as insert_timestamp
from ts2_skill_c s--349730
left join contact c on s.ts2_contact_c = c.id
left join (select distinct js_category, vcfe, vcsfe from candidate_fe_sfe where note = 'Candidate category') fe on trim(lower(fe.js_category)) = trim(lower(s.ts2_skill_name_c))
where 1=1
and c.recordtypeid in ('0120Y0000013O5d') --54117 rows
and s.ts2_skill_name_c is not NULL --53996
--and (fe.vcfe is NULL) --check case in capital letter --13869
and (fe.vcfe is not NULL or fe.vcsfe is not NULL) --43429</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>656</xloc>
      <yloc>2128</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact FE/SFE AREA</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>--CONTACT AREA SFE
select distinct c.id as contact_id
, 'AREA' as vcfe
, trim(unnest(string_to_array(c.area_c, ';'))) as vcsfe
, current_timestamp as insert_timestamp
from contact c
where c.recordtypeid in ('0120Y0000013O5d')
and area_c is not null and area_c &lt;&gt; '' --16579 rows</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>656</xloc>
      <yloc>2224</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact Hires contractor</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>--CONTACT/ CANDIDATE 'Hires Contractor (IC)' as Industry
select ts2_contact_c as contact_id
, 'Hires Contractor (IC)' as industry
, now() as insert_timestamp
from ts2_skill_c
where lower(ts2_skill_name_c) = lower('Hires Contractor (IC)')</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>560</xloc>
      <yloc>1296</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact New documents</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select parentid as linkedentityid, id, concat(id,'.',substring(name from '\.([^\.]*)$')) as file_name , name as actual_filename
	,'COMPANY' as entity_type

	, 'legal_document' as document_type
	, 0 as default_file

          from attachment
          where parentid is not null and substring(name from '\.([^\.]*)$') &lt;&gt; ''
          and parentid in ('0010Y00000YGdDtQAL')

/*
select a.linkedentityid
	,'COMPANY' as entity_type
	, filename as file_name
	, 'legal_document' as document_type
	, 0 as default_file
          from (
                   select
                          cdl.linkedentityid --, cdl.id, cdl.contentdocumentid, cdl.isdeleted --, cdl.*
                          , a.id as "company_id", a.name as "company_name"
                          , con.id as "contact_id", con.fullname as "contact_name", con.title as "Contact Title"
                          , j.id as "job_id", j.name as "job_title", j.ts2_job_number_c as "Job Number"
                          , can.id as "candidate_id", can.fullname as "candidate_name", can.title as "Candidate Title"
                          , cv.id as "fileid", concat(cv.id,'.',substring(cv.pathonclient from '\.([^\.]*)$')) "filename", cv.id as "file_name", cv.islatest, cv.title, cv.description, cv.reasonforchange, cv.pathonclient as "actual_filename", cv.filetype, cv.contentsize --cv.isdeleted,
                   -- select distinct cv.filetype --cv.isdeleted --islatest --, cdl.isdeleted
                   from contentdocumentlink cdl
                   left join contentversion cv on cv.contentdocumentid = cdl.contentdocumentid
                   left join (select id, name from Account) a on a.id = cdl.linkedentityid --COMPANY
                   left join (select id, concat(firstname,' ',lastname) as fullname, email, title from contact where recordtypeid in ('0120Y0000013O5d')) con on con.id = cdl.linkedentityid --CONTACT
                   left join (select Id, name, ts2_job_number_c from ts2_job_c) j on j.id = cdl.linkedentityid --JOB
                   left join (select id, concat(firstname,' ',lastname) as fullname, email, title from contact where recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')) can on can.id = cdl.linkedentityid --CANDIDATE
                   where cv.contentdocumentid is not null and substring(cv.pathonclient from '\.([^\.]*)$') &lt;&gt; ''
                   and (a.id is not null or con.id is not null or j.id is not null or can.id is not null)
                   and a.id is not null
                   --and con.id is not null
                   --and j.id is not null
                   --and can.id is not null
				   )a

*/</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2288</xloc>
      <yloc>1264</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact New documents 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
select a.linkedentityid
	,'CONTACT' as entity_type
	, filename as file_name
	, 'documents' as document_type
	, 0 as default_file
          from (
                   select
                          cdl.linkedentityid --, cdl.id, cdl.contentdocumentid, cdl.isdeleted --, cdl.*
                          , a.id as "company_id", a.name as "company_name"
                          , con.id as "contact_id", con.fullname as "contact_name", con.title as "Contact Title"
                          , j.id as "job_id", j.name as "job_title", j.ts2_job_number_c as "Job Number"
                          , can.id as "candidate_id", can.fullname as "candidate_name", can.title as "Candidate Title"
                          , cv.id as "fileid", concat(cv.id,'.',substring(cv.pathonclient from '\.([^\.]*)$')) "filename", cv.id as "file_name", cv.islatest, cv.title, cv.description, cv.reasonforchange, cv.pathonclient as "actual_filename", cv.filetype, cv.contentsize --cv.isdeleted,
                   -- select distinct cv.filetype --cv.isdeleted --islatest --, cdl.isdeleted
                   from contentdocumentlink cdl
                   left join contentversion cv on cv.contentdocumentid = cdl.contentdocumentid
                   left join (select id, name from Account) a on a.id = cdl.linkedentityid --COMPANY
                   left join (select id, concat(firstname,' ',lastname) as fullname, email, title from contact where recordtypeid in ('0120Y0000013O5d')) con on con.id = cdl.linkedentityid --CONTACT
                   left join (select Id, name, ts2_job_number_c from ts2_job_c) j on j.id = cdl.linkedentityid --JOB
                   left join (select id, concat(firstname,' ',lastname) as fullname, email, title from contact where recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')) can on can.id = cdl.linkedentityid --CANDIDATE
                   where cv.contentdocumentid is not null and substring(cv.pathonclient from '\.([^\.]*)$') &lt;&gt; ''
                   and (a.id is not null or con.id is not null or j.id is not null or can.id is not null)
                   --and a.id is not null
                   and con.id is not null
                   --and j.id is not null
                   --and can.id is not null
				   )a

</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2288</xloc>
      <yloc>1360</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact New documents 2 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
select a.linkedentityid
	,'POSITION' as entity_type
	, filename as file_name
	, 'job_description' as document_type
	, 0 as default_file
          from (
                   select
                          cdl.linkedentityid --, cdl.id, cdl.contentdocumentid, cdl.isdeleted --, cdl.*
                          , a.id as "company_id", a.name as "company_name"
                          , con.id as "contact_id", con.fullname as "contact_name", con.title as "Contact Title"
                          , j.id as "job_id", j.name as "job_title", j.ts2_job_number_c as "Job Number"
                          , can.id as "candidate_id", can.fullname as "candidate_name", can.title as "Candidate Title"
                          , cv.id as "fileid", concat(cv.id,'.',substring(cv.pathonclient from '\.([^\.]*)$')) "filename", cv.id as "file_name", cv.islatest, cv.title, cv.description, cv.reasonforchange, cv.pathonclient as "actual_filename", cv.filetype, cv.contentsize --cv.isdeleted,
                   -- select distinct cv.filetype --cv.isdeleted --islatest --, cdl.isdeleted
                   from contentdocumentlink cdl
                   left join contentversion cv on cv.contentdocumentid = cdl.contentdocumentid
                   left join (select id, name from Account) a on a.id = cdl.linkedentityid --COMPANY
                   left join (select id, concat(firstname,' ',lastname) as fullname, email, title from contact where recordtypeid in ('0120Y0000013O5d')) con on con.id = cdl.linkedentityid --CONTACT
                   left join (select Id, name, ts2_job_number_c from ts2_job_c) j on j.id = cdl.linkedentityid --JOB
                   left join (select id, concat(firstname,' ',lastname) as fullname, email, title from contact where recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')) can on can.id = cdl.linkedentityid --CANDIDATE
                   where cv.contentdocumentid is not null and substring(cv.pathonclient from '\.([^\.]*)$') &lt;&gt; ''
                   and (a.id is not null or con.id is not null or j.id is not null or can.id is not null)
                   --and a.id is not null
                   --and con.id is not null
                   and j.id is not null
                   --and can.id is not null
				   )a

</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2288</xloc>
      <yloc>1440</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact New documents 2 3</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
select a.linkedentityid
	,'CANDIDATE' as entity_type
	, filename as file_name
	, 'resume' as document_type
	, 0 as default_file
          from (
                   select
                          cdl.linkedentityid --, cdl.id, cdl.contentdocumentid, cdl.isdeleted --, cdl.*
                          , a.id as "company_id", a.name as "company_name"
                          , con.id as "contact_id", con.fullname as "contact_name", con.title as "Contact Title"
                          , j.id as "job_id", j.name as "job_title", j.ts2_job_number_c as "Job Number"
                          , can.id as "candidate_id", can.fullname as "candidate_name", can.title as "Candidate Title"
                          , cv.id as "fileid", concat(cv.id,'.',substring(cv.pathonclient from '\.([^\.]*)$')) "filename", cv.id as "file_name", cv.islatest, cv.title, cv.description, cv.reasonforchange, cv.pathonclient as "actual_filename", cv.filetype, cv.contentsize --cv.isdeleted,
                   -- select distinct cv.filetype --cv.isdeleted --islatest --, cdl.isdeleted
                   from contentdocumentlink cdl
                   left join contentversion cv on cv.contentdocumentid = cdl.contentdocumentid
                   left join (select id, name from Account) a on a.id = cdl.linkedentityid --COMPANY
                   left join (select id, concat(firstname,' ',lastname) as fullname, email, title from contact where recordtypeid in ('0120Y0000013O5d')) con on con.id = cdl.linkedentityid --CONTACT
                   left join (select Id, name, ts2_job_number_c from ts2_job_c) j on j.id = cdl.linkedentityid --JOB
                   left join (select id, concat(firstname,' ',lastname) as fullname, email, title from contact where recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')) can on can.id = cdl.linkedentityid --CANDIDATE
                   where cv.contentdocumentid is not null and substring(cv.pathonclient from '\.([^\.]*)$') &lt;&gt; ''
                   and (a.id is not null or con.id is not null or j.id is not null or can.id is not null)
                   --and a.id is not null
                   --and con.id is not null
                   --and j.id is not null
                   and can.id is not null
				   )a

</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2288</xloc>
      <yloc>1520</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact location</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select
			distinct 
			-- c.id as contact_id
			case when accountid = '000000000000000AAA' then 'default'
					else accountid end as company_id
			, c.ts2_latitude_c::float8
			, c.ts2_longitude_c::float8
			, concat_ws(', ',c.mailingcity, c.mailingstate, c.mailingpostalcode, c.mailingcountry) as location_name
			, concat_ws(', ',c.mailingstreet,c.mailingcity, c.mailingstate, c.mailingpostalcode, c.mailingcountry) as "contact-address"
			, c.mailingcity as "contact-city"
			, c.mailingstate as "contact-state"
			, c.mailingpostalcode as "contact-zipCode"
			, case
			when c.mailingcountry = 'AE' then 'AE'
			when c.mailingcountry = 'AL' then 'AL'
			when c.mailingcountry = 'AM' then 'AM'
			when c.mailingcountry = 'AR' then 'AR'
			when c.mailingcountry = 'AT' then 'AT'
			when c.mailingcountry = 'AU' then 'AU'
			when c.mailingcountry = 'BA' then 'BA'
			when c.mailingcountry = 'BD' then 'BD'
			when c.mailingcountry = 'BE' then 'BE'
			when c.mailingcountry = 'BG' then 'BG'
			when c.mailingcountry = 'BH' then 'BH'
			when c.mailingcountry = 'BR' then 'BR'
			when c.mailingcountry = 'BY' then 'BY'
			when c.mailingcountry = 'CA' then 'CA'
			when c.mailingcountry = 'CH' then 'CH'
			when c.mailingcountry = 'CL' then 'CL'
			when c.mailingcountry = 'CM' then 'CM'
			when c.mailingcountry = 'CN' then 'CN'
			when c.mailingcountry = 'CO' then 'CO'
			when c.mailingcountry = 'CR' then 'CR'
			when c.mailingcountry = 'CY' then 'CY'
			when c.mailingcountry = 'CZ' then 'CZ'
			when c.mailingcountry = 'DE' then 'DE'
			when c.mailingcountry = 'DK' then 'DK'
			when c.mailingcountry = 'DZ' then 'DZ'
			when c.mailingcountry = 'EC' then 'EC'
			when c.mailingcountry = 'EE' then 'EE'
			when c.mailingcountry = 'EG' then 'EG'
			when c.mailingcountry = 'ES' then 'ES'
			when c.mailingcountry = 'FI' then 'FI'
			when c.mailingcountry = 'FR' then 'FR'
			when c.mailingcountry = 'GB' then 'GB'
			when c.mailingcountry = 'GE' then 'GE'
			when c.mailingcountry = 'GR' then 'GR'
			when c.mailingcountry = 'HK' then 'HK'
			when c.mailingcountry = 'HR' then 'HR'
			when c.mailingcountry = 'HU' then 'HU'
			when c.mailingcountry = 'IE' then 'IE'
			when c.mailingcountry = 'IL' then 'IL'
			when c.mailingcountry = 'IN' then 'IN'
			when c.mailingcountry = 'IR' then 'IR'
			when c.mailingcountry = 'IT' then 'IT'
			when c.mailingcountry = 'JO' then 'JO'
			when c.mailingcountry = 'JP' then 'JP'
			when c.mailingcountry = 'KR' then 'KR'
			when c.mailingcountry = 'KZ' then 'KZ'
			when c.mailingcountry = 'LB' then 'LB'
			when c.mailingcountry = 'LK' then 'LK'
			when c.mailingcountry = 'LT' then 'LT'
			when c.mailingcountry = 'LV' then 'LV'
			when c.mailingcountry = 'MA' then 'MA'
			when c.mailingcountry = 'MC' then 'MC'
			when c.mailingcountry = 'MD' then 'MD'
			when c.mailingcountry = 'MK' then 'MK'
			when c.mailingcountry = 'MT' then 'MT'
			when c.mailingcountry = 'MU' then 'MU'
			when c.mailingcountry = 'MX' then 'MX'
			when c.mailingcountry = 'MY' then 'MY'
			when c.mailingcountry = 'MZ' then 'MZ'
			when c.mailingcountry = 'NG' then 'NG'
			when c.mailingcountry = 'NL' then 'NL'
			when c.mailingcountry = 'NO' then 'NO'
			when c.mailingcountry = 'NZ' then 'NZ'
			when c.mailingcountry = 'OM' then 'OM'
			when c.mailingcountry = 'PH' then 'PH'
			when c.mailingcountry = 'PK' then 'PK'
			when c.mailingcountry = 'PL' then 'PL'
			when c.mailingcountry = 'PT' then 'PT'
			when c.mailingcountry = 'QA' then 'QA'
			when c.mailingcountry = 'RO' then 'RO'
			when c.mailingcountry = 'RS' then 'RS'
			when c.mailingcountry = 'RU' then 'RU'
			when c.mailingcountry = 'SA' then 'SA'
			when c.mailingcountry = 'SD' then 'SD'
			when c.mailingcountry = 'SE' then 'SE'
			when c.mailingcountry = 'SG' then 'SG'
			when c.mailingcountry = 'SI' then 'SI'
			when c.mailingcountry = 'SK' then 'SK'
			when c.mailingcountry = 'SY' then 'SY'
			when c.mailingcountry = 'TH' then 'TH'
			when c.mailingcountry = 'TN' then 'TN'
			when c.mailingcountry = 'TR' then 'TR'
			when c.mailingcountry = 'TW' then 'TW'
			when c.mailingcountry = 'UA' then 'UA'
			when c.mailingcountry = 'uk' then 'GB'
			when c.mailingcountry = 'UK' then 'GB'
			when c.mailingcountry = 'US' then 'US'
			when c.mailingcountry = 'VE' then 'VE'
			when c.mailingcountry = 'VN' then 'VN'
			when c.mailingcountry = 'ZA' then 'ZA'
			when c.mailingcountry ilike '201203%' then ''
			when c.mailingcountry ilike 'Africa%' then 'ZA'
			when c.mailingcountry ilike 'Allemag%' then 'DE'
			when c.mailingcountry ilike 'Amsterd%' then 'NL'
			when c.mailingcountry ilike 'Argenti%' then 'AR'
			when c.mailingcountry ilike 'Armenia%' then 'AM'
			when c.mailingcountry ilike 'austral%' then 'AU'
			when c.mailingcountry ilike 'Austral%' then 'AU'
			when c.mailingcountry ilike 'Austria%' then 'AT'
			when c.mailingcountry ilike 'Belgium%' then 'BE'
			when c.mailingcountry ilike 'Bosnia%' then 'BA'
			when c.mailingcountry ilike 'Brazil%' then 'BR'
			when c.mailingcountry ilike 'Bulgari%' then 'BG'
			when c.mailingcountry ilike 'Canada%' then 'CA'
			when c.mailingcountry ilike 'ChinaCN%' then 'CN'
			when c.mailingcountry ilike 'China%' then 'CN'
			when c.mailingcountry ilike 'CHina%' then 'CN'
			when c.mailingcountry ilike 'CH, Switzerland%' then 'CH'
			when c.mailingcountry ilike 'Croatia%' then 'HR'
			when c.mailingcountry ilike 'Cyprus%' then 'CY'
			when c.mailingcountry ilike 'Czechia%' then 'CZ'
			when c.mailingcountry ilike 'Czech%' then 'CZ'
			when c.mailingcountry ilike 'Denmark%' then 'DK'
			when c.mailingcountry ilike 'Egypt%' then 'EG'
			when c.mailingcountry ilike 'england%' then 'GB'
			when c.mailingcountry ilike 'England%' then 'GB'
			when c.mailingcountry ilike 'Estonia%' then 'EE'
			when c.mailingcountry ilike 'Finland%' then 'FI'
			when c.mailingcountry ilike 'France%' then 'FR'
			when c.mailingcountry ilike 'germany%' then 'DE'
			when c.mailingcountry ilike 'Germany%' then 'DE'
			when c.mailingcountry ilike 'Holland%' then 'NL'
			when c.mailingcountry ilike 'HongKon%' then 'HK'
			when c.mailingcountry ilike 'Hong%' then 'HK'
			when c.mailingcountry ilike 'Hungary%' then 'HU'
			when c.mailingcountry ilike 'india%' then 'IN'
			when c.mailingcountry ilike 'India%' then 'IN'
			when c.mailingcountry ilike 'Iran%' then 'IR'
			when c.mailingcountry ilike 'Ireland%' then 'IE'
			when c.mailingcountry ilike 'Israel%' then 'IL'
			when c.mailingcountry ilike 'Italy%' then 'IT'
			when c.mailingcountry ilike 'Jersey%' then 'GB'
			when c.mailingcountry ilike 'kingdom%' then 'GB'
			when c.mailingcountry ilike 'Kingdom%' then 'GB'
			when c.mailingcountry ilike 'Korea%' then 'KR'
			when c.mailingcountry ilike 'Liechte%' then 'LI'
			when c.mailingcountry ilike 'Lithuan%' then 'LT'
			when c.mailingcountry ilike 'london%' then 'GB'
			when c.mailingcountry ilike 'Luxembo%' then 'LU'
			when c.mailingcountry ilike 'Malaysi%' then 'MY'
			when c.mailingcountry ilike 'Mexico%' then 'MX'
			when c.mailingcountry ilike 'Morocco%' then 'MA'
			when c.mailingcountry ilike 'Netherl%' then 'NL'
			when c.mailingcountry ilike 'Norway%' then 'NO'
			when c.mailingcountry ilike 'Phillip%' then 'PH'
			when c.mailingcountry ilike 'Poland%' then 'PL'
			when c.mailingcountry ilike 'Portuga%' then 'PT'
			when c.mailingcountry ilike 'Romania%' then 'RO'
			when c.mailingcountry ilike 'Russia%' then 'RU'
			when c.mailingcountry ilike 'Scotlan%' then 'GB'
			when c.mailingcountry ilike 'Serbia%' then 'RS'
			when c.mailingcountry ilike 'Shangha%' then 'CN'
			when c.mailingcountry ilike 'Singapo%' then 'SG'
			when c.mailingcountry ilike 'Slovaki%' then 'SK'
			when c.mailingcountry ilike 'Sloveni%' then 'SI'
			when c.mailingcountry ilike 'spain%' then 'ES'
			when c.mailingcountry ilike 'Spain%' then 'ES'
			when c.mailingcountry ilike 'Sweden%' then 'SE'
			when c.mailingcountry ilike 'SWEDEN%' then 'SE'
			when c.mailingcountry ilike 'Switzer%' then 'CH'
			when c.mailingcountry ilike 'SWITZER%' then 'CH'
			when c.mailingcountry ilike 'Taiwan%' then 'TW'
			when c.mailingcountry ilike 'TBC%' then ''
			when c.mailingcountry ilike 'Tiawan%' then 'TW'
			when c.mailingcountry ilike 'Tokyo%' then 'JP'
			when c.mailingcountry ilike 'Tunisia%' then 'TN'
			when c.mailingcountry ilike 'Turkey%' then 'TR'
			when c.mailingcountry ilike 'Uited%' then ''
			when c.mailingcountry ilike 'Ukraine%' then 'UA'
			when c.mailingcountry ilike 'Wales%' then 'GB'
			when c.mailingcountry ilike 'Yorkshi%' then 'GB'
			when c.mailingcountry ilike '%UNITED%ARAB%' then 'AE'
			when c.mailingcountry ilike '%UAE%' then 'AE'
			when c.mailingcountry ilike '%U.A.E%' then 'AE'
			when c.mailingcountry ilike '%UNITED%KINGDOM%' then 'GB'
			when c.mailingcountry ilike '%UNITED%STATES%' then 'US'
			when c.mailingcountry ilike '%USA%' then 'US'
			when c.mailingcountry ilike 'US' then 'US'
			end as "contact-country"
			, 'WORKPLACE' as location_type --'WORK_LOCATION'
			, now() as insert_timestamp 
from contact c
where c.recordtypeid in ('0120Y0000013O5d')</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>64</xloc>
      <yloc>1744</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact location 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select
			c.id as contact_id
			, case when accountid = '000000000000000AAA' then 'default'
					else accountid end as company_id
			, c.ts2_latitude_c::float8
			, c.ts2_longitude_c::float8
			, concat_ws(', ',c.mailingcity, c.mailingstate, c.mailingpostalcode, c.mailingcountry) as location_name
			, concat_ws(', ',c.mailingstreet,c.mailingcity, c.mailingstate, c.mailingpostalcode, c.mailingcountry) as "contact-address"
			, c.mailingcity as "contact-city"
			, c.mailingstate as "contact-state"
			, c.mailingpostalcode as "contact-zipCode"
			, case
			when c.mailingcountry = 'AE' then 'AE'
			when c.mailingcountry = 'AL' then 'AL'
			when c.mailingcountry = 'AM' then 'AM'
			when c.mailingcountry = 'AR' then 'AR'
			when c.mailingcountry = 'AT' then 'AT'
			when c.mailingcountry = 'AU' then 'AU'
			when c.mailingcountry = 'BA' then 'BA'
			when c.mailingcountry = 'BD' then 'BD'
			when c.mailingcountry = 'BE' then 'BE'
			when c.mailingcountry = 'BG' then 'BG'
			when c.mailingcountry = 'BH' then 'BH'
			when c.mailingcountry = 'BR' then 'BR'
			when c.mailingcountry = 'BY' then 'BY'
			when c.mailingcountry = 'CA' then 'CA'
			when c.mailingcountry = 'CH' then 'CH'
			when c.mailingcountry = 'CL' then 'CL'
			when c.mailingcountry = 'CM' then 'CM'
			when c.mailingcountry = 'CN' then 'CN'
			when c.mailingcountry = 'CO' then 'CO'
			when c.mailingcountry = 'CR' then 'CR'
			when c.mailingcountry = 'CY' then 'CY'
			when c.mailingcountry = 'CZ' then 'CZ'
			when c.mailingcountry = 'DE' then 'DE'
			when c.mailingcountry = 'DK' then 'DK'
			when c.mailingcountry = 'DZ' then 'DZ'
			when c.mailingcountry = 'EC' then 'EC'
			when c.mailingcountry = 'EE' then 'EE'
			when c.mailingcountry = 'EG' then 'EG'
			when c.mailingcountry = 'ES' then 'ES'
			when c.mailingcountry = 'FI' then 'FI'
			when c.mailingcountry = 'FR' then 'FR'
			when c.mailingcountry = 'GB' then 'GB'
			when c.mailingcountry = 'GE' then 'GE'
			when c.mailingcountry = 'GR' then 'GR'
			when c.mailingcountry = 'HK' then 'HK'
			when c.mailingcountry = 'HR' then 'HR'
			when c.mailingcountry = 'HU' then 'HU'
			when c.mailingcountry = 'IE' then 'IE'
			when c.mailingcountry = 'IL' then 'IL'
			when c.mailingcountry = 'IN' then 'IN'
			when c.mailingcountry = 'IR' then 'IR'
			when c.mailingcountry = 'IT' then 'IT'
			when c.mailingcountry = 'JO' then 'JO'
			when c.mailingcountry = 'JP' then 'JP'
			when c.mailingcountry = 'KR' then 'KR'
			when c.mailingcountry = 'KZ' then 'KZ'
			when c.mailingcountry = 'LB' then 'LB'
			when c.mailingcountry = 'LK' then 'LK'
			when c.mailingcountry = 'LT' then 'LT'
			when c.mailingcountry = 'LV' then 'LV'
			when c.mailingcountry = 'MA' then 'MA'
			when c.mailingcountry = 'MC' then 'MC'
			when c.mailingcountry = 'MD' then 'MD'
			when c.mailingcountry = 'MK' then 'MK'
			when c.mailingcountry = 'MT' then 'MT'
			when c.mailingcountry = 'MU' then 'MU'
			when c.mailingcountry = 'MX' then 'MX'
			when c.mailingcountry = 'MY' then 'MY'
			when c.mailingcountry = 'MZ' then 'MZ'
			when c.mailingcountry = 'NG' then 'NG'
			when c.mailingcountry = 'NL' then 'NL'
			when c.mailingcountry = 'NO' then 'NO'
			when c.mailingcountry = 'NZ' then 'NZ'
			when c.mailingcountry = 'OM' then 'OM'
			when c.mailingcountry = 'PH' then 'PH'
			when c.mailingcountry = 'PK' then 'PK'
			when c.mailingcountry = 'PL' then 'PL'
			when c.mailingcountry = 'PT' then 'PT'
			when c.mailingcountry = 'QA' then 'QA'
			when c.mailingcountry = 'RO' then 'RO'
			when c.mailingcountry = 'RS' then 'RS'
			when c.mailingcountry = 'RU' then 'RU'
			when c.mailingcountry = 'SA' then 'SA'
			when c.mailingcountry = 'SD' then 'SD'
			when c.mailingcountry = 'SE' then 'SE'
			when c.mailingcountry = 'SG' then 'SG'
			when c.mailingcountry = 'SI' then 'SI'
			when c.mailingcountry = 'SK' then 'SK'
			when c.mailingcountry = 'SY' then 'SY'
			when c.mailingcountry = 'TH' then 'TH'
			when c.mailingcountry = 'TN' then 'TN'
			when c.mailingcountry = 'TR' then 'TR'
			when c.mailingcountry = 'TW' then 'TW'
			when c.mailingcountry = 'UA' then 'UA'
			when c.mailingcountry = 'uk' then 'GB'
			when c.mailingcountry = 'UK' then 'GB'
			when c.mailingcountry = 'US' then 'US'
			when c.mailingcountry = 'VE' then 'VE'
			when c.mailingcountry = 'VN' then 'VN'
			when c.mailingcountry = 'ZA' then 'ZA'
			when c.mailingcountry ilike '201203%' then ''
			when c.mailingcountry ilike 'Africa%' then 'ZA'
			when c.mailingcountry ilike 'Allemag%' then 'DE'
			when c.mailingcountry ilike 'Amsterd%' then 'NL'
			when c.mailingcountry ilike 'Argenti%' then 'AR'
			when c.mailingcountry ilike 'Armenia%' then 'AM'
			when c.mailingcountry ilike 'austral%' then 'AU'
			when c.mailingcountry ilike 'Austral%' then 'AU'
			when c.mailingcountry ilike 'Austria%' then 'AT'
			when c.mailingcountry ilike 'Belgium%' then 'BE'
			when c.mailingcountry ilike 'Bosnia%' then 'BA'
			when c.mailingcountry ilike 'Brazil%' then 'BR'
			when c.mailingcountry ilike 'Bulgari%' then 'BG'
			when c.mailingcountry ilike 'Canada%' then 'CA'
			when c.mailingcountry ilike 'ChinaCN%' then 'CN'
			when c.mailingcountry ilike 'China%' then 'CN'
			when c.mailingcountry ilike 'CHina%' then 'CN'
			when c.mailingcountry ilike 'CH, Switzerland%' then 'CH'
			when c.mailingcountry ilike 'Croatia%' then 'HR'
			when c.mailingcountry ilike 'Cyprus%' then 'CY'
			when c.mailingcountry ilike 'Czechia%' then 'CZ'
			when c.mailingcountry ilike 'Czech%' then 'CZ'
			when c.mailingcountry ilike 'Denmark%' then 'DK'
			when c.mailingcountry ilike 'Egypt%' then 'EG'
			when c.mailingcountry ilike 'england%' then 'GB'
			when c.mailingcountry ilike 'England%' then 'GB'
			when c.mailingcountry ilike 'Estonia%' then 'EE'
			when c.mailingcountry ilike 'Finland%' then 'FI'
			when c.mailingcountry ilike 'France%' then 'FR'
			when c.mailingcountry ilike 'germany%' then 'DE'
			when c.mailingcountry ilike 'Germany%' then 'DE'
			when c.mailingcountry ilike 'Holland%' then 'NL'
			when c.mailingcountry ilike 'HongKon%' then 'HK'
			when c.mailingcountry ilike 'Hong%' then 'HK'
			when c.mailingcountry ilike 'Hungary%' then 'HU'
			when c.mailingcountry ilike 'india%' then 'IN'
			when c.mailingcountry ilike 'India%' then 'IN'
			when c.mailingcountry ilike 'Iran%' then 'IR'
			when c.mailingcountry ilike 'Ireland%' then 'IE'
			when c.mailingcountry ilike 'Israel%' then 'IL'
			when c.mailingcountry ilike 'Italy%' then 'IT'
			when c.mailingcountry ilike 'Jersey%' then 'GB'
			when c.mailingcountry ilike 'kingdom%' then 'GB'
			when c.mailingcountry ilike 'Kingdom%' then 'GB'
			when c.mailingcountry ilike 'Korea%' then 'KR'
			when c.mailingcountry ilike 'Liechte%' then 'LI'
			when c.mailingcountry ilike 'Lithuan%' then 'LT'
			when c.mailingcountry ilike 'london%' then 'GB'
			when c.mailingcountry ilike 'Luxembo%' then 'LU'
			when c.mailingcountry ilike 'Malaysi%' then 'MY'
			when c.mailingcountry ilike 'Mexico%' then 'MX'
			when c.mailingcountry ilike 'Morocco%' then 'MA'
			when c.mailingcountry ilike 'Netherl%' then 'NL'
			when c.mailingcountry ilike 'Norway%' then 'NO'
			when c.mailingcountry ilike 'Phillip%' then 'PH'
			when c.mailingcountry ilike 'Poland%' then 'PL'
			when c.mailingcountry ilike 'Portuga%' then 'PT'
			when c.mailingcountry ilike 'Romania%' then 'RO'
			when c.mailingcountry ilike 'Russia%' then 'RU'
			when c.mailingcountry ilike 'Scotlan%' then 'GB'
			when c.mailingcountry ilike 'Serbia%' then 'RS'
			when c.mailingcountry ilike 'Shangha%' then 'CN'
			when c.mailingcountry ilike 'Singapo%' then 'SG'
			when c.mailingcountry ilike 'Slovaki%' then 'SK'
			when c.mailingcountry ilike 'Sloveni%' then 'SI'
			when c.mailingcountry ilike 'spain%' then 'ES'
			when c.mailingcountry ilike 'Spain%' then 'ES'
			when c.mailingcountry ilike 'Sweden%' then 'SE'
			when c.mailingcountry ilike 'SWEDEN%' then 'SE'
			when c.mailingcountry ilike 'Switzer%' then 'CH'
			when c.mailingcountry ilike 'SWITZER%' then 'CH'
			when c.mailingcountry ilike 'Taiwan%' then 'TW'
			when c.mailingcountry ilike 'TBC%' then ''
			when c.mailingcountry ilike 'Tiawan%' then 'TW'
			when c.mailingcountry ilike 'Tokyo%' then 'JP'
			when c.mailingcountry ilike 'Tunisia%' then 'TN'
			when c.mailingcountry ilike 'Turkey%' then 'TR'
			when c.mailingcountry ilike 'Uited%' then ''
			when c.mailingcountry ilike 'Ukraine%' then 'UA'
			when c.mailingcountry ilike 'Wales%' then 'GB'
			when c.mailingcountry ilike 'Yorkshi%' then 'GB'
			when c.mailingcountry ilike '%UNITED%ARAB%' then 'AE'
			when c.mailingcountry ilike '%UAE%' then 'AE'
			when c.mailingcountry ilike '%U.A.E%' then 'AE'
			when c.mailingcountry ilike '%UNITED%KINGDOM%' then 'GB'
			when c.mailingcountry ilike '%UNITED%STATES%' then 'US'
			when c.mailingcountry ilike '%USA%' then 'US'
			when c.mailingcountry ilike 'US' then 'US'
			end as "contact-country"
			, 'WORKPLACE' as location_type --'WORK_LOCATION'
			, now() as insert_timestamp
from contact c
where c.recordtypeid in ('0120Y0000013O5d')</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>64</xloc>
      <yloc>1824</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact lookup 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>company</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>linkedentityid</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VC_ID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2432</xloc>
      <yloc>1264</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact lookup 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>linkedentityid</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VC_ID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2432</xloc>
      <yloc>1360</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact lookup 2 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>position_description</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>linkedentityid</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VC_ID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2432</xloc>
      <yloc>1440</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact lookup 2 2 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>linkedentityid</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VC_ID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2432</xloc>
      <yloc>1520</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact lookup 2 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>contact_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCContactID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2560</xloc>
      <yloc>720</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact lookup.con</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>pd.client_contact_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>first_name</name>
        <rename>contact.client_first_name</rename>
        <default/>
        <type>String</type>
      </value>
      <value>
        <name>last_name</name>
        <rename>contact.client_last_name</rename>
        <default/>
        <type>String</type>
      </value>
      <value>
        <name>department</name>
        <rename>contact.client_department</rename>
        <default/>
        <type>String</type>
      </value>
      <value>
        <name>id</name>
        <rename>contact.client_contact_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3136</xloc>
      <yloc>240</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Contact lookup.con 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>pd.client_contact_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>first_name</name>
        <rename>client_first_name</rename>
        <default/>
        <type>String</type>
      </value>
      <value>
        <name>last_name</name>
        <rename>client_last_name</rename>
        <default/>
        <type>String</type>
      </value>
      <value>
        <name>department</name>
        <rename>client_department</rename>
        <default/>
        <type>String</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3056</xloc>
      <yloc>2224</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Custom Field</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>SELECT
         clientCorporationID as 'external_additional_id'
        --, name 
        , 'add_com_info' as additional_type
        , 1006 as form_id
        , 1018 as field_id
        , replace(replace(replace(replace( ltrim(rtrim(customText1)),'Advisory',1),'General',2),'Investment',3),'TT Client',4) as field_value
from bullhorn1.BH_ClientCorporation
where customText1 &lt;&gt; ''</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>80</xloc>
      <yloc>608</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>company-externalid</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>192</xloc>
      <yloc>464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup - Contact</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contact_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>actual_contactid</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>720</xloc>
      <yloc>112</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 16</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>candidate_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1791</xloc>
      <yloc>1291</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>vc_candidate_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1840</xloc>
      <yloc>752</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>position-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>actual_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1232</xloc>
      <yloc>608</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>position-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>actual_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1216</xloc>
      <yloc>528</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 2 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>actual_candidateid</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1776</xloc>
      <yloc>224</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 2 2 2 2 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>externalid</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>actual_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1248</xloc>
      <yloc>160</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 2 2 2 2 2 2 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>external_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>actual_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>256</xloc>
      <yloc>160</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 2 2 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate-externalid</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>actual_candidate_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1728</xloc>
      <yloc>304</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 2 2 3 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contact-externalid</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>actual_contactid</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>720</xloc>
      <yloc>304</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 2 2 3 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contact-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>actual_contactid</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>720</xloc>
      <yloc>416</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 2 2 3 2 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate-externalid</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>actual_contactid</rename>
        <default/>
        <type>Integer</type>
      </value>
      <value>
        <name>current_location_id</name>
        <rename>can.current_location_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1799</xloc>
      <yloc>1605</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 2 3 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>actual_candidate_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1808</xloc>
      <yloc>592</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 2 3 2 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contact_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>actual_contactid</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>720</xloc>
      <yloc>240</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 2 4 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>JobExternalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>Job_VincereID</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1232</xloc>
      <yloc>688</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 2 5</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection/>
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>UniqueID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>actual_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1232</xloc>
      <yloc>1008</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidateID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>actual_candidate_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1776</xloc>
      <yloc>112</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 4</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate_source</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate-source</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>vc_source_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1840</xloc>
      <yloc>672</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 4 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>actual_candidate_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1776</xloc>
      <yloc>384</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup 2 4 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>actual_candidate_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1712</xloc>
      <yloc>544</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Engagement</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>---ENGAGEMENT ACTIVITIES
select a.id --known as engagement activities
, a.ts2_contact_c --contact | candidate
, con.id as "contact_id", con.fullname as "contact_name"
, can.id as "candidate_id", can.fullname as "candidate_name"
, a.ts2_recipient_address_c
, a.ts2_engagement_c
, a.ts2_engagement_stage_c
, s.name as engagement_stage_name
, concat_ws(chr(10), '[ENGAGEMENT ACTIVITIES]'
	, coalesce('Engagement activity name: ' || nullif(a.name,''),NULL)
	, coalesce('Currency: ' || nullif(a.currencyisocode,''),NULL)
	, coalesce('Engagement name: ' || nullif(s.name,'') || chr(10),NULL)
	, coalesce('Created By: ' || nullif(u.fullname,''),NULL)
	, coalesce('Created: ' || nullif(a.createddate,''),NULL)
	, coalesce('Last Modified By: ' || nullif(u2.fullname,''),NULL)
	, coalesce('Last Modified: ' || nullif(a.lastmodifieddate,''),NULL)
	, coalesce('Recipient address: ' || nullif(a.ts2_recipient_address_c,''),NULL)
	) as "content"
, a.createddate::timestamp as insert_timestamp
, -10 as user_account_id
, 'comment' as "category"
, 'contact' as "type"
from ts2_engagement_activity_c a
left join ts2_engagement_stage_c s on a.ts2_engagement_stage_c = s.ts2_engagement_stage_c_1_id
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u on u.id = a.createdbyid
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u2 on u2.id = a.lastmodifiedbyid
left join (select id, concat(firstname,' ',lastname) as fullname, email from contact 
			where recordtypeid in ('0120Y0000013O5d')) con on con.id = a.ts2_contact_c --CONTACT
left join (select id, concat(firstname,' ',lastname) as fullname, email from contact 
			where recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')) can on can.id = a.ts2_contact_c--CANDIDATE
where 1=1
--and ts2_contact_c = '0030Y00000cqcXVQAY'
--and c.recordtypeid in ('0120Y0000013O5d') --Contact type
--and c.isdeleted = '0'
and a.ts2_contact_c is not NULL
and a.createddate::timestamp > '2017-10-17' --29295</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2368</xloc>
      <yloc>720</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Error Update Report</name>
    <type>ExcelOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <header>Y</header>
    <footer>N</footer>
    <encoding/>
    <append>N</append>
    <add_to_result_filenames>Y</add_to_result_filenames>
    <file>
      <name>D:\VC_ApisAlvi\Working\Error_update_substatus.xls</name>
      <extention>xls</extention>
      <do_not_open_newfile_init>N</do_not_open_newfile_init>
      <create_parent_folder>N</create_parent_folder>
      <split>N</split>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <SpecifyFormat>N</SpecifyFormat>
      <date_time_format/>
      <sheetname>Sheet1</sheetname>
      <autosizecolums>N</autosizecolums>
      <nullisblank>N</nullisblank>
      <protect_sheet>N</protect_sheet>
      <password>Encrypted </password>
      <splitevery>0</splitevery>
      <usetempfiles>N</usetempfiles>
      <tempdirectory/>
    </file>
    <template>
      <enabled>N</enabled>
      <append>N</append>
      <filename>template.xls</filename>
    </template>
    <fields>
      <field>
        <name>JobExtID</name>
        <type>String</type>
        <format/>
      </field>
      <field>
        <name>CandidateExtID</name>
        <type>String</type>
        <format/>
      </field>
      <field>
        <name>Stage</name>
        <type>String</type>
        <format/>
      </field>
      <field>
        <name>PlacedStage</name>
        <type>Integer</type>
        <format/>
      </field>
      <field>
        <name>SubStatus</name>
        <type>String</type>
        <format/>
      </field>
      <field>
        <name>ActionedDate</name>
        <type>Timestamp</type>
        <format/>
      </field>
      <field>
        <name>draft_offer</name>
        <type>Integer</type>
        <format/>
      </field>
      <field>
        <name>InvoiceStatus</name>
        <type>Integer</type>
        <format/>
      </field>
      <field>
        <name>renewal_index</name>
        <type>Integer</type>
        <format/>
      </field>
      <field>
        <name>renewal_flow_status</name>
        <type>Integer</type>
        <format/>
      </field>
      <field>
        <name>VCCandidateID</name>
        <type>Integer</type>
        <format/>
      </field>
      <field>
        <name>VCJobID</name>
        <type>Integer</type>
        <format/>
      </field>
      <field>
        <name>VCSubStatus</name>
        <type>Integer</type>
        <format/>
      </field>
    </fields>
    <custom>
      <header_font_name>arial</header_font_name>
      <header_font_size>10</header_font_size>
      <header_font_bold>N</header_font_bold>
      <header_font_italic>N</header_font_italic>
      <header_font_underline>no</header_font_underline>
      <header_font_orientation>horizontal</header_font_orientation>
      <header_font_color>black</header_font_color>
      <header_background_color>none</header_background_color>
      <header_row_height>255</header_row_height>
      <header_alignment>left</header_alignment>
      <header_image/>
      <row_font_name>arial</row_font_name>
      <row_font_size>10</row_font_size>
      <row_font_color>black</row_font_color>
      <row_background_color>none</row_background_color>
    </custom>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2912</xloc>
      <yloc>944</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Event</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>--EVENT after 17/10/2017
select
         e.id
       , a.id as "company_id", a.name as "company_name"
       , con.id as "contact_id", con.fullname as "contact_name"
       , can.id as "candidate_id", can.fullname as "candidate_name"
       , j.id as "job_id", j.name as "job_title"
       , -10 as "user_account_id"
       , 'comment' as "category"
       , 'candidate' as "type"
       , e.createddate::timestamp as "insert_timestamp"
       , concat_ws(chr(10), '[EVENT]'
              , coalesce('Company Name: ' || nullif(a.Name,'Candidates'),NULL)
              , coalesce('Contact Name: ' || nullif(con.fullname,''),NULL)
              , coalesce('Job Name: ' || nullif(j.Name,''),NULL)
              , coalesce('Candidate Name: ' || nullif(can.fullname,''),NULL)
              , coalesce('Assigned To: ' || nullif(u.fullname,''),null)
              , coalesce('Subject: ' || nullif(e.subject,''),null)
              , coalesce('Start: ' || nullif(e.activitydatetime,''),null)
              , coalesce('End: ' || nullif( (e.activitydatetime::timestamp + concat(e.durationinminutes,' minutes')::interval)::varchar ,''),null)
              , coalesce('Activity Currency: ' || nullif(e.currencyisocode,''),null)
              , coalesce('Location: ' || nullif( left(e.location,10) ,''),null)
              , coalesce('Show Time As: ' || nullif( left(e.showas,10) ,''),null)
              , coalesce('Comments: ' || nullif( left(e.description,10),''),null)
              ) as "content"
-- select count(*) --4726 -- select activitydatetime, durationinminutes
from Event e --where e.id = '00U0J000012DyCXUA0'
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u on u.id = e.OwnerId
left join (select id, name from Account) a on a.id = e.AccountId --COMPANY
left join (select id, concat(firstname,' ',lastname) as fullname, email from contact where recordtypeid in ('0120Y0000013O5d')) con on con.id = e.WhoId --CONTACT
left join (select Id, name from ts2_job_c) j on j.id = e.WhatId --JOB
left join (select id, concat(firstname,' ',lastname) as fullname, email from contact where recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')) can on can.id = e.WhoId --CANDIDATE
where e.createddate::timestamp > '2017-10-17' --4932 rows</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2224</xloc>
      <yloc>544</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Extract Candidate_Contact Documents</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select at.parentid, at.id as fileid
				, concat(at.id,'.',substring(at.name from '\.([^\.]*)$')) filename
				, at.name as actual_filename
				, at.createddate::timestamp as createddate
	    from attachment at
        left join (select id, name from Account) a on a.id = at.parentid --COMPANY
        left join (select id, concat(firstname,' ',lastname) as fullname, email, title
					from contact where recordtypeid in ('0120Y0000013O5d')) con on con.id = at.parentid --CONTACT
        left join (select Id, name, ts2_job_number_c from ts2_job_c) j on j.id = at.parentid --JOB
        left join (select id, concat(firstname,' ',lastname) as fullname, email, title 
					from contact where recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')) can on can.id = at.parentid
	    where at.parentid is not null and substring(at.name from '\.([^\.]*)$') &lt;&gt; ''
		and (a.id is not null or con.id is not null or j.id is not null or can.id is not null)
                   --and a.id is not null --1444
                   --and con.id is not null --346
                   --and j.id is not null --0
                   and can.id is not null
UNION

select a.linkedentityid, a.fileid, filename, actual_filename, createddate
          from (
                   select
                        cdl.linkedentityid --, cdl.id, cdl.contentdocumentid, cdl.isdeleted --, cdl.*
                          , a.id as "company_id", a.name as "company_name"
                          , con.id as "contact_id", con.fullname as "contact_name", con.title as "Contact Title"
                          , j.id as "job_id", j.name as "job_title", j.ts2_job_number_c as "Job Number"
                          , can.id as "candidate_id", can.fullname as "candidate_name", can.title as "Candidate Title"
                          , cv.id as "fileid", concat(cv.id,'.',substring(cv.pathonclient from '\.([^\.]*)$')) "filename"
						, cv.id as "file_name", cv.islatest, cv.title, cv.description, cv.reasonforchange
						, cv.pathonclient as "actual_filename", cv.createddate::timestamp
						, cv.filetype, cv.contentsize --cv.isdeleted,
                   from contentdocumentlink cdl
                   left join contentversion cv on cv.contentdocumentid = cdl.contentdocumentid
                   left join (select id, name from Account) a on a.id = cdl.linkedentityid --COMPANY
                   left join (select id, concat(firstname,' ',lastname) as fullname, email, title
								from contact where recordtypeid in ('0120Y0000013O5d')) con on con.id = cdl.linkedentityid --CONTACT
                   left join (select Id, name, ts2_job_number_c from ts2_job_c) j on j.id = cdl.linkedentityid --JOB
                   left join (select id, concat(firstname,' ',lastname) as fullname, email, title 
								from contact where recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')) can on can.id = cdl.linkedentityid --CANDIDATE
                   where cv.contentdocumentid is not null and substring(cv.pathonclient from '\.([^\.]*)$') &lt;&gt; ''
                   and (a.id is not null or con.id is not null or j.id is not null or can.id is not null)
                   --and a.id is not null --1444
                   --and con.id is not null
                   --and j.id is not null --356
                   and can.id is not null
				   ) a</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2848</xloc>
      <yloc>1520</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Extract Contact Documents</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select at.parentid, at.id as fileid
				, concat(at.id,'.',substring(at.name from '\.([^\.]*)$')) filename
				, at.name as actual_filename
				, at.createddate::timestamp as createddate
	    from attachment at
        left join (select id, name from Account) a on a.id = at.parentid --COMPANY
        left join (select id, concat(firstname,' ',lastname) as fullname, email, title
					from contact where recordtypeid in ('0120Y0000013O5d')) con on con.id = at.parentid --CONTACT
        left join (select Id, name, ts2_job_number_c from ts2_job_c) j on j.id = at.parentid --JOB
        left join (select id, concat(firstname,' ',lastname) as fullname, email, title 
					from contact where recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')) can on can.id = at.parentid
	    where at.parentid is not null and substring(at.name from '\.([^\.]*)$') &lt;&gt; ''
		and (a.id is not null or con.id is not null or j.id is not null or can.id is not null)
                   --and a.id is not null --1444
                   and con.id is not null --346
                   --and j.id is not null --356
                   --and can.id is not null
UNION

select a.linkedentityid, a.fileid, filename, actual_filename, createddate
          from (
                   select
                        cdl.linkedentityid --, cdl.id, cdl.contentdocumentid, cdl.isdeleted --, cdl.*
                          , a.id as "company_id", a.name as "company_name"
                          , con.id as "contact_id", con.fullname as "contact_name", con.title as "Contact Title"
                          , j.id as "job_id", j.name as "job_title", j.ts2_job_number_c as "Job Number"
                          , can.id as "candidate_id", can.fullname as "candidate_name", can.title as "Candidate Title"
                          , cv.id as "fileid", concat(cv.id,'.',substring(cv.pathonclient from '\.([^\.]*)$')) "filename"
						, cv.id as "file_name", cv.islatest, cv.title, cv.description, cv.reasonforchange
						, cv.pathonclient as "actual_filename", cv.createddate::timestamp
						, cv.filetype, cv.contentsize --cv.isdeleted,
                   from contentdocumentlink cdl
                   left join contentversion cv on cv.contentdocumentid = cdl.contentdocumentid
                   left join (select id, name from Account) a on a.id = cdl.linkedentityid --COMPANY
                   left join (select id, concat(firstname,' ',lastname) as fullname, email, title
								from contact where recordtypeid in ('0120Y0000013O5d')) con on con.id = cdl.linkedentityid --CONTACT
                   left join (select Id, name, ts2_job_number_c from ts2_job_c) j on j.id = cdl.linkedentityid --JOB
                   left join (select id, concat(firstname,' ',lastname) as fullname, email, title 
								from contact where recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')) can on can.id = cdl.linkedentityid --CANDIDATE
                   where cv.contentdocumentid is not null and substring(cv.pathonclient from '\.([^\.]*)$') &lt;&gt; ''
                   and (a.id is not null or con.id is not null or j.id is not null or can.id is not null)
                   --and a.id is not null --1444
                   and con.id is not null
                   --and j.id is not null --356
                   --and can.id is not null
				   ) a</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2848</xloc>
      <yloc>1360</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Extract company document</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select at.parentid, at.id as fileid
				, concat(at.id,'.',substring(at.name from '\.([^\.]*)$')) filename
				, at.name as actual_filename
				, at.createddate::timestamp as createddate
	    from attachment at
        left join (select id, name from Account) a on a.id = at.parentid --COMPANY
        left join (select id, concat(firstname,' ',lastname) as fullname, email, title
					from contact where recordtypeid in ('0120Y0000013O5d')) con on con.id = at.parentid --CONTACT
        left join (select Id, name, ts2_job_number_c from ts2_job_c) j on j.id = at.parentid --JOB
        left join (select id, concat(firstname,' ',lastname) as fullname, email, title 
					from contact where recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')) can on can.id = at.parentid
	    where at.parentid is not null and substring(at.name from '\.([^\.]*)$') &lt;&gt; ''
		and (a.id is not null or con.id is not null or j.id is not null or can.id is not null)
                   and a.id is not null --13895
                   --and con.id is not null --346
                   --and j.id is not null --0
                   --and can.id is not null
UNION

select a.linkedentityid, a.fileid, filename, actual_filename, createddate
          from (
                   select
                        cdl.linkedentityid --, cdl.id, cdl.contentdocumentid, cdl.isdeleted --, cdl.*
                          , a.id as "company_id", a.name as "company_name"
                          , con.id as "contact_id", con.fullname as "contact_name", con.title as "Contact Title"
                          , j.id as "job_id", j.name as "job_title", j.ts2_job_number_c as "Job Number"
                          , can.id as "candidate_id", can.fullname as "candidate_name", can.title as "Candidate Title"
                          , cv.id as "fileid", concat(cv.id,'.',substring(cv.pathonclient from '\.([^\.]*)$')) "filename"
						, cv.id as "file_name", cv.islatest, cv.title, cv.description, cv.reasonforchange
						, cv.pathonclient as "actual_filename", cv.createddate::timestamp
						, cv.filetype, cv.contentsize --cv.isdeleted,
                   from contentdocumentlink cdl
                   left join contentversion cv on cv.contentdocumentid = cdl.contentdocumentid
                   left join (select id, name from Account) a on a.id = cdl.linkedentityid --COMPANY
                   left join (select id, concat(firstname,' ',lastname) as fullname, email, title
								from contact where recordtypeid in ('0120Y0000013O5d')) con on con.id = cdl.linkedentityid --CONTACT
                   left join (select Id, name, ts2_job_number_c from ts2_job_c) j on j.id = cdl.linkedentityid --JOB
                   left join (select id, concat(firstname,' ',lastname) as fullname, email, title 
								from contact where recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')) can on can.id = cdl.linkedentityid --CANDIDATE
                   where cv.contentdocumentid is not null and substring(cv.pathonclient from '\.([^\.]*)$') &lt;&gt; ''
                   and (a.id is not null or con.id is not null or j.id is not null or can.id is not null)
                   and a.id is not null --1459
                   --and con.id is not null
                   --and j.id is not null --356
                   --and can.id is not null
				   ) a
					 
 --total: 15354</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2848</xloc>
      <yloc>1280</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Extract job document</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select at.parentid, at.id as fileid
				, concat(at.id,'.',substring(at.name from '\.([^\.]*)$')) filename
				, at.name as actual_filename
				, at.createddate::timestamp as createddate
	    from attachment at
        left join (select id, name from Account) a on a.id = at.parentid --COMPANY
        left join (select id, concat(firstname,' ',lastname) as fullname, email, title
					from contact where recordtypeid in ('0120Y0000013O5d')) con on con.id = at.parentid --CONTACT
        left join (select Id, name, ts2_job_number_c from ts2_job_c) j on j.id = at.parentid --JOB
        left join (select id, concat(firstname,' ',lastname) as fullname, email, title 
					from contact where recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')) can on can.id = at.parentid
	    where at.parentid is not null and substring(at.name from '\.([^\.]*)$') &lt;&gt; ''
		and (a.id is not null or con.id is not null or j.id is not null or can.id is not null)
                   --and a.id is not null --1444
                   --and con.id is not null --346
                   and j.id is not null --0
                   --and can.id is not null
UNION

select a.linkedentityid, a.fileid, filename, actual_filename, createddate
          from (
                   select
                        cdl.linkedentityid --, cdl.id, cdl.contentdocumentid, cdl.isdeleted --, cdl.*
                          , a.id as "company_id", a.name as "company_name"
                          , con.id as "contact_id", con.fullname as "contact_name", con.title as "Contact Title"
                          , j.id as "job_id", j.name as "job_title", j.ts2_job_number_c as "Job Number"
                          , can.id as "candidate_id", can.fullname as "candidate_name", can.title as "Candidate Title"
                          , cv.id as "fileid", concat(cv.id,'.',substring(cv.pathonclient from '\.([^\.]*)$')) "filename"
						, cv.id as "file_name", cv.islatest, cv.title, cv.description, cv.reasonforchange
						, cv.pathonclient as "actual_filename", cv.createddate::timestamp
						, cv.filetype, cv.contentsize --cv.isdeleted,
                   from contentdocumentlink cdl
                   left join contentversion cv on cv.contentdocumentid = cdl.contentdocumentid
                   left join (select id, name from Account) a on a.id = cdl.linkedentityid --COMPANY
                   left join (select id, concat(firstname,' ',lastname) as fullname, email, title
								from contact where recordtypeid in ('0120Y0000013O5d')) con on con.id = cdl.linkedentityid --CONTACT
                   left join (select Id, name, ts2_job_number_c from ts2_job_c) j on j.id = cdl.linkedentityid --JOB
                   left join (select id, concat(firstname,' ',lastname) as fullname, email, title 
								from contact where recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')) can on can.id = cdl.linkedentityid --CANDIDATE
                   where cv.contentdocumentid is not null and substring(cv.pathonclient from '\.([^\.]*)$') &lt;&gt; ''
                   and (a.id is not null or con.id is not null or j.id is not null or can.id is not null)
                   --and a.id is not null --1444
                   --and con.id is not null
                   and j.id is not null --356
                   --and can.id is not null
				   ) a</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2848</xloc>
      <yloc>1440</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>FE lookup</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>functional_expertise</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>vcfe</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCFEID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>960</xloc>
      <yloc>2224</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>FE lookup 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>functional_expertise</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>vcfe</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCFE_ID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1824</xloc>
      <yloc>2304</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Feed Post Comment</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select fp.Id
       --, fp.FeedItemId
       , a.id as "company_id", a.name as "company_name"
       , con.id as "contact_id", con.fullname as "contact_name"
       , can.id as "candidate_id", can.fullname as "candidate_name"
       , j.id as "job_id", j.name as "job_title"
--       , case when fp.ParentId in (select Id from Account) then fp.ParentId
--           else NULL end as CompanyExtID
--       , case when fp.ParentId in (select Id from Contact) then fp.ParentId
--           else NULL end as CandidateExtID
--       , case when fp.ParentId in (select Id from ts2_job_c) then fp.ParentId
--           else NULL end as JobExtID
       , -10 as "user_account_id"
       , 'comment' as "category"
       --, 'candidate' as "type"
       --, case when fc.CreatedDate is not NULL then cast(fc.CreatedDate as datetime) else cast(fp.CreatedDate as datetime) end as "insert_timestamp"
       , fp.CreatedDate::timestamp as "insert_timestamp"
       --, fc.Status
       , concat_ws(chr(10), '[FEEDPOST]'
           , coalesce('Related To: ' || nullif(a1.name,''),NULL)
           , coalesce('Created Date: ' || nullif(left(fp.CreatedDate,10),''),NULL)
           , coalesce('Created By: ' || nullif(u.fullname,''),NULL)
           , coalesce('Body: ' || nullif(fp.Body,''),NULL)
           --, coalesce(chr(10) || 'Commented on: ' || nullif(left(fc.CreatedDate,10),''),NULL)
           --, coalesce('Created by: ' || nullif(u2.fullname,''),NULL)
           , coalesce('Status: ' || nullif(fc.Status,''),NULL)
           , coalesce('Comment: ' || nullif(fc.CommentBody,''),NULL)
           ) as "content"

-- select count(*) --306449 -- select *
from FeedPost fp
left join FeedComment fc on fc.FeedItemId = fp.FeedItemId
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u on u.Id = fp.CreatedById
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u2 on u2.Id = fc.CreatedById --comment created
left join (select id, name from Account) a1 on a1.id = fp.relatedrecordid --COMPANY
left join (select id, name from Account) a on a.id = fp.ParentId --COMPANY
left join (select id, concat(firstname,' ',lastname) as fullname, email from contact where recordtypeid in ('0120Y0000013O5d')) con on con.id = fp.ParentId --CONTACT
left join (select Id, name from ts2_job_c) j on j.id = fp.ParentId --JOB
left join (select id, concat(firstname,' ',lastname) as fullname, email from contact where recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')) can on can.id = fp.ParentId --CANDIDATE
--where can.id is not null and can.id in ('0031n00001rJaWrAAK') --,'0031n00001gTdpnAAC','0031n00001gTZKvAAO')
--where fc.FeedItemId = '0F71n00000CvAI4CAN'
--where a.id is not null
--order by fp.Id --3614 rows
where fp.CreatedDate::timestamp > '2017-10-17' --265218
and (a.id is not NULL or con.id is not NULL or can.id is not NULL or j.id is not NULL) --212959</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2224</xloc>
      <yloc>624</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Functional Exp</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>/* Create FE sequence before running */

--FE
select distinct vcfe
, CURRENT_TIMESTAMP as insert_timestamp
from candidate_fe_sfe
where note = 'Candidate category'
order by vcfe --11</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1648</xloc>
      <yloc>2224</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Industry lookup</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>vertical</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>industry</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCIndustryID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>848</xloc>
      <yloc>1200</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert - Contact Comment 2</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <schema>public</schema>
    <table>activity</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>N</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field>contactid</partitioning_field>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
      <field>
        <column_name>contact_id</column_name>
        <stream_name>actual_contactid</stream_name>
      </field>
      <field>
        <column_name>user_account_id</column_name>
        <stream_name>user_account_id</stream_name>
      </field>
      <field>
        <column_name>insert_timestamp</column_name>
        <stream_name>insert_timestamp</stream_name>
      </field>
      <field>
        <column_name>content</column_name>
        <stream_name>content</stream_name>
      </field>
      <field>
        <column_name>type</column_name>
        <stream_name>type</stream_name>
      </field>
      <field>
        <column_name>category</column_name>
        <stream_name>category</stream_name>
      </field>
      <field>
        <column_name>userMessageID</column_name>
        <stream_name>userMessageID</stream_name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>864</xloc>
      <yloc>192</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>candidate_functional_expertise</table>
      <key>
        <name>final_candidate_id</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>fe</name>
        <field>functional_expertise_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>candidate_id</name>
        <rename>final_candidate_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>functional_expertise_id</name>
        <rename>fe</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1872</xloc>
      <yloc>1024</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update - Contact Comment</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>activity</table>
      <key>
        <name>actual_contactid</name>
        <field>contact_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>content</name>
        <field>content</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>insert_timestamp</name>
        <field>insert_timestamp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>contact_id</name>
        <rename>actual_contactid</rename>
        <update>Y</update>
      </value>
      <value>
        <name>user_account_id</name>
        <rename>user_account_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>content</name>
        <rename>content</rename>
        <update>Y</update>
      </value>
      <value>
        <name>type</name>
        <rename>type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>category</name>
        <rename>category</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>864</xloc>
      <yloc>144</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection/>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema/>
      <table>activity</table>
      <key>
        <name>VCCandidateID</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCCompanyID</name>
        <field>company_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCContactID</name>
        <field>contact_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCJobID</name>
        <field>position_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>Comment_activities</name>
        <field>content</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>company_id</name>
        <rename>VCCompanyID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>contact_id</name>
        <rename>VCContactID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>candidate_id</name>
        <rename>VCCandidateID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>position_id</name>
        <rename>VCJobID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>user_account_id</name>
        <rename>User_account_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>Insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>content</name>
        <rename>Comment_activities</rename>
        <update>Y</update>
      </value>
      <value>
        <name>category</name>
        <rename>category</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3040</xloc>
      <yloc>576</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update 2 2 2 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>compensation</table>
      <key>
        <name>Job_VincereID</name>
        <field>position_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>contract_rate_from</name>
        <rename>PayRateFrom</rename>
        <update>Y</update>
      </value>
      <value>
        <name>contract_rate_to</name>
        <rename>PayRateTo</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1312</xloc>
      <yloc>688</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update 2 2 2 2 2 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>common_location</table>
      <key>
        <name>contact-externalId</name>
        <field>tmp_externalid</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>state</name>
        <rename>contact-state</rename>
        <update>Y</update>
      </value>
      <value>
        <name>city</name>
        <rename>contact-city</rename>
        <update>Y</update>
      </value>
      <value>
        <name>post_code</name>
        <rename>contact-zipCode</rename>
        <update>Y</update>
      </value>
      <value>
        <name>country_code</name>
        <rename>contact-country</rename>
        <update>Y</update>
      </value>
      <value>
        <name>address</name>
        <rename>contact-address</rename>
        <update>Y</update>
      </value>
      <value>
        <name>location_name</name>
        <rename>locationName</rename>
        <update>Y</update>
      </value>
      <value>
        <name>tmp_externalid</name>
        <rename>contact-externalId</rename>
        <update>Y</update>
      </value>
      <value>
        <name>latitude</name>
        <rename>ts2_latitude_c</rename>
        <update>Y</update>
      </value>
      <value>
        <name>longitude</name>
        <rename>ts2_longitude_c</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>864</xloc>
      <yloc>416</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update 2 2 2 2 2 2 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>common_location</table>
      <key>
        <name>contact-externalId</name>
        <field>tmp_externalid</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>state</name>
        <rename>contact-state</rename>
        <update>Y</update>
      </value>
      <value>
        <name>city</name>
        <rename>contact-city</rename>
        <update>Y</update>
      </value>
      <value>
        <name>post_code</name>
        <rename>contact-zipCode</rename>
        <update>Y</update>
      </value>
      <value>
        <name>country_code</name>
        <rename>contact-country</rename>
        <update>Y</update>
      </value>
      <value>
        <name>address</name>
        <rename>contact-address</rename>
        <update>Y</update>
      </value>
      <value>
        <name>location_name</name>
        <rename>locationName</rename>
        <update>Y</update>
      </value>
      <value>
        <name>tmp_externalid</name>
        <rename>contact-externalId</rename>
        <update>Y</update>
      </value>
      <value>
        <name>latitude</name>
        <rename>ts2_latitude_c</rename>
        <update>Y</update>
      </value>
      <value>
        <name>longitude</name>
        <rename>ts2_longitude_c</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1943</xloc>
      <yloc>1605</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update 2 2 3 3</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>500</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>activity</table>
      <key>
        <name>actual_contactid</name>
        <field>contact_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>insert_timestamp</name>
        <field>insert_timestamp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>content</name>
        <field>content</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>contact_id</name>
        <rename>actual_contactid</rename>
        <update>Y</update>
      </value>
      <value>
        <name>user_account_id</name>
        <rename>user_account_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>content</name>
        <rename>content</rename>
        <update>Y</update>
      </value>
      <value>
        <name>type</name>
        <rename>type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>category</name>
        <rename>category</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>864</xloc>
      <yloc>240</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update 2 3</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>activity</table>
      <key>
        <name>actual_candidateid</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>content</name>
        <field>content</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>insert_timestamp</name>
        <field>insert_timestamp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>userMessageID</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>candidate_id</name>
        <rename>actual_candidateid</rename>
        <update>Y</update>
      </value>
      <value>
        <name>user_account_id</name>
        <rename>user_account_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>content</name>
        <rename>content</rename>
        <update>Y</update>
      </value>
      <value>
        <name>type</name>
        <rename>type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>category</name>
        <rename>category</rename>
        <update>Y</update>
      </value>
      <value>
        <name>userMessageID</name>
        <rename>userMessageID</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1952</xloc>
      <yloc>224</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update 2 3 2 2 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>activity</table>
      <key>
        <name>actual_id</name>
        <field>position_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>content</name>
        <field>content</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>insert_timestamp</name>
        <field>insert_timestamp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>position_id</name>
        <rename>actual_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>user_account_id</name>
        <rename>user_account_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>content</name>
        <rename>content</rename>
        <update>Y</update>
      </value>
      <value>
        <name>type</name>
        <rename>type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>category</name>
        <rename>category</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1376</xloc>
      <yloc>160</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update 2 3 2 2 2 2 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>activity</table>
      <key>
        <name>actual_id</name>
        <field>company_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>content</name>
        <field>content</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>insert_timestamp</name>
        <field>insert_timestamp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>company_id</name>
        <rename>actual_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>user_account_id</name>
        <rename>user_account_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>content</name>
        <rename>content</rename>
        <update>Y</update>
      </value>
      <value>
        <name>type</name>
        <rename>type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>category</name>
        <rename>category</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>400</xloc>
      <yloc>160</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update 2 4</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection/>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>candidate_functional_expertise</table>
      <key>
        <name>fe</name>
        <field>functional_expertise_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_candidate_id</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>sfe</name>
        <field>sub_functional_expertise_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>functional_expertise_id</name>
        <rename>fe</rename>
        <update>Y</update>
      </value>
      <value>
        <name>candidate_id</name>
        <rename>final_candidate_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>sub_functional_expertise_id</name>
        <rename>sfe</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1888</xloc>
      <yloc>1104</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update 2 4 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>candidate_note</table>
      <key>
        <name>actual_candidate_id</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>candidate-note2</name>
        <field>note</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>title</name>
        <field>title</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>candidate_id</name>
        <rename>actual_candidate_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>title</name>
        <rename>title</rename>
        <update>Y</update>
      </value>
      <value>
        <name>note</name>
        <rename>candidate-note2</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1872</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update 2 5</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection/>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>position_description_functional_expertise</table>
      <key>
        <name>actual_id</name>
        <field>position_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>fe</name>
        <field>functional_expertise_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>position_id</name>
        <rename>actual_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>functional_expertise_id</name>
        <rename>fe</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1392</xloc>
      <yloc>1008</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update 3</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>company_location</table>
      <key>
        <name>company-externalid</name>
        <field>tmp_external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCID</name>
        <field>company_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>city</name>
        <rename>city</rename>
        <update>Y</update>
      </value>
      <value>
        <name>address</name>
        <rename>address</rename>
        <update>Y</update>
      </value>
      <value>
        <name>country_code</name>
        <rename>countrycode</rename>
        <update>Y</update>
      </value>
      <value>
        <name>location_name</name>
        <rename>location_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>post_code</name>
        <rename>post_code</rename>
        <update>Y</update>
      </value>
      <value>
        <name>company_id</name>
        <rename>VCID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>location_type</name>
        <rename>location_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>state</name>
        <rename>state</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>tmp_external_id</name>
        <rename>company-externalid</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>336</xloc>
      <yloc>464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update Activity</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>activity</table>
      <key>
        <name>actual_candidate_id</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>insert_timestamp</name>
        <field>insert_timestamp</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>content</name>
        <field>content</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>candidate_id</name>
        <rename>actual_candidate_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>user_account_id</name>
        <rename>user_account_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>content</name>
        <rename>content</rename>
        <update>Y</update>
      </value>
      <value>
        <name>type</name>
        <rename>type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>category</name>
        <rename>category</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1952</xloc>
      <yloc>96</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update candidate FESFE</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema/>
      <table>candidate_functional_expertise</table>
      <key>
        <name>VCCandidateID</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCFEID</name>
        <field>functional_expertise_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCSFEID</name>
        <field>sub_functional_expertise_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>candidate_id</name>
        <rename>VCCandidateID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>functional_expertise_id</name>
        <rename>VCFEID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>sub_functional_expertise_id</name>
        <rename>VCSFEID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1232</xloc>
      <yloc>2336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert / Update contact FESFE</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema/>
      <table>contact_functional_expertise</table>
      <key>
        <name>VCContactID</name>
        <field>contact_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCFEID</name>
        <field>functional_expertise_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCSFEID</name>
        <field>sub_functional_expertise_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>contact_id</name>
        <rename>VCContactID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>functional_expertise_id</name>
        <rename>VCFEID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>sub_functional_expertise_id</name>
        <rename>VCSFEID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1232</xloc>
      <yloc>2128</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert Candidate Industry</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema/>
      <table>candidate_industry</table>
      <key>
        <name>VCIndustryID</name>
        <field>vertical_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCCandidateID</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>vertical_id</name>
        <rename>VCIndustryID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>candidate_id</name>
        <rename>VCCandidateID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>Insert_timestamp</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>992</xloc>
      <yloc>1200</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert Engagement</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <schema>public</schema>
    <table>activity</table>
    <commit>200</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field/>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
      <field>
        <column_name>contact_id</column_name>
        <stream_name>VCContactID</stream_name>
      </field>
      <field>
        <column_name>candidate_id</column_name>
        <stream_name>VCCandidateID</stream_name>
      </field>
      <field>
        <column_name>user_account_id</column_name>
        <stream_name>user_account_id</stream_name>
      </field>
      <field>
        <column_name>insert_timestamp</column_name>
        <stream_name>insert_timestamp</stream_name>
      </field>
      <field>
        <column_name>content</column_name>
        <stream_name>content</stream_name>
      </field>
      <field>
        <column_name>category</column_name>
        <stream_name>category</stream_name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2912</xloc>
      <yloc>720</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert Update [Offer]</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>offer</table>
      <key>
        <name>VCJobAppID</name>
        <field>position_candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>position_candidate_id</name>
        <rename>VCJobAppID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>draft_offer</name>
        <rename>draft_offer</rename>
        <update>Y</update>
      </value>
      <value>
        <name>position_type</name>
        <rename>position_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>currency_type</name>
        <rename>currency_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>gross_annual_salary</name>
        <rename>pay_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>pay_rate</name>
        <rename>pay_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>use_quick_fee_forecast</name>
        <rename>use_quick_fee_forecast</rename>
        <update>Y</update>
      </value>
      <value>
        <name>percentage_of_annual_salary</name>
        <rename>percentage_of_annual_salary</rename>
        <update>Y</update>
      </value>
      <value>
        <name>projected_profit</name>
        <rename>projected_profit</rename>
        <update>Y</update>
      </value>
      <value>
        <name>valid</name>
        <rename>placed_valid</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3056</xloc>
      <yloc>1840</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert Update [Offer] contract</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>offer</table>
      <key>
        <name>VCJobAppID</name>
        <field>position_candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>position_candidate_id</name>
        <rename>VCJobAppID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>draft_offer</name>
        <rename>draft_offer</rename>
        <update>Y</update>
      </value>
      <value>
        <name>position_type</name>
        <rename>position_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>currency_type</name>
        <rename>currency_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>contract_rate_type</name>
        <rename>contract_rate_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>contract_length</name>
        <rename>contract_length</rename>
        <update>Y</update>
      </value>
      <value>
        <name>contract_length_type</name>
        <rename>contract_length_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>pay_rate</name>
        <rename>pay_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>total_pay_rate</name>
        <rename>pay_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>pay_calculation_type</name>
        <rename>pay_calculation_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>charge_rate_type</name>
        <rename>charge_rate_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>use_time_temp</name>
        <rename>use_time_temp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>profit</name>
        <rename>profit</rename>
        <update>Y</update>
      </value>
      <value>
        <name>markup_percent</name>
        <rename>markup_percent</rename>
        <update>Y</update>
      </value>
      <value>
        <name>margin_percent</name>
        <rename>margin_percent</rename>
        <update>Y</update>
      </value>
      <value>
        <name>charge_rate</name>
        <rename>charge_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>projected_pay_rate</name>
        <rename>projected_pay_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>projected_charge_rate</name>
        <rename>projected_charge_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>projected_profit</name>
        <rename>projected_profit</rename>
        <update>Y</update>
      </value>
      <value>
        <name>valid</name>
        <rename>placed_valid</rename>
        <update>Y</update>
      </value>
      <value>
        <name>latest_user_id</name>
        <rename>latest_user_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>latest_update_date</name>
        <rename>latest_update_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>working_hour_per_day</name>
        <rename>working_hours</rename>
        <update>Y</update>
      </value>
      <value>
        <name>working_day_per_week</name>
        <rename>working_days_per_week</rename>
        <update>Y</update>
      </value>
      <value>
        <name>working_hour_per_week</name>
        <rename>working_hours_per_week</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3056</xloc>
      <yloc>1920</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert [Invoice]</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>invoice</table>
      <key>
        <name>VCJobAppID</name>
        <field>position_candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCOfferID</name>
        <field>offer_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>position_candidate_id</name>
        <rename>VCJobAppID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>offer_id</name>
        <rename>VCOfferID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>status</name>
        <rename>invoicestatus</rename>
        <update>Y</update>
      </value>
      <value>
        <name>renewal_index</name>
        <rename>renewal_index</rename>
        <update>Y</update>
      </value>
      <value>
        <name>renewal_flow_status</name>
        <rename>renewal_flow_status</rename>
        <update>Y</update>
      </value>
      <value>
        <name>valid</name>
        <rename>offer_valid</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>latest_update_date</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3248</xloc>
      <yloc>2016</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert change request</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <schema>public</schema>
    <table>activity</table>
    <commit>200</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field/>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
      <field>
        <column_name>candidate_id</column_name>
        <stream_name>VCCandidateID</stream_name>
      </field>
      <field>
        <column_name>user_account_id</column_name>
        <stream_name>user_account_id</stream_name>
      </field>
      <field>
        <column_name>insert_timestamp</column_name>
        <stream_name>insert_timestamp</stream_name>
      </field>
      <field>
        <column_name>content</column_name>
        <stream_name>content</stream_name>
      </field>
      <field>
        <column_name>category</column_name>
        <stream_name>category</stream_name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2736</xloc>
      <yloc>720</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert company fee model</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <schema/>
    <table>company_fee_model</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field/>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
      <field>
        <column_name>company_id</column_name>
        <stream_name>VCCompanyID</stream_name>
      </field>
      <field>
        <column_name>fee_model_name</column_name>
        <stream_name>fee_model_name</stream_name>
      </field>
      <field>
        <column_name>fee_model_type</column_name>
        <stream_name>fee_model_type</stream_name>
      </field>
      <field>
        <column_name>currency</column_name>
        <stream_name>currency</stream_name>
      </field>
      <field>
        <column_name>contract_type</column_name>
        <stream_name>contract_type</stream_name>
      </field>
      <field>
        <column_name>contract_category</column_name>
        <stream_name>contract_category</stream_name>
      </field>
      <field>
        <column_name>charge_rate</column_name>
        <stream_name>charge_rate</stream_name>
      </field>
      <field>
        <column_name>gross_annual_salary</column_name>
        <stream_name>gross_annual_salary</stream_name>
      </field>
      <field>
        <column_name>insert_timestamp</column_name>
        <stream_name>insert_timestamp</stream_name>
      </field>
      <field>
        <column_name>description</column_name>
        <stream_name>description</stream_name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>336</xloc>
      <yloc>1024</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert company fee model 2</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <schema/>
    <table>company_fee_model</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field/>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
      <field>
        <column_name>company_id</column_name>
        <stream_name>VCCompanyID</stream_name>
      </field>
      <field>
        <column_name>fee_model_name</column_name>
        <stream_name>fee_model_name</stream_name>
      </field>
      <field>
        <column_name>fee_model_type</column_name>
        <stream_name>fee_model_type</stream_name>
      </field>
      <field>
        <column_name>currency</column_name>
        <stream_name>currency</stream_name>
      </field>
      <field>
        <column_name>insert_timestamp</column_name>
        <stream_name>insert_timestamp</stream_name>
      </field>
      <field>
        <column_name>description</column_name>
        <stream_name>description</stream_name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>336</xloc>
      <yloc>1088</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert company location 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>company_location</table>
      <key>
        <name>VCCompanyID</name>
        <field>company_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>city</name>
        <rename>contact-city</rename>
        <update>Y</update>
      </value>
      <value>
        <name>address</name>
        <rename>contact-address</rename>
        <update>Y</update>
      </value>
      <value>
        <name>location_name</name>
        <rename>location_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>country_code</name>
        <rename>contact-country</rename>
        <update>Y</update>
      </value>
      <value>
        <name>post_code</name>
        <rename>contact-zipCode</rename>
        <update>Y</update>
      </value>
      <value>
        <name>company_id</name>
        <rename>VCCompanyID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>location_type</name>
        <rename>location_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>latitude</name>
        <rename>ts2_latitude_c</rename>
        <update>Y</update>
      </value>
      <value>
        <name>longitude</name>
        <rename>ts2_longitude_c</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>368</xloc>
      <yloc>1744</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert company location 2 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>company_location</table>
      <key>
        <name>VCCompanyID</name>
        <field>company_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>city</name>
        <rename>contact-city</rename>
        <update>Y</update>
      </value>
      <value>
        <name>address</name>
        <rename>contact-address</rename>
        <update>Y</update>
      </value>
      <value>
        <name>location_name</name>
        <rename>location_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>country_code</name>
        <rename>contact-country</rename>
        <update>Y</update>
      </value>
      <value>
        <name>post_code</name>
        <rename>contact-zipCode</rename>
        <update>Y</update>
      </value>
      <value>
        <name>company_id</name>
        <rename>VCCompanyID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>location_type</name>
        <rename>location_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>latitude</name>
        <rename>ts2_latitude_c</rename>
        <update>Y</update>
      </value>
      <value>
        <name>longitude</name>
        <rename>ts2_longitude_c</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>512</xloc>
      <yloc>1904</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert contact industry</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema/>
      <table>contact_industry</table>
      <key>
        <name>VCIndustryID</name>
        <field>industry_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCContactID</name>
        <field>contact_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>industry_id</name>
        <rename>VCIndustryID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>contact_id</name>
        <rename>VCContactID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>Insert_timestamp</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>992</xloc>
      <yloc>1296</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert contact new documents</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection/>
    <schema>public</schema>
    <table>bulk_upload_document_mapping</table>
    <commit>100</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field/>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
      <field>
        <column_name>entity_type</column_name>
        <stream_name>Sirius_entity_type</stream_name>
      </field>
      <field>
        <column_name>entity_id</column_name>
        <stream_name>VCContactID</stream_name>
      </field>
      <field>
        <column_name>file_name</column_name>
        <stream_name>Sirius_file_name</stream_name>
      </field>
      <field>
        <column_name>document_type</column_name>
        <stream_name>Sirius_document_type</stream_name>
      </field>
      <field>
        <column_name>default_file</column_name>
        <stream_name>Sirius_default_file</stream_name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2608</xloc>
      <yloc>1264</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert event</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <schema>public</schema>
    <table>activity</table>
    <commit>200</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field/>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
      <field>
        <column_name>company_id</column_name>
        <stream_name>VCCompanyID</stream_name>
      </field>
      <field>
        <column_name>position_id</column_name>
        <stream_name>VCJobID</stream_name>
      </field>
      <field>
        <column_name>contact_id</column_name>
        <stream_name>VCContactID</stream_name>
      </field>
      <field>
        <column_name>candidate_id</column_name>
        <stream_name>VCCandidateID</stream_name>
      </field>
      <field>
        <column_name>user_account_id</column_name>
        <stream_name>user_account_id</stream_name>
      </field>
      <field>
        <column_name>insert_timestamp</column_name>
        <stream_name>insert_timestamp</stream_name>
      </field>
      <field>
        <column_name>content</column_name>
        <stream_name>content</stream_name>
      </field>
      <field>
        <column_name>category</column_name>
        <stream_name>category</stream_name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2912</xloc>
      <yloc>544</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert new industry</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>vertical</table>
      <key>
        <name>company-industry</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>name</name>
        <rename>company-industry</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>N</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>208</xloc>
      <yloc>272</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert new industry 2 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>vertical</table>
      <key>
        <name>industry</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>name</name>
        <rename>industry</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>N</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1216</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert offer pay charge - Contract</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema/>
      <table>offer_pay_charge</table>
      <key>
        <name>VCOfferID</name>
        <field>offer_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>offer_id</name>
        <rename>VCOfferID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>comp_setting_id</name>
        <rename>comp_setting_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>pay_rate</name>
        <rename>pay_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>total_pay_rate</name>
        <rename>pay_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>profit</name>
        <rename>profit</rename>
        <update>Y</update>
      </value>
      <value>
        <name>charge_rate</name>
        <rename>charge_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>margin_percent</name>
        <rename>margin_percent</rename>
        <update>Y</update>
      </value>
      <value>
        <name>markup_percent</name>
        <rename>markup_percent</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>latest_update_date</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2640</xloc>
      <yloc>2224</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert offer personal Info</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>offer_personal_info</table>
      <key>
        <name>VCOfferID</name>
        <field>offer_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>offer_id</name>
        <rename>VCOfferID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>last_name</name>
        <rename>c.last_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>first_name</name>
        <rename>c.first_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>email</name>
        <rename>c.email</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_company_id</name>
        <rename>pd.company_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_company_name</name>
        <rename>com.client_company_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_contact_id</name>
        <rename>pd.client_contact_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_contact_name</name>
        <rename>client_contact_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_department</name>
        <rename>client_department</rename>
        <update>Y</update>
      </value>
      <value>
        <name>tax_rate</name>
        <rename>tax_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>export_data_to</name>
        <rename>export_data_to</rename>
        <update>Y</update>
      </value>
      <value>
        <name>net_total</name>
        <rename>net_total</rename>
        <update>Y</update>
      </value>
      <value>
        <name>other_invoice_items_total</name>
        <rename>other_invoice_items_total</rename>
        <update>Y</update>
      </value>
      <value>
        <name>invoice_total</name>
        <rename>invoice_total</rename>
        <update>Y</update>
      </value>
      <value>
        <name>start_date</name>
        <rename>start_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>placed_date</name>
        <rename>start_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>offer_date</name>
        <rename>start_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>note</name>
        <rename>placementnote</rename>
        <update>Y</update>
      </value>
      <value>
        <name>invoice_message</name>
        <rename>InvoiceNote</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3440</xloc>
      <yloc>2224</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert offer_revenue_split</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection/>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>offer_revenue_split</table>
      <key>
        <name>VCOfferID</name>
        <field>offer_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>offer_id</name>
        <rename>VCOfferID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>user_id</name>
        <rename>VCUserID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>shared</name>
        <rename>split_percent</rename>
        <update>Y</update>
      </value>
      <value>
        <name>amount</name>
        <rename>projected_profit</rename>
        <update>Y</update>
      </value>
      <value>
        <name>profit_split_mode</name>
        <rename>split_mode</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2640</xloc>
      <yloc>2096</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert offer_revenue_split 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>offer_revenue_split</table>
      <key>
        <name>VCOfferID</name>
        <field>offer_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>offer_id</name>
        <rename>VCOfferID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>user_id</name>
        <rename>VCUserID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>shared</name>
        <rename>split_percent</rename>
        <update>Y</update>
      </value>
      <value>
        <name>amount</name>
        <rename>split_amount</rename>
        <update>Y</update>
      </value>
      <value>
        <name>profit_split_mode</name>
        <rename>split_mode</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3440</xloc>
      <yloc>2480</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert offer_revenue_split 2 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>offer_revenue_split</table>
      <key>
        <name>VCOfferID</name>
        <field>offer_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>offer_id</name>
        <rename>VCOfferID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>user_id</name>
        <rename>VCUserID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>shared</name>
        <rename>split_percent</rename>
        <update>Y</update>
      </value>
      <value>
        <name>amount</name>
        <rename>split_amount</rename>
        <update>Y</update>
      </value>
      <value>
        <name>profit_split_mode</name>
        <rename>split_mode</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3440</xloc>
      <yloc>2384</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert offer_revenue_split 2 3</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>offer_revenue_split</table>
      <key>
        <name>VCOfferID</name>
        <field>offer_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>offer_id</name>
        <rename>VCOfferID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>user_id</name>
        <rename>VCUserID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>shared</name>
        <rename>split_percent</rename>
        <update>Y</update>
      </value>
      <value>
        <name>amount</name>
        <rename>split_amount</rename>
        <update>Y</update>
      </value>
      <value>
        <name>profit_split_mode</name>
        <rename>split_mode</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3440</xloc>
      <yloc>2592</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insert task comment</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection/>
    <schema>public</schema>
    <table>activity</table>
    <commit>200</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field/>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
      <field>
        <column_name>company_id</column_name>
        <stream_name>VCCompanyID</stream_name>
      </field>
      <field>
        <column_name>contact_id</column_name>
        <stream_name>VCContactID</stream_name>
      </field>
      <field>
        <column_name>position_id</column_name>
        <stream_name>VCJobID</stream_name>
      </field>
      <field>
        <column_name>candidate_id</column_name>
        <stream_name>VCCandidateID</stream_name>
      </field>
      <field>
        <column_name>user_account_id</column_name>
        <stream_name>user_account_id</stream_name>
      </field>
      <field>
        <column_name>insert_timestamp</column_name>
        <stream_name>insert_timestamp</stream_name>
      </field>
      <field>
        <column_name>content</column_name>
        <stream_name>comment_activities</stream_name>
      </field>
      <field>
        <column_name>category</column_name>
        <stream_name>category</stream_name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3040</xloc>
      <yloc>656</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>InsertUpdate Custom Field</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>additional_form_values</table>
      <key>
        <name>additional_type</name>
        <field>additional_type</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_additional_id</name>
        <field>additional_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>form_id</name>
        <field>form_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>field_id</name>
        <field>field_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>field_value</name>
        <field>field_value</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>additional_type</name>
        <rename>additional_type</rename>
        <update>N</update>
      </value>
      <value>
        <name>additional_id</name>
        <rename>final_additional_id</rename>
        <update>N</update>
      </value>
      <value>
        <name>form_id</name>
        <rename>form_id</rename>
        <update>N</update>
      </value>
      <value>
        <name>field_id</name>
        <rename>field_id</rename>
        <update>N</update>
      </value>
      <value>
        <name>field_value</name>
        <rename>field_value</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>384</xloc>
      <yloc>608</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Invoice  (always ON)</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>invoice</table>
      <key>
        <name>VCOfferID</name>
        <field>offer_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCPOSITIONCANDIDATEID</name>
        <field>position_candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>offer_id</name>
        <rename>VCOfferID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>position_candidate_id</name>
        <rename>VCPOSITIONCANDIDATEID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>status</name>
        <rename>INVOICE_status</rename>
        <update>Y</update>
      </value>
      <value>
        <name>renewal_flow_status</name>
        <rename>INVOICE_renewal_flow_status</rename>
        <update>Y</update>
      </value>
      <value>
        <name>valid</name>
        <rename>INVOICE_valid</rename>
        <update>Y</update>
      </value>
      <value>
        <name>renewal_index</name>
        <rename>INVOICE_renewal_index</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3616</xloc>
      <yloc>240</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>JOBAPP</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>/*
'SHORTLISTED'then 102
'SENT'then 103
'FIRST_INTERVIEW'then 104
'SECOND_INTERVIEW'then 105
'THIRD_INTERVIEW'then 106
'FOURTH_INTERVIEW'then 107
'FIFTH_INTERVIEW'then 108
'LAST_INTERVIEW_ROUND' then 123
'OFFERED'then 200
'PLACED'then 300
'PLACEMENT_PERMANENT'then 301
'PLACEMENT_CONTRACT'then 302
'PLACEMENT_TEMP'then 303
'ONBOARDING'then 310
*/

with
  JPInfo as (
  	select JP.jobPostingID as JobID
  		, JP.title as JobTitle
              , case when JP.employmentType is null then 301
                     when JP.employmentType in ('Permanent','Opportunity') then 301
                     when JP.employmentType in ('Contract','Fixed Contract','Part-time') then 302
                     when JP.employmentType in ('Temporary','Temp to Perm') then 302
                     else null end as JobType
		, Cl.clientID as ContactID
		, Cl.userID as ClientUserID
		, UC.name as ContactName
		, UC.email as ContactEmail
		, CC.clientCorporationID as CompanyID
		, CC.name as CompanyName
	from bullhorn1.BH_JobPosting JP
	left join bullhorn1.BH_Client Cl on JP.clientUserID = Cl.userID
	left join bullhorn1.BH_UserContact UC on JP.clientUserID = UC.userID
	left join bullhorn1.BH_ClientCorporation CC on JP.clientCorporationID = CC.clientCorporationID
	where 1=1 and JP.title &lt;&gt; '' and (JP.isdeleted &lt;&gt; 1 and JP.status &lt;&gt; 'Archive')
)
--select * from JPInfo order by JobID


, ja0 as (
       select
                JR.jobPostingID as 'application-positionExternalId', JPI.JobType
               , JPI.CompanyID, JPI.CompanyName,  JPI.ContactID, JPI.ContactName, JPI.ContactEmail, JPI.JobID,  JPI.JobTitle, CAI.CandidateName as '#Candidate Name' --, JR.userID, JPI.ClientUserID, 
               , CAI.candidateID as 'application-candidateExternalId'
               , convert(varchar(10),JR.dateAdded,120) as 'dateAdded'
               , coalesce(nullif(case
when JR.status = 'Placed' then 'OFFERED'--'PLACED'
                            else '' end, ''), '') as 'application-stage'  --, JR.status as '#Original-status' -- SHORTLISTED, SENT, FIRST_INTERVIEW, SECOND_INTERVIEW, OFFERED, PLACEMENT_PERMANENT, PLACEMENT_CONTRACT, PLACEMENT_TEMP, ONBOARDING.
        -- select count(*) --5995 -- select distinct JR.status -- select top 100 *
        from bullhorn1.BH_JobResponse JR
        left join ( select CA.userID as CandidateUserID, CA.candidateID, UC.userID, UC.name as CandidateName, UC.email as CandidateEmail from bullhorn1.BH_Candidate CA left join bullhorn1.BH_UserContact UC on CA.userID = UC.userID ) CAI on JR.userID = CAI.CandidateUserID
        left join JPInfo JPI on JR.jobPostingID = JPI.JobID
        where CAI.candidateID is not null 
UNION
       select 
                PL.jobPostingID as 'application-positionExternalId', JPI.JobType
              , JPI.CompanyID, JPI.CompanyName,  JPI.ContactID, JPI.ContactName, JPI.ContactEmail, JPI.JobID,  JPI.JobTitle, CAI.CandidateName as '#Candidate Name' --, JR.userID, JPI.ClientUserID, 
              , CAI.candidateID as 'application-candidateExternalId'
              , convert(varchar(10),PL.dateAdded,120) as 'dateAdded'
              , 'OFFERED' as 'application-stage'
        -- select count(*)
        from bullhorn1.BH_Placement PL
        left join ( select CA.userID as CandidateUserID, CA.candidateID, UC.userID, UC.name as CandidateName, UC.email as CandidateEmail from bullhorn1.BH_Candidate CA left join bullhorn1.BH_UserContact UC on CA.userID = UC.userID ) CAI on PL.userID = CAI.CandidateUserID 
        left join JPInfo JPI on PL.jobPostingID = JPI.JobID
)
--select top 2000 * from ja0
--where ( [application-positionExternalId] = 6744 and [application-candidateExternalId] = 64995) or ([application-positionExternalId] = 5343 and [application-candidateExternalId] = 193508)
--where CompanyName like 'Nuance%' or CompanyID = 6

, ja1 ("application-positionExternalId","application-candidateExternalId", JobType, "application-Stage","dateAdded", rn) as (
       SELECT 
              "application-positionExternalId"
              ,"application-candidateExternalId"
              , JobType
              ,"application-Stage"
              ,"dateAdded"
              , rn = ROW_NUMBER() OVER (PARTITION BY "application-positionExternalId","application-candidateExternalId"/*,"application-Stage" */
                     ORDER BY "application-positionExternalId" desc,
                            CASE [application-stage]
                            WHEN 'PLACEMENT_PERMANENT' THEN 1
                            WHEN 'OFFERED' THEN 2
                            WHEN 'SECOND_INTERVIEW' THEN 3
                            WHEN 'FIRST_INTERVIEW' THEN 4
                            WHEN 'SENT' THEN 5
                            WHEN 'SHORTLISTED' THEN 6
                            END asc )
       FROM ja0 
       left join (select jobPostingID from bullhorn1.BH_JobPosting where isdeleted &lt;&gt; 1 and status &lt;&gt; 'Archive') job on job.jobPostingID = ja0.[application-positionExternalId]
       left join (select candidateid from bullhorn1.Candidate where isdeleted &lt;&gt; 1 and status &lt;&gt; 'Archive') candidate on candidate.candidateid = ja0.[application-candidateExternalId]
       where "application-Stage" not like 'CANDIDATE%' and "application-Stage" &lt;&gt; '' and (job.jobPostingID is not null and candidate.candidateid is not null)
       )



--select [application-stage], count(*) from ja1 where rn = 1 group by [application-stage] 
select "application-positionExternalId","application-candidateExternalId","application-stage", "dateAdded", current_timestamp as 'TIME_REJECTED'
    , JobType as POSITIONCANDIDATE_status
    , 3 as OFFER_draft_offer --used to move OFFERED to PLACED in VC [offer]
    , 2 as INVOICE_status --used to update invoice status in VC [invoice] as 'active'
    , 1 as INVOICE_renewal_index --default value in VC [invoice]
    , 1 as INVOICE_renewal_flow_status --used to update flow status in VC [invoice] as 'placement_active'
    , 1 as INVOICE_valid
from ja1
where rn = 1 --and [application-stage] = 'PLACED' --and [#Candidate Name] like '%Freeman%'

</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2208</xloc>
      <yloc>208</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>JOBAPP - offer personal info</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>offer_personal_info</table>
      <key>
        <name>VCOfferID</name>
        <field>offer_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>offer_id</name>
        <rename>VCOfferID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>last_name</name>
        <rename>c.first_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>first_name</name>
        <rename>c.last_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>male</name>
        <rename>c.male</rename>
        <update>Y</update>
      </value>
      <value>
        <name>email</name>
        <rename>c.email</rename>
        <update>Y</update>
      </value>
      <value>
        <name>date_of_birth</name>
        <rename>c.date_of_birth</rename>
        <update>Y</update>
      </value>
      <value>
        <name>notice_period</name>
        <rename>c.notice_period</rename>
        <update>Y</update>
      </value>
      <value>
        <name>current_location_id</name>
        <rename>c.current_location_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_company_id</name>
        <rename>company.client_company_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_company_name</name>
        <rename>company.client_company_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_contact_id</name>
        <rename>contact.client_contact_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_contact_name</name>
        <rename>contact.client_contact_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_department</name>
        <rename>contact.client_department</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3440</xloc>
      <yloc>192</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>JOBAPP 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>/*
'SHORTLISTED'then 102
'SENT'then 103
'FIRST_INTERVIEW'then 104
'SECOND_INTERVIEW'then 105
'THIRD_INTERVIEW'then 106
'FOURTH_INTERVIEW'then 107
'FIFTH_INTERVIEW'then 108
'LAST_INTERVIEW_ROUND' then 123
'OFFERED'then 200
'PLACED'then 300
'PLACEMENT_PERMANENT'then 301
'PLACEMENT_CONTRACT'then 302
'PLACEMENT_TEMP'then 303
'ONBOARDING'then 310
*/

with
  JPInfo as (
  	select JP.jobPostingID as JobID
  		, JP.title as JobTitle
              , case when JP.employmentType is null then 301
                     when JP.employmentType in ('Permanent','Opportunity') then 301
                     when JP.employmentType in ('Contract','Fixed Contract','Part-time') then 302
                     when JP.employmentType in ('Temporary','Temp to Perm') then 303
                     else null end as JobType
		, Cl.clientID as ContactID
		, Cl.userID as ClientUserID
		, UC.name as ContactName
		, UC.email as ContactEmail
		, CC.clientCorporationID as CompanyID
		, CC.name as CompanyName
	from bullhorn1.BH_JobPosting JP
	left join bullhorn1.BH_Client Cl on JP.clientUserID = Cl.userID
	left join bullhorn1.BH_UserContact UC on JP.clientUserID = UC.userID
	left join bullhorn1.BH_ClientCorporation CC on JP.clientCorporationID = CC.clientCorporationID
	where 1=1 and JP.title &lt;&gt; '' and (JP.isdeleted &lt;&gt; 1 and JP.status &lt;&gt; 'Archive')
)
--select * from JPInfo order by JobID


, ja0 as (
       select
                JR.jobPostingID as 'application-positionExternalId', JPI.JobType
               , JPI.CompanyID, JPI.CompanyName,  JPI.ContactID, JPI.ContactName, JPI.ContactEmail, JPI.JobID,  JPI.JobTitle, CAI.CandidateName as '#Candidate Name' --, JR.userID, JPI.ClientUserID, 
               , CAI.candidateID as 'application-candidateExternalId'
               --, convert(varchar(10),JR.dateAdded,120) as 'dateAdded'
, JR.dateAdded as 'dateAdded'
               , coalesce(nullif(case
when JR.status = 'Offer Extended' then 'OFFERED'
when JR.status = 'Offer Rejected' then 'OFFERED'-- > REJECTED'
                            else '' end, ''), '') as 'application-stage'  --, JR.status as '#Original-status' -- SHORTLISTED, SENT, FIRST_INTERVIEW, SECOND_INTERVIEW, OFFERED, PLACEMENT_PERMANENT, PLACEMENT_CONTRACT, PLACEMENT_TEMP, ONBOARDING.
        -- select count(*) --5995 -- select distinct JR.status -- select top 100 *
        from bullhorn1.BH_JobResponse JR
        left join ( select CA.userID as CandidateUserID, CA.candidateID, UC.userID, UC.name as CandidateName, UC.email as CandidateEmail from bullhorn1.BH_Candidate CA left join bullhorn1.BH_UserContact UC on CA.userID = UC.userID ) CAI on JR.userID = CAI.CandidateUserID
        left join JPInfo JPI on JR.jobPostingID = JPI.JobID
        where CAI.candidateID is not null 
)
--select top 2000 * from ja0
--where ( [application-positionExternalId] = 6744 and [application-candidateExternalId] = 64995) or ([application-positionExternalId] = 5343 and [application-candidateExternalId] = 193508)
--where CompanyName like 'Nuance%' or CompanyID = 6

, ja1 ("application-positionExternalId","application-candidateExternalId", JobType, "application-Stage","dateAdded", rn) as (
       SELECT 
              "application-positionExternalId"
              ,"application-candidateExternalId"
              , JobType
              ,"application-Stage"
              ,"dateAdded"
              , rn = ROW_NUMBER() OVER (PARTITION BY "application-positionExternalId","application-candidateExternalId"/*,"application-Stage" */
                     ORDER BY "application-positionExternalId" desc,
                            CASE [application-stage]
                            WHEN 'PLACEMENT_PERMANENT' THEN 1
                            WHEN 'OFFERED' THEN 2
                            WHEN 'SECOND_INTERVIEW' THEN 3
                            WHEN 'FIRST_INTERVIEW' THEN 4
                            WHEN 'SENT' THEN 5
                            WHEN 'SHORTLISTED' THEN 6
                            END asc )
       FROM ja0 
       left join (select jobPostingID from bullhorn1.BH_JobPosting where isdeleted &lt;&gt; 1 and status &lt;&gt; 'Archive') job on job.jobPostingID = ja0.[application-positionExternalId]
       left join (select candidateid from bullhorn1.Candidate where isdeleted &lt;&gt; 1 and status &lt;&gt; 'Archive') candidate on candidate.candidateid = ja0.[application-candidateExternalId]
       where "application-Stage" not like 'CANDIDATE%' and "application-Stage" &lt;&gt; '' and (job.jobPostingID is not null and candidate.candidateid is not null)
       )



--select [application-stage], count(*) from ja1 where rn = 1 group by [application-stage] 
select "application-positionExternalId","application-candidateExternalId","application-Stage", "dateAdded", current_timestamp as 'TIME_REJECTED'
    , JobType as POSITIONCANDIDATE_status


    , 3 as OFFER_draft_offer --used to move OFFERED to PLACED in VC [offer]
    , 2 as INVOICE_status --used to update invoice status in VC [invoice] as 'active'
    , 1 as INVOICE_renewal_index --default value in VC [invoice]
    , 1 as INVOICE_renewal_flow_status --used to update flow status in VC [invoice] as 'placement_active'
    , 1 as INVOICE_valid
, 3 as draft_offer --used to move OFFERED to PLACED in VC [offer]
, 2 as InvoiceStatus --used to update invoice status in VC [invoice] as 'active'
, 1 as renewal_index --default value in VC [invoice]
, 1 as renewal_flow_status
, -10 as Latest_user_id
, getdate() as Latest_update_date
, 0 as Tax_rate
, 'other' as Export_data_to
, 0 as Net_total
, 0 as Other_invoice_items_total
, 0 as Invoice_total
, 'pound' as currency_type
, 1 as 'compensation_period__period_type'
, 655 as 'offer_pay_charge__comp_setting_id'
, 3 as 'offer_pay_charge__tax_period_id'
--, statement.email as 'user_email' -->> Profit split - %
, 1 as 'profit_split_mode' -->> Profit split - %
from ja1
where rn = 1 --and [application-stage] = 'PLACED' --and [#Candidate Name] like '%Freeman%'

</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2215</xloc>
      <yloc>139</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>JOBAPP DETAIL (DO_NOT_REMOVE)</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>with
  JPInfo as (
  	select JP.jobPostingID as JobID
  		, JP.title as JobTitle
		, Cl.clientID as ContactID
		, Cl.userID as ClientUserID
		, UC.name as ContactName
		, UC.email as ContactEmail
		, CC.clientCorporationID as CompanyID
		, CC.name as CompanyName
	from bullhorn1.BH_JobPosting JP
	left join bullhorn1.BH_Client Cl on JP.clientUserID = Cl.userID
	left join bullhorn1.BH_UserContact UC on JP.clientUserID = UC.userID
	left join bullhorn1.BH_ClientCorporation CC on JP.clientCorporationID = CC.clientCorporationID
	where 1=1 and JP.title &lt;&gt; '' and (JP.isdeleted &lt;&gt; 1 and JP.status &lt;&gt; 'Archive')
	)
--select top 100 * from JPInfo order by JobID


select --top 200
         PL.jobPostingID as 'application-positionExternalId', pl.placementID
       --, JPI.CompanyID, JPI.CompanyName,  JPI.ContactID, JPI.ContactName, JPI.ContactEmail, JPI.JobID,  JPI.JobTitle, CAI.CandidateName as '#Candidate Name' --, JR.userID, JPI.ClientUserID,
       , CAI.candidateID as 'application-candidateExternalId'
       --, convert(varchar(10),PL.dateAdded,120) as 'dateAdded'
       --, 'OFFERED' as 'application-stage'
       , pl.clientBillRate as 'charge_rate (Contract Job)'
       , pl.dateAdded as [application-actionedDate] --as 'placed_date'
       , pl.dateBegin as 'start_date', DATEADD(year, 1, pl.dateBegin)  as 'to_date'
       , case 
       when pl.employmentType in ('Permanent') then 1
       when pl.employmentType in ('Contract','Fixed Contract') then 2
       when pl.employmentType in ('Temp to Perm') then 3
       when pl.employmentType in ('Temporary') then 4
       end as 'Job Type'
       , pl.fee as 'percentage_of_annual_salary' --'Quick Fee Forecast % (Permanent Job)'
       --, pl.flatFee as 'N/A (Auto Calculated)'
       , convert(float,pl.payRate) as 'pay_rate' --'Pay Rate (Contract Job)'
       , pl.salary as 'contract_rate_from -MinimumSalary'
       , case
              when pl.salaryUnit = 'Per Hour' then 1
              when pl.salaryUnit = 'Per Day' then 2
              --where pl.salaryUnit = 'Per Week' then 3
              --where pl.salaryUnit = 'Per Month' then 4
              end as 'Salary Unit'         
       , Stuff(--'EMAIL: ' + char(10)
               + Coalesce('Billing Contact: ' + NULLIF(convert(nvarchar(max), pl.billingUserID), '') + char(10), '') --as 'Contact External ID'
               + Coalesce('Comments: ' + NULLIF(convert(nvarchar(max), pl.comments), '') + char(10), '')
               + Coalesce('Send chocs?: ' + NULLIF(convert(nvarchar(max), pl.customText3), '') + char(10), '')
               + Coalesce('Approver: ' + NULLIF(convert(nvarchar(max), pl.customTextBlock1), '') + char(10), '')
               + Coalesce('Scheduled End Date: ' + NULLIF(convert(nvarchar(max), pl.dateEnd), '') + char(10), '')
               + Coalesce('Payment Type: ' + NULLIF(convert(nvarchar(max), pl.employeeType), '') + char(10), '')
               + Coalesce('Statement Contact: ' + NULLIF(convert(nvarchar(max), pl.statementUserID), '') + char(10), '') --as 'Contact External ID'
               + Coalesce('Status: ' + NULLIF(convert(nvarchar(max), pl.status), '') + char(10), '')
               + Coalesce('' + NULLIF(convert(nvarchar(max), pc.note), '') + char(10), '')
       , 1, 0, '') as 'PlacementNote'
, 3 as draft_offer --used to move OFFERED to PLACED in VC [offer]
, 2 as InvoiceStatus --used to update invoice status in VC [invoice] as 'active'
, 1 as renewal_index --default value in VC [invoice]
, 1 as renewal_flow_status
, -10 as Latest_user_id
, getdate() as Latest_update_date
, 0 as Tax_rate
, 'other' as Export_data_to
, 0 as Net_total
, 0 as Other_invoice_items_total
, 0 as Invoice_total
, 1 as use_quick_fee_forecast
, 'pound' as currency_type
, 1 as 'compensation_period__period_type'
, 655 as 'offer_pay_charge__comp_setting_id'
, 3 as 'offer_pay_charge__tax_period_id'
-- select count(*) --2086-- select top 100 *  -- pl.billingUserID, pl.statementUserID -- select distinct pl.employmentType
from bullhorn1.BH_Placement PL --where  pl.billingUserID &lt;&gt; pl.statementUserID
left join (
       select placementID,  STRING_AGG( note, char(10)) WITHIN GROUP (ORDER BY note) note
       from ( 
              select pc.placementID,
                      + Stuff(
                      + Coalesce('Split: ' + NULLIF(convert(nvarchar(max), pc.commissionPercentage), '') + char(10), '')--, pc.commissionPercentage as 'Split %'
                      + Coalesce('Date Added: ' + NULLIF(convert(nvarchar(max), pc.dateAdded), '') + char(10), '')--, pc.dateAdded as 'N/A'
                      + Coalesce('Fee Split: ' + NULLIF(convert(nvarchar(max), pc.flatPayout), '') + char(10), '')--, pc.flatPayout as 'Split Amount'
                      + Coalesce('% of Gross Margin: ' + NULLIF(convert(nvarchar(max), pc.grossMarginPercentage), '') + char(10), '')--, pc.grossMarginPercentage as 'Margin % (Auto Calculated)'
                      --+ Coalesce('Placement: ' + NULLIF(convert(nvarchar(max), pc.placement), '') + char(10), '')
                      + Coalesce('Role: ' + NULLIF(convert(nvarchar(max), pc.role), '') + char(10), '')
                      + Coalesce('Status: ' + NULLIF(convert(nvarchar(max), pc.status), '') + char(10), '')
                      + Coalesce('Recipient: ' + NULLIF(convert(nvarchar(max), uc.name), '') + char(10), '') --pc.userid
                      , 1, 0, '') as note
              -- select * 
              from bullhorn1.BH_Commission pc
              left join (select userID,name from bullhorn1.BH_UserContact) UC on UC.UserID = pc.userID  
              /*where pc.placementID = 3*/ ) t
       GROUP BY placementID
       ) pc on pc.placementID = pl.placementID
left join ( select CA.userID as CandidateUserID, CA.candidateID, UC.userID, UC.name as CandidateName, UC.email as CandidateEmail from bullhorn1.BH_Candidate CA left join bullhorn1.BH_UserContact UC on CA.userID = UC.userID where CA.isdeleted &lt;&gt; 1 and CA.status &lt;&gt; 'Archive') CAI on PL.userID = CAI.CandidateUserID 
left join JPInfo JPI on PL.jobPostingID = JPI.JobID
where JPI.JobID is not null and CAI.CandidateUserID is not null
--and JPI.JobID in (4529)</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2208</xloc>
      <yloc>272</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>JOBAPP DETAIL - offer personal info</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>offer_personal_info</table>
      <key>
        <name>VCOfferID</name>
        <field>offer_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>offer_id</name>
        <rename>VCOfferID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>last_name</name>
        <rename>c.last_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>first_name</name>
        <rename>c.first_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>email</name>
        <rename>c.email</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_company_id</name>
        <rename>pd.company_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_company_name</name>
        <rename>com.client_company_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_contact_id</name>
        <rename>pd.client_contact_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_contact_name</name>
        <rename>client_contact_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_department</name>
        <rename>client_department</rename>
        <update>Y</update>
      </value>
      <value>
        <name>note</name>
        <rename>PlacementNote</rename>
        <update>Y</update>
      </value>
      <value>
        <name>tax_rate</name>
        <rename>Tax_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>export_data_to</name>
        <rename>Export_data_to</rename>
        <update>Y</update>
      </value>
      <value>
        <name>net_total</name>
        <rename>Net_total</rename>
        <update>Y</update>
      </value>
      <value>
        <name>other_invoice_items_total</name>
        <rename>Other_invoice_items_total</rename>
        <update>Y</update>
      </value>
      <value>
        <name>invoice_total</name>
        <rename>Invoice_total</rename>
        <update>Y</update>
      </value>
      <value>
        <name>start_date</name>
        <rename>StartDate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>placed_date</name>
        <rename>OfferDate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>offer_date</name>
        <rename>OfferDate</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3440</xloc>
      <yloc>288</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>JOBAPP DETAIL - offer personal info 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>offer_personal_info</table>
      <key>
        <name>VCOfferID</name>
        <field>offer_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>offer_id</name>
        <rename>VCOfferID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>last_name</name>
        <rename>c.last_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>first_name</name>
        <rename>c.first_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>email</name>
        <rename>c.email</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_company_id</name>
        <rename>pd.company_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_company_name</name>
        <rename>company.client_company_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_contact_id</name>
        <rename>pd.client_contact_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_contact_name</name>
        <rename>contact.client_contact_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_department</name>
        <rename>contact.client_department</rename>
        <update>Y</update>
      </value>
      <value>
        <name>export_data_to</name>
        <rename>Export_data_to</rename>
        <update>Y</update>
      </value>
      <value>
        <name>net_total</name>
        <rename>Net_total</rename>
        <update>Y</update>
      </value>
      <value>
        <name>other_invoice_items_total</name>
        <rename>Other_invoice_items_total</rename>
        <update>Y</update>
      </value>
      <value>
        <name>invoice_total</name>
        <rename>Invoice_total</rename>
        <update>Y</update>
      </value>
      <value>
        <name>start_date</name>
        <rename>start_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>placed_date</name>
        <rename>start_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>offer_date</name>
        <rename>start_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>end_date</name>
        <rename>dateend</rename>
        <update>Y</update>
      </value>
      <value>
        <name>tax_rate</name>
        <rename>Tax_rate</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3344</xloc>
      <yloc>288</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>JOBAPP DETAIL - offer personal info 2 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>offer_personal_info</table>
      <key>
        <name>VCOfferID</name>
        <field>offer_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>offer_id</name>
        <rename>VCOfferID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>last_name</name>
        <rename>c.last_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>first_name</name>
        <rename>c.first_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>email</name>
        <rename>c.email</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_company_id</name>
        <rename>pd.company_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_company_name</name>
        <rename>company.client_company_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_contact_id</name>
        <rename>pd.client_contact_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_contact_name</name>
        <rename>contact.client_contact_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_department</name>
        <rename>contact.client_department</rename>
        <update>Y</update>
      </value>
      <value>
        <name>other_invoice_items_total</name>
        <rename>Other_invoice_items_total</rename>
        <update>Y</update>
      </value>
      <value>
        <name>invoice_total</name>
        <rename>Invoice_total</rename>
        <update>Y</update>
      </value>
      <value>
        <name>start_date</name>
        <rename>start_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>placed_date</name>
        <rename>start_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>offer_date</name>
        <rename>start_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>end_date</name>
        <rename>dateend</rename>
        <update>Y</update>
      </value>
      <value>
        <name>tax_rate</name>
        <rename>Tax_rate</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3254</xloc>
      <yloc>369</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>JOBAPP DETAIL - offer personal info 2 3</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>offer_personal_info</table>
      <key>
        <name>VCOfferID</name>
        <field>offer_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>offer_id</name>
        <rename>VCOfferID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>last_name</name>
        <rename>c.last_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>first_name</name>
        <rename>c.first_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>email</name>
        <rename>c.email</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_company_id</name>
        <rename>pd.company_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_company_name</name>
        <rename>company.client_company_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_contact_id</name>
        <rename>pd.client_contact_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_contact_name</name>
        <rename>contact.client_contact_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_department</name>
        <rename>contact.client_department</rename>
        <update>Y</update>
      </value>
      <value>
        <name>export_data_to</name>
        <rename>Export_data_to</rename>
        <update>Y</update>
      </value>
      <value>
        <name>net_total</name>
        <rename>Net_total</rename>
        <update>Y</update>
      </value>
      <value>
        <name>other_invoice_items_total</name>
        <rename>Other_invoice_items_total</rename>
        <update>Y</update>
      </value>
      <value>
        <name>invoice_total</name>
        <rename>Invoice_total</rename>
        <update>Y</update>
      </value>
      <value>
        <name>start_date</name>
        <rename>dateAdded</rename>
        <update>Y</update>
      </value>
      <value>
        <name>placed_date</name>
        <rename>dateAdded</rename>
        <update>Y</update>
      </value>
      <value>
        <name>offer_date</name>
        <rename>dateAdded</rename>
        <update>Y</update>
      </value>
      <value>
        <name>tax_rate</name>
        <rename>Tax_rate</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3200</xloc>
      <yloc>320</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Job - FromSalary - ToSalary</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select
         a.jobPostingID as 'position-externalId'
	, a.salary as 'FromSalary'
	, convert(int,a.customfloat1) as 'ToSalary'
       , a.feeArrangement * 100 as 'Quick Fee Forecast %'
, 1 as 'use_quick_fee_forecast'
from bullhorn1.BH_JobPosting a</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1088</xloc>
      <yloc>608</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Job - Type - Fee - FromSalary - ToSalary</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select 
         j.id as "position-externalid"
--       , case when job.rn > 1 then concat(job.title,' ',rn) else job.title end as "position-title"

       , case when rt.name is null then 1 --'PERMANENT'
              when rt.name in ('Perm') then 1 --'PERMANENT'
              when rt.name in ('Contract do not use','Fixed Term Contract','Temp','Temp-to-Perm') then 2 --'CONTRACT'
              when rt.name in ('Closed') and j.ts2_date_filled_c is null then 1 --'PERMANENT'
              when rt.name in ('Closed') and j.ts2_date_filled_c is not null then 2 --'CONTRACT'
              end as "position-type" --**

--, substring( replace(j.ts2_min_salary_c,'0E-7','') from '([^\.]*)')::int as "Annual Salary From" --**
, substring( replace(j.ts2_max_salary_c,'0E-7','') from '([^\.]*)')::int as "Annual Salary To" --**

	, j.ts2_fee_pct_c::float8 as "Quick Fee Forecast" --**
	, 1 as "use_quick_fee_forecast"

-- select count(*) --62075-- select distinct rt.name --ts2_status_c --currencyisocode --recordtypeid --isdeleted -- select *
from ts2_job_c j
left join (select left(id,15) as id, name from recordtype) rt on rt.id = j.recordtypeid

--where replace(j.ts2_min_salary_c,'0E-7','') is not null and replace(j.ts2_min_salary_c,'0E-7','') &lt;&gt; ''
where replace(j.ts2_max_salary_c,'0E-7','') is not null and replace(j.ts2_max_salary_c,'0E-7','') &lt;&gt; ''

</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1088</xloc>
      <yloc>528</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Job - contract_rate  FROM/TO</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select concat('NJFS',intJobId) as JobExternalId, decBasicMinSalary as PayRateFrom, decBasicMaxSalary as PayRateTo
from dJob 
where tintJobType = 2</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>Y</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1088</xloc>
      <yloc>688</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Job FE</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection/>
    <sql>
-- JOB
with t as (
        -- select count(*)
        -- select distinct al.ATTDESCRIPTION
        select c.UniqueID, al.ATTDESCRIPTION as fe
        from vacancies c
        left join attributeslink al on al.ATTOBJECTUNIQ = c.UniqueID 
        where c.UniqueID is not null and al.ATTOBJECTTYPE = 'VAC'
        )
select UniqueID --, RoleDescription
        , case fe
When '.Net' then 4073
When '.Net 2.0' then 4074
When '.Net 3.0' then 3688
When '.Net 3.5' then 4075
When '.Net 4.0' then 3699
When '.Net mobile' then 3701
When '1st Line' then 3689
When '2G' then 3700
When '2nd Line' then 3827
When '3G' then 3828
When '3rd Line' then 3829
When 'Ab Initio' then 3702
When 'Aberdeen' then 4076
When 'Access' then 3690
When 'Account Manager' then 3830
When 'Accounting &amp; Finance' then 3093
When 'Actionscript 2.0' then 3831
When 'Actionscript 3.0' then 4077
When 'Active Directory' then 3832
When 'Actuate' then 3691
When 'ADA' then 3833
When 'ADF' then 3834
When 'ADO.Net' then 4078
When 'Adobe Flash' then 3835
When 'Adobe Flex' then 3973
When 'Agile' then 3692
When 'Agresso' then 3836
When 'AIX' then 3693
When 'AJAX' then 4079
When 'Alteryx' then 3974
When 'Analogue' then 3837
When 'Android' then 3975
When 'Apple' then 3694
When 'Application Support' then 3838
When 'Architect' then 3695
When 'Arcplan' then 3696
When 'AS400' then 3697
When 'ASP.Net' then 3839
When 'Automated Testing' then 3698
When 'Automotive / Automotive Parts' then 3094
When 'AV' then 3703
When 'Azure' then 3704
When 'Baan' then 4080
When 'Back Up' then 3976
When 'Banking &amp; Finance' then 3095
When 'Bash' then 4081
When 'Benjaporn' then 3840
When 'BI Consultant' then 3841
When 'Birst' then 3842
When 'Biz Dev' then 3843
When 'Blackberry' then 3705
When 'Board International' then 4082
When 'Borders' then 3844
When 'Bsm' then 3706
When 'Bus. Intelligence' then 3845
When 'Business Analyst' then 3977
When 'Business Development / Sales' then 3707
When 'Business Intelligence' then 3708
When 'Business Objects' then 3846
When 'C' then 3978
When 'C#' then 3979
When 'C++' then 4083
When 'CakePHP' then 3980
When 'Call Centre' then 3709
When 'Cantonese' then 3981
When 'CAT5' then 3847
When 'CAT6' then 4084
When 'CCA' then 3848
When 'CCDP' then 3849
When 'CCEE' then 4085
When 'CCI' then 3850
When 'CCIA' then 3982
When 'CCIE' then 3983
When 'CCNA' then 3710
When 'CCNP' then 3984
When 'CCSP' then 3711
When 'CEO' then 3712
When 'Chaiwat' then 4086
When 'Change' then 4087
When 'Change Analyst' then 3851
When 'Change Manager' then 3713
When 'Chemical / Material' then 3096
When 'Chief Financial Officer' then 3852
When 'Chief Operations Officer' then 3714
When 'Chief Technical Officer' then 4088
When 'CIO' then 3715
When 'CIO / CTO' then 3985
When 'Cisco' then 3986
When 'Cisco (Gen)' then 4089
When 'CISM' then 3853
When 'CISSP' then 3987
When 'Citirx (Gen)' then 3716
When 'Citrix' then 4090
When 'Classic ASP' then 3717
When 'Clojure' then 3988
When 'Cloud' then 3718
When 'CMOS' then 3989
When 'CMS (Gen)' then 3719
When 'Cobol' then 4091
When 'Cognos' then 3854
When 'Coins' then 4092
When 'ColdFusion' then 3855
When 'Construction' then 3990
When 'Council' then 3991
When 'CRM' then 3992
When 'Crystal Reports' then 3720
When 'CS Core' then 3856
When 'CSS' then 3857
When 'CSS3' then 4093
When 'Cucumber' then 4094
When 'Data Science' then 3993
When 'Database Adminstrator' then 3858
When 'Database Developer' then 3994
When 'Database Specialist' then 3859
When 'Databases' then 4095
When 'DataCentre' then 3995
When 'Datastage' then 3721
When 'Datawarehouse' then 4096
When 'DB2' then 4097
When 'Delphi' then 4098
When 'Developer' then 3860
When 'Developer/Programmer' then 4099
When 'Development' then 3722
When 'Development Manager' then 3861
When 'DHTML' then 3723
When 'DHTMLX' then 3862
When 'Digital' then 3996
When 'Director' then 3997
When 'DirectX' then 3724
When 'Discoverer' then 4100
When 'Django' then 3725
When 'Document Controller' then 4101
When 'DOJO' then 4102
When 'Dplyr' then 4103
When 'Drupal' then 3726
When 'Dundee' then 3863
When 'Dynamics' then 3864
When 'Dynamics (Gen)' then 3727
When 'Dynamics Ax' then 3998
When 'Dynamics Crm' then 3728
When 'Dynamics Gp' then 3999
When 'Dynamics Nav' then 3729
When 'Dynamics Sl' then 3730
When 'Dynatrace' then 4000
When 'Eclipse' then 3865
When 'Edinburgh' then 3731
When 'efacs' then 4001
When 'EJB' then 3732
When 'Elastic Search' then 3866
When 'Embedded C' then 4104
When 'Embedded C++' then 3733
When 'Engineering' then 3097
When 'Epicor' then 3734
When 'Ericsson' then 3867
When 'ERP' then 4105
When 'ERP Consultant' then 3735
When 'Essbase' then 4002
When 'ETL' then 3736
When 'Excel' then 4003
When 'Exchange' then 3868
When 'Executive Management' then 3098
When 'EXTGWT' then 3737
When 'EXTJS' then 4004
When 'F#' then 3738
When 'Fedora' then 4106
When 'Fife' then 4107
When 'Financial Director' then 4108
When 'Firewall' then 4005
When 'FMCG' then 3869
When 'FMEA' then 4109
When 'Forms' then 4006
When 'Fortran' then 4007
When 'French' then 3870
When 'Front End Web' then 3739
When 'Functional Testing' then 4008
When 'Games Developer' then 3871
When 'German' then 4110
When 'GIS' then 4111
When 'Glasgow' then 3740
When 'Glovia' then 4009
When 'Gnu' then 3741
When 'Government' then 4010
When 'Group Policy' then 4112
When 'Groupwise' then 4011
When 'Hadoop' then 3872
When 'Handheld' then 3742
When 'HAZOP' then 4113
When 'Helpdesk Manager' then 3743
When 'Hibernate' then 4012
When 'HP-UX' then 4115
When 'HPUX' then 4114
When 'HR' then 4116
When 'HR, GA &amp; Facilities' then 3099
When 'HSE' then 3744
When 'HTML' then 4013
When 'HTML5' then 4117
When 'Human Resource(sample only)' then 2981
When 'Hyperion' then 4118
When 'IBM' then 4014
When 'IFS' then 4119
When 'IIS' then 3745
When 'Industrial Equipment / Plant / Parts' then 3101
When 'Infor' then 4015
When 'Informatica' then 3873
When 'Infrastructure' then 3874
When 'Infrastructure Manager' then 3875
When 'Infrastructure Project Manager' then 3876
When 'Ingress' then 3746
When 'Interest In Big Data' then 3877
When 'iPhone' then 3878
When 'Ipython' then 4016
When 'ISO20071' then 3879
When 'IT &amp; Telecoms' then 3100
When 'IT Director' then 3880
When 'IT Manager' then 4017
When 'Italian' then 3747
When 'Iterative' then 4120
When 'ITIL' then 3748
When 'J2EE' then 3881
When 'J2ME' then 3882
When 'J2SE' then 3749
When 'Jaspersoft' then 3750
When 'Java' then 3883
When 'JavaScript' then 3751
When 'JBoss' then 3884
When 'Jd Edwards E1' then 4018
When 'JD Edwards World' then 4019
When 'JDBC' then 3752
When 'JDeveloper' then 4121
When 'Jidapa' then 3753
When 'Joomla' then 3754
When 'jQuery' then 3885
When 'JSF' then 4122
When 'JSP' then 4020
When 'JSPHP' then 3886
When 'JUnit' then 4123
When 'JWT' then 3755
When 'Jython' then 4124
When 'Kernel' then 3756
When 'Kimball' then 3757
When 'Knitr' then 3887
When 'Korn Shell' then 3758
When 'Lamp' then 3759
When 'LAN' then 4125
When 'Languages' then 4021
When 'Lean/6 Sigma' then 4126
When 'Legal' then 3102
When 'LINQ' then 4022
When 'Linux' then 3888
When 'Load testing' then 3889
When 'LoadRunner' then 3760
When 'Logistics' then 3890
When 'Lotus' then 3891
When 'Lotus Domino' then 3892
When 'LTE' then 4023
When 'Lync' then 3893
When 'Magento' then 3894
When 'Mahout' then 4024
When 'MAN' then 3895
When 'Manager' then 3761
When 'Managing Director' then 3896
When 'Mandarin' then 3897
When 'Manual Testing' then 3762
When 'Manufacturing' then 3898
When 'Mapics' then 3763
When 'Masters  Level' then 3899
When 'Matlab' then 3764
When 'Maven' then 4025
When 'Maximo' then 3900
When 'mba' then 3765
When 'MCDBA' then 4026
When 'Mcdoogs' then 3901
When 'MCITP' then 3902
When 'MCP' then 3903
When 'MCPD' then 3904
When 'MCSE' then 3905
When 'MCTP' then 3906
When 'MCTS' then 4027
When 'Medical Device / Diagnostics / Analytical' then 3103
When 'Mercury' then 3766
When 'Microsoft' then 4028
When 'Microsoft &amp; SQL Server' then 3907
When 'Microsoft BI' then 4127
When 'Microsoft Partner' then 3908
When 'Microstrategy' then 3909
When 'Microwave' then 3910
When 'Mobile' then 3911
When 'Mobile Development' then 4128
When 'Monitoring' then 4129
When 'MooTools' then 4130
When 'Movex' then 4131
When 'MRP' then 4029
When 'Ms Bi Developer' then 4030
When 'Mura' then 3912
When 'Music' then 2982
When 'MVC' then 4132
When 'MySQL' then 4031
When 'NetAct' then 4133
When 'NetBeans' then 3913
When 'Netezza' then 3767
When 'NetScaler' then 4134
When 'Netsuite' then 3914
When 'Netware' then 3768
When 'Network Engineer' then 4032
When 'Network Manager' then 4033
When 'Networking' then 4135
When 'nHibernate' then 4034
When 'NHS' then 3769
When 'Nosql' then 3770
When 'Novell (Gen)' then 3771
When 'NSN' then 4136
When 'OBIEE' then 3915
When 'Ods' then 4035
When 'Oil And Gas' then 4137
When 'Olap' then 4138
When 'Oltp' then 3916
When 'OO' then 4139
When 'OpenSUSE' then 4036
When 'Operations Manager' then 4037
When 'Oracle' then 4038
When 'Oracle 10g' then 4140
When 'Oracle 11g' then 4141
When 'Oracle 11gR2' then 4142
When 'Oracle 8i' then 3772
When 'Oracle 9i' then 3773
When 'Oracle Application Server' then 3774
When 'Oracle BI' then 3917
When 'Oracle Collaboration' then 3918
When 'Oracle Crm' then 3919
When 'Oracle DataGuard' then 3920
When 'Oracle Designer' then 3775
When 'Oracle Dev (Gen)' then 4143
When 'Oracle ERP' then 3921
When 'Oracle Flashback' then 4144
When 'Oracle Lite' then 3922
When 'Oracle OCA' then 4145
When 'Oracle OCP' then 3923
When 'Oracle OEM' then 4039
When 'Oracle RAC' then 3924
When 'Oracle RMAN' then 3925
When 'OSS' then 4040
When 'Outlook' then 3926
When 'OWB' then 3927
When 'Panda' then 4041
When 'Panorama' then 4146
When 'Pascal' then 3776
When 'Pegasus' then 3777
When 'Pentaho' then 3778
When 'PeopleSoft' then 3928
When 'Performance Point' then 3929
When 'Performance Testing' then 4147
When 'Perl' then 4148
When 'Perth' then 4149
When 'Pharawi' then 3930
When 'Pharma' then 4150
When 'Pharmaceutical / CRO / Reagents / Personal Care' then 3104
When 'PHD Level' then 3931
When 'PHP' then 3779
When 'PHP (General)' then 4151
When 'PHP5' then 3780
When 'PL/SQL' then 3932
When 'PMO' then 4152
When 'Prairie' then 4153
When 'Process Safety' then 3781
When 'Procurement' then 3933
When 'Product Manager' then 4042
When 'Prognoz' then 3782
When 'Programme Manager' then 4154
When 'Progress' then 3934
When 'Project Manager' then 3783
When 'PS Core' then 4155
When 'Publisher' then 3935
When 'Python' then 3784
When 'QA' then 3785
When 'Qlikview' then 4156
When 'QTP' then 3936
When 'RAD' then 3786
When 'Radio' then 3787
When 'RCN' then 3937
When 'Real Estate &amp; Insurance' then 3105
When 'RedHat' then 3788
When 'Regression Testing' then 4043
When 'Reports' then 3938
When 'Retail' then 4157
When 'RF' then 3939
When 'Ruby' then 3789
When 'Ruby on Rails' then 4158
When 'RUP' then 3790
When 'Russian' then 3940
When 'Sage' then 3791
When 'Sales &amp; Marketing' then 3106
When 'Salesforce' then 4159
When 'Salient' then 4044
When 'Samba' then 4160
When 'SAP' then 3792
When 'SAP ABAP' then 3793
When 'SAP BI' then 4161
When 'Sap Crm' then 4045
When 'SAP CRM (Gen)' then 4046
When 'SAP CRM Interaction Centre' then 4162
When 'SAP CRM Marketing' then 3941
When 'SAP CRM Web' then 3794
When 'SAP FICO' then 3795
When 'SAP Financials' then 4163
When 'SAP HR' then 4047
When 'SAP MM' then 3942
When 'SAP PP' then 3943
When 'SAP QM' then 3944
When 'SAS' then 3796
When 'SBS' then 4164
When 'Scala' then 4165
When 'SCCM' then 3945
When 'Script.aculo.us' then 4048
When 'Scrum' then 3946
When 'Security Testing' then 4049
When 'Selenium' then 4050
When 'Semiconductor / Embedded Device' then 3107
When 'Server Engineer' then 4051
When 'Server Support' then 3947
When 'Service Delivery Manager' then 4166
When 'Servlets' then 3948
When 'Sharepoint' then 3797
When 'Shell Script' then 3949
When 'Siebel' then 4167
When 'Siebel BI' then 4168
When 'Silverlight' then 4169
When 'SiteCore' then 3798
When 'Sittikarn' then 4052
When 'Software' then 3950
When 'Software Developer' then 3951
When 'Software Project Manager' then 3952
When 'Solaris' then 3799
When 'Spanish' then 3953
When 'Spring' then 4170
When 'SQL' then 4171
When 'SQL Server' then 3800
When 'SQL Server 2000' then 3954
When 'SQL Server 2005' then 3801
When 'SQL Server 2008' then 4053
When 'SQL Server 2012' then 4054
When 'SQL Server 2014' then 4055
When 'SQL Server Compact' then 4172
When 'SSAS' then 4173
When 'SSIS' then 3802
When 'SSRS' then 4056
When 'Stirling' then 4174
When 'Storage' then 4057
When 'Struts' then 4058
When 'Sugar' then 4175
When 'Sun Accounts' then 3955
When 'Sun Certified' then 3803
When 'Supply Chain Management' then 3108
When 'Swing' then 3804
When 'Sybase' then 3805
When 'Symfony' then 3806
When 'Syspro' then 4059
When 'Systems Analyst' then 3807
When 'Systems Testing' then 4176
When 'T-SQL' then 4181
When 'Tableau' then 4060
When 'Tapestry' then 3956
When 'Targit' then 4061
When 'TCP/IP' then 3957
When 'Team Leader' then 3808
When 'Technical Consultancy' then 3809
When 'Test Director' then 4062
When 'Test Manager' then 4177
When 'Tester' then 4178
When 'Testing' then 3810
When 'TETRA Telecoms' then 3811
When 'TFS' then 4179
When 'Third Sector' then 3812
When 'Tibco' then 4180
When 'Tomcat' then 3958
When 'Traffic' then 4063
When 'Trainer' then 4064
When 'UAT' then 4182
When 'UI' then 3959
When 'UMTS' then 4065
When 'Unit Testing' then 4183
When 'Unix (Gen)' then 3960
When 'Unix Dev (Gen)' then 4184
When 'UNIX/LINUX' then 4185
When 'Utilities' then 4186
When 'UTRAN' then 3813
When 'UX' then 4066
When 'VB.Net' then 4067
When 'VBA' then 3961
When 'Verilog' then 3962
When 'Virtualisation' then 3814
When 'Visual Basic' then 3963
When 'VMODEL' then 4187
When 'Voice' then 3815
When 'VPN' then 3964
When 'W3C' then 3816
When 'Wamp' then 3817
When 'WAN' then 4068
When 'Waterfall' then 3965
When 'WCF' then 4188
When 'Web Designer' then 3818
When 'WF' then 3819
When 'WIFI' then 3966
When 'WiMAX' then 3967
When 'Windows Desktop' then 4189
When 'Windows Server' then 3820
When 'WLAN' then 3821
When 'WordPress' then 3968
When 'WPF' then 3822
When 'Xamarin' then 3823
When 'XAML' then 3969
When 'XenApp' then 4190
When 'Xendesktop' then 3824
When 'XenServer' then 4069
When 'XHTML' then 4070
When 'XML' then 3825
When 'XPATH' then 3826
When 'XQuery' then 4071
When 'XSL' then 3970
When 'XSLT' then 4072
When 'Yellowfin' then 4191
When 'YUI' then 3971
When 'Zend' then 3972
else '' end fe
from t
--where UniqueID = '129'</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1088</xloc>
      <yloc>1008</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Job lookup</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>application-positionExternalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCJobID</rename>
        <default/>
        <type>Integer</type>
      </value>
      <value>
        <name>company_id</name>
        <rename>pd.company_id</rename>
        <default/>
        <type>Integer</type>
      </value>
      <value>
        <name>contact_id</name>
        <rename>pd.client_contact_id</rename>
        <default/>
        <type>Integer</type>
      </value>
      <value>
        <name>position_type</name>
        <rename>pd.position_type</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>currency_type</name>
        <rename>pd.currency_type</rename>
        <default/>
        <type>String</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2512</xloc>
      <yloc>240</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Job lookup 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>job_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCJobID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2560</xloc>
      <yloc>544</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Job lookup 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>job_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCJobID</rename>
        <default/>
        <type>Integer</type>
      </value>
      <value>
        <name>company_id</name>
        <rename>pd.company_id</rename>
        <default/>
        <type>Integer</type>
      </value>
      <value>
        <name>contact_id</name>
        <rename>pd.client_contact_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2640</xloc>
      <yloc>1760</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Job lookup 2 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>job_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCJobID</rename>
        <default/>
        <type>Integer</type>
      </value>
      <value>
        <name>company_id</name>
        <rename>pd.company_id</rename>
        <default/>
        <type>Integer</type>
      </value>
      <value>
        <name>contact_id</name>
        <rename>pd.client_contact_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2640</xloc>
      <yloc>2480</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Job lookup 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>job_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCJobID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2592</xloc>
      <yloc>1024</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>JobApp Config Stage</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection/>
    <sql>with 
JobApp as (
--FROM Shortlist
	select shortlist_id, can_id, s.vac_id
	, case when ltrim(rtrim(movement)) in ('Awaiting Resume','Interview','Candidate Interested','Call','Shortlisted','Direct Applicants') then 1 --SHORTLISTED
		when ltrim(rtrim(movement)) in ('Rejected - Client','CV Sent') then 2 --SENT
		when ltrim(rtrim(movement)) in ('1st Client Interview') then 3 --FIRST_INTERVIEW
		when ltrim(rtrim(movement)) in ('3rd Client Interview','2nd Client Interview') then 4 --SECOND_INTERVIEW
		when ltrim(rtrim(movement)) in ('Offer') then 5 --OFFERED
		when ltrim(rtrim(movement)) in ('Placed') then 6 --PLACED
		else 0 end as Appstage
	, case when ltrim(rtrim(movement)) in ('Shortlisted') then NULL
		when ltrim(rtrim(movement)) in ('Interview') then 'Parker Bridge INTERVIEW'
		else ltrim(rtrim(movement)) end as Substatus --custom mapping for SubStatus
	, case when (timestamp is NULL or timestamp = '') and release_date is not NULL then convert(nvarchar(10),release_date,120)
		when (timestamp is NULL or timestamp = '') and (release_date is NULL or release_date = '') then convert(nvarchar(10),v.vac_timestamp,120)
		else convert(nvarchar(10),timestamp,120) end as timestamp
	from vacancies.Shortlist s
	left join (select distinct vac_id, vac_timestamp from vacancies.Vacancies) v on s.vac_id = v.vac_id --to get job created date for timestamp overwritten
	where s.can_id > 0 and s.vac_id > 0 --470705

UNION ALL
-- FROM ShortlistTracking
	select st.shortlist_id, s.can_id, s.vac_id
	, case when ltrim(rtrim(st.mov_id)) in ('Awaiting Resume','Call','Direct Applicants','Interview','Shortlisted') then 1
		when ltrim(rtrim(st.mov_id)) in ('Rejected - Client','CV Sent') then 2
		when ltrim(rtrim(st.mov_id)) in ('1st Client Interview') then 3
		when ltrim(rtrim(st.mov_id)) in ('3rd Client Interview','2nd Client Interview') then 4
		when ltrim(rtrim(st.mov_id)) in ('Offer') then 5
		when ltrim(rtrim(st.mov_id)) in ('Placed') then 6
		else 0 end as Appstage
	, case when ltrim(rtrim(st.mov_id)) in ('Shortlisted') then NULL
		when ltrim(rtrim(st.mov_id)) in ('Interview') then 'Parker Bridge INTERVIEW'
		else ltrim(rtrim(st.mov_id)) end as Substatus --custom mapping for SubStatus
	, case when st.timestamp is NULL then convert(nvarchar(10),v.vac_timestamp,120)
		else convert(nvarchar(10),st.timestamp,120) end as timestamp
	from vacancies.ShortlistTracking st
	left join vacancies.Shortlist s on s.shortlist_id = st.shortlist_id --484255
	left join vacancies.Vacancies v on s.vac_id = v.vac_id --to get job created date for timestamp overwritten

UNION ALL

--FROM PLACEMENT
	select s.shortlist_id, p.can_id, p.vac_id
	, 6 as Appstage --PLACED
	, case when ltrim(rtrim(p.pl_status)) in ('Paid') then 'INVOICED'
		else NULL end as Substatus
	, case when p.pl_added_on is NULL or p.pl_added_on = '' then convert(nvarchar(10),p.pl_date_start,120) --THIS MAY CAUSE AN ISSUE IN PROD, because the associated date in the future date
	else convert(nvarchar(10),p.pl_added_on,120) end as timestamp
	from placements.Placements p
	left join vacancies.Shortlist s on p.can_id = s.can_id and p.vac_id = s.vac_id
	where p.can_id > 0 and p.vac_id > 0
	)

--HIGHEST STAGE FROM ALL TABLES
, HighestStage as (
	select shortlist_id
	, can_id
	, vac_id
	, Appstage
	, Substatus
	, timestamp
	--, row_number() over(partition by can_id, vac_id order by timestamp desc, Appstage desc, shortlist_id desc) as rn --get the latest update
	, row_number() over(partition by can_id, vac_id order by Appstage desc, timestamp desc, shortlist_id desc) as rn --get highest stage instead
	from JobApp
	where Appstage > 0 --895404
	)

/* CLARIFICATION
select * from HighestStage
where vac_id = 1086669 and can_id = 5078051
*/

select s.shortlist_id
	, concat('PBTH',s.can_id) as CandidateExtID
	, concat('PBTH',s.vac_id) as JobExtID
	, case
		when s.Appstage = 6 then 'PLACEMENT_PERMANENT'
		when s.Appstage = 5 then 'OFFERED'
		when s.Appstage = 4 then 'SECOND_INTERVIEW'
		when s.Appstage = 3 then 'FIRST_INTERVIEW'
		when s.Appstage = 2 then 'SENT'
		when s.Appstage = 1 then 'SHORTLISTED'
		end as 'Originalstage'
	, case 
		when s.Appstage = 6 then 'OFFERED' --to be updated as PLACED afterward
		when s.Appstage = 5 then 'OFFERED'
		when s.Appstage = 4 then 'SECOND_INTERVIEW'
		when s.Appstage = 3 then 'FIRST_INTERVIEW'
		when s.Appstage = 2 then 'SENT'
		when s.Appstage = 1 then 'SHORTLISTED'
		end as [application-stage]
	, s.Substatus
	, s.timestamp as [application-actionedDate]
	, case when s.Substatus in ('Rejected - Client') then s.timestamp
	else NULL end as RejectedDate
from HighestStage s
left join vacancies.Vacancies v on v.vac_id = s.vac_id
where rn = 1 --25051
and s.Substatus is not NULL --9356 rows
--and s.Appstage = 6 --775
--and s.Appstage >= 5 --894</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2240</xloc>
      <yloc>880</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>JobApp Contract placement</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>/*
--CREATE TEMP TABLE FOR IMPORTED JOB APP
select *
into imported_job_app
from ja1
*/

--MAIN SCRIPT
with jobs as (
				select j.id as job_id
				, j.ts2_recruiter_c
				, u1.email
				from ts2_job_c j
				left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u1 on u1.id = j.ts2_recruiter_c
				UNION 
				select j.id as job_id
				, j.ts2_secondary_recruiter_c
				, u2.email
				from ts2_job_c j
				left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u2 on u2.id = j.ts2_secondary_recruiter_c
				UNION 
				select j.id as job_id
				, j.additional_recruiter_c
				, u3.email
				from ts2_job_c j
				left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u3 on u3.id = j.additional_recruiter_c 
			)
			
, jobshare as (select job_id, count(email) as share_count
				from jobs
				where email is not NULL
				--and job_id = 'a0K0Y000005P9ciUAC'
				group by job_id
			)
						
, contract as (select ija.*
		, p.id
		, p.name
		, case when p.ts2_start_date_c is NULL then ija.createddate::timestamp
			else p.ts2_start_date_c::timestamp end as start_date
		, ts2_end_date_c
		, case when p.ts2_end_date_c is NULL then ija.createddate::timestamp + interval '1 year'
			else p.ts2_end_date_c::timestamp end as end_date
		, case when jobtype = 301 then 1
			when jobtype = 302 then 2
			else NULL end as position_type
		, case when lower(p.currencyisocode) is NULL then 'pound' --used in offered
					when lower(p.currencyisocode) = 'gbp' then 'pound'
					else lower(p.currencyisocode) end as currency_type
		, case when p.ts2_bill_rate_c is NULL then 0
				else p.ts2_bill_rate_c::float end as charge_rate
		, case when p.ts2_pay_rate_c is NULL then 0
				else p.ts2_pay_rate_c::float end as pay_rate
		, 1 as pay_calculation_type
		, 'chargeRate' as charge_rate_type --profit | margin | markup | chargeRate
		, case p.jstcl_rate_type_c 
			when 'Hourly' then 1
			when 'Daily' then 2
			when 'Weekly' then 3
			when 'Monthly' then 4
			when 'Annually' then 4 --migrated as Monthly
			else 1 end as contract_rate_type --default as Hourly | contract_rate_type
		, case when p.jstcl_est_wkly_hrs_c::float is NULL then 40
			else p.jstcl_est_wkly_hrs_c::float end as working_hours_per_week
		, 5 as working_days_per_week
		, case when p.jstcl_est_wkly_hrs_c is NULL then '8'
				else p.jstcl_est_wkly_hrs_c::float / 5 end as working_hours
		, coalesce((p.ts2_end_date_c::date - p.ts2_start_date_c::date)/7,0) as contract_length --contract_length | migrated as weekly
		--, case pay_interval 
		--	when 'Hourly' then 1
		--	when 'Daily' then 2
		--	when 'Weekly' then 3
		--	when 'Monthly' then 4
		--	when 'Annually' then 4 --migrated as Monthly
		--	else 1 end contract_length_type_default
		, 3 as contract_length_type --weekly
--Margin % = Profit | Margin * 100 / Charge rate
--Markup % = Profit | Margin * 100 / Total pay rate
		, 0 as use_time_temp --Time management: 0 manual - 1 timetemp - 2 astute payroll
		, (coalesce(p.ts2_bill_rate_c::float,0) - coalesce(p.ts2_pay_rate_c::float,0)) as profit --Profit | Margin
		, case when p.ts2_pay_rate_c::float = 0 or p.ts2_pay_rate_c is NULL then 0
					else round(cast ((coalesce(p.ts2_bill_rate_c::float,0) - coalesce(p.ts2_pay_rate_c::float,0)) * 100 / p.ts2_pay_rate_c::float as numeric),2) end as markup_percent
		, case when p.ts2_bill_rate_c::float = 0 or p.ts2_bill_rate_c is NULL then 0
					else round(cast ((coalesce(p.ts2_bill_rate_c::float,0) - coalesce(p.ts2_pay_rate_c::float,0)) * 100 / p.ts2_bill_rate_c::float as numeric),2) end as margin_percent
		--Total Contract Pay = Base pay rate * Contract length
		--Total Contract Charge = Charge rate * Contract length
		--Total Contract Profit = Profit * Contract length
		--, projected_pay_rate --projected_pay_rate (Total Contract Pay) = pay_rate (base pay rate) * contract_length
		--, projected_charge_rate --Total Contract Charge
		--, projected_profit --Total Contract Profit
		, p.ts2_job_c
		, j.ts2_recruiter_c
		, u1.email
		, j.ts2_secondary_recruiter_c
		, u2.email
		, j.additional_recruiter_c
		, u3.email
		, js.share_count
		, case when js.share_count > 0 then 100/ js.share_count 
						else 0 end share_pct
		, a.legal_entity_name_c as trading_name
		, concat_ws( chr(10)
		, coalesce('Placement: ' || nullif(p.name,''),null) -- p.name as "Placement"
		--, coalesce('Salary: ' || nullif(p.ts2_salary_c,''),null) -- p.name as "Placement"
		--, coalesce('Legacy Fee Amount: ' || nullif(p.legacy_fee_amount_c,''),null) -- p.name as "Placement"
		--, coalesce('Fee percentage: ' || nullif(p.ts2_fee_pct_c,''),null) -- p.name as "Placement"
		--, coalesce('Notes / Insurance: ' || nullif(p.abc,''),null)
		, coalesce('Primary Recruiter Cost Centre: ' || nullif(p.primary_recruiter_cost_centre_text_c,''),null) 
		--, p.primary_recruiter_cost_centre_text_c as "Primary Recruiter Cost Centre"
		, coalesce('Secondary Recruiter Cost Centre: ' || nullif(p.secondary_recruiter_cost_centre_text_c,''),null) 
		--, p.secondary_recruiter_cost_centre_text_c as "Secondary Recruiter Cost Centre"
		, coalesce('Additional Recruiter Cost Centre: ' || nullif(p.additional_recruiter_cost_centre_text_c,''),null) 
		--, p.additional_recruiter_cost_centre_text_c
		, coalesce('Site Address Formula: ' || concat_ws(', ', a.shippingstreet, a.shippingcity, a.shippingstate, a.shippingcountry, a.shippingpostalcode), null)
		, coalesce('Hirer Client Address: ' || concat_ws(', ', a.shippingstreet, a.shippingcity, a.shippingstate, a.shippingcountry, a.shippingpostalcode), null)
		, coalesce('Placement Company Legal Entity Name: ' || nullif(a.legal_entity_name_c,''), null)
		, coalesce('Payment frequency: ' || nullif(p.payment_frequency_c,''), null)
		, coalesce('Payment type: ' || nullif(p.payment_type_c,''), null)
		, coalesce('Accounts payable: ' || nullif(con.fullname,'') || ' ' || nullif(con.email,''), null) --ts2_accounts_payable_c
		--, coalesce('Invoice address: ' || nullif(p.invoice_address_c,''), null)
		, coalesce('Total Profit: ' || nullif(p.jstcl_total_profit_c,''), null)
		, coalesce('Forecasted revenue: ' || nullif(p.jstcl_forecasted_revenue_c,''), null)
		) as PlacementNote
		, concat_ws( chr(10)
				, coalesce('Payment Terms: ' || nullif(p.payment_terms_c,''),null) --, p.payment_terms_c as "Payment Terms"
				, coalesce('Invoice Processing Period: ' || nullif(p.contractor_invoice_processing_period_c,''),null) 
				--, p.contractor_invoice_processing_period_c as "Invoice Processing Period"
				, coalesce('Invoice address: ' || nullif(p.invoice_address_c,''), null)
				, coalesce('Tax Percent: ' || nullif(p.jstcl_tax_percent_c,''),null) --, p.jstcl_tax_percent_c as "Tax Percent"
				, coalesce('Primary Recruiter Cost Centre: ' || nullif(p.primary_recruiter_cost_centre_text_c,''),null) 
				--, p.primary_recruiter_cost_centre_text_c as "Primary Recruiter Cost Centre"
				, coalesce('Secondary Recruiter Cost Centre: ' || nullif(p.secondary_recruiter_cost_centre_text_c,''),null) 
				--, p.secondary_recruiter_cost_centre_text_c as "Secondary Recruiter Cost Centre"
				, coalesce('Additional Recruiter Cost Centre: ' || nullif(p.additional_recruiter_cost_centre_text_c,''),null) 
				--, p.additional_recruiter_cost_centre_text_c
		) as "InvoiceNote"
		, p.jstcl_purchase_order_number_c as PO_number
		, 1 as placed_valid
		, 1 as invoice_valid
		, 2 as position_type --Contract placements
		, 3 as draft_offer --used to move OFFERED to PLACED in VC [offer]
		, 2 as invoicestatus --used to update invoice status in VC [invoice] as 'active'
		, 1 as renewal_index --default value in VC [invoice]
		, 1 as renewal_flow_status --aka placement_active
		, -10 as latest_user_id
		, now() as latest_update_date
		, 0 as tax_rate
		, 'other' as export_data_to
		, 0 as net_total
		, 0 as other_invoice_items_total
		, 0 as invoice_total
		, 1 as split_mode --1-percent 2-number
		, round(cast(p.jstcl_total_profit_c as numeric), 2) as jstcl_total_profit_c
from imported_job_app ija
left join ts2_placement_c p on p.id = ija.appid
left join ts2_job_c j on j.id = ija.job_id --to get job owners
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u1 on u1.id = j.ts2_recruiter_c
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u2 on u2.id = j.ts2_secondary_recruiter_c
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u3 on u3.id = j.additional_recruiter_c
left join account a on a.id = j.ts2_account_c
left join ( select id, concat(firstname,' ',lastname) as fullname, email, title 
							from contact where recordtypeid in ('0120Y0000013O5d')) con on con.id = p.ts2_accounts_payable_c --CONTACT
left join jobshare js on js.job_id = j.id
where 1=1
and ija.rn = 1
and ija.appstage = 'PLACED'
and ija.jobtype = 302 --2024 rows
--and p.id = 'a0Q0Y000009FL24UAG'
)

select *
, case when contract_rate_type = 1 then contract_length * pay_rate * working_hours_per_week::float --hours
			when contract_rate_type = 2 then contract_length * pay_rate * 5 --weekdays
			else 0 end as projected_pay_rate
, case when contract_rate_type = 1 then contract_length * charge_rate * working_hours_per_week::float --hours
			when contract_rate_type = 2 then contract_length * charge_rate * 5 --weekdays
			else 0 end as projected_charge_rate
, case when contract_rate_type = 1 then round(cast(contract_length * profit * working_hours_per_week::float as numeric), 2) --hours
			when contract_rate_type = 2 then round(cast(contract_length * profit * 5 as numeric), 2) --weekdays
			else 0 end as projected_profit
, jstcl_total_profit_c
, case when share_count > 0 then 
			(case when contract_rate_type = 1 then round(cast(contract_length * profit * working_hours_per_week::float / share_count as numeric), 2) --hours
			when contract_rate_type = 2 then round(cast(contract_length * profit * 5 / share_count as numeric), 2) --weekdays
			else 0 end)
			else 0 end as shared_amount
from contract
--where contract_rate_type = 1</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2288</xloc>
      <yloc>1872</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>JobApp Contract split</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>/*
--CREATE TEMP TABLE FOR IMPORTED JOB APP
select *
into imported_job_app
from ja1
*/

--MAIN SCRIPT
with jobs as (
				select j.id as job_id
				, j.ts2_recruiter_c
				, u1.email
				from ts2_job_c j
				left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u1 on u1.id = j.ts2_recruiter_c
				UNION 
				select j.id as job_id
				, j.ts2_secondary_recruiter_c
				, u2.email
				from ts2_job_c j
				left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u2 on u2.id = j.ts2_secondary_recruiter_c
				UNION 
				select j.id as job_id
				, j.additional_recruiter_c
				, u3.email
				from ts2_job_c j
				left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u3 on u3.id = j.additional_recruiter_c 
			)
			
, jobshare as (select job_id, count(email) as share_count
				from jobs
				where email is not NULL
				--and job_id = 'a0K0Y000005P9ciUAC'
				group by job_id
			)
						
, contract as (select ija.*
		, p.id
		, p.name
		, case when p.ts2_start_date_c is NULL then ija.createddate::timestamp
			else p.ts2_start_date_c::timestamp end as start_date
		, ts2_end_date_c
		, case when p.ts2_end_date_c is NULL then ija.createddate::timestamp + interval '1 year'
			else p.ts2_end_date_c::timestamp end as end_date
		, case when jobtype = 301 then 1
			when jobtype = 302 then 2
			else NULL end as position_type
		, case when lower(p.currencyisocode) is NULL then 'pound' --used in offered
					when lower(p.currencyisocode) = 'gbp' then 'pound'
					else lower(p.currencyisocode) end as currency_type
		, case when p.ts2_bill_rate_c is NULL then 0
				else p.ts2_bill_rate_c::float end as charge_rate
		, case when p.ts2_pay_rate_c is NULL then 0
				else p.ts2_pay_rate_c::float end as pay_rate
		, 1 as pay_calculation_type
		, 'chargeRate' as charge_rate_type --profit | margin | markup | chargeRate
		, case p.jstcl_rate_type_c 
			when 'Hourly' then 1
			when 'Daily' then 2
			when 'Weekly' then 3
			when 'Monthly' then 4
			when 'Annually' then 4 --migrated as Monthly
			else 1 end as contract_rate_type --default as Hourly | contract_rate_type
		, case when p.jstcl_est_wkly_hrs_c is NULL then '40'
			else p.jstcl_est_wkly_hrs_c end as working_hours_per_week
		, 5 as working_days_per_week
		, case when p.jstcl_est_wkly_hrs_c is NULL then '8'
				else p.jstcl_est_wkly_hrs_c::float / 5 end as working_hours
		, coalesce((p.ts2_end_date_c::date - p.ts2_start_date_c::date)/7,0) as contract_length --contract_length | migrated as weekly
		--, case pay_interval 
		--	when 'Hourly' then 1
		--	when 'Daily' then 2
		--	when 'Weekly' then 3
		--	when 'Monthly' then 4
		--	when 'Annually' then 4 --migrated as Monthly
		--	else 1 end contract_length_type_default
		, 3 as contract_length_type --weekly
--Margin % = Profit | Margin * 100 / Charge rate
--Markup % = Profit | Margin * 100 / Total pay rate
		, 0 as use_time_temp --Time management: 0 manual - 1 timetemp - 2 astute payroll
		, (coalesce(p.ts2_bill_rate_c::float,0) - coalesce(p.ts2_pay_rate_c::float,0)) as profit --Profit | Margin
		, case when p.ts2_pay_rate_c::float = 0 or p.ts2_pay_rate_c is NULL then 0
					else round(cast ((coalesce(p.ts2_bill_rate_c::float,0) - coalesce(p.ts2_pay_rate_c::float,0)) * 100 / p.ts2_pay_rate_c::float as numeric),2) end as markup_percent
		, case when p.ts2_bill_rate_c::float = 0 or p.ts2_bill_rate_c is NULL then 0
					else round(cast ((coalesce(p.ts2_bill_rate_c::float,0) - coalesce(p.ts2_pay_rate_c::float,0)) * 100 / p.ts2_bill_rate_c::float as numeric),2) end as margin_percent
		--Total Contract Pay = Base pay rate * Contract length
		--Total Contract Charge = Charge rate * Contract length
		--Total Contract Profit = Profit * Contract length
		--, projected_pay_rate --projected_pay_rate (Total Contract Pay) = pay_rate (base pay rate) * contract_length
		--, projected_charge_rate --Total Contract Charge
		--, projected_profit --Total Contract Profit
		, p.ts2_job_c
		, j.ts2_recruiter_c
		, u1.email
		, j.ts2_secondary_recruiter_c
		, u2.email
		, j.additional_recruiter_c
		, u3.email
		, js.share_count
		, case when js.share_count > 0 then 100/ js.share_count 
						else 0 end split_percent
		, a.legal_entity_name_c as trading_name
		, concat_ws( chr(10)
		, coalesce('Placement: ' || nullif(p.name,''),null) -- p.name as "Placement"
		--, coalesce('Salary: ' || nullif(p.ts2_salary_c,''),null) -- p.name as "Placement"
		--, coalesce('Legacy Fee Amount: ' || nullif(p.legacy_fee_amount_c,''),null) -- p.name as "Placement"
		--, coalesce('Fee percentage: ' || nullif(p.ts2_fee_pct_c,''),null) -- p.name as "Placement"
		--, coalesce('Notes / Insurance: ' || nullif(p.abc,''),null)
		, coalesce('Primary Recruiter Cost Centre: ' || nullif(p.primary_recruiter_cost_centre_text_c,''),null) 
		--, p.primary_recruiter_cost_centre_text_c as "Primary Recruiter Cost Centre"
		, coalesce('Secondary Recruiter Cost Centre: ' || nullif(p.secondary_recruiter_cost_centre_text_c,''),null) 
		--, p.secondary_recruiter_cost_centre_text_c as "Secondary Recruiter Cost Centre"
		, coalesce('Additional Recruiter Cost Centre: ' || nullif(p.additional_recruiter_cost_centre_text_c,''),null) 
		--, p.additional_recruiter_cost_centre_text_c
		, coalesce('Site Address Formula: ' || concat_ws(', ', a.shippingstreet, a.shippingcity, a.shippingstate, a.shippingcountry, a.shippingpostalcode), null)
		, coalesce('Hirer Client Address: ' || concat_ws(', ', a.shippingstreet, a.shippingcity, a.shippingstate, a.shippingcountry, a.shippingpostalcode), null)
		, coalesce('Placement Company Legal Entity Name: ' || nullif(a.legal_entity_name_c,''), null)
		, coalesce('Payment frequency: ' || nullif(p.payment_frequency_c,''), null)
		, coalesce('Payment type: ' || nullif(p.payment_type_c,''), null)
		, coalesce('Accounts payable: ' || nullif(con.fullname,'') || ' ' || nullif(con.email,''), null) --ts2_accounts_payable_c
		--, coalesce('Invoice address: ' || nullif(p.invoice_address_c,''), null)
		, coalesce('Total Profit: ' || nullif(p.jstcl_total_profit_c,''), null)
		, coalesce('Forecasted revenue: ' || nullif(p.jstcl_forecasted_revenue_c,''), null)
		) as PlacementNote
		, concat_ws( chr(10)
				, coalesce('Payment Terms: ' || nullif(p.payment_terms_c,''),null) --, p.payment_terms_c as "Payment Terms"
				, coalesce('Invoice Processing Period: ' || nullif(p.contractor_invoice_processing_period_c,''),null) 
				--, p.contractor_invoice_processing_period_c as "Invoice Processing Period"
				, coalesce('Invoice address: ' || nullif(p.invoice_address_c,''), null)
				, coalesce('Tax Percent: ' || nullif(p.jstcl_tax_percent_c,''),null) --, p.jstcl_tax_percent_c as "Tax Percent"
				, coalesce('Primary Recruiter Cost Centre: ' || nullif(p.primary_recruiter_cost_centre_text_c,''),null) 
				--, p.primary_recruiter_cost_centre_text_c as "Primary Recruiter Cost Centre"
				, coalesce('Secondary Recruiter Cost Centre: ' || nullif(p.secondary_recruiter_cost_centre_text_c,''),null) 
				--, p.secondary_recruiter_cost_centre_text_c as "Secondary Recruiter Cost Centre"
				, coalesce('Additional Recruiter Cost Centre: ' || nullif(p.additional_recruiter_cost_centre_text_c,''),null) 
				--, p.additional_recruiter_cost_centre_text_c
		) as "InvoiceNote"
		, p.jstcl_purchase_order_number_c as PO_number
		, 1 as placed_valid
		, 1 as invoice_valid
		, 2 as position_type --Contract placements
		, 3 as draft_offer --used to move OFFERED to PLACED in VC [offer]
		, 2 as invoicestatus --used to update invoice status in VC [invoice] as 'active'
		, 1 as renewal_index --default value in VC [invoice]
		, 1 as renewal_flow_status --aka placement_active
		, -10 as latest_user_id
		, now() as latest_update_date
		, 0 as tax_rate
		, 'other' as export_data_to
		, 0 as net_total
		, 0 as other_invoice_items_total
		, 0 as invoice_total
		, 1 as split_mode --1-percent 2-number
		, round(cast(p.jstcl_total_profit_c as numeric), 2) as jstcl_total_profit_c
from imported_job_app ija
left join ts2_placement_c p on p.id = ija.appid
left join ts2_job_c j on j.id = ija.job_id --to get job owners
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u1 on u1.id = j.ts2_recruiter_c
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u2 on u2.id = j.ts2_secondary_recruiter_c
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u3 on u3.id = j.additional_recruiter_c
left join account a on a.id = j.ts2_account_c
left join ( select id, concat(firstname,' ',lastname) as fullname, email, title 
							from contact where recordtypeid in ('0120Y0000013O5d')) con on con.id = p.ts2_accounts_payable_c --CONTACT
left join jobshare js on js.job_id = j.id
where 1=1
and ija.rn = 1
and ija.appstage = 'PLACED'
and ija.jobtype = 302 --2024 rows
--and p.id = 'a0Q0Y000009FL24UAG'
)

select *
, case when contract_rate_type = 1 then contract_length * pay_rate * working_hours_per_week::float --hours
			when contract_rate_type = 2 then contract_length * pay_rate * 5 --weekdays
			else 0 end as projected_pay_rate
, case when contract_rate_type = 1 then contract_length * charge_rate * working_hours_per_week::float --hours
			when contract_rate_type = 2 then contract_length * charge_rate * 5 --weekdays
			else 0 end as projected_charge_rate
, case when contract_rate_type = 1 then round(cast(contract_length * profit * working_hours_per_week::float as numeric), 2) --hours
			when contract_rate_type = 2 then round(cast(contract_length * profit * 5 as numeric), 2) --weekdays
			else 0 end as projected_profit
, jstcl_total_profit_c
, case when share_count > 0 then 
			(case when contract_rate_type = 1 then round(cast(contract_length * profit * working_hours_per_week::float / share_count as numeric), 2) --hours
			when contract_rate_type = 2 then round(cast(contract_length * profit * 5 / share_count as numeric), 2) --weekdays
			else 0 end)
			else 0 end as split_amount
from contract
--where contract_rate_type = 1</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2288</xloc>
      <yloc>2592</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>JobApp From OFFERED Stage 2 2 2 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>

with
  JPInfo as (
  	select JP.jobPostingID as JobID
  		, JP.title as JobTitle
		, Cl.clientID as ContactID
		, Cl.userID as ClientUserID
		, UC.name as ContactName
		, UC.email as ContactEmail
		, CC.clientCorporationID as CompanyID
		, CC.name as CompanyName
	from bullhorn1.BH_JobPosting JP
	left join bullhorn1.BH_Client Cl on JP.clientUserID = Cl.userID
	left join bullhorn1.BH_UserContact UC on JP.clientUserID = UC.userID
	left join bullhorn1.BH_ClientCorporation CC on JP.clientCorporationID = CC.clientCorporationID
	where 1=1 and JP.title &lt;&gt; '' and (JP.isdeleted &lt;&gt; 1 and JP.status &lt;&gt; 'Archive')
	)
--select top 100 * from JPInfo order by JobID


select --top 200
         PL.jobPostingID as 'application-positionExternalId', pl.placementID
       , JPI.CompanyID, JPI.CompanyName,  JPI.ContactID, JPI.ContactName, JPI.ContactEmail, JPI.JobID,  JPI.JobTitle, CAI.UserID, CAI.CandidateName as 'Candidate Name' --, JR.userID, JPI.ClientUserID,
       , CAI.candidateID as 'application-candidateExternalId'
       --, convert(varchar(10),PL.dateAdded,120) as 'dateAdded'
       --, 'OFFERED' as 'application-stage'
       
       , pl.dateAdded as [application-actionedDate] --as 'placed_date'
       , pl.dateBegin as 'start_date', DATEADD(year, 1, pl.dateBegin)  as 'to_date'
, pl.dateend
       , case 
       when pl.employmentType in ('Permanent') then 1
       when pl.employmentType in ('Contract','Fixed Contract') then 2
       when pl.employmentType in ('Temp to Perm') then 3
       when pl.employmentType in ('Temporary') then 2 ---***---UPSELL on 2019.05.14
       end as 'Job Type'

--PERMANENT     
       , pl.salary as 'contract_rate_from-MinimumSalary' --'gross_annual_salary'
       , 1 as use_quick_fee_forecast
       , pl.fee as 'percentage_of_annual_salary' --'Quick Fee Forecast % (Permanent Job)'
       , pl.salary*pl.fee as 'projected_profit'
       --, pl.flatFee as 'N/A (Auto Calculated)'
--CONTRACT       
       , convert(float,pl.payRate) as 'pay_rate' --'Pay Rate (Contract Job)'
       , pl.clientBillRate as 'charge_rate' --Charge Rate (Contract Job)
       
       , case
              when pl.salaryUnit = 'Per Hour' then 1
              when pl.salaryUnit = 'Per Day' then 2
              --where pl.salaryUnit = 'Per Week' then 3
              --where pl.salaryUnit = 'Per Month' then 4
              end as 'Salary Unit'         
       , Stuff(--'EMAIL: ' + char(10)
               + Coalesce('Billing Contact: ' + NULLIF(convert(nvarchar(max), billing.name), '') + char(10), '') --as 'Contact External ID'
               + Coalesce('Comments: ' + NULLIF(convert(nvarchar(max), pl.comments), '') + char(10), '')
               + Coalesce('Send chocs?: ' + NULLIF(convert(nvarchar(max), pl.customText3), '') + char(10), '')
               + Coalesce('Approver: ' + NULLIF(convert(nvarchar(max), pl.customTextBlock1), '') + char(10), '')
               + Coalesce('Scheduled End Date: ' + NULLIF(convert(nvarchar(max), pl.dateEnd), '') + char(10), '')
               + Coalesce('Payment Type: ' + NULLIF(convert(nvarchar(max), pl.employeeType), '') + char(10), '')
               + Coalesce('Owner: ' + NULLIF(convert(nvarchar(max), statement.name), '') + char(10), '') --as 'Contact External ID'
               + Coalesce('Status: ' + NULLIF(convert(nvarchar(max), pl.status), '') + char(10), '')
               + Coalesce('' + NULLIF(convert(nvarchar(max), pc.note), '') + char(10), '')
       , 1, 0, '') as 'PlacementNote'
    , 3 as OFFER_draft_offer --used to move OFFERED to PLACED in VC [offer]
    , 2 as INVOICE_status --used to update invoice status in VC [invoice] as 'active'
    , 1 as INVOICE_renewal_index --default value in VC [invoice]
    , 1 as INVOICE_renewal_flow_status --used to update flow status in VC [invoice] as 'placement_active'
    , 1 as INVOICE_valid
, 3 as draft_offer --used to move OFFERED to PLACED in VC [offer]
, 2 as InvoiceStatus --used to update invoice status in VC [invoice] as 'active'
, 1 as renewal_index --default value in VC [invoice]
, 1 as renewal_flow_status
, -10 as Latest_user_id
, getdate() as Latest_update_date
, 0 as Tax_rate
, 'other' as Export_data_to
, 0 as Net_total
, 0 as Other_invoice_items_total
, 0 as Invoice_total
, 'pound' as currency_type
, 1 as 'compensation_period__period_type'
, 655 as 'offer_pay_charge__comp_setting_id'
, 3 as 'offer_pay_charge__tax_period_id'
, statement.email as 'user_email' -->> Profit split - %
, 1 as 'profit_split_mode' -->> Profit split - %
-- select count(*) --2086-- select *  -- pl.billingUserID, pl.statementUserID -- select distinct  statement.email --pl.employmentType -- select DATEADD(year, 1, pl.dateBegin) 
from bullhorn1.BH_Placement PL --where  pl.billingUserID &lt;&gt; pl.statementUserID
left join (
       select placementID,  STRING_AGG( note, char(10)) WITHIN GROUP (ORDER BY note) note
       from ( 
              select pc.placementID,
                      + Stuff(
                      + Coalesce('Split: ' + NULLIF(convert(nvarchar(max), pc.commissionPercentage), '') + char(10), '')--, pc.commissionPercentage as 'Split %'
                      + Coalesce('Date Added: ' + NULLIF(convert(nvarchar(max), pc.dateAdded), '') + char(10), '')--, pc.dateAdded as 'N/A'
                      + Coalesce('Fee Split: ' + NULLIF(convert(nvarchar(max), pc.flatPayout), '') + char(10), '')--, pc.flatPayout as 'Split Amount'
                      + Coalesce('% of Gross Margin: ' + NULLIF(convert(nvarchar(max), pc.grossMarginPercentage), '') + char(10), '')--, pc.grossMarginPercentage as 'Margin % (Auto Calculated)'
                      --+ Coalesce('Placement: ' + NULLIF(convert(nvarchar(max), pc.placement), '') + char(10), '')
                      + Coalesce('Role: ' + NULLIF(convert(nvarchar(max), pc.role), '') + char(10), '')
                      + Coalesce('Status: ' + NULLIF(convert(nvarchar(max), pc.status), '') + char(10), '')
                      + Coalesce('Recipient: ' + NULLIF(convert(nvarchar(max), uc.name), '') + char(10), '') --pc.userid
                      , 1, 0, '') as note
              -- select * 
              from bullhorn1.BH_Commission pc
              left join (select userID,name from bullhorn1.BH_UserContact) UC on UC.UserID = pc.userID  
              /*where pc.placementID = 3*/ ) t
       GROUP BY placementID
       ) pc on pc.placementID = pl.placementID
left join ( select CA.userID as CandidateUserID, CA.candidateID, UC.userID, UC.name as CandidateName, UC.email as CandidateEmail from bullhorn1.BH_Candidate CA left join bullhorn1.BH_UserContact UC on CA.userID = UC.userID where CA.isdeleted &lt;&gt; 1 and CA.status &lt;&gt; 'Archive') CAI on PL.userID = CAI.CandidateUserID 
left join ( select distinct userID, name, email from bullhorn1.BH_UserContact UC) billing on billing.userid = pl.billinguserid
left join ( select distinct userid, name, email from bullhorn1.BH_UserContact UC) statement on statement.userid = pl.statementUserID
left join JPInfo JPI on PL.jobPostingID = JPI.JobID
where JPI.JobID is not null and CAI.CandidateUserID is not null
--and JPI.JobID in (4529)
--and cai.CandidateUserID in (41914,73149,20656)
--and pl.employmentType in ('Contract','Fixed Contract','Temporary')
--and pl.employmentType in ('Permanent') and pl.salary &lt;&gt; 0
--and pl.clientBillRate = convert(float,pl.payRate)


--select CA.userID as CandidateUserID, CA.candidateID, UC.userID, UC.name as CandidateName, UC.email as CandidateEmail from bullhorn1.BH_Candidate CA left join bullhorn1.BH_UserContact UC on CA.userID = UC.userID where ca.userid in (41914,73149,20656) and CA.isdeleted &lt;&gt; 1 and CA.status &lt;&gt; 'Archive'
--select * from bullhorn1.BH_Placement PL where PL.userID in (41914,73149,20656)</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2330</xloc>
      <yloc>125</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>JobApp Offer info</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>/*
--CREATE TEMP TABLE FOR IMPORTED JOB APP
select *
into imported_job_app
from ja1
*/

--MAIN SCRIPT
with jobs as (
				select j.id as job_id
				, j.ts2_recruiter_c
				, u1.email
				from ts2_job_c j
				left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u1 on u1.id = j.ts2_recruiter_c
				UNION 
				select j.id as job_id
				, j.ts2_secondary_recruiter_c
				, u2.email
				from ts2_job_c j
				left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u2 on u2.id = j.ts2_secondary_recruiter_c
				UNION 
				select j.id as job_id
				, j.additional_recruiter_c
				, u3.email
				from ts2_job_c j
				left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u3 on u3.id = j.additional_recruiter_c 
			)
			
, jobshare as (select job_id, count(email) as share_count
				from jobs
				where email is not NULL
				--and job_id = 'a0K0Y000005P9ciUAC'
				group by job_id
			)
						
select ija.*
		, p.id
		, p.name
		, case when p.ts2_start_date_c is NULL then ija.createddate::timestamp
			else p.ts2_start_date_c::timestamp end as start_date
		, case when jobtype = 301 then 1
			when jobtype = 302 then 2
			else NULL end as position_type
		, p.ts2_salary_c
		, p.legacy_fee_amount_c
		, p.ts2_fee_pct_c
		, case lower(p.currencyisocode)
					when 'bgn' then 'bgn'
					when 'cad' then 'cad'
					when 'chf' then 'chf'
					when 'cny' then 'yuan'
					when 'czk' then 'czk'
					when 'dkk' then 'dkk'
					when 'eur' then 'euro'
					when 'gbp' then 'pound'
					when 'nok' then 'nok'
					when 'sek' then 'sek'
					when 'sgd' then 'singd'
					when 'usd' then 'usd'
					else 'pound' end as currency_type
		, 1 as use_quick_fee_forecast
		, case when p.legacy_fee_amount_c::float > 0 then 100
					else coalesce(p.ts2_fee_pct_c::float,0) end as percentage_of_annual_salary --use quick free forecast
		, case when p.ts2_salary_c is NULL and p.legacy_fee_amount_c is NULL then 0 --default value for mapping PLACED stage
					when p.legacy_fee_amount_c::float > 0 then p.legacy_fee_amount_c::float
					when p.legacy_fee_amount_c is NULL then p.ts2_salary_c::float 
					else 0 end as pay_rate --pay_rate | annual_salary
		, case when p.ts2_salary_c is NULL and p.legacy_fee_amount_c is NULL then 0
					when p.legacy_fee_amount_c::float > 0 then p.legacy_fee_amount_c::float
					when p.legacy_fee_amount_c is NULL then p.ts2_salary_c::float * p.ts2_fee_pct_c::float / 100
					else 0 end as projected_profit
		, p.primary_recruiter_cost_centre_text_c
		, p.secondary_recruiter_cost_centre_text_c
		, p.additional_recruiter_cost_centre_text_c
		, p.additional_recruiter_c
		, p.ts2_job_c
		, j.ts2_recruiter_c
		, u1.email
		, j.ts2_secondary_recruiter_c
		, u2.email
		, j.additional_recruiter_c
		, u3.email
		, case when js.share_count > 0 then 100/ js.share_count 
						else 0 end share_pct
		, case when js.share_count > 0 and p.ts2_salary_c is NULL and p.legacy_fee_amount_c is NULL then 0
					when js.share_count > 0 and p.legacy_fee_amount_c::float > 0 then p.legacy_fee_amount_c::float / js.share_count
					when js.share_count > 0 and p.legacy_fee_amount_c is NULL then p.ts2_salary_c::float * p.ts2_fee_pct_c::float / (100 * js.share_count)
					else 0 end split_amount
		, 1 as split_mode --1-percent 2-number
, concat_ws( chr(10)
		, coalesce('Placement: ' || nullif(p.name,''),null) -- p.name as "Placement"
		, coalesce('Salary: ' || nullif(p.ts2_salary_c,''),null) -- p.name as "Placement"
		, coalesce('Legacy Fee Amount: ' || nullif(p.legacy_fee_amount_c,''),null) -- p.name as "Placement"
		, coalesce('Fee percentage: ' || nullif(p.ts2_fee_pct_c,''),null) -- p.name as "Placement"
		--, coalesce('Notes / Insurance: ' || nullif(p.abc,''),null)
		, coalesce('Primary Recruiter Cost Centre: ' || nullif(p.primary_recruiter_cost_centre_text_c,''),null) 
		--, p.primary_recruiter_cost_centre_text_c as "Primary Recruiter Cost Centre"
		, coalesce('Secondary Recruiter Cost Centre: ' || nullif(p.secondary_recruiter_cost_centre_text_c,''),null) 
		--, p.secondary_recruiter_cost_centre_text_c as "Secondary Recruiter Cost Centre"
		, coalesce('Additional Recruiter Cost Centre: ' || nullif(p.additional_recruiter_cost_centre_text_c,''),null) 
		--, p.additional_recruiter_cost_centre_text_c
		) as PlacementNote
		, concat_ws( chr(10)
				, coalesce('Payment Terms: ' || nullif(p.payment_terms_c,''),null) --, p.payment_terms_c as "Payment Terms"
				, coalesce('Invoice Processing Period: ' || nullif(p.contractor_invoice_processing_period_c,''),null) 
				--, p.contractor_invoice_processing_period_c as "Invoice Processing Period"
				, coalesce('Invoice address: ' || nullif(p.invoice_address_c,''), null)
				, coalesce('Tax Percent: ' || nullif(p.jstcl_tax_percent_c,''),null) --, p.jstcl_tax_percent_c as "Tax Percent"
				, coalesce('Primary Recruiter Cost Centre: ' || nullif(p.primary_recruiter_cost_centre_text_c,''),null) 
				--, p.primary_recruiter_cost_centre_text_c as "Primary Recruiter Cost Centre"
				, coalesce('Secondary Recruiter Cost Centre: ' || nullif(p.secondary_recruiter_cost_centre_text_c,''),null) 
				--, p.secondary_recruiter_cost_centre_text_c as "Secondary Recruiter Cost Centre"
				, coalesce('Additional Recruiter Cost Centre: ' || nullif(p.additional_recruiter_cost_centre_text_c,''),null) 
				--, p.additional_recruiter_cost_centre_text_c
		) as "InvoiceNote"
		, 1 as placed_valid
		, 3 as draft_offer --used to move offered to placed in vc [offer]
		, 2 as invoicestatus --used to update invoice status in vc [invoice] as 'active'
		, 1 as renewal_index --default value in vc [invoice]
		, 1 as renewal_flow_status --used to update flow status in VC [invoice] as 'placement_active'
		, 1 as invoice_valid
		, -10 as latest_user_id
		, current_timestamp as latest_update_date
		, 0 as tax_rate
		, 'other' as export_data_to
		, 0 as net_total
		, 0 as other_invoice_items_total
		, 0 as invoice_total
from imported_job_app ija
left join ts2_placement_c p on p.id = ija.appid
left join ts2_job_c j on j.id = ija.job_id --to get job owners
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u1 on u1.id = j.ts2_recruiter_c
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u2 on u2.id = j.ts2_secondary_recruiter_c
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u3 on u3.id = j.additional_recruiter_c
left join jobshare js on js.job_id = j.id
where 1=1
and ija.rn = 1
and ija.appstage = 'OFFERED'
--and ija.jobtype = 301 --6437 rows
--and ija.job_id = 'a0K1n00000FrMc0EAF'
--and ija.can_id = '0030Y00001WFlzjQAD'</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2464</xloc>
      <yloc>1872</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>JobApp Permanent placement</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>/*
--CREATE TEMP TABLE FOR IMPORTED JOB APP
select *
into imported_job_app
from ja1
*/

--MAIN SCRIPT
with jobs as (
				select j.id as job_id
				, j.ts2_recruiter_c
				, u1.email
				from ts2_job_c j
				left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u1 on u1.id = j.ts2_recruiter_c
				UNION 
				select j.id as job_id
				, j.ts2_secondary_recruiter_c
				, u2.email
				from ts2_job_c j
				left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u2 on u2.id = j.ts2_secondary_recruiter_c
				UNION 
				select j.id as job_id
				, j.additional_recruiter_c
				, u3.email
				from ts2_job_c j
				left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u3 on u3.id = j.additional_recruiter_c 
			)
			
, jobshare as (select job_id, count(email) as share_count
				from jobs
				where email is not NULL
				--and job_id = 'a0K0Y000005P9ciUAC'
				group by job_id
			)
						
select ija.*
		, p.id
		, p.name
		, case when p.ts2_start_date_c is NULL then ija.createddate::timestamp
			else p.ts2_start_date_c::timestamp end as start_date
		, case when jobtype = 301 then 1
			when jobtype = 302 then 2
			else NULL end as position_type
		, p.ts2_salary_c
		, p.legacy_fee_amount_c
		, p.ts2_fee_pct_c
		, case when lower(p.currencyisocode) is NULL then 'gbp'
					else lower(p.currencyisocode) end as currency_type
		, 1 as use_quick_fee_forecast
		, case when p.legacy_fee_amount_c::float > 0 then 100
					else coalesce(p.ts2_fee_pct_c::float,0) end as percentage_of_annual_salary --use quick free forecast
		, case when p.ts2_salary_c is NULL and p.legacy_fee_amount_c is NULL then 0 --default value for mapping PLACED stage
					when p.legacy_fee_amount_c::float > 0 then p.legacy_fee_amount_c::float
					when p.legacy_fee_amount_c is NULL then p.ts2_salary_c::float 
					else 0 end as pay_rate --pay_rate | annual_salary
		, case when p.ts2_salary_c is NULL and p.legacy_fee_amount_c is NULL then 0
					when p.legacy_fee_amount_c::float > 0 then p.legacy_fee_amount_c::float
					when p.legacy_fee_amount_c is NULL then p.ts2_salary_c::float * p.ts2_fee_pct_c::float / 100
					else 0 end as projected_profit
		, p.primary_recruiter_cost_centre_text_c
		, p.secondary_recruiter_cost_centre_text_c
		, p.additional_recruiter_cost_centre_text_c
		, p.additional_recruiter_c
		, p.ts2_job_c
		, j.ts2_recruiter_c
		, u1.email
		, j.ts2_secondary_recruiter_c
		, u2.email
		, j.additional_recruiter_c
		, u3.email
		, case when js.share_count > 0 then 100/ js.share_count 
						else 0 end share_pct
		, case when js.share_count > 0 then 100/ js.share_count 
						else 0 end share_amount
, concat_ws( chr(10)
		, coalesce('Placement: ' || nullif(p.name,''),null) -- p.name as "Placement"
		, coalesce('Salary: ' || nullif(p.ts2_salary_c,''),null) -- p.name as "Placement"
		, coalesce('Legacy Fee Amount: ' || nullif(p.legacy_fee_amount_c,''),null) -- p.name as "Placement"
		, coalesce('Fee percentage: ' || nullif(p.ts2_fee_pct_c,''),null) -- p.name as "Placement"
		--, coalesce('Notes / Insurance: ' || nullif(p.abc,''),null)
		, coalesce('Primary Recruiter Cost Centre: ' || nullif(p.primary_recruiter_cost_centre_text_c,''),null) 
		--, p.primary_recruiter_cost_centre_text_c as "Primary Recruiter Cost Centre"
		, coalesce('Secondary Recruiter Cost Centre: ' || nullif(p.secondary_recruiter_cost_centre_text_c,''),null) 
		--, p.secondary_recruiter_cost_centre_text_c as "Secondary Recruiter Cost Centre"
		, coalesce('Additional Recruiter Cost Centre: ' || nullif(p.additional_recruiter_cost_centre_text_c,''),null) 
		--, p.additional_recruiter_cost_centre_text_c
		) as PlacementNote
		, concat_ws( chr(10)
					, coalesce('Payment Terms: ' || nullif(p.payment_terms_c,''),null) --, p.payment_terms_c as "Payment Terms"
				--, coalesce('Invoice Processing Period: ' || nullif(p.contractor_invoice_processing_period_c,''),null) 
				--, p.contractor_invoice_processing_period_c as "Invoice Processing Period"
				--, coalesce('Tax Percent: ' || nullif(p.jstcl_tax_percent_c,''),null) --, p.jstcl_tax_percent_c as "Tax Percent"
				--, coalesce('Primary Recruiter Cost Centre: ' || nullif(p.primary_recruiter_cost_centre_text_c,''),null) 
				--, p.primary_recruiter_cost_centre_text_c as "Primary Recruiter Cost Centre"
				--, coalesce('Secondary Recruiter Cost Centre: ' || nullif(p.secondary_recruiter_cost_centre_text_c,''),null) 
				--, p.secondary_recruiter_cost_centre_text_c as "Secondary Recruiter Cost Centre"
				--, coalesce('Additional Recruiter Cost Centre: ' || nullif(p.additional_recruiter_cost_centre_text_c,''),null) 
				--, p.additional_recruiter_cost_centre_text_c
		) as "InvoiceNote"
		, 1 as placed_valid
		, 3 as draft_offer --used to move offered to placed in vc [offer]
		, 2 as invoicestatus --used to update invoice status in vc [invoice] as 'active'
		, 1 as renewal_index --default value in vc [invoice]
		, 1 as renewal_flow_status --used to update flow status in VC [invoice] as 'placement_active'
		, 1 as invoice_valid
		, -10 as latest_user_id
		, current_timestamp as latest_update_date
		, 0 as tax_rate
		, 'other' as export_data_to
		, 0 as net_total
		, 0 as other_invoice_items_total
		, 0 as invoice_total
from imported_job_app ija
left join ts2_placement_c p on p.id = ija.appid
left join ts2_job_c j on j.id = ija.job_id --to get job owners
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u1 on u1.id = j.ts2_recruiter_c
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u2 on u2.id = j.ts2_secondary_recruiter_c
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u3 on u3.id = j.additional_recruiter_c
left join jobshare js on js.job_id = j.id
where 1=1
and ija.rn = 1
and ija.appstage = 'PLACED'
and ija.jobtype = 301 --6437 rows</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2288</xloc>
      <yloc>1760</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>JobApp Permanent split</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>with jobs as (
					select j.id as job_id
					, j.ts2_recruiter_c
					, u1.email
					from ts2_job_c j
					left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u1 on u1.id = j.ts2_recruiter_c
					UNION 
					select j.id as job_id
					, j.ts2_secondary_recruiter_c
					, u2.email
					from ts2_job_c j
					left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u2 on u2.id = j.ts2_secondary_recruiter_c
					UNION 
					select j.id as job_id
					, j.additional_recruiter_c
					, u3.email
					from ts2_job_c j
					left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u3 on u3.id = j.additional_recruiter_c 
			)
			
, jobshare as (select job_id, count(email) as share_count
						from jobs
						where email is not NULL
						--and job_id = 'a0K0Y000005P9ciUAC'
						group by job_id
						)
						
select ija.*
		, p.id
		, p.name
		, p.ts2_salary_c
		, p.legacy_fee_amount_c
		, p.ts2_fee_pct_c
		, case when lower(p.currencyisocode) is NULL then 'pound' --used in offered
					when lower(p.currencyisocode) = 'gbp' then 'pound'
					else lower(p.currencyisocode) end as currency_type
		, 1 as use_quick_fee_forecast
		, case when p.legacy_fee_amount_c::float > 0 then 100
					else coalesce(p.ts2_fee_pct_c::float,0) end as percentage_of_annual_salary --use quick free forecast
		, case when p.ts2_salary_c is NULL and p.legacy_fee_amount_c is NULL then 0 --default value for mapping PLACED stage
					when p.legacy_fee_amount_c::float > 0 then p.legacy_fee_amount_c::float
					when p.legacy_fee_amount_c is NULL then p.ts2_salary_c::float 
					else 0 end as pay_rate --pay_rate | annual_salary
		, case when p.ts2_salary_c is NULL and p.legacy_fee_amount_c is NULL then 0
					when p.legacy_fee_amount_c::float > 0 then p.legacy_fee_amount_c::float
					when p.legacy_fee_amount_c is NULL then p.ts2_salary_c::float * p.ts2_fee_pct_c::float / 100
					else 0 end as projected_profit
			, p.ts2_job_c
		, j.ts2_recruiter_c
		, u1.email
		, j.ts2_secondary_recruiter_c
		, u2.email
		, j.additional_recruiter_c
		, u3.email
		, case when js.share_count > 0 then 100/ js.share_count 
					else 0 end split_percent
		, case when js.share_count > 0 and p.ts2_salary_c is NULL and p.legacy_fee_amount_c is NULL then 0
					when js.share_count > 0 and p.legacy_fee_amount_c::float > 0 then p.legacy_fee_amount_c::float / js.share_count
					when js.share_count > 0 and p.legacy_fee_amount_c is NULL then p.ts2_salary_c::float * p.ts2_fee_pct_c::float / (100 * js.share_count)
					else 0 end split_amount
		, 1 as split_mode --1-percent 2-number
		, p.primary_recruiter_cost_centre_text_c
		, p.secondary_recruiter_cost_centre_text_c
		, p.additional_recruiter_cost_centre_text_c
		, p.additional_recruiter_c
from imported_job_app ija
left join ts2_placement_c p on p.id = ija.appid
left join ts2_job_c j on j.id = ija.job_id --to get job owners
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u1 on u1.id = j.ts2_recruiter_c
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u2 on u2.id = j.ts2_secondary_recruiter_c
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u3 on u3.id = j.additional_recruiter_c
left join jobshare js on js.job_id = j.id
where 1=1
and ija.rn = 1
and ija.appstage = 'PLACED'
and ija.jobtype = 301 --2024 rows</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2288</xloc>
      <yloc>2480</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>JobApp SubStatus</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>--select distinct ts2_app_status_c from ts2_application_c a;
--select distinct ts2_application_status_c from ts2_application_c a;
--select distinct ts2_status_c from ts2_application_c a;
--select distinct ts2extams_substatus_c from ts2_application_c a;
--select id, concat(firstname,' ',lastname) as fullname, email from contact where id in ('0031n00001eSArWAAW')

with
ja0 as (
select   a.id as appid, a."name" as "JobApplicationName"
       , j.company_id, j.company_name
       , j.contact_id, j.contact_fullname
       , j.job_id, j.job_number, j.job_title
       , case when rt.name is null then 301 --'PERMANENT'
              when rt.name in ('Perm') then 301 --'PERMANENT'
              when rt.name in ('Contract do not use','Fixed Term Contract','Temp','Temp-to-Perm') then 302 --'CONTRACT'
              when rt.name in ('Closed') and j.ts2_date_filled_c is null then 301 --'PERMANENT'
              when rt.name in ('Closed') and j.ts2_date_filled_c is not null then 302 --'CONTRACT'
              end as jobtype
       , can.id as can_id, can.fullname as "candidate_fullname"
       , a.CreatedDate
       , case
            when a.ts2extams_substatus_c = 'Candidate Rejected' then 'OFFERED'-- > Rejected'
            when a.ts2extams_substatus_c = 'Candidate Sent' then 'SENT'-- > Pending'
            when a.ts2extams_substatus_c = 'Drop Out' then 'PLACED' --'PLACED > Rejected'
            when a.ts2extams_substatus_c = 'F2F' then 'FIRST_INTERVIEW'-- > Pending Sub Status > F2F'
            when a.ts2extams_substatus_c = 'Final' then 'SECOND_INTERVIEW'-- > Pending Sub Status > Final'
            --when a.ts2extams_substatus_c = 'New' then 'CANDIDATES'-- > Pending'
            when a.ts2extams_substatus_c = 'Offer Made' then 'OFFERED'
            when a.ts2extams_substatus_c = 'Placed' then 'PLACED' --'PLACED'
            when a.ts2extams_substatus_c = 'Rebate' then 'PLACED' --'PLACED Sub Status > Rebate'
            when a.ts2extams_substatus_c = 'Review' then 'SHORTLISTED'-- > Pending'
            when a.ts2extams_substatus_c = 'Send' then 'SHORTLISTED'-- > Pending'
            when a.ts2extams_substatus_c = 'Tel / Skype' then 'FIRST_INTERVIEW'-- > Pending Sub Status > Tel / Skype'
            when a.ts2extams_substatus_c = 'Test' then 'FIRST_INTERVIEW'-- > Pending Sub Status > Test'
            when a.ts2extams_substatus_c = 'Withdrawal' then 'FIRST_INTERVIEW'-- > Rejected'
            end as appstage -- SHORTLISTED, SENT, FIRST_INTERVIEW, SECOND_INTERVIEW, OFFERED, PLACEMENT_PERMANENT
		, a.ts2extams_substatus_c as sub_status
		, case when a.ts2extams_substatus_c in ('Withdrawal', 'Candidate Rejected', 'Drop Out') then lastmodifieddate::date
			else NULL end as rejected_date
from ts2_application_c a
left join (select left(id,15) as id, name from recordtype) rt on rt.id = a.recordtypeid
left join (select job.id as "job_id", job.ts2_job_number_c as "job_number"
				, job.name as "job_title", ts2_date_filled_c
                , con.id as "contact_id", con.fullname as "contact_fullname"
                , com.id as "company_id", com.companyname as "company_name"
				from ts2_job_c job --JOB
				left join ( select id, concat(firstname,' ',lastname) as fullname, email, title 
							from contact where recordtypeid in ('0120Y0000013O5d')) con on con.id = job.ts2_contact_c --CONTACT
				left join ( select id, name as "companyname" from account) com ON com.id = job.ts2_account_c --COMPANY
				) j on j.job_id = a.ts2_job_c --JOB reference
left join (select id, concat(firstname,' ',lastname) as fullname, email 
			from contact where recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV') ) can on can.id = a.ts2_candidate_contact_c --CANDIDATE
where (j.job_id is not null and can.id is not null) --j.id = 'a0K0J00000dNO6SUAW'

UNION ALL

       select 
            a.id as placementid, a."name" as "JobApplicationName"
            , j.company_id, j.company_name
            , j.contact_id, j.contact_fullname
            , j.job_id, j.job_number, j.job_title
            , case when rt.name is null then 301 --'PERMANENT'
                when rt.name in ('Perm') then 301 --'PERMANENT'
                when rt.name in ('Fixed Term Contract','Temp') then 302 --'CONTRACT'
                when rt.name in ('Temp-to-Perm') then 302 --'TEMPORARY_TO_PERMANENT'
                end as jobtype
            , can.id as can_id, can.fullname as "candidate_fullname"
            , a.CreatedDate
            , 'PLACED' as appstage
			, 'Placement' as sub_status
			, NULL as rejected_date
        -- select count(*) --8812 -- select distinct ts2_app_status_c --isdeleted -- select * 
        from ts2_placement_c a
        left join (select left(id,15) as id, name from recordtype) rt on rt.id = a.recordtypeid
        left join (select id, concat(firstname,' ',lastname) as fullname, email from contact where recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV') ) can on can.id = a.ts2_employee_c --CANDIDATE
        left join ( select job.id as "job_id", job.ts2_job_number_c as "job_number", job.name as "job_title"
                            , con.id as "contact_id", con.fullname as "contact_fullname"
                            , com.id as "company_id", com.companyname as "company_name"
                    from ts2_job_c job --JOB
                    left join ( select id, concat(firstname,' ',lastname) as fullname, email, title 
									from contact where recordtypeid in ('0120Y0000013O5d')) con on con.id = job.ts2_contact_c --CONTACT
					left JOIN ( select id, name as "companyname" from account) com ON com.id = job.ts2_account_c --COMPANY
					) j on j.job_id = a.ts2_job_c --JOB reference
       where (j.job_id is not null and can.id is not null)
)

, ja1 as (
       SELECT appid
            , job_id
            , can_id
            , jobtype
			, sub_status
            , appstage
            , CreatedDate::date
			, rejected_date
            , row_number() over(partition by job_id, can_id
                     ORDER BY CreatedDate desc, 
                            CASE appstage
                            WHEN 'PLACED' THEN 6
                            WHEN 'OFFERED' THEN 5
                            WHEN 'SECOND_INTERVIEW' THEN 4
                            WHEN 'FIRST_INTERVIEW' THEN 3
                            WHEN 'SENT' THEN 2
                            WHEN 'SHORTLISTED' THEN 1
                            END desc ) as rn
       FROM ja0
       where appstage not like 'CANDIDATE%' and appstage &lt;&gt; '' -- and (job.jobPostingID is not null and candidate.candidateid is not null)
       )

--select [application-stage], count(*) from ja1 where rn = 1 group by [application-stage] 
select appid
		, job_id
		, can_id
		, jobtype 
		, case when jobtype = 301 then 1
		when jobtype = 302 then 2
		else NULL end as position_type--position_type
		, sub_status
		, appstage
		, CreatedDate::date
		, rejected_date
		, 3 as draft_offer --used to move offered to placed in vc [offer]
		, 2 as invoicestatus --used to update invoice status in vc [invoice] as 'active'
		, 1 as renewal_index --default value in vc [invoice]
		, 1 as renewal_flow_status --used to update flow status in VC [invoice] as 'placement_active'
		, 1 as invoice_valid
		, -10 as latest_user_id
		, current_timestamp as latest_update_date
		, 0 as tax_rate
		, 'other' as export_data_to
		, 0 as net_total
		, 0 as other_invoice_items_total
		, 0 as invoice_total
from ja1
where rn = 1
--and [application-stage] = 'PLACED' --and [#Candidate Name] like '%Freeman%'
--and appstage = 'PLACED' --8461
and sub_status is not NULL
--and rejected_date is not NULL --3 rows</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2240</xloc>
      <yloc>1024</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>JobApp rejected</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>--select distinct ts2_app_status_c from ts2_application_c a;
--select distinct ts2_application_status_c from ts2_application_c a;
--select distinct ts2_status_c from ts2_application_c a;
--select distinct ts2extams_substatus_c from ts2_application_c a;
--select id, concat(firstname,' ',lastname) as fullname, email from contact where id in ('0031n00001eSArWAAW')

with
ja0 as (
select   a.id as appid, a."name" as "JobApplicationName"
       , j.company_id, j.company_name
       , j.contact_id, j.contact_fullname
       , j.job_id, j.job_number, j.job_title
       , case when rt.name is null then 301 --'PERMANENT'
              when rt.name in ('Perm') then 301 --'PERMANENT'
              when rt.name in ('Contract do not use','Fixed Term Contract','Temp','Temp-to-Perm') then 302 --'CONTRACT'
              when rt.name in ('Closed') and j.ts2_date_filled_c is null then 301 --'PERMANENT'
              when rt.name in ('Closed') and j.ts2_date_filled_c is not null then 302 --'CONTRACT'
              end as jobtype
       , can.id as can_id, can.fullname as "candidate_fullname"
       , a.CreatedDate
       , case
            when a.ts2extams_substatus_c = 'Candidate Rejected' then 'OFFERED'-- > Rejected'
            when a.ts2extams_substatus_c = 'Candidate Sent' then 'SENT'-- > Pending'
            when a.ts2extams_substatus_c = 'Drop Out' then 'PLACED' --'PLACED > Rejected'
            when a.ts2extams_substatus_c = 'F2F' then 'FIRST_INTERVIEW'-- > Pending Sub Status > F2F'
            when a.ts2extams_substatus_c = 'Final' then 'SECOND_INTERVIEW'-- > Pending Sub Status > Final'
            --when a.ts2extams_substatus_c = 'New' then 'CANDIDATES'-- > Pending'
            when a.ts2extams_substatus_c = 'Offer Made' then 'OFFERED'
            when a.ts2extams_substatus_c = 'Placed' then 'PLACED' --'PLACED'
            when a.ts2extams_substatus_c = 'Rebate' then 'PLACED' --'PLACED Sub Status > Rebate'
            when a.ts2extams_substatus_c = 'Review' then 'SHORTLISTED'-- > Pending'
            when a.ts2extams_substatus_c = 'Send' then 'SHORTLISTED'-- > Pending'
            when a.ts2extams_substatus_c = 'Tel / Skype' then 'FIRST_INTERVIEW'-- > Pending Sub Status > Tel / Skype'
            when a.ts2extams_substatus_c = 'Test' then 'FIRST_INTERVIEW'-- > Pending Sub Status > Test'
            when a.ts2extams_substatus_c = 'Withdrawal' then 'FIRST_INTERVIEW'-- > Rejected'
            end as appstage -- SHORTLISTED, SENT, FIRST_INTERVIEW, SECOND_INTERVIEW, OFFERED, PLACEMENT_PERMANENT
		, a.ts2extams_substatus_c as sub_status
		, case when a.ts2extams_substatus_c in ('Withdrawal', 'Candidate Rejected', 'Drop Out') then lastmodifieddate::date
			else NULL end as rejected_date
from ts2_application_c a
left join (select left(id,15) as id, name from recordtype) rt on rt.id = a.recordtypeid
left join (select job.id as "job_id", job.ts2_job_number_c as "job_number"
				, job.name as "job_title", ts2_date_filled_c
                , con.id as "contact_id", con.fullname as "contact_fullname"
                , com.id as "company_id", com.companyname as "company_name"
				from ts2_job_c job --JOB
				left join ( select id, concat(firstname,' ',lastname) as fullname, email, title 
							from contact where recordtypeid in ('0120Y0000013O5d')) con on con.id = job.ts2_contact_c --CONTACT
				left join ( select id, name as "companyname" from account) com ON com.id = job.ts2_account_c --COMPANY
				) j on j.job_id = a.ts2_job_c --JOB reference
left join (select id, concat(firstname,' ',lastname) as fullname, email 
			from contact where recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV') ) can on can.id = a.ts2_candidate_contact_c --CANDIDATE
where (j.job_id is not null and can.id is not null) --j.id = 'a0K0J00000dNO6SUAW'

UNION ALL

       select 
            a.id as placementid, a."name" as "JobApplicationName"
            , j.company_id, j.company_name
            , j.contact_id, j.contact_fullname
            , j.job_id, j.job_number, j.job_title
            , case when rt.name is null then 301 --'PERMANENT'
                when rt.name in ('Perm') then 301 --'PERMANENT'
                when rt.name in ('Fixed Term Contract','Temp') then 302 --'CONTRACT'
                when rt.name in ('Temp-to-Perm') then 302 --'TEMPORARY_TO_PERMANENT'
                end as jobtype
            , can.id as can_id, can.fullname as "candidate_fullname"
            , a.CreatedDate
            , 'PLACED' as appstage
			, 'Placement' as sub_status
			, NULL as rejected_date
        -- select count(*) --8812 -- select distinct ts2_app_status_c --isdeleted -- select * 
        from ts2_placement_c a
        left join (select left(id,15) as id, name from recordtype) rt on rt.id = a.recordtypeid
        left join (select id, concat(firstname,' ',lastname) as fullname, email from contact where recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV') ) can on can.id = a.ts2_employee_c --CANDIDATE
        left join ( select job.id as "job_id", job.ts2_job_number_c as "job_number", job.name as "job_title"
                            , con.id as "contact_id", con.fullname as "contact_fullname"
                            , com.id as "company_id", com.companyname as "company_name"
                    from ts2_job_c job --JOB
                    left join ( select id, concat(firstname,' ',lastname) as fullname, email, title 
									from contact where recordtypeid in ('0120Y0000013O5d')) con on con.id = job.ts2_contact_c --CONTACT
					left JOIN ( select id, name as "companyname" from account) com ON com.id = job.ts2_account_c --COMPANY
					) j on j.job_id = a.ts2_job_c --JOB reference
       where (j.job_id is not null and can.id is not null)
)

, ja1 as (
       SELECT appid
            , job_id
            , can_id
            , jobtype
			, sub_status
            , appstage
            , CreatedDate::date
			, rejected_date
            , row_number() over(partition by job_id, can_id
                     ORDER BY CreatedDate desc, 
                            CASE appstage
                            WHEN 'PLACED' THEN 6
                            WHEN 'OFFERED' THEN 5
                            WHEN 'SECOND_INTERVIEW' THEN 4
                            WHEN 'FIRST_INTERVIEW' THEN 3
                            WHEN 'SENT' THEN 2
                            WHEN 'SHORTLISTED' THEN 1
                            END desc ) as rn
       FROM ja0
       where appstage not like 'CANDIDATE%' and appstage &lt;&gt; '' -- and (job.jobPostingID is not null and candidate.candidateid is not null)
       )

--select [application-stage], count(*) from ja1 where rn = 1 group by [application-stage] 
select appid
		, job_id
		, can_id
		, jobtype 
		, case when jobtype = 301 then 1
		when jobtype = 302 then 2
		else NULL end as position_type--position_type
		, sub_status
		, appstage
		, CreatedDate::date
		, rejected_date::date
		, 3 as draft_offer --used to move offered to placed in vc [offer]
		, 2 as invoicestatus --used to update invoice status in vc [invoice] as 'active'
		, 1 as renewal_index --default value in vc [invoice]
		, 1 as renewal_flow_status --used to update flow status in VC [invoice] as 'placement_active'
		, 1 as invoice_valid
		, -10 as latest_user_id
		, current_timestamp as latest_update_date
		, 0 as tax_rate
		, 'other' as export_data_to
		, 0 as net_total
		, 0 as other_invoice_items_total
		, 0 as invoice_total
from ja1
where rn = 1
--and [application-stage] = 'PLACED' --and [#Candidate Name] like '%Freeman%'
--and appstage = 'PLACED' --8461
--and sub_status is not NULL
and rejected_date is not NULL --483 rows</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2240</xloc>
      <yloc>1104</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Mapping candidate fe sfe</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <schema/>
    <table>candidate_fe_sfe</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field/>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
      <field>
        <column_name>id</column_name>
        <stream_name>id</stream_name>
      </field>
      <field>
        <column_name>js_category</column_name>
        <stream_name>js_category</stream_name>
      </field>
      <field>
        <column_name>sector</column_name>
        <stream_name>sector</stream_name>
      </field>
      <field>
        <column_name>required</column_name>
        <stream_name>required</stream_name>
      </field>
      <field>
        <column_name>vcfe</column_name>
        <stream_name>vcfe</stream_name>
      </field>
      <field>
        <column_name>vcsfe</column_name>
        <stream_name>vcsfe</stream_name>
      </field>
      <field>
        <column_name>comment</column_name>
        <stream_name>comment</stream_name>
      </field>
      <field>
        <column_name>note</column_name>
        <stream_name>note</stream_name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1520</xloc>
      <yloc>2224</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Microsoft Excel Writer</name>
    <type>TypeExitExcelWriterStep</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <header>Y</header>
    <footer>N</footer>
    <makeSheetActive>Y</makeSheetActive>
    <rowWritingMethod>overwrite</rowWritingMethod>
    <startingCell>A1</startingCell>
    <appendOmitHeader>N</appendOmitHeader>
    <appendOffset>0</appendOffset>
    <appendEmpty>0</appendEmpty>
    <rowWritingMethod>overwrite</rowWritingMethod>
    <forceFormulaRecalculation>N</forceFormulaRecalculation>
    <leaveExistingStylesUnchanged>N</leaveExistingStylesUnchanged>
    <appendLines>N</appendLines>
    <add_to_result_filenames>Y</add_to_result_filenames>
    <file>
      <name>E:\3.Vincere\LinksInternational\DM443_20190603\PRTR_Revenue_split_comparison.xls</name>
      <extention>xls</extention>
      <do_not_open_newfile_init>N</do_not_open_newfile_init>
      <split>N</split>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <SpecifyFormat>N</SpecifyFormat>
      <date_time_format/>
      <sheetname>Sheet1</sheetname>
      <autosizecolums>N</autosizecolums>
      <stream_data>N</stream_data>
      <protect_sheet>N</protect_sheet>
      <password>Encrypted </password>
      <protected_by/>
      <splitevery>0</splitevery>
      <if_file_exists>new</if_file_exists>
      <if_sheet_exists>new</if_sheet_exists>
    </file>
    <template>
      <enabled>N</enabled>
      <sheet_enabled>N</sheet_enabled>
      <filename>template.xls</filename>
      <sheetname/>
      <hidden>N</hidden>
    </template>
    <fields>
      <field>
        <name>VCOfferID</name>
        <type>None</type>
        <format/>
        <title/>
        <titleStyleCell/>
        <styleCell/>
        <commentField/>
        <commentAuthorField/>
        <formula>N</formula>
        <hyperlinkField/>
      </field>
      <field>
        <name>VCUserID</name>
        <type>None</type>
        <format/>
        <title/>
        <titleStyleCell/>
        <styleCell/>
        <commentField/>
        <commentAuthorField/>
        <formula>N</formula>
        <hyperlinkField/>
      </field>
      <field>
        <name>split_mode</name>
        <type>None</type>
        <format/>
        <title/>
        <titleStyleCell/>
        <styleCell/>
        <commentField/>
        <commentAuthorField/>
        <formula>N</formula>
        <hyperlinkField/>
      </field>
      <field>
        <name>projected_profit</name>
        <type>None</type>
        <format/>
        <title/>
        <titleStyleCell/>
        <styleCell/>
        <commentField/>
        <commentAuthorField/>
        <formula>N</formula>
        <hyperlinkField/>
      </field>
      <field>
        <name>split_consultant</name>
        <type>None</type>
        <format/>
        <title/>
        <titleStyleCell/>
        <styleCell/>
        <commentField/>
        <commentAuthorField/>
        <formula>N</formula>
        <hyperlinkField/>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2640</xloc>
      <yloc>2016</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Offer</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>offer</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>VCPOSITIONCANDIDATEID</name>
        <field>position_candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCOfferID</rename>
        <default/>
        <type>Integer</type>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>valid</name>
        <rename>valid</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2880</xloc>
      <yloc>240</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Offer (always ON)</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>Y</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema/>
      <table>offer</table>
      <key>
        <name>VCPOSITIONCANDIDATEID</name>
        <field>position_candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>draft_offer</name>
        <rename>OFFER_draft_offer</rename>
      </value>
      <value>
        <name>position_type</name>
        <rename>pd.position_type</rename>
      </value>
      <value>
        <name>currency_type</name>
        <rename>pd.currency_type</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2576</xloc>
      <yloc>112</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Offer 2</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema/>
      <table>offer</table>
      <key>
        <name>VCJobAppID</name>
        <field>position_candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>charge_rate</name>
        <rename>charge_rate (Contract Job)</rename>
      </value>
      <value>
        <name>pay_rate</name>
        <rename>pay_rate</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2688</xloc>
      <yloc>112</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Offer 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>offer</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>VCJobAppID</name>
        <field>position_candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCOfferID</rename>
        <default/>
        <type>Integer</type>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>offer_insert_timestamp</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>valid</name>
        <rename>offer_valid</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3056</xloc>
      <yloc>2016</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Offer 2 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>offer</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>VCJobAppID</name>
        <field>position_candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCOfferID</rename>
        <default/>
        <type>Integer</type>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>offer_insert_timestamp</rename>
        <default/>
        <type>None</type>
      </value>
      <value>
        <name>valid</name>
        <rename>offer_valid</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3056</xloc>
      <yloc>2480</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Offer 3</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema/>
      <table>offer</table>
      <key>
        <name>VCJobAppID</name>
        <field>position_candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>use_quick_fee_forecast</name>
        <rename>use_quick_fee_forecast</rename>
      </value>
      <value>
        <name>contract_rate_type</name>
        <rename>Salary Unit</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2768</xloc>
      <yloc>112</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Offer 4</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema/>
      <table>offer</table>
      <key>
        <name>VCJobAppID</name>
        <field>position_candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>charge_rate</name>
        <rename>charge_rate (Contract Job)</rename>
      </value>
      <value>
        <name>contract_rate_from</name>
        <rename>contract_rate_from -MinimumSalary</rename>
      </value>
      <value>
        <name>currency_type</name>
        <rename>currency_type</rename>
      </value>
      <value>
        <name>use_quick_fee_forecast</name>
        <rename>use_quick_fee_forecast</rename>
      </value>
      <value>
        <name>contract_rate_type</name>
        <rename>Salary Unit</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2832</xloc>
      <yloc>112</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Offer personal info - Contract</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>offer_personal_info</table>
      <key>
        <name>VCOfferID</name>
        <field>offer_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>offer_id</name>
        <rename>VCOfferID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>last_name</name>
        <rename>c.last_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>first_name</name>
        <rename>c.first_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>email</name>
        <rename>c.email</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_company_id</name>
        <rename>pd.company_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_company_name</name>
        <rename>com.client_company_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_contact_id</name>
        <rename>pd.client_contact_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_contact_name</name>
        <rename>client_contact_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_department</name>
        <rename>client_department</rename>
        <update>Y</update>
      </value>
      <value>
        <name>tax_rate</name>
        <rename>tax_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>export_data_to</name>
        <rename>export_data_to</rename>
        <update>Y</update>
      </value>
      <value>
        <name>net_total</name>
        <rename>net_total</rename>
        <update>Y</update>
      </value>
      <value>
        <name>other_invoice_items_total</name>
        <rename>other_invoice_items_total</rename>
        <update>Y</update>
      </value>
      <value>
        <name>invoice_total</name>
        <rename>invoice_total</rename>
        <update>Y</update>
      </value>
      <value>
        <name>start_date</name>
        <rename>start_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>placed_date</name>
        <rename>start_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>offer_date</name>
        <rename>start_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>end_date</name>
        <rename>end_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>note</name>
        <rename>placementnote</rename>
        <update>Y</update>
      </value>
      <value>
        <name>invoice_message</name>
        <rename>InvoiceNote</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_purchase_order</name>
        <rename>po_number</rename>
        <update>Y</update>
      </value>
      <value>
        <name>client_trading_name</name>
        <rename>trading_name</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3440</xloc>
      <yloc>2320</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Placed lookup output</name>
    <type>ExcelOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <header>Y</header>
    <footer>N</footer>
    <encoding/>
    <append>N</append>
    <add_to_result_filenames>Y</add_to_result_filenames>
    <file>
      <name>E:\DataMigration\ApisAlvi\Working\NewRequirements\20190320_Placed_lookup_output.xls</name>
      <extention>xls</extention>
      <do_not_open_newfile_init>N</do_not_open_newfile_init>
      <create_parent_folder>N</create_parent_folder>
      <split>N</split>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <SpecifyFormat>N</SpecifyFormat>
      <date_time_format/>
      <sheetname>Sheet1</sheetname>
      <autosizecolums>N</autosizecolums>
      <nullisblank>N</nullisblank>
      <protect_sheet>N</protect_sheet>
      <password>Encrypted </password>
      <splitevery>0</splitevery>
      <usetempfiles>N</usetempfiles>
      <tempdirectory/>
    </file>
    <template>
      <enabled>N</enabled>
      <append>N</append>
      <filename>template.xls</filename>
    </template>
    <fields>
      <field>
        <name>candidateextid</name>
        <type>String</type>
        <format/>
      </field>
      <field>
        <name>jobextid</name>
        <type>String</type>
        <format/>
      </field>
      <field>
        <name>placedstage</name>
        <type>Integer</type>
        <format/>
      </field>
      <field>
        <name>draft_offer</name>
        <type>Integer</type>
        <format/>
      </field>
      <field>
        <name>position_type</name>
        <type>Integer</type>
        <format/>
      </field>
      <field>
        <name>currency_type</name>
        <type>String</type>
        <format/>
      </field>
      <field>
        <name>annualsalary</name>
        <type>BigNumber</type>
        <format/>
      </field>
      <field>
        <name>percentage_of_annual_salary</name>
        <type>Number</type>
        <format/>
      </field>
      <field>
        <name>use_quick_fee_forecast</name>
        <type>Integer</type>
        <format/>
      </field>
      <field>
        <name>projected_profit</name>
        <type>Number</type>
        <format/>
      </field>
      <field>
        <name>startdate</name>
        <type>Timestamp</type>
        <format/>
      </field>
      <field>
        <name>placementnote</name>
        <type>String</type>
        <format/>
      </field>
      <field>
        <name>latest_user_id</name>
        <type>Integer</type>
        <format/>
      </field>
      <field>
        <name>latest_update_date</name>
        <type>Timestamp</type>
        <format/>
      </field>
      <field>
        <name>tax_rate</name>
        <type>Integer</type>
        <format/>
      </field>
      <field>
        <name>export_data_to</name>
        <type>String</type>
        <format/>
      </field>
      <field>
        <name>net_total</name>
        <type>Integer</type>
        <format/>
      </field>
      <field>
        <name>other_invoice_items_total</name>
        <type>Integer</type>
        <format/>
      </field>
      <field>
        <name>invoice_total</name>
        <type>Integer</type>
        <format/>
      </field>
      <field>
        <name>invoicestatus</name>
        <type>Integer</type>
        <format/>
      </field>
      <field>
        <name>renewal_index</name>
        <type>Integer</type>
        <format/>
      </field>
      <field>
        <name>renewal_flow_status</name>
        <type>Integer</type>
        <format/>
      </field>
      <field>
        <name>profit_split_mode</name>
        <type>Integer</type>
        <format/>
      </field>
      <field>
        <name>insert_timestamp</name>
        <type>Timestamp</type>
        <format/>
      </field>
      <field>
        <name>shared</name>
        <type>Integer</type>
        <format/>
      </field>
      <field>
        <name>amount</name>
        <type>Number</type>
        <format/>
      </field>
      <field>
        <name>user_email</name>
        <type>String</type>
        <format/>
      </field>
      <field>
        <name>substatus</name>
        <type>String</type>
        <format/>
      </field>
      <field>
        <name>VCCandidateID</name>
        <type>Integer</type>
        <format/>
      </field>
      <field>
        <name>c.first_name</name>
        <type>String</type>
        <format/>
      </field>
      <field>
        <name>c.last_name</name>
        <type>String</type>
        <format/>
      </field>
      <field>
        <name>c.email</name>
        <type>String</type>
        <format/>
      </field>
      <field>
        <name>VCJobID</name>
        <type>Integer</type>
        <format/>
      </field>
      <field>
        <name>pd.company_id</name>
        <type>Integer</type>
        <format/>
      </field>
      <field>
        <name>pd.client_contact_id</name>
        <type>Integer</type>
        <format/>
      </field>
      <field>
        <name>pd.position_type</name>
        <type>Integer</type>
        <format/>
      </field>
      <field>
        <name>pd.currency_type</name>
        <type>String</type>
        <format/>
      </field>
      <field>
        <name>VCJobAppID</name>
        <type>Integer</type>
        <format/>
      </field>
    </fields>
    <custom>
      <header_font_name>arial</header_font_name>
      <header_font_size>10</header_font_size>
      <header_font_bold>N</header_font_bold>
      <header_font_italic>N</header_font_italic>
      <header_font_underline>no</header_font_underline>
      <header_font_orientation>horizontal</header_font_orientation>
      <header_font_color>black</header_font_color>
      <header_background_color>none</header_background_color>
      <header_row_height>255</header_row_height>
      <header_alignment>left</header_alignment>
      <header_image/>
      <row_font_name>arial</row_font_name>
      <row_font_size>10</row_font_size>
      <row_font_color>black</row_font_color>
      <row_background_color>none</row_background_color>
    </custom>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2640</xloc>
      <yloc>1872</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Position Candidate 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>VCJobID</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCCandidateID</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCJobAppID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2848</xloc>
      <yloc>1872</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Position Candidate 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>VCJobID</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCCandidateID</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCJobAppID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2848</xloc>
      <yloc>2480</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Position Candidate 6</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>VCJobID</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCCandidateID</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCPOSITIONCANDIDATEID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2688</xloc>
      <yloc>240</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>SFE lookup</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>sub_functional_expertise</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>VCFEID</name>
        <field>functional_expertise_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>vcsfe</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCSFEID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1088</xloc>
      <yloc>2224</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Sub FE</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>--FE SFE
select distinct vcfe
, vcsfe
, CURRENT_TIMESTAMP as insert_timestamp
from candidate_fe_sfe
where note = 'Candidate category'
order by vcfe, vcsfe --331</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1648</xloc>
      <yloc>2304</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Sub FE AREA</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>--FE SFE
select distinct 'AREA' as vcfe
, trim(unnest(string_to_array(area_c, ';'))) as vcsfe
, CURRENT_TIMESTAMP as insert_timestamp
from contact
where area_c is not null and area_c &lt;&gt; ''
order by vcsfe</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1648</xloc>
      <yloc>2384</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Sub status</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>sub_status</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>sub_status</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCSubStatus</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2800</xloc>
      <yloc>1024</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>SubStatus</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema/>
      <table>position_candidate</table>
      <key>
        <name>VCJobID</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCCandidateID</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>sub_status_id</name>
        <rename>VCSubStatus</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3008</xloc>
      <yloc>1024</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Table output 8</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <schema/>
    <table>user_account</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field/>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
      <field>
        <column_name>email</column_name>
        <stream_name>Email</stream_name>
      </field>
      <field>
        <column_name>name</column_name>
        <stream_name>username</stream_name>
      </field>
      <field>
        <column_name>super_user</column_name>
        <stream_name>super_user</stream_name>
      </field>
      <field>
        <column_name>insert_timestamp</column_name>
        <stream_name>insert_timestamp</stream_name>
      </field>
      <field>
        <column_name>first_name</column_name>
        <stream_name>username</stream_name>
      </field>
      <field>
        <column_name>last_name</column_name>
        <stream_name>username</stream_name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1791</xloc>
      <yloc>1227</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Task 1 comment</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>-->>> TASK after 17/10/2017
select t.Id --known as activity ID
       , a1.id as "company_id", a1.name as "company_name"
       , con.id as "contact_id", con.fullname as "contact_name"
       , can.id as "candidate_id", can.fullname as "candidate_name"
       , j.id as "job_id", j.name as "job_title"
       --, case when t.AccountId in (select Id from Account) then t.AccountId else NULL end as CompanyExtID
       --, case when t.WhoId in (select Id from Contact /*where RecordTypeId = '012w0000000GS3f'*/) then t.WhoId else NULL end as CandidateExtID
       --, case when t.WhoId in (select Id from Contact /*where RecordTypeId = '012w0000000GS3g'*/) then t.WhoId else NULL end as ContactExtID
       --, case when t.WhatId in (select Id from ts2_job_c) then t.WhatId else NULL end as JobExtID
       --, e.FromName, e.FromAddress, e.ToAddress, e.CcAddress, e.BccAddress, e.Subject, e.TextBody
       , -10 as "user_account_id"
       , 'comment' as "category"
       , 'candidate' as "type"
       , t.createdDate::timestamp as "insert_timestamp"
       , concat_ws(chr(10), '[TASK]'
              , case
                     when t.EmailMessageId = '' or t.EmailMessageId is null
                     then concat_ws(
                            chr(10)
                            , coalesce('Related To: ' || nullif(a1.name,''),NULL)
                            , coalesce('Created Date: ' || nullif(t.CreatedDate,''),NULL)
                            , coalesce('Created By: ' || nullif(u2.fullname,''),NULL)                     
                            , coalesce('Assigned To: ' || nullif(u.fullname,''),NULL)
                            , coalesce('Client ' || nullif(con.fullname,''),NULL)
                            , coalesce('Due Date: ' || nullif(t.completeddatetime,''),NULL) --t.activitydate
                            , coalesce('Status: ' || nullif(t.Status,''),NULL)
                            , coalesce('Priority: ' || nullif(t.Priority,''),NULL)
                            , coalesce('Activity Currency: ' || nullif(t.currencyisocode,''),NULL)
                            , coalesce('Type: ' || nullif(t.type,''),NULL)
                            , coalesce('Subject: ' || nullif(t.Subject,''),NULL)
                            , coalesce('Comments ' || nullif(t.Description,''),NULL))
                      else
                      concat_ws(chr(10)
                          , coalesce('Related To: ' || nullif(a2.name,''),NULL)
                          , coalesce('Status: ' || nullif(e.Status,''),NULL)
                          , coalesce('Created Date: ' || nullif(e.CreatedDate,''),NULL)
                          , coalesce('Created By: ' || nullif(u3.fullname,''),NULL)                   
                          , coalesce('Message Date: ' || nullif(e.MessageDate,''),NULL)
                          , coalesce('From: ' || nullif( concat_ws(' ',e.FromName,e.FromAddress),''),NULL)
                          , coalesce('To: ' || nullif(e.ToAddress,''),NULL)
                          , coalesce('Cc: ' || nullif(e.CcAddress,''),NULL)
                          , coalesce('Bcc: ' || nullif(e.BccAddress,''),NULL)
                          , coalesce('Subject: ' || nullif(e.Subject,''),NULL)
                          , coalesce('Body: ' || chr(10) || nullif( regexp_replace(regexp_replace(e.textbody, E'&lt;.*?>', '', 'g' ), E'&amp;nbsp;', '', 'g') ,''),NULL)
                          ) 
                     end) as "content"
       --, e.Subject as "Email Subject"
-- select *
from Task t --where t.WhoId = '0030Y00001Y3DOXQA3'
left join EmailMessage e on e.Id = t.EmailMessageId --mail messages
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u on u.id = t.OwnerId
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u2 on u2.id = t.createdbyid
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u3 on u3.id = e.createdbyid
left join (select id, name from Account) a1 on a1.id = t.AccountId --COMPANY
left join (select id, name from Account) a2 on a2.id = e.relatedtoid --COMPANY
left join (select id, concat(firstname,' ',lastname) as fullname, email from contact where recordtypeid in ('0120Y0000013O5d')) con on con.id = t.WhoId --CONTACT
left join (select Id, name from ts2_job_c) j on j.id = t.WhatId --JOB
left join (select id, concat(firstname,' ',lastname) as fullname, email from contact where recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')) can on can.id = t.WhoId --CANDIDATE
where t.createdDate::timestamp > '2017-10-17' --|95624
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2128</xloc>
      <yloc>688</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Task 2 comment</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>-->>> TASK after 17/10/2017
select t.Id --known as activity ID
       , a1.id as "company_id", a1.name as "company_name"
       , con.id as "contact_id", con.fullname as "contact_name"
       , can.id as "candidate_id", can.fullname as "candidate_name"
       , j.id as "job_id", j.name as "job_title"
       --, case when t.AccountId in (select Id from Account) then t.AccountId else NULL end as CompanyExtID
       --, case when t.WhoId in (select Id from Contact /*where RecordTypeId = '012w0000000GS3f'*/) then t.WhoId else NULL end as CandidateExtID
       --, case when t.WhoId in (select Id from Contact /*where RecordTypeId = '012w0000000GS3g'*/) then t.WhoId else NULL end as ContactExtID
       --, case when t.WhatId in (select Id from ts2_job_c) then t.WhatId else NULL end as JobExtID
       --, e.FromName, e.FromAddress, e.ToAddress, e.CcAddress, e.BccAddress, e.Subject, e.TextBody
       , -10 as "user_account_id"
       , 'comment' as "category"
       , 'candidate' as "type"
       , t.createdDate::timestamp as "insert_timestamp"
       , concat_ws(chr(10), '[TASK]'
              , case
                     when t.EmailMessageId = '' or t.EmailMessageId is null
                     then concat_ws(
                            chr(10)
                            , coalesce('Related To: ' || nullif(a1.name,''),NULL)
                            , coalesce('Created Date: ' || nullif(t.CreatedDate,''),NULL)
                            , coalesce('Created By: ' || nullif(u2.fullname,''),NULL)                     
                            , coalesce('Assigned To: ' || nullif(u.fullname,''),NULL)
                            , coalesce('Client ' || nullif(con.fullname,''),NULL)
                            , coalesce('Due Date: ' || nullif(t.completeddatetime,''),NULL) --t.activitydate
                            , coalesce('Status: ' || nullif(t.Status,''),NULL)
                            , coalesce('Priority: ' || nullif(t.Priority,''),NULL)
                            , coalesce('Activity Currency: ' || nullif(t.currencyisocode,''),NULL)
                            , coalesce('Type: ' || nullif(t.type,''),NULL)
                            , coalesce('Subject: ' || nullif(t.Subject,''),NULL)
                            , coalesce('Comments ' || nullif(t.Description,''),NULL))
                      else
                      concat_ws(chr(10)
                          , coalesce('Related To: ' || nullif(a2.name,''),NULL)
                          , coalesce('Status: ' || nullif(e.Status,''),NULL)
                          , coalesce('Created Date: ' || nullif(e.CreatedDate,''),NULL)
                          , coalesce('Created By: ' || nullif(u3.fullname,''),NULL)                   
                          , coalesce('Message Date: ' || nullif(e.MessageDate,''),NULL)
                          , coalesce('From: ' || nullif( concat_ws(' ',e.FromName,e.FromAddress),''),NULL)
                          , coalesce('To: ' || nullif(e.ToAddress,''),NULL)
                          , coalesce('Cc: ' || nullif(e.CcAddress,''),NULL)
                          , coalesce('Bcc: ' || nullif(e.BccAddress,''),NULL)
                          , coalesce('Subject: ' || nullif(e.Subject,''),NULL)
                          , coalesce('Body: ' || chr(10) || nullif( regexp_replace(regexp_replace(e.textbody, E'&lt;.*?>', '', 'g' ), E'&amp;nbsp;', '', 'g') ,''),NULL)
                          ) 
                     end) as "content"
       --, e.Subject as "Email Subject"
-- select *
from task_2 t --where t.WhoId = '0030Y00001Y3DOXQA3'
left join EmailMessage e on e.Id = t.EmailMessageId --mail messages
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u on u.id = t.OwnerId
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u2 on u2.id = t.createdbyid
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u3 on u3.id = e.createdbyid
left join (select id, name from Account) a1 on a1.id = t.AccountId --COMPANY
left join (select id, name from Account) a2 on a2.id = e.relatedtoid --COMPANY
left join (select id, concat(firstname,' ',lastname) as fullname, email from contact where recordtypeid in ('0120Y0000013O5d')) con on con.id = t.WhoId --CONTACT
left join (select Id, name from ts2_job_c) j on j.id = t.WhatId --JOB
left join (select id, concat(firstname,' ',lastname) as fullname, email from contact where recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')) can on can.id = t.WhoId --CANDIDATE
where t.createdDate::timestamp > '2017-10-17' --|5150
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2128</xloc>
      <yloc>752</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Task 3</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>-->>> TASK after 17/10/2017
select t.Id --known as activity ID
       , a1.id as "company_id", a1.name as "company_name"
       , con.id as "contact_id", con.fullname as "contact_name"
       , can.id as "candidate_id", can.fullname as "candidate_name"
       , j.id as "job_id", j.name as "job_title"
       --, case when t.AccountId in (select Id from Account) then t.AccountId else NULL end as CompanyExtID
       --, case when t.WhoId in (select Id from Contact /*where RecordTypeId = '012w0000000GS3f'*/) then t.WhoId else NULL end as CandidateExtID
       --, case when t.WhoId in (select Id from Contact /*where RecordTypeId = '012w0000000GS3g'*/) then t.WhoId else NULL end as ContactExtID
       --, case when t.WhatId in (select Id from ts2_job_c) then t.WhatId else NULL end as JobExtID
       --, e.FromName, e.FromAddress, e.ToAddress, e.CcAddress, e.BccAddress, e.Subject, e.TextBody
       , -10 as "user_account_id"
       , 'comment' as "category"
       , 'candidate' as "type"
       , t.createdDate::timestamp as "insert_timestamp"
       , concat_ws(chr(10), '[TASK]'
              , case
                     when t.EmailMessageId = '' or t.EmailMessageId is null
                     then concat_ws(
                            chr(10)
                            , coalesce('Related To: ' || nullif(a1.name,''),NULL)
                            , coalesce('Created Date: ' || nullif(t.CreatedDate,''),NULL)
                            , coalesce('Created By: ' || nullif(u2.fullname,''),NULL)                     
                            , coalesce('Assigned To: ' || nullif(u.fullname,''),NULL)
                            , coalesce('Client ' || nullif(con.fullname,''),NULL)
                            , coalesce('Due Date: ' || nullif(t.completeddatetime,''),NULL) --t.activitydate
                            , coalesce('Status: ' || nullif(t.Status,''),NULL)
                            , coalesce('Priority: ' || nullif(t.Priority,''),NULL)
                            , coalesce('Activity Currency: ' || nullif(t.currencyisocode,''),NULL)
                            , coalesce('Type: ' || nullif(t.type,''),NULL)
                            , coalesce('Subject: ' || nullif(t.Subject,''),NULL)
                            , coalesce('Comments ' || nullif(t.Description,''),NULL))
                      else
                      concat_ws(chr(10)
                          , coalesce('Related To: ' || nullif(a2.name,''),NULL)
                          , coalesce('Status: ' || nullif(e.Status,''),NULL)
                          , coalesce('Created Date: ' || nullif(e.CreatedDate,''),NULL)
                          , coalesce('Created By: ' || nullif(u3.fullname,''),NULL)                   
                          , coalesce('Message Date: ' || nullif(e.MessageDate,''),NULL)
                          , coalesce('From: ' || nullif( concat_ws(' ',e.FromName,e.FromAddress),''),NULL)
                          , coalesce('To: ' || nullif(e.ToAddress,''),NULL)
                          , coalesce('Cc: ' || nullif(e.CcAddress,''),NULL)
                          , coalesce('Bcc: ' || nullif(e.BccAddress,''),NULL)
                          , coalesce('Subject: ' || nullif(e.Subject,''),NULL)
                          , coalesce('Body: ' || chr(10) || nullif( regexp_replace(regexp_replace(e.textbody, E'&lt;.*?>', '', 'g' ), E'&amp;nbsp;', '', 'g') ,''),NULL)
                          ) 
                     end) as "content"
       --, e.Subject as "Email Subject"
-- select *
from task_3 t --where t.WhoId = '0030Y00001Y3DOXQA3'
left join EmailMessage e on e.Id = t.EmailMessageId --mail messages
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u on u.id = t.OwnerId
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u2 on u2.id = t.createdbyid
left join (select id, concat(firstname,' ',lastname) as fullname, email from "user") u3 on u3.id = e.createdbyid
left join (select id, name from Account) a1 on a1.id = t.AccountId --COMPANY
left join (select id, name from Account) a2 on a2.id = e.relatedtoid --COMPANY
left join (select id, concat(firstname,' ',lastname) as fullname, email from contact where recordtypeid in ('0120Y0000013O5d')) con on con.id = t.WhoId --CONTACT
left join (select Id, name from ts2_job_c) j on j.id = t.WhatId --JOB
left join (select id, concat(firstname,' ',lastname) as fullname, email from contact where recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')) can on can.id = t.WhoId --CANDIDATE
where t.createdDate::timestamp > '2017-10-17' --|639591
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2128</xloc>
      <yloc>832</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update 19</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema/>
      <table>candidate</table>
      <key>
        <name>candidate_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>candidate_owner_json</name>
        <rename>candidate_owner_json</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1951</xloc>
      <yloc>1291</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update 2</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>1000</commit>
    <use_batch>Y</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>actual_candidate_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>note</name>
        <rename>note</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1872</xloc>
      <yloc>288</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update 2 2</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>position_candidate</table>
      <key>
        <name>final_candidate_id</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_position_id</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>rejected_date</name>
        <rename>TIME_REJECTED</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1424</xloc>
      <yloc>240</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update 2 3</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <key>
        <name>actual_contactid</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>personal_email</name>
        <rename>personal_email</rename>
      </value>
      <value>
        <name>nick_name</name>
        <rename>nickname</rename>
      </value>
      <value>
        <name>mobile_phone</name>
        <rename>mobile_phone</rename>
      </value>
      <value>
        <name>home_phone</name>
        <rename>Home_Phone</rename>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>864</xloc>
      <yloc>304</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update 2 3 2</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <key>
        <name>actual_contactid</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>insert_timestamp</name>
        <rename>dateadded</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>864</xloc>
      <yloc>368</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update 2 3 3</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <key>
        <name>actual_contactid</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>personal_email</name>
        <rename>personal_email</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>800</xloc>
      <yloc>368</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update 2 5</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>Y</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>actual_candidate_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>experience</name>
        <rename>candidate-workHistory</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1936</xloc>
      <yloc>592</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update 3</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>Y</skip_lookup>
    <commit>500</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>actual_candidate_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>note</name>
        <rename>note</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1808</xloc>
      <yloc>512</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update 3 2</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>Y</skip_lookup>
    <commit>300</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>desired_contract_rate</name>
        <rename>desired_contract_rate</rename>
      </value>
      <value>
        <name>contract_rate</name>
        <rename>contract_rate</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1808</xloc>
      <yloc>448</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update 3 3</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>Y</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>actual_candidate_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>website</name>
        <rename>Website</rename>
      </value>
      <value>
        <name>work_email</name>
        <rename>Personal Email</rename>
      </value>
      <value>
        <name>nickname</name>
        <rename>Preferred Name</rename>
      </value>
      <value>
        <name>home_phone</name>
        <rename>candidate-homePhone</rename>
      </value>
      <value>
        <name>phone2</name>
        <rename>candidate-mobile</rename>
      </value>
      <value>
        <name>skype</name>
        <rename>candidate-skype</rename>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1888</xloc>
      <yloc>384</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update 3 3 2 2</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>Y</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>actual_candidate_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>insert_timestamp</name>
        <rename>dateadded</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1904</xloc>
      <yloc>432</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update 4</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <key>
        <name>final_job_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>vertical_id</name>
        <rename>final_industry_id</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1440</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update 4 2</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <key>
        <name>final_job_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>public_description</name>
        <rename>position-publicDescription</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1392</xloc>
      <yloc>768</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update 4 2 2</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <key>
        <name>final_job_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>full_description</name>
        <rename>position-internalDescription</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1392</xloc>
      <yloc>848</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update 4 2 2 2</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <key>
        <name>final_job_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>insert_timestamp</name>
        <rename>dateadded</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1392</xloc>
      <yloc>928</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update 4 3</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <key>
        <name>final_job_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>vertical_id</name>
        <rename>final_industry_id</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1456</xloc>
      <yloc>1200</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update App placed date</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema/>
      <table>position_candidate</table>
      <key>
        <name>VCJobID</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCCandidateID</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>hire_date</name>
        <rename>createddate</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2640</xloc>
      <yloc>1600</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update App status</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema/>
      <table>position_candidate</table>
      <key>
        <name>VCJobID</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCCandidateID</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>status</name>
        <rename>POSITIONCANDIDATE_status</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2448</xloc>
      <yloc>352</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update App status 2</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema/>
      <table>position_candidate</table>
      <key>
        <name>VCJobID</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCCandidateID</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>hire_date</name>
        <rename>start_date</rename>
      </value>
      <value>
        <name>status</name>
        <rename>jobtype</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2848</xloc>
      <yloc>1648</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update Candidate CF</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>additional_form_values</table>
      <key>
        <name>additional_type</name>
        <field>additional_type</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCCandidateID</name>
        <field>additional_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>form_id</name>
        <field>form_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>field_id</name>
        <field>field_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>additional_type</name>
        <rename>additional_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>additional_id</name>
        <rename>VCCandidateID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>form_id</name>
        <rename>form_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>field_id</name>
        <rename>field_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>field_value</name>
        <rename>field_value</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>constraint_id</name>
        <rename>constraint_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1968</xloc>
      <yloc>1984</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update Candidate company</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>300</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>actual_candidate_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>company_name</name>
        <rename>company_name</rename>
      </value>
      <value>
        <name>company_number</name>
        <rename>company_number</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1968</xloc>
      <yloc>1888</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update Candidate desire_salary</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>300</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>desire_salary</name>
        <rename>desire_salary</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1824</xloc>
      <yloc>1376</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update Candidate desire_salary 2</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>300</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>contract_rate</name>
        <rename>Current Pay Rate</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1824</xloc>
      <yloc>1440</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update Company CF</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>additional_form_values</table>
      <key>
        <name>additional_type</name>
        <field>additional_type</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCCompanyID</name>
        <field>additional_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>form_id</name>
        <field>form_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>field_id</name>
        <field>field_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>additional_type</name>
        <rename>additional_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>additional_id</name>
        <rename>VCCompanyID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>form_id</name>
        <rename>form_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>field_id</name>
        <rename>field_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>field_value</name>
        <rename>field_value</rename>
        <update>Y</update>
      </value>
      <value>
        <name>constraint_id</name>
        <rename>constraint_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>288</xloc>
      <yloc>896</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update Config Stage 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>position_candidate</table>
      <key>
        <name>VCJobID</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCCandidateID</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>configurable_stage_id</name>
        <rename>VCConfigStage</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2800</xloc>
      <yloc>864</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update Contact Documents</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>bulk_upload_document_mapping</table>
      <key>
        <name>entity_type</name>
        <field>entity_type</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VC_ID</name>
        <field>entity_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>file_name</name>
        <field>file_name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>document_type</name>
        <field>document_type</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>entity_type</name>
        <rename>entity_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>entity_id</name>
        <rename>VC_ID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>file_name</name>
        <rename>file_name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>document_type</name>
        <rename>document_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>default_file</name>
        <rename>default_file</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2608</xloc>
      <yloc>1328</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update Invoice</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection/>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema/>
      <table>invoice</table>
      <key>
        <name>VCJobAppID</name>
        <field>position_candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCOfferID</name>
        <field>offer_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>position_candidate_id</name>
        <rename>VCJobAppID</rename>
      </value>
      <value>
        <name>offer_id</name>
        <rename>VCOfferID</rename>
      </value>
      <value>
        <name>status</name>
        <rename>InvoiceStatus</rename>
      </value>
      <value>
        <name>renewal_index</name>
        <rename>renewal_index</rename>
      </value>
      <value>
        <name>renewal_flow_status</name>
        <rename>renewal_flow_status</rename>
      </value>
      <value>
        <name>valid</name>
        <rename>valid</rename>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3248</xloc>
      <yloc>1936</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update Language</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema/>
      <table>candidate</table>
      <key>
        <name>actual_candidate_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>skill_details_json</name>
        <rename>field_value_json</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2000</xloc>
      <yloc>2464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update Offer</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection/>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema/>
      <table>offer</table>
      <key>
        <name>VCJobAppID</name>
        <field>position_candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>pay_rate</name>
        <rename>annualsalary</rename>
      </value>
      <value>
        <name>gross_annual_salary</name>
        <rename>annualsalary</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3056</xloc>
      <yloc>1760</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update Rejected date</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema/>
      <table>position_candidate</table>
      <key>
        <name>VCJobID</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCCandidateID</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>rejected_date</name>
        <rename>rejected_date</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2592</xloc>
      <yloc>1136</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update SubStatus</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection/>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>position_candidate</table>
      <key>
        <name>VCJobID</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCCandidateID</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>sub_status_id</name>
        <rename>VCSubStatus</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2912</xloc>
      <yloc>1136</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update Terminated Invoice</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>invoice</table>
      <key>
        <name>VCJobAppID</name>
        <field>position_candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCOfferID</name>
        <field>offer_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>position_candidate_id</name>
        <rename>VCJobAppID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>offer_id</name>
        <rename>VCOfferID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>status</name>
        <rename>InvoiceStatus</rename>
        <update>Y</update>
      </value>
      <value>
        <name>renewal_index</name>
        <rename>renewal_index</rename>
        <update>Y</update>
      </value>
      <value>
        <name>renewal_flow_status</name>
        <rename>renewal_flow_status</rename>
        <update>Y</update>
      </value>
      <value>
        <name>valid</name>
        <rename>valid</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3616</xloc>
      <yloc>304</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update Terminated Invoice 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection/>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>invoice</table>
      <key>
        <name>VCJobAppID</name>
        <field>position_candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCOfferID</name>
        <field>offer_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>position_candidate_id</name>
        <rename>VCJobAppID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>offer_id</name>
        <rename>VCOfferID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>status</name>
        <rename>InvoiceStatus</rename>
        <update>Y</update>
      </value>
      <value>
        <name>renewal_index</name>
        <rename>renewal_index</rename>
        <update>Y</update>
      </value>
      <value>
        <name>renewal_flow_status</name>
        <rename>renewal_flow_status</rename>
        <update>Y</update>
      </value>
      <value>
        <name>valid</name>
        <rename>valid</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3248</xloc>
      <yloc>2112</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update contract status</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema/>
      <table>position_candidate</table>
      <key>
        <name>VCJobID</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCCandidateID</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>hire_date</name>
        <rename>start_date</rename>
      </value>
      <value>
        <name>status</name>
        <rename>jobtype</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2848</xloc>
      <yloc>1792</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update job App status 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>position_candidate</table>
      <key>
        <name>VCJobID</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCCandidateID</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>status</name>
        <rename>POSITIONCANDIDATE_status</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2576</xloc>
      <yloc>352</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update job App status 2 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection/>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>position_candidate</table>
      <key>
        <name>VCJobID</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>VCCandidateID</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>status</name>
        <rename>PlacedStage</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2848</xloc>
      <yloc>1728</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>User.u</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection/>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>user_account</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>split_consultant</name>
        <field>email</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCUserID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2848</xloc>
      <yloc>2016</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>User.u 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>user_account</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>email_1</name>
        <field>email</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCUserID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3248</xloc>
      <yloc>2480</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>User.u 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>user_account</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>email</name>
        <field>email</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCUserID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3248</xloc>
      <yloc>2384</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>User.u 2 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>user_account</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>email_2</name>
        <field>email</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCUserID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3248</xloc>
      <yloc>2592</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>VC SFE</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <schema>public</schema>
    <table>sub_functional_expertise</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field/>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
      <field>
        <column_name>functional_expertise_id</column_name>
        <stream_name>VCFE_ID</stream_name>
      </field>
      <field>
        <column_name>name</column_name>
        <stream_name>vcsfe</stream_name>
      </field>
      <field>
        <column_name>insert_timestamp</column_name>
        <stream_name>insert_timestamp</stream_name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2000</xloc>
      <yloc>2304</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Vincere FE</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <schema>public</schema>
    <table>functional_expertise</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field/>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
      <field>
        <column_name>name</column_name>
        <stream_name>vcfe</stream_name>
      </field>
      <field>
        <column_name>insert_timestamp</column_name>
        <stream_name>insert_timestamp</stream_name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1824</xloc>
      <yloc>2224</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>additional_form_values InsertUpdate 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>additional_form_values</table>
      <key>
        <name>additional_type</name>
        <field>additional_type</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_additional_id</name>
        <field>additional_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>form_id</name>
        <field>form_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>field_id</name>
        <field>field_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>field_value</name>
        <field>field_value</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>additional_type</name>
        <rename>additional_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>additional_id</name>
        <rename>final_additional_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>form_id</name>
        <rename>form_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>field_id</name>
        <rename>field_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>field_value</name>
        <rename>field_value</rename>
        <update>Y</update>
      </value>
      <value>
        <name>constraint_id</name>
        <rename>field_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>848</xloc>
      <yloc>672</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>additional_form_values InsertUpdate 2 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>additional_form_values</table>
      <key>
        <name>additional_type</name>
        <field>additional_type</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_additional_id</name>
        <field>additional_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>form_id</name>
        <field>form_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>field_id</name>
        <field>field_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>field_value</name>
        <field>field_value</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>additional_type</name>
        <rename>additional_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>additional_id</name>
        <rename>final_additional_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>form_id</name>
        <rename>form_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>field_id</name>
        <rename>field_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>field_value</name>
        <rename>field_value</rename>
        <update>Y</update>
      </value>
      <value>
        <name>constraint_id</name>
        <rename>constraint_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1921</xloc>
      <yloc>1519</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>additional_form_values dual</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>additional_form_values</table>
      <key>
        <name>additional_type</name>
        <field>additional_type</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_additional_id</name>
        <field>additional_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>form_id</name>
        <field>form_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>field_id</name>
        <field>field_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>field_value</name>
        <field>field_value</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>additional_type</name>
        <rename>additional_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>additional_id</name>
        <rename>final_additional_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>form_id</name>
        <rename>form_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>field_id</name>
        <rename>field_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>field_value</name>
        <rename>field_value</rename>
        <update>Y</update>
      </value>
      <value>
        <name>constraint_id</name>
        <rename>field_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>848</xloc>
      <yloc>1088</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>cand lookup</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>actual_candidate_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1792</xloc>
      <yloc>1792</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>cand lookup 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>actual_candidate_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1824</xloc>
      <yloc>2464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate_externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_additional_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1761</xloc>
      <yloc>1519</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate 3 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>application-candidateExternalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_candidate_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1344</xloc>
      <yloc>240</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate 3 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_candidate_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1712</xloc>
      <yloc>960</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate 3 3 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection/>
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidateID</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_candidate_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1744</xloc>
      <yloc>1104</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate FE-SFE 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>-- CATEGORY - VC FE info
 with CateSplit(userid, categoryid) as (SELECT userid, Split.a.value('.','varchar(2000)') AS categoryID FROM (SELECT userid, CAST('&lt;M>' + REPLACE(cast(categoryIDList as varchar(max)),',','&lt;/M>&lt;M>') + '&lt;/M>' AS XML) AS x FROM  bullhorn1.Candidate where isPrimaryOwner = 1) t CROSS APPLY x.nodes('/M') as Split(a) )
, CName(Userid, Name) as (SELECT Userid, STUFF((SELECT DISTINCT ', ' + CL.occupation from CateSplit left join bullhorn1.BH_CategoryList CL ON CateSplit.categoryid = CL.categoryID WHERE CateSplit.categoryid &lt;&gt; '' and Userid = a.Userid FOR XML PATH (''), TYPE).value('.', 'nvarchar(MAX)'), 1, 2, '') AS URLList FROM CateSplit as a where a.categoryid &lt;&gt; '' GROUP BY a.Userid)
--, CName(Userid, Name) as (SELECT Userid, CL.occupation from CateSplit left join bullhorn1.BH_CategoryList CL ON CateSplit.categoryid = CL.categoryID )
-- select distinct Name from CName
 
 select 
       CA.candidateID as 'candidate-externalId'
       , case Cname.Name
              when 'Other' then 2983
              when 'Other Area(s)' then 2984
              when 'Sales' then 2985 
              end as fe
from bullhorn1.Candidate CA --where CA.isPrimaryOwner = 1 --where convert(varchar(max),CA.comments) &lt;&gt; ''
left join CName on CA.userID = CName.Userid
where CA.isPrimaryOwner = 1 and CName.name is not null</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1616</xloc>
      <yloc>960</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate id</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contact-externalid</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_candidate_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1840</xloc>
      <yloc>896</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate industry</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>-- BusinessSector: split by separate rows by comma, then combine them into Business Sector(Industry)
with
  BusinessSector0(userid, businessSectorID) as (SELECT userid, a.value as ind FROM  bullhorn1.Candidate m CROSS APPLY STRING_SPLIT( ltrim(rtrim( convert(varchar(100),m.businessSectorIDList) )), ',') AS a where isPrimaryOwner = 1 )
, BusinessSector(userId, BusinessSector) as (SELECT userId, ltrim(rtrim(BSL.name)) as BusinessSector from BusinessSector0 left join bullhorn1.BH_BusinessSectorList BSL ON BusinessSector0.businessSectorID = BSL.businessSectorID WHERE BusinessSector0.businessSectorID &lt;&gt; '' )
select distinct BusinessSector, current_timestamp as insert_timestamp from BusinessSector
  </sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1616</xloc>
      <yloc>816</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate industry (market sector)</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select distinct
      c.id as candidate_id
    , c.firstname as "contact-firstname"
    , coalesce(c.lastname,concat('last name - ',c.id)) as "contact-lastname"
    , c.marketing_sector_ic_c
    , trim(unnest(string_to_array(c.marketing_sector_ic_c, ';')) ) as "industry"
-- select distinct trim( unnest(string_to_array(c.marketing_sector_ic_c, ';')) )
	, now() as insert_timestamp
from contact c
where c.recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')
and c.marketing_sector_ic_c is not null and c.marketing_sector_ic_c &lt;&gt; '' --140043</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>560</xloc>
      <yloc>1408</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate industry 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>with
ind0 as (
select
        c.id as "contact-externalid"
    , c.firstname as "contact-firstname"
    , coalesce(c.lastname,concat('last name - ',c.id)) as "contact-lastname"
    , c.marketing_sector_ic_c
    , trim( unnest(string_to_array(c.marketing_sector_ic_c, ';')) ) as "industry" --**
-- select distinct trim( unnest(string_to_array(c.marketing_sector_ic_c, ';')) )
from contact c
where c.recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')
and c.marketing_sector_ic_c is not null and c.marketing_sector_ic_c &lt;&gt; ''
)

, ind1 as (
select
        "contact-externalid"
      , "contact-firstname", "contact-lastname"
    , "industry"
, now() as insert_timestamp
      , row_number() over(partition by "contact-externalid" order by "contact-externalid") as rn
from ind0
)

select * from ind1 --where rn = 1 limit 123

       </sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1712</xloc>
      <yloc>896</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate industry 3</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <schema>public</schema>
    <table>candidate_industry</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>N</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field>contactid</partitioning_field>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
      <field>
        <column_name>vertical_id</column_name>
        <stream_name>final_industry_id</stream_name>
      </field>
      <field>
        <column_name>candidate_id</column_name>
        <stream_name>VCCandidateID</stream_name>
      </field>
      <field>
        <column_name>insert_timestamp</column_name>
        <stream_name>insert_timestamp</stream_name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>848</xloc>
      <yloc>1408</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate owners</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
-- OWNER
with t as ( 
       select
              a.code as 'candidate-externalId', o.email
              --distinct a.owningcons as 'candidate-owners', o.email
       -- select distinct a.owningcons
       from candidate a
       left join owners o on o.initials = a.owningcons
       where a.owningcons is not null
)
select --top 123
       [candidate-externalId]
       , case
              when email = 'christ@charterhouse.com.hk' then '[{"ownerId":"28985","primary":"true"}]'
              when email = '20170216_082644.983_annabella.poon@hrboss.com' then '[{"ownerId":"28950","primary":"true"}]'
              when email = 'vivianl@charterhouse.com.hk' then '[{"ownerId":"28966","primary":"true"}]'
              when email = 'tassaneea@charterhouse.com.hk' then '[{"ownerId":"28967","primary":"true"}]'
              when email = 'richardn@charterhouse.com.hk' then '[{"ownerId":"28968","primary":"true"}]'
              when email = 'devik@charterhouse.com.hk' then '[{"ownerId":"28969","primary":"true"}]'
              when email = 'bharatim@charterhouse.com.hk' then '[{"ownerId":"28970","primary":"true"}]'
              when email = 'katet@charterhouse.com.hk' then '[{"ownerId":"28971","primary":"true"}]'
              when email = 'enquiries@charterhouse.com.hk' then '[{"ownerId":"28972","primary":"true"}]'
              when email = 'raymondc@charterhouse.com.hk' then '[{"ownerId":"28973","primary":"true"}]'
              when email = 'katrinaw@charterhouse.com.hk' then '[{"ownerId":"28974","primary":"true"}]'
              when email = 'katiel@charterhouse.com.hk' then '[{"ownerId":"28975","primary":"true"}]'
              when email = 'daryl.lee@charterhouse.com.hk' then '[{"ownerId":"28976","primary":"true"}]'
              when email = 'aileeny@charterhouse.com.hk' then '[{"ownerId":"28977","primary":"true"}]'
              when email = 'thomasf@charterhouse.com.hk' then '[{"ownerId":"28978","primary":"true"}]'
              when email = 'nicky.dhillon@charterhouse.com.hk' then '[{"ownerId":"28979","primary":"true"}]'
              when email = 'lindar@charterhouse.com.hk' then '[{"ownerId":"28980","primary":"true"}]'
              when email = 'traceyb@charterhouse.com.hk' then '[{"ownerId":"28981","primary":"true"}]'
              when email = 'andrewm@charterhouse.com.hk' then '[{"ownerId":"28982","primary":"true"}]'
              when email = 'alexc@charterhouse.com.hk' then '[{"ownerId":"28983","primary":"true"}]'
              when email = 'catherinem@charterhouse.com.hk' then '[{"ownerId":"28986","primary":"true"}]'
              when email = 'dilalr@charterhouse.com.hk' then '[{"ownerId":"28987","primary":"true"}]'
              when email = 'jameso@charterhouse.com.hk' then '[{"ownerId":"28988","primary":"true"}]'
              when email = 'arunh@charterhouse.com.hk' then '[{"ownerId":"28989","primary":"true"}]'
              when email = '20170120_085032.208_eloise.sutton@vincere.io' then '[{"ownerId":"28946","primary":"true"}]'
              when email = '20160317_111733.874_nam.nguyen@hrboss.com' then '[{"ownerId":"28942","primary":"true"}]'
              when email = '20170518_074136.656_vu.nguyen@hrboss.com' then '[{"ownerId":"28951","primary":"true"}]'
              when email = '20170523_090651.413_testing1@gmail.com' then '[{"ownerId":"28952","primary":"true"}]'
              when email = '20160317_111742.070_pooja.gulati@hrboss.com' then '[{"ownerId":"28944","primary":"true"}]'
              when email = '20170110_115857.362_linhdory.nguyen@vincere.io' then '[{"ownerId":"28948","primary":"true"}]'
              when email = '20170120_085031.130_annabella.poon@vinceredev.com' then '[{"ownerId":"28945","primary":"true"}]'
              when email = '20170120_085032.626_samuel.collier@vincere.io' then '[{"ownerId":"28947","primary":"true"}]'
              when email = '20160202_063600.611_nam.nguyen@hrboss.com' then '[{"ownerId":"28940","primary":"true"}]'
              when email = '20160317_111737.469_nigel.gardiner@hrboss.com' then '[{"ownerId":"28941","primary":"true"}]'
              when email = '20160317_111746.061_vu.nguyen@hrboss.com' then '[{"ownerId":"28943","primary":"true"}]'
              when email = '20160317_112143.618_bernie.schiemer@hrboss.com' then '[{"ownerId":"28939","primary":"true"}]'
              when email = '20170120_085032.419_linhdory.nguyen@vincere.io' then '[{"ownerId":"28949","primary":"true"}]'
              when email = 'pollyn@charterhouse.com.hk' then '[{"ownerId":"28956","primary":"true"}]'
              when email = 'ruths@charterhouse.com.hk' then '[{"ownerId":"28957","primary":"true"}]'
              when email = 'alexandres@charterhouse.com.hk' then '[{"ownerId":"28954","primary":"true"}]'
              when email = 'stevew@charterhouse.com.hk' then '[{"ownerId":"28955","primary":"true"}]'
              when email = 'antoinet@charterhouse.com.hk' then '[{"ownerId":"28958","primary":"true"}]'
              when email = 'keirb@charterhouse.com.hk' then '[{"ownerId":"28959","primary":"true"}]'
              when email = 'stevenp@charterhouse.com.hk' then '[{"ownerId":"28960","primary":"true"}]'
              when email = 'madeleines@charterhouse.com.hk' then '[{"ownerId":"28961","primary":"true"}]'
              when email = 'guye@charterhouse.com.hk' then '[{"ownerId":"28962","primary":"true"}]'
              when email = 'maggie.yu@charterhouse.com.hk' then '[{"ownerId":"28963","primary":"true"}]'
              when email = 'angelal@charterhouse.com.hk' then '[{"ownerId":"28964","primary":"true"}]'
              when email = 'yifan.yan@charterhouse.com.hk' then '[{"ownerId":"28965","primary":"true"}]'
              when email = 'arvinderp@charterhouse.com.hk' then '[{"ownerId":"28990","primary":"true"}]'
              when email = 'paulg@charterhouse.com.hk' then '[{"ownerId":"28992","primary":"true"}]'
              when email = 'darrenc@charterhouse.com.hk' then '[{"ownerId":"28993","primary":"true"}]'
              when email = 'simonl@charterhouse.com.hk' then '[{"ownerId":"28994","primary":"true"}]'
              when email = 'roccol@charterhouse.com.hk' then '[{"ownerId":"28996","primary":"true"}]'
              when email = 'gracew@charterhouse.com.hk' then '[{"ownerId":"28998","primary":"true"}]'
              when email = 'mattheww@charterhouse.com.hk' then '[{"ownerId":"28999","primary":"true"}]'
              when email = 'josephinec@charterhouse.com.hk' then '[{"ownerId":"29002","primary":"true"}]'
              when email = 'justinc@charterhouse.com.hk' then '[{"ownerId":"29004","primary":"true"}]'
              when email = 'zackm@charterhouse.com.hk' then '[{"ownerId":"29006","primary":"true"}]'
              when email = 'celial@charterhouse.com.hk' then '[{"ownerId":"29007","primary":"true"}]'
              when email = 'thomasl@charterhouse.com.hk' then '[{"ownerId":"29008","primary":"true"}]'
              when email = 'clairep@charterhouse.com.hk' then '[{"ownerId":"29011","primary":"true"}]'
              when email = 'catrina.mok@charterhouse.com.hk' then '[{"ownerId":"29017","primary":"true"}]'
              when email = 'philipq@charterhouse.com.hk' then '[{"ownerId":"29019","primary":"true"}]'
              when email = 'neha.bhardwaj@charterhouse.com.hk' then '[{"ownerId":"29023","primary":"true"}]'
              when email = 'anap@charterhouse.com.hk' then '[{"ownerId":"29024","primary":"true"}]'
              when email = 'shirleyf@charterhouse.com.hk' then '[{"ownerId":"29027","primary":"true"}]'
              when email = 'davids@charterhouse.com.hk' then '[{"ownerId":"29029","primary":"true"}]'
              when email = 'robertf@charterhouse.com.hk' then '[{"ownerId":"29030","primary":"true"}]'
              when email = 'rubyw@charterhouse.com.hk' then '[{"ownerId":"29032","primary":"true"}]'
              when email = 'michelley@charterhouse.com.hk' then '[{"ownerId":"29033","primary":"true"}]'
              when email = 'emilyb@charterhouse.com.hk' then '[{"ownerId":"29036","primary":"true"}]'
              when email = 'erica.wong@charterhouse.com.hk' then '[{"ownerId":"29037","primary":"true"}]'
              when email = 'richardm@charterhouse.com.hk' then '[{"ownerId":"29038","primary":"true"}]'
              when email = 'cifec@charterhouse.com.hk' then '[{"ownerId":"29039","primary":"true"}]'
              when email = 'petrac@charterhouse.com.hk' then '[{"ownerId":"28991","primary":"true"}]'
              when email = 'elizabethy@charterhouse.com.hk' then '[{"ownerId":"28995","primary":"true"}]'
              when email = 'kevinh@charterhouse.com.hk' then '[{"ownerId":"28997","primary":"true"}]'
              when email = 'support@core3.com.au' then '[{"ownerId":"29000","primary":"true"}]'
              when email = 'robinj@charterhouse.com.hk' then '[{"ownerId":"29001","primary":"true"}]'
              when email = 'jackiel@charterhouse.com.hk' then '[{"ownerId":"29003","primary":"true"}]'
              when email = 'stefanies@charterhouse.com.hk' then '[{"ownerId":"29005","primary":"true"}]'
              when email = 'sashas@charterhouse.com.hk' then '[{"ownerId":"29009","primary":"true"}]'
              when email = 'katiew@charterhouse.com.hk' then '[{"ownerId":"29010","primary":"true"}]'
              when email = 'sundarm@charterhouse.com.hk' then '[{"ownerId":"29012","primary":"true"}]'
              when email = 'josephinea@charterhouse.com.hk' then '[{"ownerId":"29013","primary":"true"}]'
              when email = 'moirac@charterhouse.com.hk' then '[{"ownerId":"29014","primary":"true"}]'
              when email = 'edmondc@charterhouse.com.hk' then '[{"ownerId":"29015","primary":"true"}]'
              when email = 'shelley.siu@charterhouse.com.hk' then '[{"ownerId":"29016","primary":"true"}]'
              when email = 'davidc@charterhouse.com.hk' then '[{"ownerId":"29018","primary":"true"}]'
              when email = 'adriang@charterhouse.com.hk' then '[{"ownerId":"29020","primary":"true"}]'
              when email = 'mandyl@charterhouse.com.hk' then '[{"ownerId":"29021","primary":"true"}]'
              when email = 'lucyp@charterhouse.com.hk' then '[{"ownerId":"29022","primary":"true"}]'
              when email = 'reinac@charterhouse.com.hk' then '[{"ownerId":"29025","primary":"true"}]'
              when email = 'emmaw@charterhouse.com.hk' then '[{"ownerId":"29026","primary":"true"}]'
              when email = 'emmal@charterhouse.com.hk' then '[{"ownerId":"29028","primary":"true"}]'
              when email = 'ronaldh@charterhouse.com.hk' then '[{"ownerId":"29031","primary":"true"}]'
              when email = 'silviat@charterhouse.com.hk' then '[{"ownerId":"29034","primary":"true"}]'
              when email = 'mandyc@charterhouse.com.hk' then '[{"ownerId":"29035","primary":"true"}]'
              when email = 'brentm@charterhouse.com.hk' then '[{"ownerId":"29040","primary":"true"}]'
              when email = 'fleurd@charterhouse.com.hk' then '[{"ownerId":"29041","primary":"true"}]'
              when email = 'lasanthar@charterhouse.com.hk' then '[{"ownerId":"29042","primary":"true"}]'
              when email = 'glenn@charterhouse.com.hk' then '[{"ownerId":"29044","primary":"true"}]'
              when email = 'veronicac@charterhouse.com.hk' then '[{"ownerId":"29046","primary":"true"}]'
              when email = 'nathank@charterhouse.com.hk' then '[{"ownerId":"29047","primary":"true"}]'
              when email = 'danvisl@charterhouse.com.hk' then '[{"ownerId":"29049","primary":"true"}]'
              when email = 'pattyl@charterhouse.com.hk' then '[{"ownerId":"29053","primary":"true"}]'
              when email = 'kellyy@charterhouse.com.hk' then '[{"ownerId":"29057","primary":"true"}]'
              when email = 'phoebel@charterhouse.com.hk' then '[{"ownerId":"29058","primary":"true"}]'
              when email = 'jennyt@charterhouse.com.hk' then '[{"ownerId":"29061","primary":"true"}]'
              when email = 'daniell@charterhouse.com.hk' then '[{"ownerId":"29063","primary":"true"}]'
              when email = 'amyl@charterhouse.com.hk' then '[{"ownerId":"29064","primary":"true"}]'
              when email = 'canif@charterhouse.com.hk' then '[{"ownerId":"29066","primary":"true"}]'
              when email = 'emilyh@charterhouse.com.hk' then '[{"ownerId":"29067","primary":"true"}]'
              when email = 'nestor.roldan@charterhouse.com.hk' then '[{"ownerId":"29068","primary":"true"}]'
              when email = 'willc@charterhouse.com.hk' then '[{"ownerId":"29071","primary":"true"}]'
              when email = 'bobby.lee@charterhouse.com.hk' then '[{"ownerId":"29072","primary":"true"}]'
              when email = 'christinec@charterhouse.com.hk' then '[{"ownerId":"29075","primary":"true"}]'
              when email = 'akinan@charterhouse.com.hk' then '[{"ownerId":"29076","primary":"true"}]'
              when email = 'michelle.chan@charterhouse.com.hk' then '[{"ownerId":"29077","primary":"true"}]'
              when email = 'katerina.tse@charterhouse.com.hk' then '[{"ownerId":"29081","primary":"true"}]'
              when email = 'clareb@charterhouse.com.hk' then '[{"ownerId":"29083","primary":"true"}]'
              when email = 'amyf@charterhouse.com.hk' then '[{"ownerId":"29085","primary":"true"}]'
              when email = 'evonk@charterhouse.com.hk' then '[{"ownerId":"29088","primary":"true"}]'
              when email = 'charterhousehk@charterhouse.com.hk' then '[{"ownerId":"29089","primary":"true"}]'
              when email = 'angel.yue@charterhouse.com.hk' then '[{"ownerId":"29092","primary":"true"}]'
              when email = 'fannyc@charterhouse.com.hk' then '[{"ownerId":"29093","primary":"true"}]'
              when email = 'emilyy@charterhouse.com.hk' then '[{"ownerId":"29043","primary":"true"}]'
              when email = 'philph@charterhouse.com.hk' then '[{"ownerId":"29045","primary":"true"}]'
              when email = 'junel@charterhouse.com.hk' then '[{"ownerId":"29048","primary":"true"}]'
              when email = 'catherinab@charterhouse.com.hk' then '[{"ownerId":"29050","primary":"true"}]'
              when email = 'joew@charterhouse.com.hk' then '[{"ownerId":"29051","primary":"true"}]'
              when email = 'sonnyp@charterhouse.com.hk' then '[{"ownerId":"29052","primary":"true"}]'
              when email = 'jacklinel@charterhouse.com.hk' then '[{"ownerId":"29054","primary":"true"}]'
              when email = 'elliep@charterhouse.com.hk' then '[{"ownerId":"29055","primary":"true"}]'
              when email = 'marco.lau@charterhouse.com.hk' then '[{"ownerId":"29056","primary":"true"}]'
              when email = 'williamy@charterhouse.com.hk' then '[{"ownerId":"29059","primary":"true"}]'
              when email = 'stephaniec@charterhouse.com.hk' then '[{"ownerId":"29060","primary":"true"}]'
              when email = 'kevinp@charterhouse.com.hk' then '[{"ownerId":"29062","primary":"true"}]'
              when email = 'joem@charterhouse.com.hk' then '[{"ownerId":"29065","primary":"true"}]'
              when email = 'andy.pong@charterhouse.com.hk' then '[{"ownerId":"29069","primary":"true"}]'
              when email = 'wing.au@charterhouse.com.hk' then '[{"ownerId":"29070","primary":"true"}]'
              when email = 'julia.wan@charterhouse.com.hk' then '[{"ownerId":"29073","primary":"true"}]'
              when email = 'Kenny.lee@charterhouse.com.hk' then '[{"ownerId":"29078","primary":"true"}]'
              when email = 'Joey.lai@charterhouse.com.hk' then '[{"ownerId":"29079","primary":"true"}]'
              when email = 'Tiffany.lai@charterhouse.com.hk' then '[{"ownerId":"29080","primary":"true"}]'
              when email = 'Garfield.yau@charterhouse.com.hk' then '[{"ownerId":"29082","primary":"true"}]'
              when email = 'rafaelw@charterhouse.com.hk' then '[{"ownerId":"29084","primary":"true"}]'
              when email = 'markc@charterhouse.com.hk' then '[{"ownerId":"29086","primary":"true"}]'
              when email = 'Karen.dancel@charterhouse.com.hk' then '[{"ownerId":"29087","primary":"true"}]'
              when email = 'marky@charterhouse.com.hk' then '[{"ownerId":"29090","primary":"true"}]'
              when email = 'michellel@charterhouse.com.hk' then '[{"ownerId":"29091","primary":"true"}]'
              when email = 'vickiel@charterhouse.com.hk' then '[{"ownerId":"29094","primary":"true"}]'
              when email = 'matthewd@charterhouse.com.hk' then '[{"ownerId":"29095","primary":"true"}]'
              when email = 'adac@charterhouse.com.hk' then '[{"ownerId":"29096","primary":"true"}]'
              when email = 'corrinad@charterhouse.com.hk' then '[{"ownerId":"29097","primary":"true"}]'
              when email = 'khimh@charterhouse.com.hk' then '[{"ownerId":"29098","primary":"true"}]'
              when email = 'mayap@charterhouse.com.hk' then '[{"ownerId":"29099","primary":"true"}]'
              when email = 'chrisw@charterhouse.com.hk' then '[{"ownerId":"29100","primary":"true"}]'
              when email = 'markb@charterhouse.com.hk' then '[{"ownerId":"29101","primary":"true"}]'
              when email = 'cindyw@charterhouse.com.hk' then '[{"ownerId":"29102","primary":"true"}]'
              when email = 'vanitas@charterhouse.com.hk' then '[{"ownerId":"29103","primary":"true"}]'
              when email = 'travis.leung@charterhouse.com.hk' then '[{"ownerId":"29104","primary":"true"}]'
              when email = 'scarlett.zhu@charterhouse.com.hk' then '[{"ownerId":"29105","primary":"true"}]'
              when email = 'sabrinah@charterhouse.com.hk' then '[{"ownerId":"29106","primary":"true"}]'
              when email = 'karens@charterhouse.com.hk' then '[{"ownerId":"29107","primary":"true"}]'
              when email = 'chasem@charterhouse.com.hk' then '[{"ownerId":"29108","primary":"true"}]'
              when email = 'aalokl@charterhouse.com.hk' then '[{"ownerId":"29109","primary":"true"}]'
              when email = 'regann@charterhouse.com.hk' then '[{"ownerId":"29110","primary":"true"}]'
              when email = 'ceceliay@charterhouse.com.hk' then '[{"ownerId":"29117","primary":"true"}]'
              when email = 'sysadmin@vincere.io' then '[{"ownerId":"-10","primary":"true"}]'
              when email = 'cherryt@charterhouse.com.hk' then '[{"ownerId":"29111","primary":"true"}]'
              when email = 'charterhouseprod@veryrealemail.com' then '[{"ownerId":"28953","primary":"true"}]'
              when email = 'enquiry@charterhouse.com.sg' then '[{"ownerId":"29112","primary":"true"}]'
              when email = 'maryw@charterhouse.com.hk' then '[{"ownerId":"29113","primary":"true"}]'
              when email = 'luke.phibbs@charterhouse.com.hk' then '[{"ownerId":"29074","primary":"true"}]'
              when email = 'noellec@charterhouse.com.hk' then '[{"ownerId":"29114","primary":"true"}]'
              when email = 'kalinann@charterhouse.com.hk' then '[{"ownerId":"29115","primary":"true"}]'
              when email = 'winky.cheung@charterhouse.com.hk' then '[{"ownerId":"28984","primary":"true"}]'
              when email = 'neonc@charterhouse.com.hk' then '[{"ownerId":"29118","primary":"true"}]'
              when email = 'winniek@charterhouse.com.hk' then '[{"ownerId":"29116","primary":"true"}]'
              when email = 'dollies@charterhouse.com.hk' then '[{"ownerId":"29119","primary":"true"}]'
              when email = 'roshanp@charterhouse.com.hk' then '[{"ownerId":"29120","primary":"true"}]'
              when email = 'mandyli@charterhouse.com.hk' then '[{"ownerId":"29121","primary":"true"}]'
              when email = 'patricial@charterhouse.com.hk' then '[{"ownerId":"29122","primary":"true"}]'
              when email = 'frontline@charterhouse.com.hk' then '[{"ownerId":"29123","primary":"true"}]'
              end as candidate_owner_json       
from t 
where email is not null

</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1631</xloc>
      <yloc>1291</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate umbrella</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>--Candidate company name/number
select c.id as candidate_id
, c.limited_company_c
, case when a."name" is NULL then c.umbrella_company_name_c
	else a."name" end as company_name
, a.reg_no_c as company_number --candidate company number (Reg Number)
, c.umbrella_company_name_c
from contact c
left join account a on a.id = c.limited_company_c
where c.recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')
and (c.limited_company_c is not NULL --1123 rows
		or c.umbrella_company_name_c is not NULL) --1124 rows
		
/* AUDIT 1 candidate with umbrella company --0030Y00000csQxEQAU
--Candidate company name/number
select c.id as candidate_id
, c.limited_company_c
, a."name" as company_name
, a.reg_no_c as company_number --candidate company number (Reg Number)
, c.umbrella_company_name_c
from contact c
left join account a on a.id = c.limited_company_c
where c.recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')
and (c.limited_company_c is NULL --1123 rows
		and c.umbrella_company_name_c is not NULL) --1124 rows
*/</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1648</xloc>
      <yloc>1888</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate_email_subscribed</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>with t as (
select
--        c.id as "contact-externalid"
--    , c.firstname as "contact-firstname"
--    , coalesce(c.lastname,concat('last name - ',c.id)) as "contact-lastname"
     ltrim(rtrim(lower(email::varchar))) as "email"

-- select distinct c.hasoptedoutofemail, count(*)
from contact c --group by c.hasoptedoutofemail
where c.hasoptedoutofemail = '1' and email is not null and email &lt;&gt; '' and email like '%_@_%.__%' and  email not like '% %' and  email not like '%;%'

UNION

select
--        c.id as "contact-externalid"
--    , c.firstname as "contact-firstname"
--    , coalesce(c.lastname,concat('last name - ',c.id)) as "contact-lastname"
     ltrim(rtrim(lower(other_emails_c::varchar))) as "email"
    
-- select distinct c.hasoptedoutofemail, count(*)
from contact c --group by c.hasoptedoutofemail
where c.hasoptedoutofemail = '1' and other_emails_c is not null and other_emails_c &lt;&gt; '' and other_emails_c like '%_@_%.__%' and  other_emails_c not like '% %' and  other_emails_c not like '%;%'
)

select distinct email, 0 as "subcribed" 
, now() as insert_timestamp
from t --2945</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>560</xloc>
      <yloc>912</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate_functional_expertise 2</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <schema>public</schema>
    <table>candidate_functional_expertise</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>Y</ignore_errors>
    <use_batch>N</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field>contactid</partitioning_field>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
      <field>
        <column_name>candidate_id</column_name>
        <stream_name>final_candidate_id</stream_name>
      </field>
      <field>
        <column_name>functional_expertise_id</column_name>
        <stream_name>fe</stream_name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1872</xloc>
      <yloc>960</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate_industry</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <schema>public</schema>
    <table>candidate_industry</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>Y</ignore_errors>
    <use_batch>N</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field>contactid</partitioning_field>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
      <field>
        <column_name>vertical_id</column_name>
        <stream_name>final_industry_id</stream_name>
      </field>
      <field>
        <column_name>candidate_id</column_name>
        <stream_name>final_candidate_id</stream_name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1952</xloc>
      <yloc>816</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate_industry 2 2 2 2 2 2</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <schema>public</schema>
    <table>activity</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>N</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field>contactid</partitioning_field>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
      <field>
        <column_name>candidate_id</column_name>
        <stream_name>actual_candidateid</stream_name>
      </field>
      <field>
        <column_name>user_account_id</column_name>
        <stream_name>user_account_id</stream_name>
      </field>
      <field>
        <column_name>insert_timestamp</column_name>
        <stream_name>insert_timestamp</stream_name>
      </field>
      <field>
        <column_name>content</column_name>
        <stream_name>content</stream_name>
      </field>
      <field>
        <column_name>type</column_name>
        <stream_name>type</stream_name>
      </field>
      <field>
        <column_name>category</column_name>
        <stream_name>category</stream_name>
      </field>
      <field>
        <column_name>userMessageID</column_name>
        <stream_name>userMessageID</stream_name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1952</xloc>
      <yloc>272</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate_industry 2 2 2 2 2 2 2</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <schema>public</schema>
    <table>activity</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>N</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field>contactid</partitioning_field>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
      <field>
        <column_name>candidate_id</column_name>
        <stream_name>actual_candidate_id</stream_name>
      </field>
      <field>
        <column_name>user_account_id</column_name>
        <stream_name>user_account_id</stream_name>
      </field>
      <field>
        <column_name>insert_timestamp</column_name>
        <stream_name>insert_timestamp</stream_name>
      </field>
      <field>
        <column_name>content</column_name>
        <stream_name>content</stream_name>
      </field>
      <field>
        <column_name>type</column_name>
        <stream_name>type</stream_name>
      </field>
      <field>
        <column_name>category</column_name>
        <stream_name>category</stream_name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1952</xloc>
      <yloc>160</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate_lookup</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>candidate_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCCandidateID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>800</xloc>
      <yloc>2336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate_source</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>candidate_source</table>
      <key>
        <name>name</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>payment_style</name>
        <field>payment_style</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>name</name>
        <rename>name</rename>
        <update>Y</update>
      </value>
      <value>
        <name>source_type</name>
        <rename>source_type</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>payment_style</name>
        <rename>payment_style</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1728</xloc>
      <yloc>672</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate_source_id</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>vc_candidate_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>candidate_source_id</name>
        <rename>vc_source_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1936</xloc>
      <yloc>672</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate_source_id 2</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>candidate</table>
      <key>
        <name>vc_candidate_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>candidate_source_id</name>
        <rename>vc_source_id</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1936</xloc>
      <yloc>736</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>candidate_source_id 3</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>user_account</table>
      <key>
        <name>email</name>
        <field>email</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>email</name>
        <rename>email</rename>
        <update>Y</update>
      </value>
      <value>
        <name>name</name>
        <rename>username</rename>
        <update>Y</update>
      </value>
      <value>
        <name>super_user</name>
        <rename>super_user</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
      <value>
        <name>first_name</name>
        <rename>username</rename>
        <update>Y</update>
      </value>
      <value>
        <name>last_name</name>
        <rename>username</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1791</xloc>
      <yloc>1195</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>cf 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>with t as (
select
        c.id as "contact-externalid"
    , c.firstname as "contact-firstname"
      , coalesce(c.lastname,concat('last name - ',c.id)) as "contact-lastname"
      , trim(unnest(string_to_array(c.area_c, ';'))) as "field_value" --**
      --, c.area_c as field_value --"CUSTOM FIELD > Area (TAGS TYPE)"
-- select distinct trim( unnest(string_to_array(c.area_c, ';')) )
from contact c
where c.recordtypeid in ('0120Y0000013O5d')
and area_c is not null and area_c &lt;&gt; ''
)

select
        "contact-externalid"
    --, "contact-firstname"
      --, "contact-lastname"
      , 'add_con_info' as additional_type
      , 1007 as form_id
      , 11268 as field_id
      , string_agg(
case 
when field_value = 'Austria' then '1'
when field_value = 'Benelux' then '2'
when field_value = 'DACH' then '3'
when field_value = 'Eastern Europe' then '4'
when field_value = 'Far East' then '5'
when field_value = 'France' then '6'
when field_value = 'Germany' then '7'
when field_value = 'Germany - Munich' then '8'
when field_value = 'Germany - Northern' then '9'
when field_value = 'Germany - Southern' then '10'
when field_value = 'Italy' then '11'
when field_value = 'Mainland Europe' then '12'
when field_value = 'Middle East' then '13'
when field_value = 'Other' then '14'
when field_value = 'Philippines' then '15'
when field_value = 'Remote' then '16'
when field_value = 'Scandinavia' then '17'
when field_value = 'Spain/Portugal' then '18'
when field_value = 'Switzerland' then '19'
when field_value = 'UK' then '20'
when field_value = 'UK - Greater London' then '21'
when field_value = 'UK - Ireland' then '22'
when field_value = 'UK - London - Central' then '23'
when field_value = 'UK - North East' then '24'
when field_value = 'UK - North West' then '25'
when field_value = 'UK - Scotland' then '26'
when field_value = 'UK - ThamesValley' then '27'
when field_value = 'UK - Wales' then '28'
when field_value = 'UK- East Anglia' then '29'
when field_value = 'UK- H. Counties' then '30'
when field_value = 'UK- South Coast' then '31'
when field_value = 'UK- South East' then '32'
when field_value = 'UK- South West' then '33'
when field_value = 'UK-Midlands' then '34'
when field_value = 'US CA North' then '35'
when field_value = 'US CA South' then '36'
when field_value = 'US E Coast' then '37'
when field_value = 'US N Central' then '38'
when field_value = 'US N West' then '39'
when field_value = 'US S Central' then '40'
when field_value = 'USA/Canada' then '41'
when field_value = 'ZZold Australia (IC)' then '42'
      end, ',') as "field_value" --**
from t
where field_value is not null and field_value &lt;&gt; ''
group by "contact-externalid"</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>560</xloc>
      <yloc>672</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>cf 2 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>-- AREA
SELECT
        c.id as "candidate_externalId"
       , 'add_cand_info' as additional_type
       , 1005 as form_id
       , 11269 as field_id
       , c.area_c as field_value
       , 11269 as constraint_id
from contact c
where c.recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')    
and  c.area_c is not null and c.area_c &lt;&gt; ''</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1633</xloc>
      <yloc>1519</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>comp lookup</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>company_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCCompanyID</rename>
        <default/>
        <type>Number</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>208</xloc>
      <yloc>1744</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>external_additional_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_additional_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>224</xloc>
      <yloc>608</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>company-externalid</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_companyl_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>224</xloc>
      <yloc>688</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company activity</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <schema>public</schema>
    <table>activity</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>N</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field>contactid</partitioning_field>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
      <field>
        <column_name>company_id</column_name>
        <stream_name>actual_id</stream_name>
      </field>
      <field>
        <column_name>user_account_id</column_name>
        <stream_name>user_account_id</stream_name>
      </field>
      <field>
        <column_name>insert_timestamp</column_name>
        <stream_name>insert_timestamp</stream_name>
      </field>
      <field>
        <column_name>content</column_name>
        <stream_name>content</stream_name>
      </field>
      <field>
        <column_name>type</column_name>
        <stream_name>type</stream_name>
      </field>
      <field>
        <column_name>category</column_name>
        <stream_name>category</stream_name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>400</xloc>
      <yloc>96</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company industry</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>with
ind (clientCorporationID,ind) as (SELECT clientCorporationID, ind.value as ind FROM bullhorn1.BH_ClientCorporation m CROSS APPLY STRING_SPLIT( ltrim(rtrim( convert(varchar(100),m.businessSectorList) )), ';') AS ind)

select
       distinct ind as 'company-industry'
       , current_timestamp as insert_timestamp
from ind
where ind &lt;&gt; ''</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>80</xloc>
      <yloc>272</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company industry 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>--duplication recognition
with
dup as (select id, name, row_number() over(partition by lower(trim(name)) order by id desc) as rn from account)

,ind0 as (
      select
               a.id as "company-externalid"
             , case
                    when dup.rn = 1 then coalesce(a.name,concat('No Company Name - ',a.id))
                    when dup.rn > 1 then concat(dup.name, ' - ', dup.rn)
                    end as "company-name"
             , a.market_sector_c
             , trim( unnest(string_to_array(a.market_sector_c, ';')) ) as "industry" --**
      -- select distinct trim( unnest(string_to_array(c.market_sector_c, ';')) )
      from account a
      left join dup on a.id = dup.id
      where a.market_sector_c is not null and a.market_sector_c &lt;&gt; ''
)

, ind1 as (
      select
               "company-externalid"
             , "company-name"
             , "industry"
             , row_number() over(partition by "company-externalid" order by "company-externalid") as rn
      from ind0
)

select * from ind1 --where rn = 1 limit 123</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>208</xloc>
      <yloc>352</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company location lookup</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company_location</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>VCCompanyID</name>
        <field>company_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>contact-address</name>
        <field>address</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>contact-country</name>
        <field>country_code</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>location_type</name>
        <field>location_type</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCAddressID</rename>
        <default/>
        <type>Number</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>368</xloc>
      <yloc>1824</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company-linkedin</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <key>
        <name>final_companyl_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>url_linkedin</name>
        <rename>company-linkedin</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>336</xloc>
      <yloc>752</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>company_industry 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>company_industry</table>
      <key>
        <name>final_industry_id</name>
        <field>industry_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>final_company_id</name>
        <field>company_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>industry_id</name>
        <rename>final_industry_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>company_id</name>
        <rename>final_company_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>432</xloc>
      <yloc>272</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>compensation 2</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>compensation</table>
      <key>
        <name>actual_id</name>
        <field>position_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>annual_salary_from</name>
        <rename>FromSalary</rename>
      </value>
      <value>
        <name>annual_salary_to</name>
        <rename>ToSalary</rename>
      </value>
      <value>
        <name>percentage_of_annual_salary</name>
        <rename>Quick Fee Forecast %</rename>
      </value>
      <value>
        <name>use_quick_fee_forecast</name>
        <rename>use_quick_fee_forecast</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1312</xloc>
      <yloc>608</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>compensation 2 2</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>compensation</table>
      <key>
        <name>actual_id</name>
        <field>position_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>percentage_of_annual_salary</name>
        <rename>Quick Fee Forecast</rename>
      </value>
      <value>
        <name>use_quick_fee_forecast</name>
        <rename>use_quick_fee_forecast</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1408</xloc>
      <yloc>528</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>compensation annual_salary_from</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>compensation</table>
      <key>
        <name>actual_id</name>
        <field>position_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>annual_salary_from</name>
        <rename>Annual Salary From</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1408</xloc>
      <yloc>576</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>compensation annual_salary_to</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>compensation</table>
      <key>
        <name>actual_id</name>
        <field>position_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>annual_salary_to</name>
        <rename>Annual Salary To</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1408</xloc>
      <yloc>640</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>compensation_period</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>compensation_period</table>
      <key>
        <name>VCJobID</name>
        <field>position_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>position_id</name>
        <rename>VCJobID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>from_date</name>
        <rename>start_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>to_date</name>
        <rename>to_date</rename>
        <update>Y</update>
      </value>
      <value>
        <name>period_type</name>
        <rename>compensation_period__period_type</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2880</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contact-externalid</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_additional_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>688</xloc>
      <yloc>672</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contact_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_additional_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>688</xloc>
      <yloc>1088</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contact_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCContactID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>704</xloc>
      <yloc>1296</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact FE-SFE</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
-- FE
select 
       Cl.clientid
       --, UC.categoryID
       , cat.occupation
from bullhorn1.BH_Client Cl 
left join bullhorn1.BH_UserContact UC ON Cl.userID = UC.userID 
left join bullhorn1.BH_CategoryList cat ON cat.categoryID = UC.categoryID
where Cl.isPrimaryOwner = 1
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>560</xloc>
      <yloc>752</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact FE-SFE 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection/>
    <sql>
with skill as (select c.contactid,ss.skill from Contacts c left join SkillInstances si on c.contactid = si.objectid  left join skills ss on si.skillid = ss.skillid)
select --top 200
                  CL.ContactId
                --, CL.FirstName, CL.LastName
         
		--, CL.Sector as 'INDUSTRY' --> VC vertical.name
                , case
                        when CL.Sector = 'Ad Networks' then 'Advertising Networks/Adtech Agency'
                        when CL.Sector = 'Advertising' then 'Advertising Agency'
                        when CL.Sector = 'Branding/Design' then 'Branding and Design Agency'
                        when CL.Sector = 'Business Intelligence' then 'Business Intelligence Agency'
                        when CL.Sector = 'Consulting Services' then ''
                        when CL.Sector = 'Digital' then 'Digital Agency'
                        when CL.Sector = 'Market Research/Insights' then 'Market Research/Insights Agency'
                        when CL.Sector = 'Marketing' then 'Marketing Agency'
                        when CL.Sector = 'Marketing Services' then 'Marketing Agency'
                        when CL.Sector = 'Media' then 'Media Agency'
                        when CL.Sector = 'Medical Education' then 'Medical Education Agency'
                        when CL.Sector = 'Mobile Marketing' then 'Mobile Marketing Agency'
                        when CL.Sector = 'Non Dept Gov Body' then 'Non Dept Gov Body'
                        when CL.Sector = 'Pharmacuetical/Bio Tech' then 'Pharmaceutical and BioTech'
                        when CL.Sector = 'Platforms' then 'Technology'
                        when CL.Sector = 'PR and Communications' then 'PR and Communications Agency'
                        when CL.Sector = 'Public Affairs' then 'Public Affairs Agency'
                        when CL.Sector = 'Shopping Marketing' then 'Shopper Marketing Agency'
                        when CL.Sector = 'Social Media' then 'Social Media Agency'
                        when CL.Sector = 'Strategy Consulting' then 'Strategy Consulting Agency'
                        when CL.Sector = '' then 'Content Agency'
                        when CL.Sector is null then 'Content Agency'
                        else CL.Sector
                        end as 'INDUSTRY' --> VC vertical.name
                
                --, CL.Segment as 'FUNCTIONAL_EXPERTISE(old)' --> VC functional_expertise.name
                , Coalesce(NULLIF(case
                        when CL.Segment = '' then ''
                        when CL.Segment = 'Asset management' then ''
                        when CL.Segment = 'Branding/Design' then 'Branding and Design'
                        when CL.Segment = 'Broadcast' then ''
                        when CL.Segment = 'Broadcasting Agency' then ''
                        when CL.Segment = 'Broadcasting PR' then 'Broadcast PR'
                        when CL.Segment = 'Business Services' then ''
                        when CL.Segment = 'Commercial Support' then ''
                        when CL.Segment = 'Comms' then 'Communications Planning'
                        when CL.Segment = 'Consumer' then 'Consumer PR'
                        when CL.Segment = 'Consumer Tech' then ''
                        when CL.Segment = 'corporate' then 'Corporate PR'
                        when CL.Segment = 'Cross' then 'Media Cross'
                        when CL.Segment = 'Defence' then ''
                        when CL.Segment = 'Education' then ''
                        when CL.Segment = 'Energy' then ''
                        when CL.Segment = 'Entertainment' then ''
                        when CL.Segment = 'financial' then 'Financial PR'
                        when CL.Segment = 'Financial Services' then ''
                        when CL.Segment = 'FMCG' then ''
                        when CL.Segment = 'healthcare' then ''
                        when CL.Segment = 'Healthcare / Pharma' then ''
                        when CL.Segment = 'HR' then 'Human Resources'
                        when CL.Segment = 'Internal Communictions' then 'Internal Communications'
                        when CL.Segment = 'Internal PR' then 'Internal Communications'
                        when CL.Segment = 'Luxury' then ''
                        when CL.Segment = 'Management Consultancy' then ''
                        when CL.Segment = 'Market Reseach/Insight' then 'Market Research and Insights '
                        when CL.Segment = 'Market Research' then 'Market Research and Insights '
                        when CL.Segment = 'Market Research / Insights' then 'Market Research and Insights '
                        when CL.Segment = 'Market Research/Insight' then 'Market Research and Insights '
                        when CL.Segment = 'Market Research/Insights' then ''
                        when CL.Segment = 'Marketing / Insight' then ''
                        when CL.Segment = 'Marketing Services' then ''
                        when CL.Segment = 'Marketing/Insight' then ''
                        when CL.Segment = 'Media' then ''
                        when CL.Segment = 'Medical Education' then 'Medical Affairs'
                        when CL.Segment = 'Not for profit' then ''
                        when CL.Segment = 'Office' then ''
                        when CL.Segment = 'Planning and Buying Agency' then 'Planning and Buying'
                        when CL.Segment = 'PR and Communications' then ''
                        when CL.Segment = 'Production Agency' then ''
                        when CL.Segment = 'Professional Services' then ''
                        when CL.Segment = 'Project Management' then ''
                        when CL.Segment = 'Public Relations' then ''
                        when CL.Segment = 'Public Sector' then ''
                        when CL.Segment = 'Pure Player' then 'Pure Play Digital '
                        when CL.Segment = 'Retail' then ''
                        when CL.Segment = 'Sale' then 'Sales'
                        when CL.Segment = 'Shopping Marketing' then 'Shopper Marketing'
                        when CL.Segment = 'Strategy Consultancy' then ''
                        when CL.Segment = 'Strategy Consulting' then ''
                        when CL.Segment = 'Supply Side Platform' then 'Supply Side Platform '
                        when CL.Segment = 'technology' then 'Technology  '
                        when CL.Segment = 'Transport' then ''
                        when CL.Segment = 'Utilities' then ''
                        when CL.Segment = 'Web' then ''
                else CL.Segment
                end, ''), 'Others') as 'FUNCTIONAL_EXPERTISE' --> VC functional_expertise.name
                
		--, skill.skill as 'SUB-FUNCTIONAL_EXPERTISE(old)' --> VC sub_functional_expertise.name
		, case
                        when skill.skill = 'Advertising' then ''
                        when skill.skill = 'Consumer Technology' then ''
                        when skill.skill = 'Consumer Technology' then ''
                        when skill.skill = 'Crisis &amp; Issues Managment' then 'Crisis &amp; Issues Management'
                        when skill.skill = 'Data &amp; Analysis' then 'Data Analytics'
                        when skill.skill = 'Defence and Security' then 'Defence'
                        when skill.skill = 'Field Marketing' then ''
                        when skill.skill = 'Field Sales' then ''
                        when skill.skill = 'Hibernate' then ''
                        when skill.skill = 'Information Architecture' then ''
                        when skill.skill = 'Java' then 'Javascript'
                        when skill.skill = 'Logistics &amp; Express' then ''
                        when skill.skill = 'Magento' then ''
                        when skill.skill = 'Measurement &amp; Evaluation' then 'Analytics'
                        when skill.skill = 'Modeling' then ''
                        when skill.skill = 'NodeJS' then ''
                        when skill.skill = 'Objective-c' then ''
                        when skill.skill = 'On Rails' then ''
                        when skill.skill = 'OOH' then ''
                        when skill.skill = 'OS' then ''
                        when skill.skill = 'OTC' then ''
                        when skill.skill = 'pharmaceuticals' then 'Pharamaceutical'
                        when skill.skill = 'Prestashop' then ''
                        when skill.skill = 'Pricing and Reimbursement' then ''
                        when skill.skill = 'Print' then ''
                        when skill.skill = 'Product Design' then ''
                        when skill.skill = 'Quantitative research' then 'Quantative Research'
                        when skill.skill = 'Spring' then ''
                        when skill.skill = 'SVN' then ''
                        when skill.skill = 'Swift' then ''
                        when skill.skill = 'Trade Activation' then ''
                        when skill.skill = 'Transport' then ''
                        when skill.skill = 'Travel &amp; Tourism' then 'Travel and Tourism'
                        when skill.skill = 'Unix' then ''
                        when skill.skill = 'UX' then ''
                        when skill.skill = 'W3C compliance,' then ''
                        when skill.skill = 'Windows' then ''
                        when skill.skill = 'Wireless' then ''
                else skill.skill
                end as 'SUB-FUNCTIONAL_EXPERTISE' --> VC sub_functional_expertise.name

from Contacts CL
left join skill on CL.contactid = skill.contactid
left join (SELECT contactid, skill = STUFF((SELECT skill + char(10) FROM skill b WHERE b.contactid = a.contactid FOR XML PATH(''), TYPE).value('.', 'nvarchar(MAX)'), 1, 0, '') FROM skill a GROUP BY contactid) skills on CL.contactid = skills.contactid
where cl.descriptor = 1
--and CL.ContactId in ('909076-2318-15147')
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>560</xloc>
      <yloc>832</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact id</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>clientid</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_contact_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>688</xloc>
      <yloc>752</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact id 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contact-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_contact_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>816</xloc>
      <yloc>592</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact id 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contact_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_contact_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>704</xloc>
      <yloc>1568</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact id 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection/>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>ContactId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_contact_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>672</xloc>
      <yloc>832</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact industry (market sector)</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select distinct
      c.id as contact_id
    , c.firstname as "contact-firstname"
    , coalesce(c.lastname,concat('last name - ',c.id)) as "contact-lastname"
    , c.marketing_sector_ic_c
    , trim(unnest(string_to_array(c.marketing_sector_ic_c, ';')) ) as "industry"
-- select distinct trim( unnest(string_to_array(c.marketing_sector_ic_c, ';')) )
	, now() as insert_timestamp
from contact c
where c.recordtypeid in ('0120Y0000013O5d')
and c.marketing_sector_ic_c is not null and c.marketing_sector_ic_c &lt;&gt; '' --38849</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>560</xloc>
      <yloc>1568</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact industry 2 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>with
ind0 as (
select
        c.id as "contact-externalid"
    , c.firstname as "contact-firstname"
    , coalesce(c.lastname,concat('last name - ',c.id)) as "contact-lastname"
    , c.marketing_sector_ic_c
    , trim( unnest(string_to_array(c.marketing_sector_ic_c, ';')) ) as "industry" --**
-- select distinct trim( unnest(string_to_array(c.marketing_sector_ic_c, ';')) )
from contact c
where c.recordtypeid in ('0120Y0000013O5d')
and c.marketing_sector_ic_c is not null and c.marketing_sector_ic_c &lt;&gt; ''
)

, ind1 as (
select
        "contact-externalid"
      , "contact-firstname", "contact-lastname"
    , "industry"
      , row_number() over(partition by "contact-externalid" order by "contact-externalid") as rn
from ind0
)

select * from ind1 --where rn = 1 limit 123</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>672</xloc>
      <yloc>592</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact industry 3</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
-- BusinessSector: split by separate rows by comma, then combine them into Business Sector(Industry)
with
  BusinessSector0(userid, businessSectorID) as (SELECT userid, a.value as ind FROM  ( select Cl.userID, UC.businessSectorIDList from bullhorn1.BH_Client Cl left join bullhorn1.BH_UserContact UC ON Cl.userID = UC.userID where Cl.isPrimaryOwner = 1 and convert(varchar(100),UC.businessSectorIDList) &lt;&gt; '' and UC.businessSectorIDList is not null ) m CROSS APPLY STRING_SPLIT( ltrim(rtrim( convert(varchar(100),m.businessSectorIDList) )), ',') AS a )
, BusinessSector(userId, BusinessSector) as (SELECT userId, ltrim(rtrim(BSL.name)) as BusinessSector from BusinessSector0 left join bullhorn1.BH_BusinessSectorList BSL ON BusinessSector0.businessSectorID = BSL.businessSectorID WHERE BusinessSector0.businessSectorID &lt;&gt; '' )
-- select * from BusinessSector
select
       distinct BusinessSector
       , current_timestamp as insert_timestamp
from BusinessSector</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>560</xloc>
      <yloc>512</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact lookup</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contact_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCContactID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>800</xloc>
      <yloc>2128</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact lookup 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>contact_id</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>VCContactID</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>208</xloc>
      <yloc>1824</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact work location</name>
    <type>TableOutput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <schema>public</schema>
    <table>contact_location</table>
    <commit>100</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>N</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field>contactid</partitioning_field>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
      <field>
        <column_name>contact_id</column_name>
        <stream_name>VCContactID</stream_name>
      </field>
      <field>
        <column_name>insert_timestamp</column_name>
        <stream_name>insert_timestamp</stream_name>
      </field>
      <field>
        <column_name>company_location_id</column_name>
        <stream_name>VCAddressID</stream_name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>512</xloc>
      <yloc>1824</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact_functional_expertise 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>contact_functional_expertise</table>
      <key>
        <name>final_contact_id</name>
        <field>contact_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>functional_expertise_id</name>
        <rename>final_fe_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>contact_id</name>
        <rename>final_contact_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>896</xloc>
      <yloc>752</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact_functional_expertise 2 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection/>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>contact_functional_expertise</table>
      <key>
        <name>final_contact_id</name>
        <field>contact_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>functional_expertise_id</name>
        <rename>final_fe_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>sub_functional_expertise_id</name>
        <rename>final_sfe_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>contact_id</name>
        <rename>final_contact_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>928</xloc>
      <yloc>832</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact_industry</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <schema>public</schema>
    <table>contact_industry</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>N</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field>contactid</partitioning_field>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
      <field>
        <column_name>industry_id</column_name>
        <stream_name>final_industry_id</stream_name>
      </field>
      <field>
        <column_name>contact_id</column_name>
        <stream_name>final_contact_id</stream_name>
      </field>
      <field>
        <column_name>insert_timestamp</column_name>
        <stream_name>insert_timestamp</stream_name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>848</xloc>
      <yloc>1568</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>contact_industry 3</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <schema>public</schema>
    <table>contact_industry</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>Y</ignore_errors>
    <use_batch>N</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field>contactid</partitioning_field>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
      <field>
        <column_name>industry_id</column_name>
        <stream_name>final_industry_id</stream_name>
      </field>
      <field>
        <column_name>contact_id</column_name>
        <stream_name>final_contact_id</stream_name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>912</xloc>
      <yloc>512</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>create user</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select email,username,
0 as 'super_user',
getdate() as insert_timestamp


from owners</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1631</xloc>
      <yloc>1227</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>dual contact cand</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select 'add_con_info' as additional_type
, id as contact_id
, 1007 as form_id
, 11272 as field_id
, dual_candidate_contact_c as field_value
, now() as insert_timestamp
from contact
where recordtypeid in ('0120Y0000013O5d')
and dual_candidate_contact_c = '1' --110 rows</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>560</xloc>
      <yloc>1088</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>email_subscription 2 2</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>position_candidate</table>
      <key>
        <name>contact-email</name>
        <field>email</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>subscribed</name>
        <rename>subscribed</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>752</xloc>
      <yloc>976</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>email_subscription 3</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>email_subscription</table>
      <key>
        <name>email</name>
        <field>email</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>email</name>
        <rename>email</rename>
        <update>Y</update>
      </value>
      <value>
        <name>subscribed</name>
        <rename>subcribed</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>752</xloc>
      <yloc>912</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>fe</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>Y</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>functional_expertise</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>occupation</name>
        <field>name</field>
        <condition>LIKE</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_fe_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>784</xloc>
      <yloc>752</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>fe 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection/>
    <cache>Y</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>functional_expertise</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>FUNCTIONAL_EXPERTISE</name>
        <field>name</field>
        <condition>LIKE</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_fe_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>752</xloc>
      <yloc>832</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>gdpr</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>SELECT
	id as candidate_id
	, gdpr_ok_c
	, gdpr_ok_date_c::TIMESTAMP
	, 1 explicit_consent
	, 3 exercise_right
	, 6 request_through
	, gdpr_ok_date_c::TIMESTAMP AS request_through_date
	, 6 obtained_through
	, gdpr_ok_date_c::TIMESTAMP AS obtained_through_date
	, 1 expire
	, '2024-05-29 00:00:00'::TIMESTAMP expire_date
	, -10 obtained_by
	, CURRENT_TIMESTAMP AS insert_timestamp
FROM contact
WHERE gdpr_ok_c = '1'
AND recordtypeid IN ('0120Y0000013O5c','0120Y000000RZZV')</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1648</xloc>
      <yloc>1792</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>industry</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>vertical</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>industry</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_industry_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1840</xloc>
      <yloc>816</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>industry 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>vertical</table>
      <key>
        <name>BusinessSector</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>name</name>
        <rename>BusinessSector</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1712</xloc>
      <yloc>816</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>industry 2 3</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>vertical</table>
      <key>
        <name>BusinessSector</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>name</name>
        <rename>BusinessSector</rename>
        <update>Y</update>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>insert_timestamp</rename>
        <update>N</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>672</xloc>
      <yloc>512</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>industry 4</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>vertical</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>industry</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_industry_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>816</xloc>
      <yloc>512</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>industry 4 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>vertical</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>job-industry</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_industry_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1360</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>industry 4 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>vertical</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>job-industry</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_industry_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1312</xloc>
      <yloc>1200</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>industry 4 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>vertical</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>industry</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_industry_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>704</xloc>
      <yloc>1488</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>info</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <key>
        <name>final_companyl_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>trading_name</name>
        <rename>Billing Details > Trading Name</rename>
      </value>
      <value>
        <name>company_number</name>
        <rename>Company Number</rename>
      </value>
      <value>
        <name>insert_timestamp</name>
        <rename>registration date</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>336</xloc>
      <yloc>688</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>insert company location</name>
    <type>TableOutput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <schema>public</schema>
    <table>company_location</table>
    <commit>100</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>N</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field>contactid</partitioning_field>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
      <field>
        <column_name>company_id</column_name>
        <stream_name>VCCompanyID</stream_name>
      </field>
      <field>
        <column_name>latitude</column_name>
        <stream_name>ts2_latitude_c</stream_name>
      </field>
      <field>
        <column_name>longitude</column_name>
        <stream_name>ts2_longitude_c</stream_name>
      </field>
      <field>
        <column_name>location_name</column_name>
        <stream_name>location_name</stream_name>
      </field>
      <field>
        <column_name>address</column_name>
        <stream_name>contact-address</stream_name>
      </field>
      <field>
        <column_name>city</column_name>
        <stream_name>contact-city</stream_name>
      </field>
      <field>
        <column_name>state</column_name>
        <stream_name>contact-state</stream_name>
      </field>
      <field>
        <column_name>post_code</column_name>
        <stream_name>contact-zipCode</stream_name>
      </field>
      <field>
        <column_name>country_code</column_name>
        <stream_name>contact-country</stream_name>
      </field>
      <field>
        <column_name>location_type</column_name>
        <stream_name>location_type</stream_name>
      </field>
      <field>
        <column_name>insert_timestamp</column_name>
        <stream_name>insert_timestamp</stream_name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>368</xloc>
      <yloc>1664</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>insert_candidate_gdpr</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <schema>public</schema>
    <table>candidate_gdpr_compliance</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field/>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
      <field>
        <column_name>candidate_id</column_name>
        <stream_name>actual_candidate_id</stream_name>
      </field>
      <field>
        <column_name>explicit_consent</column_name>
        <stream_name>explicit_consent</stream_name>
      </field>
      <field>
        <column_name>exercise_right</column_name>
        <stream_name>exercise_right</stream_name>
      </field>
      <field>
        <column_name>request_through</column_name>
        <stream_name>request_through</stream_name>
      </field>
      <field>
        <column_name>request_through_date</column_name>
        <stream_name>request_through_date</stream_name>
      </field>
      <field>
        <column_name>obtained_through</column_name>
        <stream_name>obtained_through</stream_name>
      </field>
      <field>
        <column_name>obtained_through_date</column_name>
        <stream_name>obtained_through_date</stream_name>
      </field>
      <field>
        <column_name>expire</column_name>
        <stream_name>expire</stream_name>
      </field>
      <field>
        <column_name>expire_date</column_name>
        <stream_name>expire_date</stream_name>
      </field>
      <field>
        <column_name>obtained_by</column_name>
        <stream_name>obtained_by</stream_name>
      </field>
      <field>
        <column_name>insert_timestamp</column_name>
        <stream_name>insert_timestamp</stream_name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1968</xloc>
      <yloc>1792</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>job activity</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <schema>public</schema>
    <table>activity</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>N</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field>contactid</partitioning_field>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
      <field>
        <column_name>position_id</column_name>
        <stream_name>actual_id</stream_name>
      </field>
      <field>
        <column_name>user_account_id</column_name>
        <stream_name>user_account_id</stream_name>
      </field>
      <field>
        <column_name>insert_timestamp</column_name>
        <stream_name>insert_timestamp</stream_name>
      </field>
      <field>
        <column_name>content</column_name>
        <stream_name>content</stream_name>
      </field>
      <field>
        <column_name>type</column_name>
        <stream_name>type</stream_name>
      </field>
      <field>
        <column_name>category</column_name>
        <stream_name>category</stream_name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1376</xloc>
      <yloc>96</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>job industry</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
with
--JOB DUPLICATION REGCONITION
job (jobid, contactid, contactname, companyid, companyname, title, createddate, rn) as (
    SELECT   job.id as "jobid"
        , case when con.id is null then concat('default', case when com.id is null then '' else com.id end, con.id)
                   else con.id 
                   end as "contactid", con.contactname --CONTACT
        , case when com.id is null then 'default'
                   else com.id 
                   end as "companyid" , com.companyname --COMPANY
        , case when job.name is not null and job.name &lt;&gt; '' then trim(job.name)
             else 'No JobTitle'
             end as title --JOB
        , date(job.createddate) as "createddate"
        , ROW_NUMBER() OVER(PARTITION BY con.id,job.name,date(job.createddate) ORDER BY job.id) AS "rn"
    -- select con.*
    from ts2_job_c job --JOB
    left join ( select id, accountid, concat_ws(' ',firstname,middlename,lastname) as "contactname" from contact where recordtypeid = '0120Y0000013O5d') con on con.id = job.ts2_contact_c --CONTACT
    left JOIN ( select id, name as "companyname" from account) com ON com.id = job.ts2_account_c --COMPANY
    --where con.id is null --and job.id in (30, 71, 77, 104, 105, 112)
    )
--select * from job where title ilike '%Secure Thingz - Product Manager - March 19%'
--select count(*) from job where title = ''
--select * from ts2_job_c job where id = 'a0K0Y000009FAB8UAO'
--select * from contact where id in ('0031n00001qEfmFAAS') or firstname ilike '%Adam%'
/*
select distinct trim( unnest(string_to_array(j.published_job_categories_c, '/')) )
from ts2_job_c j
left join job on job.jobid = j.id
where j.published_job_categories_c is not null and j.published_job_categories_c &lt;&gt; '' and j.published_job_categories_c not like '%DO NOT USE%'
*/
, ind0 as (
select 
         job.jobid as "position-externalid"
       , case when job.rn > 1 then concat(job.title,' ',rn) else job.title end as "position-title"
    , j.published_job_categories_c 
    , trim( unnest(string_to_array(j.published_job_categories_c, '/')) ) as "FUNCTIONAL_EXPERTISE" --**
--select count(*) --62075
--select distinct trim( unnest(string_to_array(j.published_job_categories_c, '/')) )
from ts2_job_c j
left join job on job.jobid = j.id
where j.published_job_categories_c is not null and j.published_job_categories_c &lt;&gt; '' and j.published_job_categories_c not like '%DO NOT USE%'
)
, ind1 as (
select 
         "position-externalid"
       , "position-title"
    , "FUNCTIONAL_EXPERTISE" as "job-industry"
       , row_number() over(partition by "position-externalid" order by "position-externalid") as rn
--select count(*) --62075
--select distinct trim( unnest(string_to_array(j.published_job_categories_c, '/')) )
from ind0
--left join job on job.jobid = j.id
--where j.published_job_categories_c is not null and j.published_job_categories_c &lt;&gt; '' and j.published_job_categories_c not like '%DO NOT USE%'
)
select * from ind1 where rn = 1 



</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1168</xloc>
      <yloc>1296</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>lookup candidateid</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>candidate</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>parentid</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>candidateid</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3008</xloc>
      <yloc>1520</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>lookup company</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>company</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>company-externalid</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_company_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>320</xloc>
      <yloc>352</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>lookup company_legal_document</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>company_legal_document</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>companyid</name>
        <field>company_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>legal_doc_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3152</xloc>
      <yloc>1280</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>lookup companyid</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>company</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>parentid</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>companyid</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3008</xloc>
      <yloc>1280</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>lookup contactid</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>contact</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>parentid</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>contactid</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3008</xloc>
      <yloc>1360</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>lookup industry</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>vertical</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>industry</name>
        <field>name</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_industry_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>320</xloc>
      <yloc>272</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>lookup jobid</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>position_description</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>parentid</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>jobid</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3008</xloc>
      <yloc>1440</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>offer_pay_charge</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>offer_pay_charge</table>
      <key>
        <name>VCOfferID</name>
        <field>offer_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>offer_id</name>
        <rename>VCOfferID</rename>
        <update>Y</update>
      </value>
      <value>
        <name>pay_rate</name>
        <rename>pay_rate</rename>
        <update>Y</update>
      </value>
      <value>
        <name>charge_rate</name>
        <rename>charge_rate (Contract Job)</rename>
        <update>Y</update>
      </value>
      <value>
        <name>comp_setting_id</name>
        <rename>offer_pay_charge__comp_setting_id</rename>
        <update>Y</update>
      </value>
      <value>
        <name>tax_period_id</name>
        <rename>offer_pay_charge__tax_period_id</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>2880</xloc>
      <yloc>432</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>position insert_timestamp</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
select --top 100
         a.jobPostingID as 'position-externalId'
	, dateadded
from bullhorn1.BH_JobPosting a
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1088</xloc>
      <yloc>928</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>position insert_timestamp 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>position-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_job_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1248</xloc>
      <yloc>928</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>position_description</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>application-positionExternalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_position_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1248</xloc>
      <yloc>240</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>position_description id 2 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>position-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_job_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1360</xloc>
      <yloc>416</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>position_description id 2 3 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>position-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_job_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1248</xloc>
      <yloc>768</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>position_description id 2 3 2 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>position-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_job_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1248</xloc>
      <yloc>848</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>position_description id 2 3 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <cache>N</cache>
    <cache_load_all>Y</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>position-externalId</name>
        <field>external_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name/>
        <field>deleted_timestamp</field>
        <condition>IS NULL</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_job_id</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1312</xloc>
      <yloc>1296</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>position_description industry 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
with
--JOB DUPLICATION REGCONITION
job (jobid, contactid, contactname, companyid, companyname, title, createddate, rn) as (
    SELECT   job.id as "jobid"
        , case when con.id is null then concat('default', case when com.id is null then '' else com.id end, con.id)
                   else con.id 
                   end as "contactid", con.contactname --CONTACT
        , case when com.id is null then 'default'
                   else com.id 
                   end as "companyid" , com.companyname --COMPANY
        , case when job.name is not null and job.name &lt;&gt; '' then trim(job.name)
             else 'No JobTitle'
             end as title --JOB
        , date(job.createddate) as "createddate"
        , ROW_NUMBER() OVER(PARTITION BY con.id,job.name,date(job.createddate) ORDER BY job.id) AS "rn"
    -- select con.*
    from ts2_job_c job --JOB
    left join ( select id, accountid, concat_ws(' ',firstname,middlename,lastname) as "contactname" from contact where recordtypeid = '0120Y0000013O5d') con on con.id = job.ts2_contact_c --CONTACT
    left JOIN ( select id, name as "companyname" from account) com ON com.id = job.ts2_account_c --COMPANY
    --where con.id is null --and job.id in (30, 71, 77, 104, 105, 112)
    )
--select * from job where title ilike '%Secure Thingz - Product Manager - March 19%'
--select count(*) from job where title = ''
--select * from ts2_job_c job where id = 'a0K0Y000009FAB8UAO'
--select * from contact where id in ('0031n00001qEfmFAAS') or firstname ilike '%Adam%'
--max company contact in case of empty contact


select distinct trim( unnest(string_to_array(j.published_job_categories_c, '/')) ) as "industry" , now() as insert_timestamp
from ts2_job_c j
left join job on job.jobid = j.id
where j.published_job_categories_c is not null and j.published_job_categories_c &lt;&gt; '' and j.published_job_categories_c not like '%DO NOT USE%'
--)
--select "position-type", count(*) from t group by "position-type"




</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1088</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>position_description industry 2 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>with
ind as (
      --COMPANY
      select distinct trim( unnest(string_to_array(a.market_sector_c, ';')) ) as "industry" from account a where a.market_sector_c is not null and a.market_sector_c &lt;&gt; ''
      UNION
      --CONTACT &amp; CANDIDATE
      select distinct trim( unnest(string_to_array(c.marketing_sector_ic_c, ';')) ) as "industry" from contact c where c.marketing_sector_ic_c is not null and c.marketing_sector_ic_c &lt;&gt; ''
)
--select "industry", count(*) from ind group by "industry"
select *, now() as insert_timestamp from ind</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1136</xloc>
      <yloc>304</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>position_description industry 2 2 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>
with
--JOB DUPLICATION REGCONITION
job (jobid, contactid, contactname, companyid, companyname, title, createddate, rn) as (
    SELECT   job.id as "jobid"
        , case when con.id is null then concat('default', case when com.id is null then '' else com.id end, con.id)
                   else con.id 
                   end as "contactid", con.contactname --CONTACT
        , case when com.id is null then 'default'
                   else com.id 
                   end as "companyid" , com.companyname --COMPANY
        , case when job.name is not null and job.name &lt;&gt; '' then trim(job.name)
             else 'No JobTitle'
             end as title --JOB
        , date(job.createddate) as "createddate"
        , ROW_NUMBER() OVER(PARTITION BY con.id,job.name,date(job.createddate) ORDER BY job.id) AS "rn"
    -- select con.*
    from ts2_job_c job --JOB
    left join ( select id, accountid, concat_ws(' ',firstname,middlename,lastname) as "contactname" from contact where recordtypeid = '0120Y0000013O5d') con on con.id = job.ts2_contact_c --CONTACT
    left JOIN ( select id, name as "companyname" from account) com ON com.id = job.ts2_account_c --COMPANY
    --where con.id is null --and job.id in (30, 71, 77, 104, 105, 112)
    )
--select * from job where title ilike '%Secure Thingz - Product Manager - March 19%'
--select count(*) from job where title = ''
--select * from ts2_job_c job where id = 'a0K0Y000009FAB8UAO'
--select * from contact where id in ('0031n00001qEfmFAAS') or firstname ilike '%Adam%'
/*
select distinct trim( unnest(string_to_array(j.published_job_categories_c, '/')) )
from ts2_job_c j
left join job on job.jobid = j.id
where j.published_job_categories_c is not null and j.published_job_categories_c &lt;&gt; '' and j.published_job_categories_c not like '%DO NOT USE%'
*/
, ind0 as (
select 
         job.jobid as "position-externalid"
       , case when job.rn > 1 then concat(job.title,' ',rn) else job.title end as "position-title"
    , j.published_job_categories_c 
    , trim( unnest(string_to_array(j.published_job_categories_c, '/')) ) as "FUNCTIONAL_EXPERTISE" --**
--select count(*) --62075
--select distinct trim( unnest(string_to_array(j.published_job_categories_c, '/')) )
from ts2_job_c j
left join job on job.jobid = j.id
where j.published_job_categories_c is not null and j.published_job_categories_c &lt;&gt; '' and j.published_job_categories_c not like '%DO NOT USE%'
)
, ind1 as (
select 
         "position-externalid"
       , "position-title"
    , "FUNCTIONAL_EXPERTISE" as "job-industry"
       , row_number() over(partition by "position-externalid" order by "position-externalid") as rn
--select count(*) --62075
--select distinct trim( unnest(string_to_array(j.published_job_categories_c, '/')) )
from ind0
--left join job on job.jobid = j.id
--where j.published_job_categories_c is not null and j.published_job_categories_c &lt;&gt; '' and j.published_job_categories_c not like '%DO NOT USE%'
)
select * from ind1 where rn = 1 



</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1216</xloc>
      <yloc>416</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>position_description position_type</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>N</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema>public</schema>
      <table>position_description</table>
      <key>
        <name>actual_id</name>
        <field>id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>position_type</name>
        <rename>position-type</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1408</xloc>
      <yloc>464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>position_internalDescription 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>with t as (
select
      a.jobPostingID as 'position-externalId'
	, cast(a.description as nvarchar(max)) as 'position-internalDescription'

/*	, Stuff( 
	       + coalesce('Minimum Experience: ' + nullif(convert(nvarchar(max),a.yearsRequired), '') + char(10), '')
           + coalesce('Job Description: ' + nullif(convert(nvarchar(max),a.description), '') + char(10), '')
	      , 1, 0, '') as 'position-internalDescription'
*/
from bullhorn1.BH_JobPosting a
)

select * from t where [position-internalDescription] is not null and [position-internalDescription] &lt;&gt; ''</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1088</xloc>
      <yloc>848</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>position_publicDescription</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>with t as (
select --top 100
         a.jobPostingID as 'position-externalId'
	, cast(a.publicDescription as nvarchar(max)) as 'position-publicDescription'
from bullhorn1.BH_JobPosting a
)

select * from t where [position-publicDescription] is not null and [position-publicDescription] &lt;&gt; ''
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1088</xloc>
      <yloc>768</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>sfe</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection/>
    <sql>
with
-- SkillName: split by separate rows by comma, then combine them into SkillName
  SkillName0(userid, skillID) as (SELECT userid, Split.a.value('.', 'VARCHAR(2000)') AS skillID FROM (SELECT userid, CAST('&lt;M>' + REPLACE(cast(skillIDList as varchar(max)),',','&lt;/M>&lt;M>') + '&lt;/M>' AS XML) AS x FROM  bullhorn1.Candidate where isPrimaryOwner = 1) t CROSS APPLY x.nodes('/M') AS Split(a) )
, SkillName(userId, SkillName) as (SELECT userId, SL.name from SkillName0 left join bullhorn1.BH_SkillList SL ON SkillName0.skillID = SL.skillID WHERE SkillName0.skillID &lt;&gt; '')
, sfe as (
                select
                 C.candidateID, concat(C.FirstName,' ',C.LastName) as fullname
                 , 2983 as 'fe'
                --, SN.SkillName
                , case sn.SkillName
when '1C' then 184
when 'Absence' then 185
when 'ActiveX' then 186
when 'Actuate' then 187
when 'Administer Training' then 188
when 'Administer Workforce' then 189
when 'ADP' then 190
when 'ADSL' then 191
when 'Advanced Configurator' then 192
when 'Advanced Planning' then 193
when 'Afrikaans' then 194
when 'Agile' then 195
when 'AIX' then 196
when 'ALE' then 197
when 'AME' then 198
when 'AMX BPM' then 199
when 'Android' then 200
when 'angular js' then 201
when 'Apache' then 202
when 'APO' then 203
when 'Application developer' then 204
when 'Application engine' then 205
when 'Application server' then 206
when 'AQ' then 207
when 'AquaLogic Architect' then 208
when 'AquaLogic BPM' then 209
when 'AquaLogic ESB' then 210
when 'Arbor' then 211
when 'Architect' then 212
when 'AS/400' then 213
when 'ASCP' then 214
when 'AX4' then 215
when 'Axure' then 216
when 'B2B Sales/Recruitment Consultant' then 217
when 'Back-End Developer' then 218
when 'BAM' then 219
when 'BAPI' then 220
when 'BC' then 221
when 'Benefits' then 222
when 'BI' then 223
when 'BI Architect' then 224
when 'bi publisher' then 225
when 'Big Data' then 226
when 'Big Data Architect' then 227
when 'BIG DATA Scientist' then 228
when 'BI-IP' then 229
when 'Billing' then 230
when 'BizTalk 2009' then 231
when 'Biztalk 2010' then 232
when 'BizTalk Systems Administrator' then 233
when 'BO' then 234
when 'BODI' then 235
when 'BOM' then 236
when 'BPM' then 237
when 'Bscs' then 238
when 'BSS Consultant' then 239
when 'BSS Solution Architect' then 240
when 'Bulgarian' then 241
when 'Business Analyst' then 242
when 'Business Intelligence' then 243
when 'Business Intelligence Architect' then 244
when 'Business Intelligence Business Analyst' then 245
when 'Business Intelligence Project Manager' then 246
when 'Business Process Consultant' then 247
when 'Business Rules' then 248
when 'BusinessEvents' then 249
when 'BusinessWorks 2nd' then 250
when 'BW' then 251
when 'C' then 252
when 'C#' then 253
when 'Ca' then 254
when 'Candidate Gateway' then 255
when 'Cantonese' then 256
when 'Captiva' then 257
when 'Cassandra' then 258
when 'CDMA/WCDMA' then 259
when 'Cim' then 260
when 'Cisco' then 261
when 'Clojure' then 262
when 'cloud' then 263
when 'Cloud Architect' then 264
when 'Cloud Development' then 265
when 'Cloud Security' then 266
when 'cloudera' then 267
when 'CM' then 268
when 'CMS' then 269
when 'Coach Agile' then 270
when 'CODA' then 271
when 'Cognos TM1' then 272
when 'Collaborator' then 273
when 'Configuration Manager' then 274
when 'Configurator' then 275
when 'Consulting' then 276
when 'CONTROL M' then 277
when 'Core Networks' then 278
when 'Cornerstone' then 279
when 'CouchDB' then 280
when 'CRM' then 281
when 'Croatian' then 282
when 'CrossWorlds' then 283
when 'CTO' then 284
when 'Czech' then 285
when 'd3js' then 286
when 'DADS-U' then 287
when 'Danish' then 288
when 'Data Analysis' then 289
when 'Data Cleansing' then 290
when 'DATA INTEGRATION' then 291
when 'Data Migration' then 292
when 'Data Quality' then 293
when 'data science' then 294
when 'Data Warehousing' then 295
when 'Database Architect' then 296
when 'DATAMART' then 297
when 'DataStage' then 298
when 'Dell Quest' then 299
when 'DevOps' then 300
when 'Digital PM' then 301
when 'Director of Marketing and Communications' then 302
when 'django' then 303
when 'Documentum' then 304
when 'DOS' then 305
when 'Drupal' then 306
when 'DS' then 307
when 'Dynamics Functional' then 308
when 'EAM' then 309
when 'EBTAX' then 310
when 'ECONFIGURATOR' then 311
when 'eDevelopment' then 312
when 'EIM' then 313
when 'Electronic Money' then 314
when 'eMarketing' then 315
when 'EmberJs' then 316
when 'Ems' then 317
when 'Engineer' then 318
when 'English' then 319
when 'eRecruitment' then 320
when 'ESA' then 321
when 'eSales' then 322
when 'eSettlement' then 323
when 'ESSBase' then 324
when 'Est' then 325
when 'Ethernet' then 326
when 'ETL' then 327
when 'EX' then 328
when 'EZpublish' then 329
when 'FA' then 330
when 'FAH' then 331
when 'Fi-co' then 332
when 'Filenet' then 333
when 'Finance AX Module' then 334
when 'Finance NAV Module' then 335
when 'Firewall' then 336
when 'Flash' then 337
when 'Flume' then 338
when 'FM' then 339
when 'Foodtech' then 340
when 'Forms' then 341
when 'FS-CD' then 342
when 'FSCM' then 343
when 'FS-CM' then 344
when 'FS-PM' then 345
when 'Full Stack' then 346
when 'Functional AX' then 347
when 'Functional NAV' then 348
when 'Fusion HR Consultant' then 349
when 'GC' then 350
when 'Genesys' then 351
when 'GI' then 352
when 'GIT' then 353
when 'Global Payroll' then 354
when 'Golang' then 355
when 'Gprs' then 356
when 'GSM' then 357
when 'Hal' then 358
when 'Hbase' then 359
when 'Hibernate' then 360
when 'Hive' then 361
when 'hortonworks' then 362
when 'HP Cloud' then 363
when 'HPQC' then 364
when 'HTML' then 365
when 'HYBRID' then 366
when 'Hybride Cloud' then 367
when 'IAM' then 368
when 'IBM BPM' then 369
when 'IBM Identity Manager' then 370
when 'IBM MDM' then 371
when 'IDAM' then 372
when 'IHM' then 373
when 'iLearning' then 374
when 'Interfacing' then 375
when 'Interim Management' then 376
when 'INV' then 377
when 'IOT' then 378
when 'IRANIAN' then 379
when 'IS Pharma' then 380
when 'ISAM' then 381
when 'ISAMESSO' then 382
when 'ISDS' then 383
when 'IS-H' then 384
when 'IS-Media' then 385
when 'IS-RE' then 386
when 'IS-U' then 387
when 'Italian' then 388
when 'ITIL' then 389
when 'Java Architect' then 390
when 'Java Developer' then 391
when 'JAVA FX' then 392
when 'Java lead dev' then 393
when 'Javascript' then 394
when 'JD EDWARDS' then 395
when 'JDEDWARDS' then 396
when 'Jira' then 397
when 'Joomla!' then 398
when 'JSON' then 399
when 'JSP' then 400
when 'Kafka' then 401
when 'KAZAKH' then 402
when 'Kshell' then 403
when 'L4G' then 404
when 'Laravel' then 405
when 'LE' then 406
when 'Lean' then 407
when 'Lease Management' then 408
when 'Lithuanian' then 409
when 'Loyalty' then 410
when 'LSO' then 411
when 'LTE' then 412
when 'Machine Learning' then 413
when 'Manufacturing NAV Module' then 414
when 'Marketing CRM Module' then 415
when 'Matlab' then 416
when 'Maven' then 417
when 'MDX' then 418
when 'MEAN Stack' then 419
when 'Mercury' then 420
when 'Message Broker' then 421
when 'Meteor JS' then 422
when 'Microsoft CRM' then 423
when 'Microsoft CRM Developer' then 424
when 'Microsoft CRM Director' then 425
when 'Microsoft Dynamics AX' then 426
when 'Microsoft Dynamics AX Finance' then 427
when 'Microsoft Dynamics AX PM' then 428
when 'Microsoft Dynamics AX Technical Consultant' then 429
when 'Microsoft Dynamics CRM' then 430
when 'Microsoft Dynamics CRM PM' then 431
when 'microsoft dynamics nav' then 432
when 'Microsoft Dynamics NAV BA' then 433
when 'Microsoft Dynamics NAV Developer' then 434
when 'Microsoft Dynamics NAV Director' then 435
when 'Microsoft Dynamics NAV pre-sales' then 436
when 'MongoDB' then 437
when 'MRP' then 438
when 'MSCA' then 439
when 'MySQL' then 440
when 'NAS' then 441
when 'Netbackup' then 442
when 'Netweaver Gateway' then 443
when 'Network administrator' then 444
when 'Network engineer' then 445
when 'NORD' then 446
when 'norweigan' then 447
when 'NoSQL' then 448
when 'OAM' then 449
when 'ODI' then 450
when 'ODS' then 451
when 'OIL HPM' then 452
when 'OIL TSW' then 453
when 'OKS' then 454
when 'OLM' then 455
when 'OM' then 456
when 'ONDEMAND' then 457
when 'OPENTEXT' then 458
when 'OPM' then 459
when 'Oracle' then 460
when 'Oracle Administrator' then 461
when 'Oracle Database Developer' then 462
when 'Oracle EBS' then 463
when 'Oracle EBS CRM Functional Consultant' then 464
when 'Oracle EBS CRM Project Director' then 465
when 'Oracle EBS CRM Project Manager' then 466
when 'Oracle EBS Financials Functional Consultant' then 467
when 'Oracle EBS Financials Project Director' then 468
when 'Oracle EBS Financials Support Consultant' then 469
when 'Oracle EBS HRMS Business Analyst' then 470
when 'Oracle EBS HRMS Project Manager' then 471
when 'Oracle EBS HRMS Support Consultant' then 472
when 'Oracle EBS HRMS Technical Analyst' then 473
when 'Oracle EBS HRMS Techno Functional' then 474
when 'Oracle EBS Logistics Business Analyst' then 475
when 'Oracle EBS Logistics Functional Consultant' then 476
when 'Oracle EBS Logistics Project Director' then 477
when 'Oracle EBS Logistics Techno Functional' then 478
when 'Oracle Fusion Financials' then 479
when 'Oracle Fusion Middleware' then 480
when 'Oracle Fusion Procurement' then 481
when 'Oracle Identity Management' then 482
when 'Oracle SOA' then 483
when 'Oracle SOA Architect' then 484
when 'Oracle SOA Tester' then 485
when 'OST' then 486
when 'OTA' then 487
when 'OTC' then 488
when 'OTL' then 489
when 'OTM' then 490
when 'Ouest' then 491
when 'PA' then 492
when 'PAB' then 493
when 'PAC' then 494
when 'Pascal' then 495
when 'PC' then 496
when 'Pega CLSA' then 497
when 'Pega CSA' then 498
when 'PEGA Developer' then 499
when 'Pentaho' then 500
when 'Peoplesoft Architect' then 501
when 'PeopleSoft Campus Developer' then 502
when 'PeopleSoft Campus Functional' then 503
when 'PeopleSoft Campus Project Manager' then 504
when 'PeopleSoft CRM Functional' then 505
when 'PeopleSoft CRM Project Manager' then 506
when 'PeopleSoft CRM Techno Functional' then 507
when 'PeopleSoft EPM Project Manager' then 508
when 'PeopleSoft EPM Techno Functional' then 509
when 'PeopleSoft ESA Functional' then 510
when 'PeopleSoft ESA Techno Functional' then 511
when 'PeopleSoft Financials Developer' then 512
when 'PeopleSoft Financials Functional' then 513
when 'PeopleSoft Financials Techno Functional' then 514
when 'PeopleSoft FSCM Developer' then 515
when 'PeopleSoft FSCM Functional' then 516
when 'PeopleSoft FSCM Project Manager' then 517
when 'PeopleSoft HR Developer' then 518
when 'PeopleSoft HR Project Manager' then 519
when 'PeopleSoft HR Techno Functional' then 520
when 'PeopleSoft Payroll Functional' then 521
when 'PeopleSoft Payroll Project Manager' then 522
when 'PeopleSoft Payroll Techno Functional' then 523
when 'Peoplesoft Tester' then 524
when 'PeopleTools' then 525
when 'PHP' then 526
when 'PHP lead dev' then 527
when 'PI' then 528
when 'Play Framework' then 529
when 'PM/Program Manager NAV' then 530
when 'Policy Manager' then 531
when 'Polish' then 532
when 'Portal' then 533
when 'Portuguese' then 534
when 'Postgresql' then 535
when 'postsales' then 536
when 'PowerShell' then 537
when 'Pre-Production Engineer' then 538
when 'Presales' then 539
when 'Prestashop' then 540
when 'Pretashop' then 541
when 'Pricing' then 542
when 'ProcessServer' then 543
when 'Procurement AX Module' then 544
when 'PRODUCT CATALOGUE' then 545
when 'Product Director' then 546
when 'Product Manager' then 547
when 'Production Analyst' then 548
when 'Project Manager' then 549
when 'Purchasing AX Module' then 550
when 'Python' then 551
when 'QM' then 552
when 'QP' then 553
when 'Quality Management' then 554
when 'QualityCenter' then 555
when 'quant' then 556
when 'R&amp;D' then 557
when 'RAN' then 558
when 'Recruitment' then 559
when 'Recruitment Resourcer' then 560
when 'Redhat' then 561
when 'Requirement Engineering' then 562
when 'Responsive Design' then 563
when 'Retail AX Module' then 564
when 'Risk Backtesting' then 565
when 'Risk Credit' then 566
when 'Risk LGD' then 567
when 'Risk Management' then 568
when 'Risk market quant' then 569
when 'Risk market regulatory' then 570
when 'Risk MOA' then 571
when 'Risk PD' then 572
when 'Risk Score Carding' then 573
when 'Risk Stress Testing' then 574
when 'RMCA' then 575
when 'Romanian' then 576
when 'RPG' then 577
when 'Ruby' then 578
when 'SA' then 579
when 'SAGE' then 580
when 'Sage 1000' then 581
when 'Sage Paie' then 582
when 'Sage x3' then 583
when 'Sales and Marketing NAV Module' then 584
when 'Sales AX Module' then 585
when 'Salesforce.com Administrator' then 586
when 'Salesforce.com Functional' then 587
when 'Salesforce.com Project Manager' then 588
when 'SAP' then 589
when 'SAP ABAP Developer' then 590
when 'SAP Admin' then 591
when 'SAP AMOA Finance Consultant' then 592
when 'SAP AMOA Logistic Consultant' then 593
when 'SAP APO CONSULTANT' then 594
when 'SAP Bank Analyzer Consultant' then 595
when 'SAP Bank Analyzer Techno/Fun Consultant' then 596
when 'SAP BCA Consultant' then 597
when 'SAP BCS Consultant' then 598
when 'SAP BCS Techno/Fun Consultant' then 599
when 'SAP BFC Consultant' then 600
when 'SAP BI Consultant' then 601
when 'SAP BO Administrator' then 602
when 'SAP BPC Consultant' then 603
when 'SAP BRF' then 604
when 'SAP BRIM Consultant' then 605
when 'SAP BW Consultant' then 606
when 'SAP BW Techno/Fun Consultant' then 607
when 'SAP CFM Consultant' then 608
when 'SAP CFM Techno/Fun Consultant' then 609
when 'SAP CML Consultant' then 610
when 'SAP CML Techno/Fun Consultant' then 611
when 'SAP CO Consultant' then 612
when 'SAP CO Techno/Fun Consultant' then 613
when 'SAP Core Banking Consultant' then 614
when 'SAP Core Banking Techno/Fun Consultant' then 615
when 'SAP CRM Developer' then 616
when 'SAP CS Consultant' then 617
when 'SAP CS Techno/Fun Consultant' then 618
when 'SAP DATA MIGRATION CONSULTANT' then 619
when 'SAP EDI Techno/Fun Consultant' then 620
when 'SAP EM Consultant' then 621
when 'SAP EWM Consultant' then 622
when 'Sap Fi Consultant' then 623
when 'SAP FI Techno/Fun Consultant' then 624
when 'SAP FI-AA Techno/Functional Consultant' then 625
when 'SAP Financials Business Analyst' then 626
when 'SAP FM Techno/Fun Consultant' then 627
when 'SAP FS-CD Consultant' then 628
when 'SAP FS-CS Consultant' then 629
when 'SAP FS-PM Consultant' then 630
when 'SAP FS-RI Consultant' then 631
when 'SAP HCM Techno/Fun Consultant' then 632
when 'SAP HR' then 633
when 'SAP IS-A&amp;D Consultant' then 634
when 'SAP IS-AFS Consultant' then 635
when 'SAP IS-AFS Techno/Fun Consultant' then 636
when 'SAP IS-Auto Consultant' then 637
when 'SAP IS-Auto Techno/Fun Consultant' then 638
when 'SAP IS-EH&amp;S Techno/Fun Consultant' then 639
when 'SAP IS-Media Techno/Fun Consultant' then 640
when 'SAP IS-Mill Consultant' then 641
when 'SAP IS-RE Consultant' then 642
when 'SAP IS-Retail Consultant' then 643
when 'SAP IS-Retail Techno/Fun Consultant' then 644
when 'SAP IS-T Techno/Fun Consultant' then 645
when 'SAP IS-U CONSULTANT' then 646
when 'SAP JVA Consultant' then 647
when 'SAP LE Consultant' then 648
when 'SAP LE Techno/Fun Consultant' then 649
when 'SAP MM Techno/Fun Consultant' then 650
when 'SAP Netweaver Architect /Consultant' then 651
when 'SAP PM Techno/Fun Consultant' then 652
when 'SAP PMO' then 653
when 'SAP PP Techno/Fun Consultant' then 654
when 'SAP PP-PI' then 655
when 'SAP PS Consultant' then 656
when 'SAP PS-CD Consultant' then 657
when 'SAP PS-CD Techno/Functional Consultant' then 658
when 'SAP QM Consultant' then 659
when 'SAP QM Techno/Fun Consultant' then 660
when 'SAP RE Consultant' then 661
when 'SAP Recruitment Consultant' then 662
when 'SAP REFX' then 663
when 'SAP RM Consultant' then 664
when 'SAP SCM Business Analyst' then 665
when 'SAP SNP Consultant' then 666
when 'SAP SRM Consultant' then 667
when 'SAP TM Consultant' then 668
when 'Sap Trainer' then 669
when 'SAP VARIANT CONFIGURATOR' then 670
when 'SAP VIM Consultant' then 671
when 'SAP VIM Techno/Fun Consultant' then 672
when 'SAP Workflow Developer' then 673
when 'SAS' then 674
when 'SDH/PDH' then 675
when 'SDLC' then 676
when 'SEC Business Continuity' then 677
when 'Sec Cert CCNA' then 678
when 'SEC cert CISM' then 679
when 'SEC cert CISP' then 680
when 'SEC cert CISSP' then 681
when 'SEC cert ISO 27001' then 682
when 'SEC CISO' then 683
when 'SEC Cryptography' then 684
when 'SEC Cyber Architect' then 685
when 'SEC Cyber Manager' then 686
when 'SEC Data Protection' then 687
when 'SEC Disaster Recovery' then 688
when 'SEC Encryption' then 689
when 'SEC FIREWALL' then 690
when 'SEC GDPR' then 691
when 'SEC IAM Technical' then 692
when 'SEC Infrastructure' then 693
when 'SEC IOT-Security' then 694
when 'SEC IT AUDIT' then 695
when 'SEC IT Auditor' then 696
when 'SEC Juniper' then 697
when 'SEC Network Security' then 698
when 'SEC Pre-Sales Security' then 699
when 'SEC Sales Security' then 700
when 'SEC Security Risk and Governance' then 701
when 'SEC SIEM Vulnerability Asst' then 702
when 'SEC SOC Security Analyst' then 703
when 'SEC TCP/IP' then 704
when 'SEC Wireless Security' then 705
when 'Security' then 706
when 'Security Cleared - UK Current' then 707
when 'Security Cleared - UK Potential' then 708
when 'Security Engineer' then 709
when 'Seeburger' then 710
when 'Selenium' then 711
when 'Self-Service' then 712
when 'Selligent Functional' then 713
when 'SENTINEL' then 714
when 'SEO Consultant' then 715
when 'Servicenow' then 716
when 'Sharepoint' then 717
when 'Siebel AMOE' then 718
when 'Siebel Architect' then 719
when 'Siebel Project Manager' then 720
when 'Siebel Trainer' then 721
when 'SIEBELTOOLS' then 722
when 'Silex' then 723
when 'Sitecore' then 724
when 'SLA' then 725
when 'SLOVAKIAN' then 726
when 'SMTP' then 727
when 'SOA' then 728
when 'SOA / BPM' then 729
when 'SOA Architect' then 730
when 'Solaris' then 731
when 'Solution Architect' then 732
when 'SPIP' then 733
when 'Splunk' then 734
when 'SQL Server' then 735
when 'Sql Server Administrator' then 736
when 'Sqoop' then 737
when 'SQR' then 738
when 'SSIS' then 739
when 'SSO' then 740
when 'SSRS' then 741
when 'Startup' then 742
when 'STLC' then 743
when 'Stockage' then 744
when 'Successfactor Consultant' then 745
when 'Successfactors Functional Consultant' then 746
when 'Successfactors PM/GM' then 747
when 'SuccessFactors Recruitment' then 748
when 'Successfactors Recruting' then 749
when 'SuccessFactors Variable Pay' then 750
when 'SuccessFactors Workforce Analytics' then 751
when 'Sud Est' then 752
when 'Sud Ouest' then 753
when 'Sun' then 754
when 'Supply Chain' then 755
when 'Supply Chain AX Module' then 756
when 'Support' then 757
when 'Swedish' then 758
when 'SWING' then 759
when 'Sybase' then 760
when 'Symfony' then 761
when 'System Administrator Linux' then 762
when 'System Administrator Unix' then 763
when 'System Engineer IBM' then 764
when 'System Engineer Unix' then 765
when 'System Engineer Windows' then 766
when 'T&amp;L' then 767
when 'Tableau' then 768
when 'Talentsoft Consultant' then 769
when 'TAM' then 770
when 'Technical Project Manager' then 771
when 'TELCO' then 772
when 'Telco Design' then 773
when 'Telco Installation Integration' then 774
when 'Telco Project Manager' then 775
when 'Telco Testing' then 776
when 'Telecom Project Manager' then 777
when 'Test Analyst' then 778
when 'Test Engineer' then 779
when 'Thai' then 780
when 'TIBCO Developer' then 781
when 'Tibco Project Manager' then 782
when 'Tibco Systems Administrator' then 783
when 'Tivoli' then 784
when 'TOGAF' then 785
when 'Trainer' then 786
when 'Transition Manager' then 787
when 'Transmission' then 788
when 'Turkish' then 789
when 'TV' then 790
when 'Typo3' then 791
when 'UCM' then 792
when 'UI designer' then 793
when 'UI/User Interface' then 794
when 'Ukrainian' then 795
when 'Umts' then 796
when 'Update Software Technical' then 797
when 'VBS' then 798
when 'VirtualBox' then 799
when 'Virtualization' then 800
when 'VNC' then 801
when 'VoIP' then 802
when 'Vsphere' then 803
when 'WAN' then 804
when 'Web ADI' then 805
when 'Web architect' then 806
when 'Web Design' then 807
when 'Web Development' then 808
when 'webdynpro' then 809
when 'Webfocus' then 810
when 'WebMethods' then 811
when 'Webmethods architect' then 812
when 'Webmethods Project Manager' then 813
when 'WebMethods Systems Administrator' then 814
when 'Websphere' then 815
when 'Websphere business Integrator' then 816
when 'WebSphere Business Integrator Message Broker' then 817
when 'Websphere Developer' then 818
when 'WebSphere Systems Administrator' then 819
when 'WebSphere Tester' then 820
when 'Windows NT' then 821
when 'Windows Server' then 822
when 'WM' then 823
when 'WMQI' then 824
when 'Workday Advanced Compensation' then 825
when 'Workday Bonus' then 826
when 'Workday Consultant' then 827
when 'Workday Core Connector' then 828
when 'Workday Data Conversion' then 829
when 'Workday Engagement Manager' then 830
when 'Workday Finance Functional Consultant' then 831
when 'Workday HCM Functional Consultant' then 832
when 'Workday HCM Technical Consultant' then 833
when 'Workday Integration Core' then 834
when 'Workday Integrations Certified' then 835
when 'Workday Learning' then 836
when 'Workday Payroll' then 837
when 'Workday Planning' then 838
when 'Workday Pre-sales' then 839
when 'Workday Reporting' then 840
when 'Workday Security' then 841
when 'Workday Studio' then 842
when 'Workday Talent &amp; Performance' then 843
when 'Workday Time Tracking' then 844
when 'WORKFORCE ADMINISTRATION' then 845
when 'WPF' then 846
when 'WPM' then 847
when 'WSO2' then 848
when 'Xamarin' then 849
when 'Xcelsius' then 850
when 'XHTML' then 851
when 'XML' then 852
when 'XML Publisher' then 853
when 'XSLT' then 854
when 'Zookeeper' then 855
when '$Univers' then 856
when '.NET' then 857
when '4G' then 858
when 'AA' then 859
when 'ABAP' then 860
when 'Abroad' then 861
when 'Accountant' then 862
when 'Acd' then 863
when 'ActionScript' then 864
when 'Active Directory' then 865
when 'Active Enterprise' then 866
when 'Active Matrix' then 867
when 'Actuary' then 868
when 'Adapter SDK' then 869
when 'ADI' then 870
when 'Administrator' then 871
when 'Adobe' then 872
when 'Adonix' then 873
when 'Adoption' then 874
when 'Advanced Collections' then 875
when 'AFF' then 876
when 'AFS' then 877
when 'Ajax' then 878
when 'Alfresco' then 879
when 'AM' then 880
when 'Amazon Web Services' then 881
when 'AMF' then 882
when 'AMOA' then 883
when 'Analytics' then 884
when 'AP' then 885
when 'API' then 886
when 'Application designer' then 887
when 'Application Messaging' then 888
when 'Application Packages' then 889
when 'Approval Management' then 890
when 'APS' then 891
when 'Aptitude' then 892
when 'Aqualogic' then 893
when 'AR' then 894
when 'Arabic' then 895
when 'ARIBA' then 896
when 'Art Director' then 897
when 'AS3' then 898
when 'ASP.NET' then 899
when 'ATM' then 900
when 'AX' then 901
when 'AX2009' then 902
when 'AX2012' then 903
when 'Axapta' then 904
when 'Azure AAD' then 905
when 'BACKBONE' then 906
when 'Bale' then 907
when 'Bank Reconciliation' then 908
when 'Banking Consultant' then 909
when 'Bash' then 910
when 'Basis' then 911
when 'BCS' then 912
when 'BIA' then 913
when 'Big Data Analyst' then 914
when 'Big Data Chief Officer' then 915
when 'Big Data Developer' then 916
when 'BIG DATA Ecole Gr.1' then 917
when 'Big Data Engineer' then 918
when 'Big Data Integration Specialist' then 919
when 'Big Data Miner' then 920
when 'Big Data Visualizer' then 921
when 'BizTalk Architect' then 922
when 'BizTalk Business Analyst' then 923
when 'Biztalk Developer' then 924
when 'BizTalk Functional Consultant' then 925
when 'Bootstrap' then 926
when 'BPR' then 927
when 'BPS' then 928
when 'Brio' then 929
when 'BRM' then 930
when 'Business Intelligence Developer' then 931
when 'Business Intelligence Functional Analyst' then 932
when 'Business Intelligence Project Director' then 933
when 'Business Intelligence Techno Functional Consultant' then 934
when 'Business Intelligence Trainer' then 935
when 'Business Transformation' then 936
when 'BusinessConnect' then 937
when 'BusinessStudio' then 938
when 'BusinessWorks' then 939
when 'BusinessWorks 6' then 940
when 'C++' then 941
when 'Campus Solutions' then 942
when 'Capital Market Consultant' then 943
when 'CC' then 944
when 'CCNA/CCNP' then 945
when 'Centre' then 946
when 'Change management' then 947
when 'Charging Systems' then 948
when 'Checkpoint' then 949
when 'Chinese' then 950
when 'Chronos' then 951
when 'CI' then 952
when 'CITRIX' then 953
when 'Clementine' then 954
when 'CO' then 955
when 'COBOL' then 956
when 'Cognos' then 957
when 'Cold Fusion' then 958
when 'Compensation' then 959
when 'Compliance Consultant' then 960
when 'COMPONENT INTERFACE' then 961
when 'Consultancy CRM' then 962
when 'Copywriting' then 963
when 'CORBA' then 964
when 'Cordova' then 965
when 'CROSS-PLATFORM' then 966
when 'Crystal' then 967
when 'CS' then 968
when 'CSS' then 969
when 'Customer Service CRM Module' then 970
when 'Customer Success Manager' then 971
when 'Cyber Security' then 972
when 'Data Architecture' then 973
when 'Data Centre' then 974
when 'Data mining' then 975
when 'Data Modelling' then 976
when 'Database Administrator' then 977
when 'Database Design' then 978
when 'Database Development' then 979
when 'Datamining' then 980
when 'DB2' then 981
when 'Debian' then 982
when 'Dell Quest One' then 983
when 'Delphi' then 984
when 'Demandware' then 985
when 'Developer' then 986
when 'DHCP' then 987
when 'Digital Payment Consultant' then 988
when 'Discoverer' then 989
when 'DM' then 990
when 'DNS' then 991
when 'DP' then 992
when 'Dutch' then 993
when 'Dynamics' then 994
when 'Dynamics Technical' then 995
when 'Dynasight' then 996
when 'EAI' then 997
when 'ECM' then 998
when 'Ecommerce' then 999
when 'e-commerce' then 1000
when 'E-commerce Development' then 1001
when 'eCommunication' then 1002
when 'eCompensation' then 1003
when 'EDI' then 1004
when 'eEnergy' then 1005
when 'EH&amp;S' then 1006
when 'ElasticSearch' then 1007
when 'ELM' then 1008
when 'ePerformance' then 1009
when 'epharma' then 1010
when 'EPM' then 1011
when 'eProcurement' then 1012
when 'eProfile' then 1013
when 'Erlang' then 1014
when 'eSourcing' then 1015
when 'ESX' then 1016
when 'Etraining' then 1017
when 'Ets' then 1018
when 'Exchange' then 1019
when 'Ext JS' then 1020
when 'F&amp;R' then 1021
when 'FI' then 1022
when 'Finance Business Transformation' then 1023
when 'Financials' then 1024
when 'Finnish' then 1025
when 'Fintech' then 1026
when 'fiori' then 1027
when 'French' then 1028
when 'Front-End Developer' then 1029
when 'FS-CS' then 1030
when 'Functional' then 1031
when 'Functional Architect' then 1032
when 'Functional CRM' then 1033
when 'Fusion' then 1034
when 'Genio' then 1035
when 'German' then 1036
when 'Gl' then 1037
when 'Google Apps' then 1038
when 'Google Cloud Platform' then 1039
when 'Governance' then 1040
when 'GRC' then 1041
when 'Greek' then 1042
when 'Groovy' then 1043
when 'GTA' then 1044
when 'Hadoop' then 1045
when 'HANA' then 1046
when 'Hebrew' then 1047
when 'Helpdesk' then 1048
when 'Hitachi' then 1049
when 'Hotonworks' then 1050
when 'HP-UX' then 1051
when 'HR' then 1052
when 'HR ACCESS' then 1053
when 'HR Access Functional' then 1054
when 'HR Access Technical' then 1055
when 'HR AX Module' then 1056
when 'HR Business Transformation' then 1057
when 'HRIS Project Manager' then 1058
when 'HUM' then 1059
when 'Hungarian' then 1060
when 'Hybris' then 1061
when 'Hyperion' then 1062
when 'IBM cloud computing' then 1063
when 'Identity Access Management' then 1064
when 'IDOC' then 1065
when 'IDS' then 1066
when 'IEXPENSES' then 1067
when 'Ile de France' then 1068
when 'Indian' then 1069
when 'Infor M3' then 1070
when 'Informatica' then 1071
when 'Infrastructure' then 1072
when 'Integration Broker' then 1073
when 'INTERSHOP' then 1074
when 'ios developer' then 1075
when 'IP' then 1076
when 'iProcess' then 1077
when 'iProcurement' then 1078
when 'iRecruitment' then 1079
when 'IS' then 1080
when 'IS-Auto' then 1081
when 'IS-FS' then 1082
when 'IS-Mill' then 1083
when 'IS-OIL' then 1084
when 'IS-Retail' then 1085
when 'IT Security Recruitment Consultant' then 1086
when 'J2EE' then 1087
when 'Jahia' then 1088
when 'Japanese' then 1089
when 'Java' then 1090
when 'Java Project Manager' then 1091
when 'jQuery' then 1092
when 'Juniper' then 1093
when 'Junit' then 1094
when 'Kanban' then 1095
when 'LAN' then 1096
when 'Latvian' then 1097
when 'Linux' then 1098
when 'Logistics' then 1099
when 'Lotus Notes' then 1100
when 'LSMW' then 1101
when 'MAC' then 1102
when 'Magento' then 1103
when 'Managing Director' then 1104
when 'Manufacturing' then 1105
when 'Manufacturing AX Module' then 1106
when 'MapReduce' then 1107
when 'MDM' then 1108
when 'Mega Data' then 1109
when 'Meteor' then 1110
when 'Microgen' then 1111
when 'Microsoft Azure' then 1112
when 'Microsoft BI' then 1113
when 'Microsoft CRM BA' then 1114
when 'Microsoft CRM PM' then 1115
when 'Microsoft Dynamics AX Developer' then 1116
when 'Microsoft Dynamics AX Functional Consultant' then 1117
when 'Microsoft Dynamics AX Pre-Sales' then 1118
when 'Microsoft Dynamics AX Sales' then 1119
when 'Microsoft Dynamics AX Solutions Architect' then 1120
when 'Microsoft Dynamics AX Support' then 1121
when 'Microsoft Dynamics AX Test Analyst' then 1122
when 'Microsoft Dynamics NAV Functional' then 1123
when 'Microsoft Dynamics NAV PM' then 1124
when 'Microsoft Dynamics NAV Sales' then 1125
when 'Microsoft Dynamics NAV Support' then 1126
when 'Microsoft Dynamics NAV Trainer' then 1127
when 'MicroStrategy' then 1128
when 'Middle East' then 1129
when 'MM' then 1130
when 'Mobile Development' then 1131
when 'Movex' then 1132
when 'MQ Series' then 1133
when 'MRO' then 1134
when 'MUREX ARCHITECT' then 1135
when 'NETSUITE' then 1136
when 'Netweaver' then 1137
when 'Networker' then 1138
when 'Noc' then 1139
when 'Node JS' then 1140
when 'Nvision' then 1141
when 'OAF' then 1142
when 'OBIEE' then 1143
when 'Objective-C' then 1144
when 'Ocs' then 1145
when 'oData' then 1146
when 'OFA' then 1147
when 'OIC' then 1148
when 'OIL SSR' then 1149
when 'OIL TD' then 1150
when 'OIM' then 1151
when 'OKE' then 1152
when 'OLAP' then 1153
when 'OO Programming' then 1154
when 'OPEN' then 1155
when 'OpenStack' then 1156
when 'optimization' then 1157
when 'Oracle EBS Administrator' then 1158
when 'Oracle EBS CRM Business Analyst' then 1159
when 'Oracle EBS CRM Support Consultant' then 1160
when 'Oracle EBS CRM Technical Analyst' then 1161
when 'Oracle EBS Financials Business Analyst' then 1162
when 'Oracle EBS Financials Project Manager' then 1163
when 'Oracle EBS Financials Technical Analyst' then 1164
when 'Oracle EBS HRMS Functional Consultant' then 1165
when 'Oracle EBS HRMS Project Director' then 1166
when 'Oracle EBS Logistics Project Manager' then 1167
when 'Oracle EBS Logistics Support Consultant' then 1168
when 'Oracle EBS Trainer' then 1169
when 'Oracle Fusion' then 1170
when 'Oracle Fusion HCM Functional Consultant' then 1171
when 'Oracle Fusion HCM Technical Consultant' then 1172
when 'Oracle Fusion PPM' then 1173
when 'Oracle SOA Developer' then 1174
when 'Oracle SOA Project Manager' then 1175
when 'Oracle SOA Systems Administrator' then 1176
when 'Order Capture' then 1177
when 'Order Management' then 1178
when 'OSS Consultant' then 1179
when 'OSS Solution Architect' then 1180
when 'Other' then 1181
when 'Payment Consultant' then 1182
when 'Payment Processing' then 1183
when 'Payroll' then 1184
when 'Pega Architect' then 1185
when 'Pega CBA' then 1186
when 'Pega CCA' then 1187
when 'Pega CSSA' then 1188
when 'PEGA LSA' then 1189
when 'Pega PRPC' then 1190
when 'Penthao' then 1191
when 'Peoplecode' then 1192
when 'PeopleSoft' then 1193
when 'Peoplesoft Administrator' then 1194
when 'PeopleSoft Campus Techno Functional' then 1195
when 'PeopleSoft CRM Developer' then 1196
when 'PeopleSoft EPM Developer' then 1197
when 'PeopleSoft EPM Functional' then 1198
when 'PeopleSoft ESA Developer' then 1199
when 'PeopleSoft ESA Project Manager' then 1200
when 'PeopleSoft Financials Project Manager' then 1201
when 'PeopleSoft FSCM Techno Functional' then 1202
when 'PeopleSoft HR Functional' then 1203
when 'PeopleSoft Payroll Developer' then 1204
when 'PeopleSoft Project Director' then 1205
when 'PEOPLESOFT TRAINER' then 1206
when 'PERL' then 1207
when 'Persian' then 1208
when 'phonegap' then 1209
when 'PIG' then 1210
when 'PL/SQL' then 1211
when 'PLM' then 1212
when 'PM' then 1213
when 'PM/Program Manager AX' then 1214
when 'PM/Program Manager CRM' then 1215
when 'PMO' then 1216
when 'Po' then 1217
when 'POS DM' then 1218
when 'Post Merger Integration Consultant' then 1219
when 'Post Production Engineer' then 1220
when 'PP' then 1221
when 'Predictive Analytics' then 1222
when 'Private Cloud' then 1223
when 'Procurement' then 1224
when 'Product Owner' then 1225
when 'Programme Director' then 1226
when 'Prolog' then 1227
when 'PS' then 1228
when 'PS-Query' then 1229
when 'Public Cloud' then 1230
when 'QlikView' then 1231
when 'QTP' then 1232
when 'Quality Engineer' then 1233
when 'R' then 1234
when 'R.' then 1235
when 'RDJ' then 1236
when 'React JS' then 1237
when 'ReactJS' then 1238
when 'Remedy' then 1239
when 'Rendezvous' then 1240
when 'Reports' then 1241
when 'Responsive Development' then 1242
when 'RESTFUL' then 1243
when 'Retail' then 1244
when 'Risk Compliance Consultant' then 1245
when 'Risk EAD' then 1246
when 'Risk IFRS9' then 1247
when 'Risk market frtb' then 1248
when 'RM' then 1249
when 'Ruby on Rails' then 1250
when 'Russian' then 1251
when 'SAAS' then 1252
when 'Sage 100' then 1253
when 'Sage CRM' then 1254
when 'Sales' then 1255
when 'Sales CRM Module' then 1256
when 'Sales Director' then 1257
when 'Salesforce' then 1258
when 'Salesforce.com Architect' then 1259
when 'Salesforce.com Technical' then 1260
when 'SAP Adapter' then 1261
when 'SAP APO Techno/Fun Consultant' then 1262
when 'SAP BASIS Administrator/Consultant' then 1263
when 'SAP BCA Techno/Fun Consultant' then 1264
when 'SAP BI Techno-Functional Consultant' then 1265
when 'SAP BI-IP Consultant' then 1266
when 'SAP BI-IP Techno/Fun Consultant' then 1267
when 'SAP BO Consultant' then 1268
when 'SAP BO Techno/Fun Consultant' then 1269
when 'Sap Business Analyst' then 1270
when 'Sap Bw Developer' then 1271
when 'Sap Crm Consultant' then 1272
when 'SAP CTRM Consultant' then 1273
when 'SAP CTRM Techno/Functional Consultant' then 1274
when 'SAP DM Consultant' then 1275
when 'SAP DM Techno/Fun Consultant' then 1276
when 'SAP EHS Consultant' then 1277
when 'SAP EWM Techno/Fun Consultant' then 1278
when 'SAP FI-AA Consultant' then 1279
when 'SAP FI-CA Consultant' then 1280
when 'SAP Fiori' then 1281
when 'SAP FM Consultant' then 1282
when 'SAP FS-BP Consultant' then 1283
when 'SAP FS-CM Consultant' then 1284
when 'SAP FS-ICM Consultant' then 1285
when 'SAP GRC Consultant' then 1286
when 'SAP GRC Techno/Fun Consultant' then 1287
when 'SAP GTS Consultant' then 1288
when 'SAP GTS Techno/Fun Consultant' then 1289
when 'SAP HANA Consultant' then 1290
when 'SAP HCM Business Analyst' then 1291
when 'SAP HCM Consultant' then 1292
when 'SAP HCM Developer' then 1293
when 'SAP HUM Consultant' then 1294
when 'SAP IPM' then 1295
when 'SAP IS-Bev Consultant' then 1296
when 'SAP IS-EH&amp;S Consultant' then 1297
when 'SAP IS-H Consultant' then 1298
when 'SAP IS-H Techno/Fun Consultant' then 1299
when 'SAP IS-Media Consultant' then 1300
when 'SAP IS-OIL CONSULTANT' then 1301
when 'SAP IS-Oil Techno/Fun Consultant' then 1302
when 'SAP IS-Procurement Techno/Functional Consultant' then 1303
when 'SAP IS-PS Consultant' then 1304
when 'SAP IS-T Consultant' then 1305
when 'SAP IS-U Techno/Fun Consultant' then 1306
when 'SAP JAVA Developer' then 1307
when 'SAP MDM Consultant' then 1308
when 'SAP MDM Techno/Fun Consultant' then 1309
when 'SAP MM Consultant' then 1310
when 'SAP PI Developer' then 1311
when 'SAP PLM Consultant' then 1312
when 'SAP PLM Techno/Fun Consultant' then 1313
when 'SAP PM CONSULTANT' then 1314
when 'SAP Portal Developer' then 1315
when 'SAP PP Consultant' then 1316
when 'SAP Project Manager' then 1317
when 'SAP PS Techno/Fun Consultant' then 1318
when 'SAP RE Techno/Fun Consultant' then 1319
when 'SAP RM Techno/Fun Consultant' then 1320
when 'SAP RM-CA' then 1321
when 'Sap Sd Consultant' then 1322
when 'SAP SD Techno/Fun Consultant' then 1323
when 'SAP Security' then 1324
when 'SAP Security &amp; Authorisations Consultant' then 1325
when 'SAP SNP Techno/Functional Consultant' then 1326
when 'SAP Solution Architect' then 1327
when 'SAP Solution Manager Consultant' then 1328
when 'SAP SRM Techno/Fun Consultant' then 1329
when 'SAP Tester' then 1330
when 'SAP TM Techno/Fun Consultant' then 1331
when 'SAP Treasury Consultant' then 1332
when 'SAP TRM Consultant' then 1333
when 'SAP TRM Techno/Functional Consultant' then 1334
when 'SAP UI5' then 1335
when 'SAP VC Consultant' then 1336
when 'SAP VC Techno/Fun Consultant' then 1337
when 'SAP WM Consultant' then 1338
when 'SAP WM Techno/Fun Consultant' then 1339
when 'SASS' then 1340
when 'Sauvegarde' then 1341
when 'Scala' then 1342
when 'SCM' then 1343
when 'Scrum Master' then 1344
when 'SD' then 1345
when 'SEC Business Analayst Security' then 1346
when 'SEC cert CEH' then 1347
when 'SEC cert CISA' then 1348
when 'SEC cert COBIT' then 1349
when 'SEC cert GSEC' then 1350
when 'SEC cert ITIL' then 1351
when 'SEC cert PCI DSS' then 1352
when 'SEC Checkpoint' then 1353
when 'SEC Cisco' then 1354
when 'SEC Cloud Security' then 1355
when 'SEC Cyber Security Governance' then 1356
when 'SEC Cyber Senior Manager' then 1357
when 'SEC Digital Forensics' then 1358
when 'SEC Hacking Android' then 1359
when 'SEC IAM Business Analyst' then 1360
when 'SEC IT Service Management' then 1361
when 'SEC KPI' then 1362
when 'SEC Log Mgt' then 1363
when 'SEC MALWARE' then 1364
when 'SEC PEN TEST' then 1365
when 'SEC PKI' then 1366
when 'SEC Scada Security' then 1367
when 'SEC Security Strategy' then 1368
when 'SEC SIEM Threat Mgt' then 1369
when 'SEC SIEM Vulnerability Mgt' then 1370
when 'SEC Virtualization' then 1371
when 'SEC Web Application Security' then 1372
when 'SELLIGENT' then 1373
when 'Selligent Technical' then 1374
when 'sencha' then 1375
when 'Serbian' then 1376
when 'Service Grid' then 1377
when 'Service Manager' then 1378
when 'SHELL' then 1379
when 'Siebel' then 1380
when 'Siebel Adapter' then 1381
when 'Siebel Administrator' then 1382
when 'Siebel AMOA' then 1383
when 'Siebel Business Analyst' then 1384
when 'Siebel Developer' then 1385
when 'SIEBEL TESTER' then 1386
when 'SINATRA Framework' then 1387
when 'Slovenian' then 1388
when 'SNMP' then 1389
when 'SNP' then 1390
when 'SOAP' then 1391
when 'SOD' then 1392
when 'Solution Design' then 1393
when 'Spanish' then 1394
when 'Spark' then 1395
when 'Spotfire' then 1396
when 'Spring' then 1397
when 'SQL' then 1398
when 'SRM' then 1399
when 'SS' then 1400
when 'SSAS' then 1401
when 'Stakeholder Management' then 1402
when 'STORM' then 1403
when 'StreamServe' then 1404
when 'SuccessFactors Compensation' then 1405
when 'Successfactors Employee Central' then 1406
when 'Successfactors LMS' then 1407
when 'SuccessFactors Onboarding' then 1408
when 'Successfactors Technical Consultant' then 1409
when 'SUSE' then 1410
when 'Swift' then 1411
when 'System Administrator' then 1412
when 'System Administrator Windows' then 1413
when 'System Engineer' then 1414
when 'System Engineer Linux' then 1415
when 'T&amp;E' then 1416
when 'Talend' then 1417
when 'Taleo' then 1418
when 'TCP/IP' then 1419
when 'TDD' then 1420
when 'Technical analyst' then 1421
when 'Technical Architect' then 1422
when 'Technical AX' then 1423
when 'Technical Lead' then 1424
when 'Technical NAV' then 1425
when 'Telco Network' then 1426
when 'Telco Support' then 1427
when 'Telecom Operational Manager' then 1428
when 'Telecom Transitional Manager' then 1429
when 'Telecoms Engineer' then 1430
when 'Telesales' then 1431
when 'Teradata' then 1432
when 'Test Manager' then 1433
when 'Tester' then 1434
when 'Tibco' then 1435
when 'TIBCO ARCHITECT' then 1436
when 'Tibco Business Analyst' then 1437
when 'Tibco Tester' then 1438
when 'Titanium' then 1439
when 'Toad' then 1440
when 'TR' then 1441
when 'Trade and Logistics AX Module' then 1442
when 'Trainer AX' then 1443
when 'Tuxedo' then 1444
when 'UML' then 1445
when 'UNIX' then 1446
when 'Update Software Functional' then 1447
when 'UX design' then 1448
when 'UX/User Experience' then 1449
when 'VC' then 1450
when 'Vietnamese' then 1451
when 'VLAN' then 1452
when 'VMWARE' then 1453
when 'VueJs 2' then 1454
when 'Waterfall' then 1455
when 'WebLogic' then 1456
when 'WebLogic Architect' then 1457
when 'Weblogic Developer' then 1458
when 'Webmethods Developer' then 1459
when 'webservices' then 1460
when 'Websphere Architect' then 1461
when 'WebSphere Project Manager' then 1462
when 'Wi-Fi' then 1463
when 'WiMax' then 1464
when 'Windows' then 1465
when 'Windows Phone' then 1466
when 'Winshuttle' then 1467
when 'Wip' then 1468
when 'Wireless' then 1469
when 'Wordpress' then 1470
when 'Workday Benefits' then 1471
when 'Workday Compensation' then 1472
when 'Workday Expenses' then 1473
when 'Workday Finance Technical Consultant' then 1474
when 'Workday French Payroll' then 1475
when 'Workday HCM Core Certified' then 1476
when 'Workday Payroll Functional Consultant' then 1477
when 'Workday Payroll Technical Consultant' then 1478
when 'Workday Project Manager' then 1479
when 'Workday Recruiting Certified' then 1480
when 'Workday Reporting Composite' then 1481
when 'Workday Testing' then 1482
when 'Workday Time and Absence' then 1483
when 'Workday Trainer' then 1484
when 'WorkFlow' then 1485
when 'WSS' then 1486
when 'Yarn' then 1487
when 'Zend' then 1488
end as 'sfe'
                from bullhorn1.Candidate C
                left join SkillName SN on C.userID = SN.userId
                where C.isPrimaryOwner = 1 and  SN.userId is not null
)

select * from sfe where sfe is not null and candidateID &lt;&gt; 16
--select count(distinct ltrim(SkillName)) as Skill from SkillName --where SkillName
--select distinct ltrim(SkillName) as Skill from SkillName --where SkillName
-- select * from bullhorn1.BH_SkillList SL where name in ('Product Mgmt &amp; Marketing','Customer/Data Analytics','Cash Ops','Investment/Portfolio Mgmt','Investment research and analysis','Credit admin/ops','Card Ops','HR Analytics','Compensation','Benefits','L&amp;D','Robotic process automation (RPA)','AI &amp; machine learning','JD Edwards ERP','Avaloq','Cognos','Hyperion','Bloomberg','Reuters','Matlab','Labview','Pro E+','SAS','Qlikview','Tableau','R Programming','SPSS','Mobile app developer','Assistant Manager','Senior Manager','Local','Startup','Social Insights &amp; Analytics','Art Creative Director','Copy Art Director','Integrated Marketing','Digital media','Customer/Data Analytics','Risk &amp; Compliance','Advisory/Sales','Investment/Portfolio Mgmt','Project Mgmt/Transformation','Client Service/Call Centre','Capex or Opex category sourcing','Chemical sourcing','Consumables category','Electrical category','Electronic component category','EMS category','Flavour category','Frangrance category','IT category sourcing','Logistic category sourcing','Marketing category sourcing','Mechanical category','NPI category sourcing','Oil &amp; gas sourcing','Professional category sourcing','Project category sourcing','Supplier mgmt','Raw material sourcing','Reverse auction','Distribution','Media research')
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1616</xloc>
      <yloc>1104</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>sfe 3</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection/>
    <cache>Y</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema>public</schema>
      <table>sub_functional_expertise</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>Y</eat_row_on_failure>
      <key>
        <name>SUB-FUNCTIONAL_EXPERTISE</name>
        <field>name</field>
        <condition>LIKE</condition>
        <name2/>
      </key>
      <key>
        <name>final_fe_id</name>
        <field>functional_expertise_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>id</name>
        <rename>final_sfe_id</rename>
        <default/>
        <type>None</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>832</xloc>
      <yloc>832</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>source</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>-- CANDIDATE SOURCES
select
        c.id as "candidate-externalid"

      , coalesce(nullif(replace(C.FirstName,'?',''), ''), 'No Firstname') as "candidate-firstName"
      , coalesce(nullif(replace(C.LastName,'?',''), ''), concat('Lastname-',C.ID)) as "candidate-lastName"
    , trim(c.ts2_source_c) as "candidate-source" --**
-- select distinct c.ts2_source_c, count(*)
from contact c
where c.recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')    

</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1728</xloc>
      <yloc>752</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>source 2</name>
    <type>TableInput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>from</connection>
    <sql>select distinct trim(c.ts2_source_c) as name --, count(*)
       , 1 as source_type
       , now() as insert_timestamp
       , 11 as payment_style 
from contact c
where c.recordtypeid in ('0120Y0000013O5c','0120Y000000RZZV')    
and c.ts2_source_c is not null and c.ts2_source_c &lt;&gt; ''</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1616</xloc>
      <yloc>672</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>update candidate_document</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>200</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema/>
      <table>candidate_document</table>
      <key>
        <name>candidateid</name>
        <field>candidate_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>filename</name>
        <field>uploaded_filename</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>uploaded_filename</name>
        <rename>actual_filename</rename>
      </value>
      <value>
        <name>created</name>
        <rename>createddate</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3152</xloc>
      <yloc>1520</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>update candidate_document contact</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>1000</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema/>
      <table>candidate_document</table>
      <key>
        <name>contactid</name>
        <field>contact_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>filename</name>
        <field>uploaded_filename</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>uploaded_filename</name>
        <rename>actual_filename</rename>
      </value>
      <value>
        <name>created</name>
        <rename>createddate</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3152</xloc>
      <yloc>1360</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>update job_document</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>10000</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema/>
      <table>candidate_document</table>
      <key>
        <name>filename</name>
        <field>uploaded_filename</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>jobid</name>
        <field>position_description_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>uploaded_filename</name>
        <rename>actual_filename</rename>
      </value>
      <value>
        <name>created</name>
        <rename>createddate</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3152</xloc>
      <yloc>1440</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>update legal_document</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema/>
      <table>candidate_document</table>
      <key>
        <name>filename</name>
        <field>uploaded_filename</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>legal_doc_id</name>
        <field>legal_doc_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>uploaded_filename</name>
        <rename>actual_filename</rename>
      </value>
      <value>
        <name>created</name>
        <rename>createddate</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3328</xloc>
      <yloc>1280</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>update legal_document 2</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>to</connection>
    <commit>100</commit>
    <update_bypassed>Y</update_bypassed>
    <lookup>
      <schema>public</schema>
      <table>bulk_upload_document_mapping</table>
      <key>
        <name>companyid</name>
        <field>entity_id</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>filename</name>
        <field>uploaded_filename</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>uploaded_filename</name>
        <rename>filename</rename>
        <update>Y</update>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>3328</xloc>
      <yloc>1200</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step_error_handling>
  </step_error_handling>
  <slave-step-copy-partition-distribution>
  </slave-step-copy-partition-distribution>
  <slave_transformation>N</slave_transformation>
</transformation>
